<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201117 14:40:43.255" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.508" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:44.516" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:46.367" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:44.506" endtime="20201117 14:40:46.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.374" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:46.371" endtime="20201117 14:40:46.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.505" endtime="20201117 14:40:46.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.381" endtime="20201117 14:40:46.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.378" endtime="20201117 14:40:46.718"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.748" endtime="20201117 14:40:46.768"></status>
</kw>
<msg timestamp="20201117 14:40:46.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.745" endtime="20201117 14:40:46.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.772" endtime="20201117 14:40:46.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.784" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:46.779" endtime="20201117 14:40:46.785"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.738" endtime="20201117 14:40:46.787"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.733" endtime="20201117 14:40:46.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.730" endtime="20201117 14:40:46.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:46.797" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:46.796" endtime="20201117 14:40:46.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.791" endtime="20201117 14:40:46.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.728" endtime="20201117 14:40:46.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.726" endtime="20201117 14:40:46.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.802" endtime="20201117 14:40:46.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.723" endtime="20201117 14:40:46.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.808" endtime="20201117 14:40:46.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.719" endtime="20201117 14:40:46.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.503" endtime="20201117 14:40:46.815"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.832" endtime="20201117 14:40:46.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.828" endtime="20201117 14:40:46.857"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.893" endtime="20201117 14:40:46.912"></status>
</kw>
<msg timestamp="20201117 14:40:46.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.889" endtime="20201117 14:40:46.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.915" endtime="20201117 14:40:46.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:46.922" endtime="20201117 14:40:46.928"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.882" endtime="20201117 14:40:46.930"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.875" endtime="20201117 14:40:46.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.871" endtime="20201117 14:40:46.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:46.940" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:46.939" endtime="20201117 14:40:46.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.934" endtime="20201117 14:40:46.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.869" endtime="20201117 14:40:46.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.867" endtime="20201117 14:40:46.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.944" endtime="20201117 14:40:46.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.863" endtime="20201117 14:40:46.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.858" endtime="20201117 14:40:46.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.826" endtime="20201117 14:40:46.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.971" endtime="20201117 14:40:46.985"></status>
</kw>
<msg timestamp="20201117 14:40:46.986" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.967" endtime="20201117 14:40:46.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.993" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.989" endtime="20201117 14:40:46.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.995" endtime="20201117 14:40:47.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.960" endtime="20201117 14:40:47.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.954" endtime="20201117 14:40:47.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.016" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:40:47.013" endtime="20201117 14:40:47.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.020" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:40:47.018" endtime="20201117 14:40:47.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.006" endtime="20201117 14:40:47.023"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:46.816" endtime="20201117 14:40:47.025" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:43.524" endtime="20201117 14:40:47.035"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.174" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:47.190" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:49.145" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:47.170" endtime="20201117 14:40:49.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.152" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:49.149" endtime="20201117 14:40:49.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.168" endtime="20201117 14:40:49.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.159" endtime="20201117 14:40:49.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.156" endtime="20201117 14:40:49.495"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.525" endtime="20201117 14:40:49.549"></status>
</kw>
<msg timestamp="20201117 14:40:49.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.521" endtime="20201117 14:40:49.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.552" endtime="20201117 14:40:49.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.565" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:49.560" endtime="20201117 14:40:49.566"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:49.515" endtime="20201117 14:40:49.568"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:49.510" endtime="20201117 14:40:49.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.507" endtime="20201117 14:40:49.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:49.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:49.577" endtime="20201117 14:40:49.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.572" endtime="20201117 14:40:49.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.505" endtime="20201117 14:40:49.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.503" endtime="20201117 14:40:49.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.584" endtime="20201117 14:40:49.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.500" endtime="20201117 14:40:49.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.591" endtime="20201117 14:40:49.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.497" endtime="20201117 14:40:49.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.165" endtime="20201117 14:40:49.598"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.613" endtime="20201117 14:40:49.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.609" endtime="20201117 14:40:49.637"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.673" endtime="20201117 14:40:49.693"></status>
</kw>
<msg timestamp="20201117 14:40:49.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.669" endtime="20201117 14:40:49.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.697" endtime="20201117 14:40:49.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:49.704" endtime="20201117 14:40:49.709"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:49.661" endtime="20201117 14:40:49.711"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:49.654" endtime="20201117 14:40:49.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.652" endtime="20201117 14:40:49.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:49.722" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:49.720" endtime="20201117 14:40:49.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.715" endtime="20201117 14:40:49.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.650" endtime="20201117 14:40:49.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.648" endtime="20201117 14:40:49.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.726" endtime="20201117 14:40:49.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.644" endtime="20201117 14:40:49.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.639" endtime="20201117 14:40:49.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.606" endtime="20201117 14:40:49.733"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.742" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.829" endtime="20201117 14:40:49.848"></status>
</kw>
<msg timestamp="20201117 14:40:49.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.826" endtime="20201117 14:40:49.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.852" endtime="20201117 14:40:49.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.858" endtime="20201117 14:40:49.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.818" endtime="20201117 14:40:49.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.748" endtime="20201117 14:40:49.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.883" endtime="20201117 14:40:50.237"></status>
</kw>
<msg timestamp="20201117 14:40:50.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.209140097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.209157417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.879" endtime="20201117 14:40:50.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.209140097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.209157417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.241" endtime="20201117 14:40:50.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.250" endtime="20201117 14:40:50.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.872" endtime="20201117 14:40:50.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.867" endtime="20201117 14:40:50.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.259" level="INFO">${RESULT} = [{'time': 0.209157417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.73200000000151e-05, 'source_diff': 1.73200000000151e-05}, {'time': 0.209193417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:50.254" endtime="20201117 14:40:50.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.273" level="INFO">${ACCURACY} = {'source_diff': [1.73200000000151e-05, 1.772299999999727e-05, 1.7542000000009272e-05, 1.7430000000012713e-05, 1.8028000000003264e-05, 1.7319999999987346e-05, 1.794499999999144e-05, 1.7444000000005344e...</msg>
<status status="PASS" starttime="20201117 14:40:50.260" endtime="20201117 14:40:50.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.279" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.278" endtime="20201117 14:40:50.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.281" level="INFO">VALUE: [1.73200000000151e-05, 1.772299999999727e-05, 1.7542000000009272e-05, 1.7430000000012713e-05, 1.8028000000003264e-05, 1.7319999999987346e-05, 1.794499999999144e-05, 1.7444000000005344e-05, 1.781900000000225e-05, 1.811099999998733e-05, 1.8125000000007718e-05, 1.8054999999989052e-05, 1.80969999999947e-05, 1.7318999999987872e-05, 1.7958000000012353e-05, 1.7721999999997795e-05, 1.8027999999975508e-05, 1.8249999999997435e-05, 1.783299999999488e-05, 1.7943999999991966e-05, 1.7972000000004984e-05, 1.787500000000053e-05, 1.7764000000003444e-05, 1.8041999999995895e-05, 1.808300000000207e-05, 1.7541999999981517e-05, 1.7833999999994354e-05, 1.743099999998443e-05, 1.7735999999990426e-05, 1.788899999999316e-05, 1.745899999999745e-05, 1.736099999999352e-05, 1.7334000000007732e-05, 1.7625000000021096e-05, 1.7334000000007732e-05, 1.8041999999995895e-05, 1.7708999999976882e-05, 1.8055999999988526e-05, 1.7500000000003624e-05, 1.7735999999990426e-05, 1.794499999999144e-05, 1.7820000000001723e-05, 1.726400000001682e-05, 1.7500000000003624e-05, 1.7471999999990606e-05, 1.77769999999966e-05, 1.804099999999642e-05, 1.7999999999990246e-05, 1.74169999999918e-05, 1.759700000000808e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.280" endtime="20201117 14:40:50.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.274" endtime="20201117 14:40:50.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.286" endtime="20201117 14:40:50.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.290" endtime="20201117 14:40:50.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.288" endtime="20201117 14:40:50.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.284" endtime="20201117 14:40:50.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.744" endtime="20201117 14:40:50.311"></status>
</kw>
<msg timestamp="20201117 14:40:50.311" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.322" endtime="20201117 14:40:50.339"></status>
</kw>
<msg timestamp="20201117 14:40:50.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.320" endtime="20201117 14:40:50.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.340" endtime="20201117 14:40:50.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.344" endtime="20201117 14:40:50.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.317" endtime="20201117 14:40:50.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.314" endtime="20201117 14:40:50.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.355" endtime="20201117 14:40:50.662"></status>
</kw>
<msg timestamp="20201117 14:40:50.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.353" endtime="20201117 14:40:50.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.672" endtime="20201117 14:40:50.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.693" endtime="20201117 14:40:50.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.350" endtime="20201117 14:40:50.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.348" endtime="20201117 14:40:50.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.713" level="INFO">${RESULT} = [{'time': 0.024833014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8208000000002195e-05, 'source_diff': 1.8208000000002195e-05}, {'time': 0.024868014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.704" endtime="20201117 14:40:50.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.746" level="INFO">${ACCURACY} = {'source_diff': [1.8208000000002195e-05, 1.743100000000178e-05, 1.7569999999998004e-05, 1.7542000000002334e-05, 1.762500000000028e-05, 1.7277999999999044e-05, 1.7709000000001168e-05, 1.733400000000079...</msg>
<status status="PASS" starttime="20201117 14:40:50.716" endtime="20201117 14:40:50.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.757" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.755" endtime="20201117 14:40:50.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.763" level="INFO">VALUE: [1.8208000000002195e-05, 1.743100000000178e-05, 1.7569999999998004e-05, 1.7542000000002334e-05, 1.762500000000028e-05, 1.7277999999999044e-05, 1.7709000000001168e-05, 1.7334000000000793e-05, 1.801299999999728e-05, 1.762500000000028e-05, 1.7306000000001653e-05, 1.7737000000000308e-05, 1.759700000000114e-05, 1.8222000000001765e-05, 1.737500000000003e-05, 1.763899999999985e-05, 1.7486000000000584e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.804100000000336e-05, 1.7513999999999724e-05, 1.781900000000225e-05, 1.7971999999998045e-05, 1.7763999999999974e-05, 1.765299999999942e-05, 1.78890000000001e-05, 1.813900000000035e-05, 1.758300000000157e-05, 1.7721999999997795e-05, 1.812500000000078e-05, 1.8236000000001334e-05, 1.8027999999999794e-05, 1.795899999999795e-05, 1.7708000000001695e-05, 1.8027999999999794e-05, 1.7721999999997795e-05, 1.7320000000001223e-05, 1.786100000000096e-05, 1.811100000000121e-05, 1.7736000000000834e-05, 1.741699999999874e-05, 1.783299999999835e-05, 1.7986000000001084e-05, 1.8083999999998074e-05, 1.765300000000289e-05, 1.8250000000000904e-05, 1.7777999999999544e-05, 1.766699999999899e-05, 1.7569000000002e-05, 1.787500000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.760" endtime="20201117 14:40:50.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.748" endtime="20201117 14:40:50.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.773" endtime="20201117 14:40:50.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.782" endtime="20201117 14:40:50.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.777" endtime="20201117 14:40:50.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.768" endtime="20201117 14:40:50.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.312" endtime="20201117 14:40:50.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.739" endtime="20201117 14:40:50.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.737" endtime="20201117 14:40:50.809"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.814" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.837" endtime="20201117 14:40:50.857"></status>
</kw>
<msg timestamp="20201117 14:40:50.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.834" endtime="20201117 14:40:50.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.860" endtime="20201117 14:40:50.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.867" endtime="20201117 14:40:50.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.826" endtime="20201117 14:40:50.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.820" endtime="20201117 14:40:50.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.893" endtime="20201117 14:40:51.256"></status>
</kw>
<msg timestamp="20201117 14:40:51.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049007972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049026, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:50.888" endtime="20201117 14:40:51.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049007972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049026, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:51.267" endtime="20201117 14:40:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.287" endtime="20201117 14:40:51.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.881" endtime="20201117 14:40:51.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.876" endtime="20201117 14:40:51.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.306" level="INFO">${RESULT} = [{'time': 0.049026, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8028000000003264e-05, 'source_diff': 1.8028000000003264e-05}, {'time': 0.049061, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201117 14:40:51.296" endtime="20201117 14:40:51.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.338" level="INFO">${ACCURACY} = {'source_diff': [1.8028000000003264e-05, 1.808300000000207e-05, 1.734699999999395e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.7679999999999085e-05, 1.8249999999997435e-05, 1.780599999999521...</msg>
<status status="PASS" starttime="20201117 14:40:51.308" endtime="20201117 14:40:51.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.350" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.347" endtime="20201117 14:40:51.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.356" level="INFO">VALUE: [1.8028000000003264e-05, 1.808300000000207e-05, 1.734699999999395e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.7679999999999085e-05, 1.8249999999997435e-05, 1.7805999999995215e-05, 1.8028000000003264e-05, 1.811100000000121e-05, 1.7528000000002764e-05, 1.737500000000003e-05, 1.7513999999996255e-05, 1.8014000000003694e-05, 1.8097999999994174e-05, 1.7749999999996935e-05, 1.8263999999997005e-05, 1.8056000000002403e-05, 1.7513999999996255e-05, 1.7862000000000433e-05, 1.73889999999996e-05, 1.747299999999702e-05, 1.7237000000003277e-05, 1.7401999999999695e-05, 1.7929999999999335e-05, 1.7764000000003444e-05, 1.7943999999998905e-05, 1.8014000000003694e-05, 1.8249999999997435e-05, 1.809700000000164e-05, 1.741699999999874e-05, 1.8167000000006428e-05, 1.7458000000004914e-05, 1.7513999999996255e-05, 1.7819999999994784e-05, 1.8263999999997005e-05, 1.730500000000218e-05, 1.811100000000121e-05, 1.8027999999996325e-05, 1.8235999999997865e-05, 1.7292000000002083e-05, 1.784700000000139e-05, 1.7986000000004554e-05, 1.734700000000089e-05, 1.7598000000000613e-05, 1.819499999999863e-05, 1.7291999999995145e-05, 1.8014000000003694e-05, 1.7292000000002083e-05, 1.734700000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.352" endtime="20201117 14:40:51.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.340" endtime="20201117 14:40:51.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.365" endtime="20201117 14:40:51.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.374" endtime="20201117 14:40:51.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.369" endtime="20201117 14:40:51.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.360" endtime="20201117 14:40:51.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.816" endtime="20201117 14:40:51.400"></status>
</kw>
<msg timestamp="20201117 14:40:51.401" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.424" endtime="20201117 14:40:51.444"></status>
</kw>
<msg timestamp="20201117 14:40:51.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.420" endtime="20201117 14:40:51.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.447" endtime="20201117 14:40:51.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.454" endtime="20201117 14:40:51.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.413" endtime="20201117 14:40:51.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.406" endtime="20201117 14:40:51.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.480" endtime="20201117 14:40:51.840"></status>
</kw>
<msg timestamp="20201117 14:40:51.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04352175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043539139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:51.476" endtime="20201117 14:40:51.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04352175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043539139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:51.850" endtime="20201117 14:40:51.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.870" endtime="20201117 14:40:51.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.469" endtime="20201117 14:40:51.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.464" endtime="20201117 14:40:51.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.890" level="INFO">${RESULT} = [{'time': 0.043539139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.73889999999996e-05, 'source_diff': 1.73889999999996e-05}, {'time': 0.043571139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:51.881" endtime="20201117 14:40:51.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.924" level="INFO">${ACCURACY} = {'source_diff': [1.73889999999996e-05, 1.7250000000003374e-05, 1.8056000000002403e-05, 1.7320000000001223e-05, 1.7278000000002514e-05, 1.7348000000000363e-05, 1.791699999999924e-05, 1.7556000000001903...</msg>
<status status="PASS" starttime="20201117 14:40:51.892" endtime="20201117 14:40:51.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.936" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.934" endtime="20201117 14:40:51.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.942" level="INFO">VALUE: [1.73889999999996e-05, 1.7250000000003374e-05, 1.8056000000002403e-05, 1.7320000000001223e-05, 1.7278000000002514e-05, 1.7348000000000363e-05, 1.791699999999924e-05, 1.7556000000001903e-05, 1.8041999999995895e-05, 1.8098000000001113e-05, 1.813900000000035e-05, 1.7499999999996685e-05, 1.7848000000000863e-05, 1.812500000000078e-05, 1.736100000000046e-05, 1.80690000000025e-05, 1.809700000000164e-05, 1.805500000000293e-05, 1.806899999999556e-05, 1.763899999999985e-05, 1.7693999999998655e-05, 1.790299999999967e-05, 1.8222000000005234e-05, 1.815299999999992e-05, 1.7943999999998905e-05, 1.7917000000006178e-05, 1.7792000000002584e-05, 1.7556000000001903e-05, 1.7653000000006358e-05, 1.759700000000114e-05, 1.80690000000025e-05, 1.7485999999997115e-05, 1.740299999999917e-05, 1.7778000000003014e-05, 1.766699999999899e-05, 1.7528000000002764e-05, 1.7985999999997615e-05, 1.811100000000121e-05, 1.7541999999995395e-05, 1.7305999999994714e-05, 1.787500000000053e-05, 1.7292000000002083e-05, 1.7347999999993424e-05, 1.7959000000004888e-05, 1.8291999999996145e-05, 1.8179999999999585e-05, 1.8084000000001543e-05, 1.756899999999506e-05, 1.759700000000114e-05, 1.7443999999998405e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.939" endtime="20201117 14:40:51.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.926" endtime="20201117 14:40:51.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.951" endtime="20201117 14:40:51.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.960" endtime="20201117 14:40:51.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.956" endtime="20201117 14:40:51.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.946" endtime="20201117 14:40:51.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.402" endtime="20201117 14:40:51.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.812" endtime="20201117 14:40:51.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.810" endtime="20201117 14:40:51.987"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.993" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.026" endtime="20201117 14:40:52.045"></status>
</kw>
<msg timestamp="20201117 14:40:52.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.013" endtime="20201117 14:40:52.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.048" endtime="20201117 14:40:52.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.055" endtime="20201117 14:40:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.005" endtime="20201117 14:40:52.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.999" endtime="20201117 14:40:52.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.080" endtime="20201117 14:40:52.441"></status>
</kw>
<msg timestamp="20201117 14:40:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059138778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059156056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.076" endtime="20201117 14:40:52.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059138778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059156056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.451" endtime="20201117 14:40:52.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.471" endtime="20201117 14:40:52.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.069" endtime="20201117 14:40:52.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.064" endtime="20201117 14:40:52.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.492" level="INFO">${RESULT} = [{'time': 0.059156056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7277999999995575e-05, 'source_diff': 1.7277999999995575e-05}, {'time': 0.059185042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:52.482" endtime="20201117 14:40:52.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.524" level="INFO">${ACCURACY} = {'source_diff': [1.7277999999995575e-05, 1.768099999999856e-05, 1.7348000000000363e-05, 1.7292000000002083e-05, 1.8221999999998295e-05, 1.7917000000006178e-05, 1.7695000000005068e-05, 1.76659999999995...</msg>
<status status="PASS" starttime="20201117 14:40:52.494" endtime="20201117 14:40:52.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.536" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.533" endtime="20201117 14:40:52.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.541" level="INFO">VALUE: [1.7277999999995575e-05, 1.768099999999856e-05, 1.7348000000000363e-05, 1.7292000000002083e-05, 1.8221999999998295e-05, 1.7917000000006178e-05, 1.7695000000005068e-05, 1.7665999999999515e-05, 1.7736000000004304e-05, 1.752700000000329e-05, 1.777700000000354e-05, 1.7792000000002584e-05, 1.80690000000025e-05, 1.7943999999998905e-05, 1.8166000000000015e-05, 1.733300000000132e-05, 1.8028000000003264e-05, 1.808299999999513e-05, 1.78890000000001e-05, 1.787499999999359e-05, 1.7735999999997365e-05, 1.787499999999359e-05, 1.811100000000121e-05, 1.7471999999997545e-05, 1.7458000000004914e-05, 1.794499999999838e-05, 1.765299999999942e-05, 1.7556000000001903e-05, 1.804100000000336e-05, 1.7569999999994534e-05, 1.8041999999995895e-05, 1.7778000000003014e-05, 1.8013999999996755e-05, 1.763899999999985e-05, 1.790299999999967e-05, 1.7778000000003014e-05, 1.8055999999995465e-05, 1.8070000000001973e-05, 1.7848000000000863e-05, 1.8027999999996325e-05, 1.791699999999924e-05, 1.755500000000243e-05, 1.7415999999999265e-05, 1.7735999999997365e-05, 1.7651999999999946e-05, 1.755500000000243e-05, 1.7429999999998835e-05, 1.7957999999998475e-05, 1.808300000000207e-05, 1.7263999999996005e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.538" endtime="20201117 14:40:52.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.526" endtime="20201117 14:40:52.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.551" endtime="20201117 14:40:52.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.560" endtime="20201117 14:40:52.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.555" endtime="20201117 14:40:52.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.546" endtime="20201117 14:40:52.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.995" endtime="20201117 14:40:52.586"></status>
</kw>
<msg timestamp="20201117 14:40:52.586" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.610" endtime="20201117 14:40:52.629"></status>
</kw>
<msg timestamp="20201117 14:40:52.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.607" endtime="20201117 14:40:52.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.633" endtime="20201117 14:40:52.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.640" endtime="20201117 14:40:52.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.599" endtime="20201117 14:40:52.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.593" endtime="20201117 14:40:52.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.667" endtime="20201117 14:40:53.029"></status>
</kw>
<msg timestamp="20201117 14:40:53.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043926944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043945153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.663" endtime="20201117 14:40:53.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043926944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043945153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.039" endtime="20201117 14:40:53.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.060" endtime="20201117 14:40:53.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.655" endtime="20201117 14:40:53.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.650" endtime="20201117 14:40:53.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.080" level="INFO">${RESULT} = [{'time': 0.043945153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.82089999999982e-05, 'source_diff': 1.82089999999982e-05}, {'time': 0.043972139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:53.070" endtime="20201117 14:40:53.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.113" level="INFO">${ACCURACY} = {'source_diff': [1.82089999999982e-05, 1.733300000000132e-05, 1.7278000000002514e-05, 1.7320000000001223e-05, 1.7570000000001473e-05, 1.7834000000001293e-05, 1.794499999999838e-05, 1.7417000000005678e...</msg>
<status status="PASS" starttime="20201117 14:40:53.082" endtime="20201117 14:40:53.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.125" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.122" endtime="20201117 14:40:53.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.130" level="INFO">VALUE: [1.82089999999982e-05, 1.733300000000132e-05, 1.7278000000002514e-05, 1.7320000000001223e-05, 1.7570000000001473e-05, 1.7834000000001293e-05, 1.794499999999838e-05, 1.7417000000005678e-05, 1.813900000000035e-05, 1.7570000000001473e-05, 1.7457999999997975e-05, 1.815299999999992e-05, 1.7986000000004554e-05, 1.7862000000000433e-05, 1.787499999999359e-05, 1.7306000000001653e-05, 1.759700000000114e-05, 1.783300000000182e-05, 1.734700000000089e-05, 1.727700000000304e-05, 1.731900000000175e-05, 1.776299999999703e-05, 1.78890000000001e-05, 1.78890000000001e-05, 1.813900000000035e-05, 1.737500000000003e-05, 1.731900000000175e-05, 1.7764000000003444e-05, 1.7971999999998045e-05, 1.7569000000002e-05, 1.8222000000005234e-05, 1.8263999999997005e-05, 1.8207999999998725e-05, 1.7541999999995395e-05, 1.7749999999996935e-05, 1.8070000000001973e-05, 1.7750000000003874e-05, 1.793099999999881e-05, 1.7749999999996935e-05, 1.7277999999995575e-05, 1.7292000000002083e-05, 1.7638000000000376e-05, 1.7848000000000863e-05, 1.7570000000001473e-05, 1.7333999999993854e-05, 1.7598000000000613e-05, 1.7902000000000196e-05, 1.8070000000001973e-05, 1.7777999999996075e-05, 1.7834000000001293e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.127" endtime="20201117 14:40:53.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.115" endtime="20201117 14:40:53.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.140" endtime="20201117 14:40:53.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.149" endtime="20201117 14:40:53.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.145" endtime="20201117 14:40:53.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.135" endtime="20201117 14:40:53.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.589" endtime="20201117 14:40:53.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.990" endtime="20201117 14:40:53.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.988" endtime="20201117 14:40:53.177"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.182" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.205" endtime="20201117 14:40:53.224"></status>
</kw>
<msg timestamp="20201117 14:40:53.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.202" endtime="20201117 14:40:53.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.228" endtime="20201117 14:40:53.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.234" endtime="20201117 14:40:53.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.194" endtime="20201117 14:40:53.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.188" endtime="20201117 14:40:53.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.259" endtime="20201117 14:40:53.622"></status>
</kw>
<msg timestamp="20201117 14:40:53.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0490545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:53.256" endtime="20201117 14:40:53.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0490545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:53.632" endtime="20201117 14:40:53.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.652" endtime="20201117 14:40:53.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.248" endtime="20201117 14:40:53.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.243" endtime="20201117 14:40:53.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.672" level="INFO">${RESULT} = [{'time': 0.0490545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7471999999997545e-05, 'source_diff': 1.7471999999997545e-05}, {'time': 0.049093514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:53.661" endtime="20201117 14:40:53.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.705" level="INFO">${ACCURACY} = {'source_diff': [1.7471999999997545e-05, 1.790299999999967e-05, 1.743099999999831e-05, 1.811100000000121e-05, 1.7667000000005928e-05, 1.762500000000028e-05, 1.744499999999788e-05, 1.772299999999727e-0...</msg>
<status status="PASS" starttime="20201117 14:40:53.674" endtime="20201117 14:40:53.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.716" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.714" endtime="20201117 14:40:53.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.723" level="INFO">VALUE: [1.7471999999997545e-05, 1.790299999999967e-05, 1.743099999999831e-05, 1.811100000000121e-05, 1.7667000000005928e-05, 1.762500000000028e-05, 1.744499999999788e-05, 1.772299999999727e-05, 1.787500000000053e-05, 1.758299999999463e-05, 1.8070000000001973e-05, 1.7556000000001903e-05, 1.7320000000001223e-05, 1.8250000000004374e-05, 1.7570000000001473e-05, 1.744499999999788e-05, 1.7763999999996505e-05, 1.815299999999992e-05, 1.7957999999998475e-05, 1.783300000000182e-05, 1.80969999999947e-05, 1.8166000000000015e-05, 1.804100000000336e-05, 1.8070000000001973e-05, 1.7485999999997115e-05, 1.7415999999999265e-05, 1.7958000000005414e-05, 1.7806000000002153e-05, 1.7679999999999085e-05, 1.809700000000164e-05, 1.7694000000005594e-05, 1.815299999999992e-05, 1.7971999999998045e-05, 1.7542000000002334e-05, 1.8027999999996325e-05, 1.777700000000354e-05, 1.8235999999997865e-05, 1.786100000000096e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.7570000000001473e-05, 1.783300000000182e-05, 1.7542000000002334e-05, 1.736100000000046e-05, 1.7528000000002764e-05, 1.769499999999813e-05, 1.7320000000001223e-05, 1.7528000000002764e-05, 1.795899999999795e-05, 1.781900000000225e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.719" endtime="20201117 14:40:53.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.707" endtime="20201117 14:40:53.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.733" endtime="20201117 14:40:53.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.742" endtime="20201117 14:40:53.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.737" endtime="20201117 14:40:53.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.728" endtime="20201117 14:40:53.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.184" endtime="20201117 14:40:53.768"></status>
</kw>
<msg timestamp="20201117 14:40:53.769" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.792" endtime="20201117 14:40:53.811"></status>
</kw>
<msg timestamp="20201117 14:40:53.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.788" endtime="20201117 14:40:53.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.815" endtime="20201117 14:40:53.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.822" endtime="20201117 14:40:53.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.780" endtime="20201117 14:40:53.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.774" endtime="20201117 14:40:53.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.846" endtime="20201117 14:40:54.140"></status>
</kw>
<msg timestamp="20201117 14:40:54.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043272903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.843" endtime="20201117 14:40:54.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043272903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.145" endtime="20201117 14:40:54.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.153" endtime="20201117 14:40:54.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.835" endtime="20201117 14:40:54.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.830" endtime="20201117 14:40:54.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.163" level="INFO">${RESULT} = [{'time': 0.043272903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7472000000004484e-05, 'source_diff': 1.7472000000004484e-05}, {'time': 0.043303903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:54.158" endtime="20201117 14:40:54.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.178" level="INFO">${ACCURACY} = {'source_diff': [1.7472000000004484e-05, 1.8027999999996325e-05, 1.784700000000139e-05, 1.7834000000001293e-05, 1.8237000000004278e-05, 1.8027999999996325e-05, 1.7500000000003624e-05, 1.78610000000009...</msg>
<status status="PASS" starttime="20201117 14:40:54.164" endtime="20201117 14:40:54.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.183" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.182" endtime="20201117 14:40:54.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.186" level="INFO">VALUE: [1.7472000000004484e-05, 1.8027999999996325e-05, 1.784700000000139e-05, 1.7834000000001293e-05, 1.8237000000004278e-05, 1.8027999999996325e-05, 1.7500000000003624e-05, 1.786100000000096e-05, 1.7249999999996435e-05, 1.7792000000002584e-05, 1.779099999999617e-05, 1.737500000000003e-05, 1.780499999999574e-05, 1.808299999999513e-05, 1.7486000000004054e-05, 1.777700000000354e-05, 1.7236000000003804e-05, 1.7693999999998655e-05, 1.793099999999881e-05, 1.808299999999513e-05, 1.736100000000046e-05, 1.8028000000003264e-05, 1.7445000000004818e-05, 1.759700000000114e-05, 1.7320000000001223e-05, 1.786100000000096e-05, 1.7973000000004458e-05, 1.783299999999488e-05, 1.7445000000004818e-05, 1.7499999999996685e-05, 1.790299999999967e-05, 1.7250000000003374e-05, 1.7458000000004914e-05, 1.78890000000001e-05, 1.808300000000207e-05, 1.7306000000001653e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.7820000000001723e-05, 1.795899999999795e-05, 1.8249999999997435e-05, 1.7306000000001653e-05, 1.766699999999899e-05, 1.8056000000002403e-05, 1.7305999999994714e-05, 1.7473000000003958e-05, 1.7791999999995645e-05, 1.7499999999996685e-05, 1.8166000000000015e-05, 1.7791999999995645e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.184" endtime="20201117 14:40:54.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.179" endtime="20201117 14:40:54.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.191" endtime="20201117 14:40:54.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.195" endtime="20201117 14:40:54.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.193" endtime="20201117 14:40:54.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.188" endtime="20201117 14:40:54.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.770" endtime="20201117 14:40:54.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.180" endtime="20201117 14:40:54.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.178" endtime="20201117 14:40:54.216"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.219" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.230" endtime="20201117 14:40:54.245"></status>
</kw>
<msg timestamp="20201117 14:40:54.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.228" endtime="20201117 14:40:54.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.247" endtime="20201117 14:40:54.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.250" endtime="20201117 14:40:54.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.225" endtime="20201117 14:40:54.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.222" endtime="20201117 14:40:54.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.261" endtime="20201117 14:40:54.560"></status>
</kw>
<msg timestamp="20201117 14:40:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027318403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027336056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.260" endtime="20201117 14:40:54.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027318403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027336056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.570" endtime="20201117 14:40:54.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.590" endtime="20201117 14:40:54.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.256" endtime="20201117 14:40:54.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.254" endtime="20201117 14:40:54.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.610" level="INFO">${RESULT} = [{'time': 0.027336056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.765299999999942e-05, 'source_diff': 1.765299999999942e-05}, {'time': 0.027362056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:54.601" endtime="20201117 14:40:54.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.643" level="INFO">${ACCURACY} = {'source_diff': [1.765299999999942e-05, 1.8014000000000224e-05, 1.790299999999967e-05, 1.7722000000001265e-05, 1.738900000000307e-05, 1.765299999999942e-05, 1.7415999999999265e-05, 1.780499999999921e-...</msg>
<status status="PASS" starttime="20201117 14:40:54.613" endtime="20201117 14:40:54.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.655" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.652" endtime="20201117 14:40:54.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.661" level="INFO">VALUE: [1.765299999999942e-05, 1.8014000000000224e-05, 1.790299999999967e-05, 1.7722000000001265e-05, 1.738900000000307e-05, 1.765299999999942e-05, 1.7415999999999265e-05, 1.780499999999921e-05, 1.7693999999998655e-05, 1.777700000000007e-05, 1.730499999999871e-05, 1.7472000000001014e-05, 1.729099999999914e-05, 1.7944000000002375e-05, 1.8250000000000904e-05, 1.80690000000025e-05, 1.7986000000001084e-05, 1.7957999999998475e-05, 1.7750000000000404e-05, 1.7486000000000584e-05, 1.786099999999749e-05, 1.812500000000078e-05, 1.731899999999828e-05, 1.815299999999992e-05, 1.818099999999906e-05, 1.7763999999999974e-05, 1.7708000000001695e-05, 1.7943999999998905e-05, 1.734700000000089e-05, 1.7791999999999114e-05, 1.7929999999999335e-05, 1.813900000000035e-05, 1.791700000000271e-05, 1.804099999999989e-05, 1.7486000000000584e-05, 1.7305999999998184e-05, 1.772299999999727e-05, 1.7320000000001223e-05, 1.7791999999999114e-05, 1.790300000000314e-05, 1.734699999999742e-05, 1.7569999999998004e-05, 1.7487000000000058e-05, 1.7959000000001418e-05, 1.7277999999999044e-05, 1.7722000000001265e-05, 1.805499999999946e-05, 1.7429999999998835e-05, 1.8166000000000015e-05, 1.8041999999999364e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.657" endtime="20201117 14:40:54.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.645" endtime="20201117 14:40:54.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.671" endtime="20201117 14:40:54.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.680" endtime="20201117 14:40:54.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.675" endtime="20201117 14:40:54.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.666" endtime="20201117 14:40:54.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.220" endtime="20201117 14:40:54.706"></status>
</kw>
<msg timestamp="20201117 14:40:54.707" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.732" endtime="20201117 14:40:54.752"></status>
</kw>
<msg timestamp="20201117 14:40:54.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.728" endtime="20201117 14:40:54.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.755" endtime="20201117 14:40:54.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.762" endtime="20201117 14:40:54.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.719" endtime="20201117 14:40:54.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.713" endtime="20201117 14:40:54.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.787" endtime="20201117 14:40:55.152"></status>
</kw>
<msg timestamp="20201117 14:40:55.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046207917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.784" endtime="20201117 14:40:55.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046207917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.163" endtime="20201117 14:40:55.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.183" endtime="20201117 14:40:55.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.776" endtime="20201117 14:40:55.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.771" endtime="20201117 14:40:55.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.203" level="INFO">${RESULT} = [{'time': 0.046225903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7985999999997615e-05, 'source_diff': 1.7985999999997615e-05}, {'time': 0.046253903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.194" endtime="20201117 14:40:55.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.237" level="INFO">${ACCURACY} = {'source_diff': [1.7985999999997615e-05, 1.8084000000001543e-05, 1.7556000000001903e-05, 1.747299999999702e-05, 1.8235999999997865e-05, 1.7528000000002764e-05, 1.786100000000096e-05, 1.805600000000240...</msg>
<status status="PASS" starttime="20201117 14:40:55.206" endtime="20201117 14:40:55.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.249" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.247" endtime="20201117 14:40:55.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.255" level="INFO">VALUE: [1.7985999999997615e-05, 1.8084000000001543e-05, 1.7556000000001903e-05, 1.747299999999702e-05, 1.8235999999997865e-05, 1.7528000000002764e-05, 1.786100000000096e-05, 1.8056000000002403e-05, 1.8084000000001543e-05, 1.769499999999813e-05, 1.7915999999999765e-05, 1.779100000000311e-05, 1.7457999999997975e-05, 1.7570000000001473e-05, 1.804099999999642e-05, 1.7957999999998475e-05, 1.7999999999997185e-05, 1.815299999999992e-05, 1.776299999999703e-05, 1.7542000000002334e-05, 1.8207999999998725e-05, 1.731899999999481e-05, 1.8236000000004804e-05, 1.8166000000000015e-05, 1.783299999999488e-05, 1.765299999999942e-05, 1.813900000000035e-05, 1.78890000000001e-05, 1.7542000000002334e-05, 1.743099999999831e-05, 1.759700000000114e-05, 1.766699999999899e-05, 1.7485999999997115e-05, 1.7263999999996005e-05, 1.786100000000096e-05, 1.790299999999967e-05, 1.7278000000002514e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.7250000000003374e-05, 1.8207999999998725e-05, 1.8235999999997865e-05, 1.8042000000002834e-05, 1.8028000000003264e-05, 1.8070000000001973e-05, 1.7499999999996685e-05, 1.802699999999685e-05, 1.766699999999899e-05, 1.731899999999481e-05, 1.7750000000003874e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.252" endtime="20201117 14:40:55.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.239" endtime="20201117 14:40:55.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.265" endtime="20201117 14:40:55.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.274" endtime="20201117 14:40:55.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.269" endtime="20201117 14:40:55.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.260" endtime="20201117 14:40:55.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.708" endtime="20201117 14:40:55.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.218" endtime="20201117 14:40:55.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.217" endtime="20201117 14:40:55.301"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.307" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.330" endtime="20201117 14:40:55.349"></status>
</kw>
<msg timestamp="20201117 14:40:55.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.326" endtime="20201117 14:40:55.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.353" endtime="20201117 14:40:55.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.359" endtime="20201117 14:40:55.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.318" endtime="20201117 14:40:55.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.312" endtime="20201117 14:40:55.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.384" endtime="20201117 14:40:55.748"></status>
</kw>
<msg timestamp="20201117 14:40:55.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049536528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049554403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.381" endtime="20201117 14:40:55.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049536528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049554403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.759" endtime="20201117 14:40:55.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.779" endtime="20201117 14:40:55.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.373" endtime="20201117 14:40:55.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.368" endtime="20201117 14:40:55.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.798" level="INFO">${RESULT} = [{'time': 0.049554403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.787499999999359e-05, 'source_diff': 1.787499999999359e-05}, {'time': 0.049591403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:55.789" endtime="20201117 14:40:55.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.829" level="INFO">${ACCURACY} = {'source_diff': [1.787499999999359e-05, 1.7792000000002584e-05, 1.763899999999985e-05, 1.7527999999995825e-05, 1.794499999999838e-05, 1.8236000000004804e-05, 1.765299999999942e-05, 1.7556000000001903e...</msg>
<status status="PASS" starttime="20201117 14:40:55.800" endtime="20201117 14:40:55.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.840" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.838" endtime="20201117 14:40:55.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.846" level="INFO">VALUE: [1.787499999999359e-05, 1.7792000000002584e-05, 1.763899999999985e-05, 1.7527999999995825e-05, 1.794499999999838e-05, 1.8236000000004804e-05, 1.765299999999942e-05, 1.7556000000001903e-05, 1.7278000000002514e-05, 1.7306000000001653e-05, 1.781900000000225e-05, 1.7736000000004304e-05, 1.8221999999998295e-05, 1.7834000000001293e-05, 1.7471999999997545e-05, 1.7334000000000793e-05, 1.80690000000025e-05, 1.8235999999997865e-05, 1.73889999999996e-05, 1.734699999999395e-05, 1.752699999999635e-05, 1.813900000000035e-05, 1.763899999999985e-05, 1.7792000000002584e-05, 1.787500000000053e-05, 1.7999999999997185e-05, 1.7569999999994534e-05, 1.7499999999996685e-05, 1.791699999999924e-05, 1.758299999999463e-05, 1.818099999999906e-05, 1.7957999999998475e-05, 1.7527999999995825e-05, 1.7820000000001723e-05, 1.790299999999967e-05, 1.8042000000002834e-05, 1.8028000000003264e-05, 1.7693999999998655e-05, 1.7820000000001723e-05, 1.737500000000003e-05, 1.8028000000003264e-05, 1.8209000000005138e-05, 1.7750000000003874e-05, 1.741699999999874e-05, 1.763899999999985e-05, 1.7292000000002083e-05, 1.7528000000002764e-05, 1.8221999999998295e-05, 1.8195000000005568e-05, 1.8027999999996325e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.843" endtime="20201117 14:40:55.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.831" endtime="20201117 14:40:55.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.855" endtime="20201117 14:40:55.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.864" endtime="20201117 14:40:55.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.859" endtime="20201117 14:40:55.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.850" endtime="20201117 14:40:55.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.308" endtime="20201117 14:40:55.890"></status>
</kw>
<msg timestamp="20201117 14:40:55.890" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.912" endtime="20201117 14:40:55.931"></status>
</kw>
<msg timestamp="20201117 14:40:55.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.909" endtime="20201117 14:40:55.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.935" endtime="20201117 14:40:55.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.941" endtime="20201117 14:40:55.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.901" endtime="20201117 14:40:55.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.896" endtime="20201117 14:40:55.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.965" endtime="20201117 14:40:56.319"></status>
</kw>
<msg timestamp="20201117 14:40:56.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.962" endtime="20201117 14:40:56.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.329" endtime="20201117 14:40:56.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.348" endtime="20201117 14:40:56.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.954" endtime="20201117 14:40:56.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.950" endtime="20201117 14:40:56.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.368" level="INFO">${RESULT} = [{'time': 0.041801542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7749999999996935e-05, 'source_diff': 1.7749999999996935e-05}, {'time': 0.041836542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.358" endtime="20201117 14:40:56.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.401" level="INFO">${ACCURACY} = {'source_diff': [1.7749999999996935e-05, 1.82089999999982e-05, 1.813900000000035e-05, 1.8207999999998725e-05, 1.7638000000000376e-05, 1.808300000000207e-05, 1.784700000000139e-05, 1.777700000000354e-0...</msg>
<status status="PASS" starttime="20201117 14:40:56.370" endtime="20201117 14:40:56.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.412" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.410" endtime="20201117 14:40:56.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.417" level="INFO">VALUE: [1.7749999999996935e-05, 1.82089999999982e-05, 1.813900000000035e-05, 1.8207999999998725e-05, 1.7638000000000376e-05, 1.808300000000207e-05, 1.784700000000139e-05, 1.777700000000354e-05, 1.8207999999998725e-05, 1.7999999999997185e-05, 1.754100000000286e-05, 1.7721999999997795e-05, 1.7444000000005344e-05, 1.7263999999996005e-05, 1.7750000000003874e-05, 1.8221999999998295e-05, 1.8027999999996325e-05, 1.8264000000003944e-05, 1.7764000000003444e-05, 1.758300000000157e-05, 1.7749999999996935e-05, 1.7764000000003444e-05, 1.7943999999998905e-05, 1.7500000000003624e-05, 1.8014000000003694e-05, 1.7499999999996685e-05, 1.7264000000002944e-05, 1.7486000000004054e-05, 1.8056000000002403e-05, 1.8013999999996755e-05, 1.7778000000003014e-05, 1.8013999999996755e-05, 1.7500000000003624e-05, 1.7292000000002083e-05, 1.8223000000004708e-05, 1.7929999999999335e-05, 1.8042000000002834e-05, 1.790299999999967e-05, 1.737500000000003e-05, 1.809700000000164e-05, 1.77089999999977e-05, 1.804100000000336e-05, 1.759700000000114e-05, 1.7443999999998405e-05, 1.808300000000207e-05, 1.7263999999996005e-05, 1.7665999999999515e-05, 1.80690000000025e-05, 1.7777999999996075e-05, 1.804099999999642e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.414" endtime="20201117 14:40:56.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.403" endtime="20201117 14:40:56.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.426" endtime="20201117 14:40:56.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.435" endtime="20201117 14:40:56.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.430" endtime="20201117 14:40:56.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.422" endtime="20201117 14:40:56.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.892" endtime="20201117 14:40:56.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.304" endtime="20201117 14:40:56.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.302" endtime="20201117 14:40:56.462"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.467" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.489" endtime="20201117 14:40:56.507"></status>
</kw>
<msg timestamp="20201117 14:40:56.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.485" endtime="20201117 14:40:56.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.510" endtime="20201117 14:40:56.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.517" endtime="20201117 14:40:56.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.478" endtime="20201117 14:40:56.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.472" endtime="20201117 14:40:56.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.541" endtime="20201117 14:40:56.891"></status>
</kw>
<msg timestamp="20201117 14:40:56.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047102236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.538" endtime="20201117 14:40:56.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047102236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.900" endtime="20201117 14:40:56.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.919" endtime="20201117 14:40:56.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.530" endtime="20201117 14:40:56.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.525" endtime="20201117 14:40:56.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.939" level="INFO">${RESULT} = [{'time': 0.047120222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7986000000004554e-05, 'source_diff': 1.7986000000004554e-05}, {'time': 0.047147222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.929" endtime="20201117 14:40:56.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.969" level="INFO">${ACCURACY} = {'source_diff': [1.7986000000004554e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.815299999999992e-05, 1.80690000000025e-05, 1.777700000000354e-05, 1.740299999999917e-05, 1.7722000000004734e-...</msg>
<status status="PASS" starttime="20201117 14:40:56.941" endtime="20201117 14:40:56.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.980" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.977" endtime="20201117 14:40:56.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.986" level="INFO">VALUE: [1.7986000000004554e-05, 1.7514000000003194e-05, 1.8042000000002834e-05, 1.815299999999992e-05, 1.80690000000025e-05, 1.777700000000354e-05, 1.740299999999917e-05, 1.7722000000004734e-05, 1.815299999999992e-05, 1.7763999999996505e-05, 1.7527999999995825e-05, 1.811100000000121e-05, 1.790299999999967e-05, 1.7763999999996505e-05, 1.8207999999998725e-05, 1.8028000000003264e-05, 1.7777999999996075e-05, 1.787500000000053e-05, 1.7834000000001293e-05, 1.8084000000001543e-05, 1.8222000000005234e-05, 1.7556000000001903e-05, 1.7584000000001043e-05, 1.743099999999831e-05, 1.802699999999685e-05, 1.7598000000000613e-05, 1.7459000000004388e-05, 1.7957999999998475e-05, 1.766699999999899e-05, 1.8221999999998295e-05, 1.7721999999997795e-05, 1.7693999999998655e-05, 1.8152000000000446e-05, 1.7693999999998655e-05, 1.7721999999997795e-05, 1.755500000000243e-05, 1.8041999999995895e-05, 1.808300000000207e-05, 1.7679999999999085e-05, 1.8235999999997865e-05, 1.7929999999999335e-05, 1.8193999999999155e-05, 1.8167000000006428e-05, 1.805499999999599e-05, 1.783300000000182e-05, 1.7833999999994354e-05, 1.731899999999481e-05, 1.765299999999942e-05, 1.82089999999982e-05, 1.7957999999998475e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.983" endtime="20201117 14:40:56.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.971" endtime="20201117 14:40:56.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.995" endtime="20201117 14:40:56.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.003" endtime="20201117 14:40:57.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.999" endtime="20201117 14:40:57.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.990" endtime="20201117 14:40:57.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.468" endtime="20201117 14:40:57.029"></status>
</kw>
<msg timestamp="20201117 14:40:57.029" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.051" endtime="20201117 14:40:57.070"></status>
</kw>
<msg timestamp="20201117 14:40:57.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.048" endtime="20201117 14:40:57.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.073" endtime="20201117 14:40:57.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.099" endtime="20201117 14:40:57.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.040" endtime="20201117 14:40:57.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.035" endtime="20201117 14:40:57.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.123" endtime="20201117 14:40:57.460"></status>
</kw>
<msg timestamp="20201117 14:40:57.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040564819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040582694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.119" endtime="20201117 14:40:57.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040564819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040582694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.469" endtime="20201117 14:40:57.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.488" endtime="20201117 14:40:57.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.112" endtime="20201117 14:40:57.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.108" endtime="20201117 14:40:57.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.507" level="INFO">${RESULT} = [{'time': 0.040582694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.040618694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:57.498" endtime="20201117 14:40:57.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.537" level="INFO">${ACCURACY} = {'source_diff': [1.787500000000053e-05, 1.7971999999998045e-05, 1.7749999999996935e-05, 1.731900000000175e-05, 1.7707999999998225e-05, 1.7278000000002514e-05, 1.729100000000261e-05, 1.7457999999997975...</msg>
<status status="PASS" starttime="20201117 14:40:57.509" endtime="20201117 14:40:57.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.548" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.546" endtime="20201117 14:40:57.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.553" level="INFO">VALUE: [1.787500000000053e-05, 1.7971999999998045e-05, 1.7749999999996935e-05, 1.731900000000175e-05, 1.7707999999998225e-05, 1.7278000000002514e-05, 1.729100000000261e-05, 1.7457999999997975e-05, 1.787500000000053e-05, 1.7472000000004484e-05, 1.7763999999996505e-05, 1.7457999999997975e-05, 1.7570000000001473e-05, 1.768099999999856e-05, 1.811100000000121e-05, 1.787500000000053e-05, 1.790299999999967e-05, 1.78890000000001e-05, 1.8235999999997865e-05, 1.808299999999513e-05, 1.7513999999996255e-05, 1.8222000000005234e-05, 1.7959000000004888e-05, 1.752700000000329e-05, 1.7972000000004984e-05, 1.794499999999838e-05, 1.7764000000003444e-05, 1.7709000000004638e-05, 1.7250000000003374e-05, 1.7278000000002514e-05, 1.813900000000035e-05, 1.7306000000001653e-05, 1.804100000000336e-05, 1.812500000000078e-05, 1.7361999999999933e-05, 1.7443999999998405e-05, 1.7513999999996255e-05, 1.813900000000035e-05, 1.762500000000028e-05, 1.758300000000157e-05, 1.761100000000071e-05, 1.8221999999998295e-05, 1.812500000000078e-05, 1.7805999999995215e-05, 1.7971999999998045e-05, 1.805499999999599e-05, 1.748699999999659e-05, 1.766699999999899e-05, 1.7999999999997185e-05, 1.7528000000002764e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.550" endtime="20201117 14:40:57.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.539" endtime="20201117 14:40:57.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.562" endtime="20201117 14:40:57.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.570" endtime="20201117 14:40:57.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.566" endtime="20201117 14:40:57.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.558" endtime="20201117 14:40:57.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.031" endtime="20201117 14:40:57.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.464" endtime="20201117 14:40:57.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.463" endtime="20201117 14:40:57.598"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.603" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.625" endtime="20201117 14:40:57.644"></status>
</kw>
<msg timestamp="20201117 14:40:57.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.622" endtime="20201117 14:40:57.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.647" endtime="20201117 14:40:57.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.653" endtime="20201117 14:40:57.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.614" endtime="20201117 14:40:57.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.608" endtime="20201117 14:40:57.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.676" endtime="20201117 14:40:57.989"></status>
</kw>
<msg timestamp="20201117 14:40:57.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047859278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047876556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.673" endtime="20201117 14:40:57.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047859278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047876556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.999" endtime="20201117 14:40:58.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.017" endtime="20201117 14:40:58.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.666" endtime="20201117 14:40:58.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.661" endtime="20201117 14:40:58.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.035" level="INFO">${RESULT} = [{'time': 0.047876556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7278000000002514e-05, 'source_diff': 1.7278000000002514e-05}, {'time': 0.047905556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.026" endtime="20201117 14:40:58.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.065" level="INFO">${ACCURACY} = {'source_diff': [1.7278000000002514e-05, 1.7500000000003624e-05, 1.7834000000001293e-05, 1.7805999999995215e-05, 1.758299999999463e-05, 1.787499999999359e-05, 1.73889999999996e-05, 1.808299999999513e-...</msg>
<status status="PASS" starttime="20201117 14:40:58.037" endtime="20201117 14:40:58.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.076" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.074" endtime="20201117 14:40:58.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.081" level="INFO">VALUE: [1.7278000000002514e-05, 1.7500000000003624e-05, 1.7834000000001293e-05, 1.7805999999995215e-05, 1.758299999999463e-05, 1.787499999999359e-05, 1.73889999999996e-05, 1.808299999999513e-05, 1.8000000000004124e-05, 1.7500000000003624e-05, 1.729099999999567e-05, 1.80969999999947e-05, 1.730500000000218e-05, 1.7943999999998905e-05, 1.812500000000078e-05, 1.7431000000005248e-05, 1.813900000000035e-05, 1.756899999999506e-05, 1.756899999999506e-05, 1.8042000000002834e-05, 1.7943999999998905e-05, 1.768099999999856e-05, 1.7764000000003444e-05, 1.78890000000001e-05, 1.7777999999996075e-05, 1.7514000000003194e-05, 1.7570000000001473e-05, 1.7778000000003014e-05, 1.7514000000003194e-05, 1.8166000000000015e-05, 1.765299999999942e-05, 1.8070000000001973e-05, 1.7306000000001653e-05, 1.745899999999745e-05, 1.7348000000000363e-05, 1.7805999999995215e-05, 1.765299999999942e-05, 1.790299999999967e-05, 1.830500000000318e-05, 1.7528000000002764e-05, 1.7486000000004054e-05, 1.8152000000000446e-05, 1.752700000000329e-05, 1.783299999999488e-05, 1.811100000000121e-05, 1.812499999999384e-05, 1.7694000000005594e-05, 1.7569000000002e-05, 1.734700000000089e-05, 1.802699999999685e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.078" endtime="20201117 14:40:58.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.067" endtime="20201117 14:40:58.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.090" endtime="20201117 14:40:58.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.098" endtime="20201117 14:40:58.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.094" endtime="20201117 14:40:58.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.085" endtime="20201117 14:40:58.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.604" endtime="20201117 14:40:58.124"></status>
</kw>
<msg timestamp="20201117 14:40:58.125" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.146" endtime="20201117 14:40:58.164"></status>
</kw>
<msg timestamp="20201117 14:40:58.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.143" endtime="20201117 14:40:58.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.168" endtime="20201117 14:40:58.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.174" endtime="20201117 14:40:58.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.136" endtime="20201117 14:40:58.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.130" endtime="20201117 14:40:58.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.197" endtime="20201117 14:40:58.533"></status>
</kw>
<msg timestamp="20201117 14:40:58.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041137153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.194" endtime="20201117 14:40:58.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041137153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.542" endtime="20201117 14:40:58.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.561" endtime="20201117 14:40:58.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.186" endtime="20201117 14:40:58.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.182" endtime="20201117 14:40:58.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.579" level="INFO">${RESULT} = [{'time': 0.041154431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7277999999995575e-05, 'source_diff': 1.7277999999995575e-05}, {'time': 0.041181431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.570" endtime="20201117 14:40:58.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.612" level="INFO">${ACCURACY} = {'source_diff': [1.7277999999995575e-05, 1.813900000000035e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.783300000000182e-05, 1.7429999999998835e-05, 1.8250000000004374e-05, 1.812500000000078e-...</msg>
<status status="PASS" starttime="20201117 14:40:58.582" endtime="20201117 14:40:58.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.624" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.622" endtime="20201117 14:40:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.629" level="INFO">VALUE: [1.7277999999995575e-05, 1.813900000000035e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.783300000000182e-05, 1.7429999999998835e-05, 1.8250000000004374e-05, 1.812500000000078e-05, 1.762500000000028e-05, 1.7513999999996255e-05, 1.7707999999998225e-05, 1.790299999999967e-05, 1.730500000000218e-05, 1.763899999999985e-05, 1.7806000000002153e-05, 1.808300000000207e-05, 1.7763999999996505e-05, 1.762500000000028e-05, 1.786100000000096e-05, 1.7443999999998405e-05, 1.8027999999996325e-05, 1.8236000000004804e-05, 1.745899999999745e-05, 1.813900000000035e-05, 1.8028000000003264e-05, 1.7735999999997365e-05, 1.7945000000005318e-05, 1.7709000000004638e-05, 1.7778000000003014e-05, 1.7306000000001653e-05, 1.8056000000002403e-05, 1.772299999999727e-05, 1.7959000000004888e-05, 1.7277999999995575e-05, 1.766699999999899e-05, 1.7695000000005068e-05, 1.7513999999996255e-05, 1.765299999999942e-05, 1.762500000000028e-05, 1.80690000000025e-05, 1.8207999999998725e-05, 1.7443999999998405e-05, 1.73889999999996e-05, 1.7471999999997545e-05, 1.7736000000004304e-05, 1.7264000000002944e-05, 1.7569000000002e-05, 1.7527999999995825e-05, 1.765299999999942e-05, 1.786100000000096e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.626" endtime="20201117 14:40:58.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.614" endtime="20201117 14:40:58.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.639" endtime="20201117 14:40:58.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.647" endtime="20201117 14:40:58.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.643" endtime="20201117 14:40:58.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.634" endtime="20201117 14:40:58.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.126" endtime="20201117 14:40:58.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.600" endtime="20201117 14:40:58.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.599" endtime="20201117 14:40:58.673"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.678" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.700" endtime="20201117 14:40:58.718"></status>
</kw>
<msg timestamp="20201117 14:40:58.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.696" endtime="20201117 14:40:58.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.722" endtime="20201117 14:40:58.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.728" endtime="20201117 14:40:58.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.689" endtime="20201117 14:40:58.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.684" endtime="20201117 14:40:58.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.751" endtime="20201117 14:40:59.085"></status>
</kw>
<msg timestamp="20201117 14:40:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.748" endtime="20201117 14:40:59.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.095" endtime="20201117 14:40:59.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.114" endtime="20201117 14:40:59.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.740" endtime="20201117 14:40:59.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.736" endtime="20201117 14:40:59.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.133" level="INFO">${RESULT} = [{'time': 0.046353597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8222000000005234e-05, 'source_diff': 1.8222000000005234e-05}, {'time': 0.046385556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:59.124" endtime="20201117 14:40:59.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.163" level="INFO">${ACCURACY} = {'source_diff': [1.8222000000005234e-05, 1.816699999999949e-05, 1.82089999999982e-05, 1.758300000000157e-05, 1.7929999999999335e-05, 1.804100000000336e-05, 1.7736000000004304e-05, 1.805500000000293e-0...</msg>
<status status="PASS" starttime="20201117 14:40:59.135" endtime="20201117 14:40:59.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.174" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.172" endtime="20201117 14:40:59.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.179" level="INFO">VALUE: [1.8222000000005234e-05, 1.816699999999949e-05, 1.82089999999982e-05, 1.758300000000157e-05, 1.7929999999999335e-05, 1.804100000000336e-05, 1.7736000000004304e-05, 1.805500000000293e-05, 1.73889999999996e-05, 1.7778000000003014e-05, 1.763899999999985e-05, 1.7957999999998475e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.8027999999996325e-05, 1.7834000000001293e-05, 1.793099999999881e-05, 1.829100000000361e-05, 1.7306000000001653e-05, 1.7723000000004208e-05, 1.8263999999997005e-05, 1.758300000000157e-05, 1.809700000000164e-05, 1.762500000000028e-05, 1.812500000000078e-05, 1.752699999999635e-05, 1.7556000000001903e-05, 1.7499999999996685e-05, 1.743099999999831e-05, 1.7584000000001043e-05, 1.8042000000002834e-05, 1.7862000000000433e-05, 1.7445000000004818e-05, 1.8069999999995034e-05, 1.7306000000001653e-05, 1.7278000000002514e-05, 1.7445000000004818e-05, 1.7223000000003708e-05, 1.754100000000286e-05, 1.781900000000225e-05, 1.7736000000004304e-05, 1.7429999999998835e-05, 1.781900000000225e-05, 1.730500000000218e-05, 1.761100000000071e-05, 1.786099999999402e-05, 1.8152000000000446e-05, 1.7457999999997975e-05, 1.77089999999977e-05, 1.7999999999997185e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.176" endtime="20201117 14:40:59.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.165" endtime="20201117 14:40:59.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.189" endtime="20201117 14:40:59.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.197" endtime="20201117 14:40:59.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.192" endtime="20201117 14:40:59.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.184" endtime="20201117 14:40:59.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.680" endtime="20201117 14:40:59.222"></status>
</kw>
<msg timestamp="20201117 14:40:59.222" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.244" endtime="20201117 14:40:59.262"></status>
</kw>
<msg timestamp="20201117 14:40:59.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.240" endtime="20201117 14:40:59.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.265" endtime="20201117 14:40:59.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.271" endtime="20201117 14:40:59.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.233" endtime="20201117 14:40:59.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.228" endtime="20201117 14:40:59.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.294" endtime="20201117 14:40:59.628"></status>
</kw>
<msg timestamp="20201117 14:40:59.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040214958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.291" endtime="20201117 14:40:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040214958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.638" endtime="20201117 14:40:59.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.656" endtime="20201117 14:40:59.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.284" endtime="20201117 14:40:59.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.279" endtime="20201117 14:40:59.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.675" level="INFO">${RESULT} = [{'time': 0.040214958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.808300000000207e-05, 'source_diff': 1.808300000000207e-05}, {'time': 0.040245958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:59.666" endtime="20201117 14:40:59.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.705" level="INFO">${ACCURACY} = {'source_diff': [1.808300000000207e-05, 1.8235999999997865e-05, 1.7958000000005414e-05, 1.7957999999998475e-05, 1.8166000000000015e-05, 1.786100000000096e-05, 1.7514000000003194e-05, 1.734700000000089...</msg>
<status status="PASS" starttime="20201117 14:40:59.677" endtime="20201117 14:40:59.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.716" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.714" endtime="20201117 14:40:59.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.722" level="INFO">VALUE: [1.808300000000207e-05, 1.8235999999997865e-05, 1.7958000000005414e-05, 1.7957999999998475e-05, 1.8166000000000015e-05, 1.786100000000096e-05, 1.7514000000003194e-05, 1.734700000000089e-05, 1.7721999999997795e-05, 1.8207999999998725e-05, 1.766699999999899e-05, 1.811100000000121e-05, 1.7569000000002e-05, 1.809700000000164e-05, 1.783300000000182e-05, 1.809700000000164e-05, 1.82089999999982e-05, 1.7778000000003014e-05, 1.819499999999863e-05, 1.7820000000001723e-05, 1.7834000000001293e-05, 1.7583999999994104e-05, 1.77089999999977e-05, 1.7763999999996505e-05, 1.762500000000028e-05, 1.743099999999831e-05, 1.8098000000001113e-05, 1.765299999999942e-05, 1.8013999999996755e-05, 1.7735999999997365e-05, 1.7805999999995215e-05, 1.7388000000000126e-05, 1.736100000000046e-05, 1.8194000000006094e-05, 1.744499999999788e-05, 1.754100000000286e-05, 1.7429999999998835e-05, 1.758300000000157e-05, 1.783300000000182e-05, 1.7693999999998655e-05, 1.736100000000046e-05, 1.8042000000002834e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.7749999999996935e-05, 1.783300000000182e-05, 1.747299999999702e-05, 1.815299999999992e-05, 1.808299999999513e-05, 1.7763999999996505e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.719" endtime="20201117 14:40:59.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.707" endtime="20201117 14:40:59.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.731" endtime="20201117 14:40:59.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.739" endtime="20201117 14:40:59.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.735" endtime="20201117 14:40:59.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.727" endtime="20201117 14:40:59.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.224" endtime="20201117 14:40:59.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.676" endtime="20201117 14:40:59.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.674" endtime="20201117 14:40:59.766"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.771" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.792" endtime="20201117 14:40:59.811"></status>
</kw>
<msg timestamp="20201117 14:40:59.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.789" endtime="20201117 14:40:59.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.814" endtime="20201117 14:40:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.820" endtime="20201117 14:40:59.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.782" endtime="20201117 14:40:59.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.776" endtime="20201117 14:40:59.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.843" endtime="20201117 14:41:00.180"></status>
</kw>
<msg timestamp="20201117 14:41:00.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046066458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.840" endtime="20201117 14:41:00.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046066458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.189" endtime="20201117 14:41:00.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.208" endtime="20201117 14:41:00.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.833" endtime="20201117 14:41:00.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.828" endtime="20201117 14:41:00.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.225" level="INFO">${RESULT} = [{'time': 0.046066458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7902000000000196e-05, 'source_diff': 1.7902000000000196e-05}, {'time': 0.046104458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:00.216" endtime="20201117 14:41:00.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.255" level="INFO">${ACCURACY} = {'source_diff': [1.7902000000000196e-05, 1.730500000000218e-05, 1.790299999999967e-05, 1.791699999999924e-05, 1.7986000000004554e-05, 1.7778000000003014e-05, 1.8041999999995895e-05, 1.7750000000003874...</msg>
<status status="PASS" starttime="20201117 14:41:00.227" endtime="20201117 14:41:00.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.266" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.264" endtime="20201117 14:41:00.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.272" level="INFO">VALUE: [1.7902000000000196e-05, 1.730500000000218e-05, 1.790299999999967e-05, 1.791699999999924e-05, 1.7986000000004554e-05, 1.7778000000003014e-05, 1.8041999999995895e-05, 1.7750000000003874e-05, 1.790299999999967e-05, 1.762500000000028e-05, 1.7763999999996505e-05, 1.736099999999352e-05, 1.7735999999997365e-05, 1.7486000000004054e-05, 1.813900000000035e-05, 1.7791999999995645e-05, 1.7445000000004818e-05, 1.7806000000002153e-05, 1.7334000000000793e-05, 1.811100000000121e-05, 1.787500000000053e-05, 1.809700000000164e-05, 1.8236000000004804e-05, 1.818099999999906e-05, 1.812499999999384e-05, 1.780500000000268e-05, 1.776300000000397e-05, 1.7862000000000433e-05, 1.7764000000003444e-05, 1.808300000000207e-05, 1.7389000000006538e-05, 1.8041999999995895e-05, 1.804099999999642e-05, 1.755500000000243e-05, 1.808300000000207e-05, 1.7943999999998905e-05, 1.754099999999592e-05, 1.8236000000004804e-05, 1.7707999999998225e-05, 1.791699999999924e-05, 1.7444000000005344e-05, 1.781900000000225e-05, 1.7778000000003014e-05, 1.7499999999996685e-05, 1.781900000000225e-05, 1.8027999999996325e-05, 1.812500000000078e-05, 1.790299999999967e-05, 1.7542000000002334e-05, 1.7972000000004984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.269" endtime="20201117 14:41:00.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.257" endtime="20201117 14:41:00.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.281" endtime="20201117 14:41:00.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.289" endtime="20201117 14:41:00.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.285" endtime="20201117 14:41:00.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.277" endtime="20201117 14:41:00.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.772" endtime="20201117 14:41:00.315"></status>
</kw>
<msg timestamp="20201117 14:41:00.315" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.336" endtime="20201117 14:41:00.355"></status>
</kw>
<msg timestamp="20201117 14:41:00.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.333" endtime="20201117 14:41:00.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.358" endtime="20201117 14:41:00.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.365" endtime="20201117 14:41:00.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.326" endtime="20201117 14:41:00.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.320" endtime="20201117 14:41:00.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.388" endtime="20201117 14:41:00.723"></status>
</kw>
<msg timestamp="20201117 14:41:00.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040223458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04024075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:00.384" endtime="20201117 14:41:00.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040223458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04024075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:00.732" endtime="20201117 14:41:00.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.751" endtime="20201117 14:41:00.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.377" endtime="20201117 14:41:00.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.373" endtime="20201117 14:41:00.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.770" level="INFO">${RESULT} = [{'time': 0.04024075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7292000000002083e-05, 'source_diff': 1.7292000000002083e-05}, {'time': 0.040274722, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:41:00.761" endtime="20201117 14:41:00.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.802" level="INFO">${ACCURACY} = {'source_diff': [1.7292000000002083e-05, 1.7693999999998655e-05, 1.731900000000175e-05, 1.7820000000001723e-05, 1.7555999999994965e-05, 1.7763999999996505e-05, 1.784700000000139e-05, 1.724999999999643...</msg>
<status status="PASS" starttime="20201117 14:41:00.772" endtime="20201117 14:41:00.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.814" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.812" endtime="20201117 14:41:00.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.819" level="INFO">VALUE: [1.7292000000002083e-05, 1.7693999999998655e-05, 1.731900000000175e-05, 1.7820000000001723e-05, 1.7555999999994965e-05, 1.7763999999996505e-05, 1.784700000000139e-05, 1.7249999999996435e-05, 1.7306000000001653e-05, 1.763899999999985e-05, 1.7707999999998225e-05, 1.795899999999795e-05, 1.7278000000002514e-05, 1.7431000000005248e-05, 1.73889999999996e-05, 1.7834000000001293e-05, 1.7735999999997365e-05, 1.7834000000001293e-05, 1.7834000000001293e-05, 1.7791999999995645e-05, 1.783300000000182e-05, 1.8098000000001113e-05, 1.795899999999795e-05, 1.762500000000028e-05, 1.783300000000182e-05, 1.731900000000175e-05, 1.7958000000005414e-05, 1.7429999999998835e-05, 1.805499999999599e-05, 1.736100000000046e-05, 1.7915999999999765e-05, 1.8013999999996755e-05, 1.7750000000003874e-05, 1.7486000000004054e-05, 1.786100000000096e-05, 1.8013999999996755e-05, 1.8193999999999155e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.7514000000003194e-05, 1.791699999999924e-05, 1.8013999999996755e-05, 1.763899999999985e-05, 1.743099999999831e-05, 1.7999999999997185e-05, 1.8042000000002834e-05, 1.7833999999994354e-05, 1.8014000000003694e-05, 1.7458000000004914e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.816" endtime="20201117 14:41:00.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.805" endtime="20201117 14:41:00.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.828" endtime="20201117 14:41:00.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.836" endtime="20201117 14:41:00.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.832" endtime="20201117 14:41:00.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.824" endtime="20201117 14:41:00.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.316" endtime="20201117 14:41:00.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.768" endtime="20201117 14:41:00.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.766" endtime="20201117 14:41:00.863"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.868" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.889" endtime="20201117 14:41:00.909"></status>
</kw>
<msg timestamp="20201117 14:41:00.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.886" endtime="20201117 14:41:00.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.912" endtime="20201117 14:41:00.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.919" endtime="20201117 14:41:00.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.879" endtime="20201117 14:41:00.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.873" endtime="20201117 14:41:00.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.943" endtime="20201117 14:41:01.249"></status>
</kw>
<msg timestamp="20201117 14:41:01.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047073597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047092778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.939" endtime="20201117 14:41:01.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047073597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047092778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.253" endtime="20201117 14:41:01.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.262" endtime="20201117 14:41:01.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.932" endtime="20201117 14:41:01.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.927" endtime="20201117 14:41:01.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.271" level="INFO">${RESULT} = [{'time': 0.047092778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.918100000000006e-05, 'source_diff': 1.918100000000006e-05}, {'time': 0.047120806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:01.267" endtime="20201117 14:41:01.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.284" level="INFO">${ACCURACY} = {'source_diff': [1.918100000000006e-05, 1.923699999999834e-05, 1.9207999999999725e-05, 1.8792000000003584e-05, 1.836100000000146e-05, 1.88890000000011e-05, 1.918100000000006e-05, 1.9193999999993216e-0...</msg>
<status status="PASS" starttime="20201117 14:41:01.272" endtime="20201117 14:41:01.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.290" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.289" endtime="20201117 14:41:01.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.292" level="INFO">VALUE: [1.918100000000006e-05, 1.923699999999834e-05, 1.9207999999999725e-05, 1.8792000000003584e-05, 1.836100000000146e-05, 1.88890000000011e-05, 1.918100000000006e-05, 1.9193999999993216e-05, 1.8805999999996215e-05, 1.833300000000232e-05, 1.9112000000001683e-05, 1.923699999999834e-05, 1.912499999999484e-05, 1.9194000000000155e-05, 1.827700000000404e-05, 1.879099999999717e-05, 1.834700000000189e-05, 1.8693999999999655e-05, 1.9249999999998435e-05, 1.861100000000171e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.8514000000004194e-05, 1.918100000000006e-05, 1.880499999999674e-05, 1.840300000000017e-05, 1.8749999999997935e-05, 1.8721999999998795e-05, 1.9027999999997325e-05, 1.866699999999999e-05, 1.833300000000232e-05, 1.863900000000085e-05, 1.923699999999834e-05, 1.8957999999999475e-05, 1.861099999999477e-05, 1.8805999999996215e-05, 1.845899999999845e-05, 1.8806000000003154e-05, 1.8278000000003514e-05, 1.915300000000092e-05, 1.8348000000001363e-05, 1.8972000000005984e-05, 1.840300000000017e-05, 1.844499999999888e-05, 1.8805999999996215e-05, 1.873699999999784e-05, 1.8443999999999405e-05, 1.9013999999997755e-05, 1.8652000000000946e-05, 1.8777999999997075e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.291" endtime="20201117 14:41:01.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.285" endtime="20201117 14:41:01.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.296" endtime="20201117 14:41:01.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.303" endtime="20201117 14:41:01.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.299" endtime="20201117 14:41:01.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.294" endtime="20201117 14:41:01.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.869" endtime="20201117 14:41:01.329"></status>
</kw>
<msg timestamp="20201117 14:41:01.329" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.351" endtime="20201117 14:41:01.369"></status>
</kw>
<msg timestamp="20201117 14:41:01.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.347" endtime="20201117 14:41:01.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.372" endtime="20201117 14:41:01.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.378" endtime="20201117 14:41:01.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.340" endtime="20201117 14:41:01.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.334" endtime="20201117 14:41:01.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.401" endtime="20201117 14:41:01.752"></status>
</kw>
<msg timestamp="20201117 14:41:01.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.398" endtime="20201117 14:41:01.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.762" endtime="20201117 14:41:01.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.782" endtime="20201117 14:41:01.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.391" endtime="20201117 14:41:01.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.386" endtime="20201117 14:41:01.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.801" level="INFO">${RESULT} = [{'time': 0.040418875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8999999999998185e-05, 'source_diff': 1.8999999999998185e-05}, {'time': 0.040455903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.792" endtime="20201117 14:41:01.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.832" level="INFO">${ACCURACY} = {'source_diff': [1.8999999999998185e-05, 1.9042000000003834e-05, 1.8820000000002723e-05, 1.8806000000003154e-05, 1.929100000000461e-05, 1.9027999999997325e-05, 1.9069999999996035e-05, 1.84589999999984...</msg>
<status status="PASS" starttime="20201117 14:41:01.804" endtime="20201117 14:41:01.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.844" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.841" endtime="20201117 14:41:01.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.849" level="INFO">VALUE: [1.8999999999998185e-05, 1.9042000000003834e-05, 1.8820000000002723e-05, 1.8806000000003154e-05, 1.929100000000461e-05, 1.9027999999997325e-05, 1.9069999999996035e-05, 1.845899999999845e-05, 1.8666000000000516e-05, 1.887500000000153e-05, 1.9194000000000155e-05, 1.919499999999963e-05, 1.891700000000024e-05, 1.888899999999416e-05, 1.8485999999998115e-05, 1.8862000000001433e-05, 1.8834000000002293e-05, 1.8430000000006774e-05, 1.833300000000232e-05, 1.8443999999999405e-05, 1.8693999999999655e-05, 1.881899999999631e-05, 1.834700000000189e-05, 1.8666000000000516e-05, 1.909700000000264e-05, 1.9235999999998865e-05, 1.8707999999999225e-05, 1.881899999999631e-05, 1.9027999999997325e-05, 1.8693999999999655e-05, 1.9179999999993647e-05, 1.861100000000171e-05, 1.863900000000085e-05, 1.8971999999999045e-05, 1.831899999999581e-05, 1.8457999999998975e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.8348000000001363e-05, 1.918100000000006e-05, 1.866699999999999e-05, 1.9013999999997755e-05, 1.866699999999999e-05, 1.890299999999373e-05, 1.919499999999963e-05, 1.8833999999995354e-05, 1.8805999999996215e-05, 1.8277999999996575e-05, 1.872299999999827e-05, 1.8485999999998115e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.846" endtime="20201117 14:41:01.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.834" endtime="20201117 14:41:01.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.858" endtime="20201117 14:41:01.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.867" endtime="20201117 14:41:01.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.862" endtime="20201117 14:41:01.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.854" endtime="20201117 14:41:01.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.331" endtime="20201117 14:41:01.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.865" endtime="20201117 14:41:01.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.863" endtime="20201117 14:41:01.894"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.899" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.927" endtime="20201117 14:41:01.946"></status>
</kw>
<msg timestamp="20201117 14:41:01.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.923" endtime="20201117 14:41:01.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.949" endtime="20201117 14:41:01.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.956" endtime="20201117 14:41:01.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.910" endtime="20201117 14:41:01.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.904" endtime="20201117 14:41:01.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.980" endtime="20201117 14:41:02.329"></status>
</kw>
<msg timestamp="20201117 14:41:02.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053449056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053468903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.977" endtime="20201117 14:41:02.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053449056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053468903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.339" endtime="20201117 14:41:02.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.358" endtime="20201117 14:41:02.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.969" endtime="20201117 14:41:02.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.964" endtime="20201117 14:41:02.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.376" level="INFO">${RESULT} = [{'time': 0.053468903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.984699999999645e-05, 'source_diff': 1.984699999999645e-05}, {'time': 0.053508833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:02.367" endtime="20201117 14:41:02.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.407" level="INFO">${ACCURACY} = {'source_diff': [1.984699999999645e-05, 1.9249999999998435e-05, 1.952699999999835e-05, 1.933300000000332e-05, 1.9916000000001766e-05, 1.987499999999559e-05, 1.9430000000000835e-05, 1.9513999999998255e...</msg>
<status status="PASS" starttime="20201117 14:41:02.378" endtime="20201117 14:41:02.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.418" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.416" endtime="20201117 14:41:02.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.424" level="INFO">VALUE: [1.984699999999645e-05, 1.9249999999998435e-05, 1.952699999999835e-05, 1.933300000000332e-05, 1.9916000000001766e-05, 1.987499999999559e-05, 1.9430000000000835e-05, 1.9513999999998255e-05, 1.9291999999997145e-05, 1.940300000000117e-05, 2.012500000000278e-05, 1.9777999999998075e-05, 1.941700000000074e-05, 1.9485999999999115e-05, 1.9777999999998075e-05, 2.011100000000321e-05, 1.941700000000074e-05, 1.986100000000296e-05, 1.9778000000005014e-05, 2.0263999999999005e-05, 2.0041999999997895e-05, 1.98890000000021e-05, 1.961100000000271e-05, 1.943100000000031e-05, 1.9334000000002793e-05, 1.945899999999945e-05, 1.9471999999999545e-05, 1.93890000000016e-05, 2.019500000000063e-05, 1.998699999999909e-05, 2.002699999999885e-05, 1.9652000000001946e-05, 1.9666000000001516e-05, 2.0194000000001155e-05, 1.98890000000021e-05, 1.9791999999997645e-05, 1.983300000000382e-05, 1.9778000000005014e-05, 1.9944000000000905e-05, 1.9708000000000225e-05, 1.98890000000021e-05, 1.962500000000228e-05, 1.930499999999724e-05, 1.9485999999999115e-05, 1.9569000000004e-05, 1.931899999999681e-05, 2.016700000000149e-05, 1.9806000000004154e-05, 2.012499999999584e-05, 1.9263999999998005e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.420" endtime="20201117 14:41:02.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.409" endtime="20201117 14:41:02.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.432" endtime="20201117 14:41:02.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.441" endtime="20201117 14:41:02.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.436" endtime="20201117 14:41:02.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.428" endtime="20201117 14:41:02.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.900" endtime="20201117 14:41:02.467"></status>
</kw>
<msg timestamp="20201117 14:41:02.467" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.489" endtime="20201117 14:41:02.508"></status>
</kw>
<msg timestamp="20201117 14:41:02.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.485" endtime="20201117 14:41:02.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.512" endtime="20201117 14:41:02.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.519" endtime="20201117 14:41:02.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.478" endtime="20201117 14:41:02.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.472" endtime="20201117 14:41:02.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.542" endtime="20201117 14:41:02.896"></status>
</kw>
<msg timestamp="20201117 14:41:02.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041394069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.539" endtime="20201117 14:41:02.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041394069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.905" endtime="20201117 14:41:02.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.924" endtime="20201117 14:41:02.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.532" endtime="20201117 14:41:02.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.527" endtime="20201117 14:41:02.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.944" level="INFO">${RESULT} = [{'time': 0.041413319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9249999999998435e-05, 'source_diff': 1.9249999999998435e-05}, {'time': 0.041441347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.935" endtime="20201117 14:41:02.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.988" level="INFO">${ACCURACY} = {'source_diff': [1.9249999999998435e-05, 1.984700000000339e-05, 1.9763999999998505e-05, 1.9471999999999545e-05, 2.0194000000001155e-05, 1.929099999999767e-05, 1.944499999999988e-05, 1.9958000000000475...</msg>
<status status="PASS" starttime="20201117 14:41:02.946" endtime="20201117 14:41:02.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.999" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.996" endtime="20201117 14:41:03.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.005" level="INFO">VALUE: [1.9249999999998435e-05, 1.984700000000339e-05, 1.9763999999998505e-05, 1.9471999999999545e-05, 2.0194000000001155e-05, 1.929099999999767e-05, 1.944499999999988e-05, 1.9958000000000475e-05, 1.9792000000004584e-05, 2.0194000000001155e-05, 2.0042000000004834e-05, 1.9528000000004764e-05, 1.984699999999645e-05, 1.9735999999999365e-05, 1.940300000000117e-05, 1.9792000000004584e-05, 1.961100000000271e-05, 1.95969999999962e-05, 2.0042000000004834e-05, 1.984699999999645e-05, 1.9777999999998075e-05, 1.968100000000056e-05, 1.9291999999997145e-05, 1.9764000000005444e-05, 1.9805999999997215e-05, 1.9569999999996535e-05, 1.9972000000000045e-05, 1.980500000000468e-05, 2.011099999999627e-05, 2.0084000000003543e-05, 1.998699999999909e-05, 2.008299999999713e-05, 1.9694000000000655e-05, 1.9416000000001266e-05, 1.940300000000117e-05, 2.00969999999967e-05, 2.011100000000321e-05, 1.9985999999999615e-05, 1.9485999999999115e-05, 1.9791999999997645e-05, 2.009700000000364e-05, 1.9457999999999975e-05, 1.9513999999998255e-05, 1.9834000000003293e-05, 1.9958000000000475e-05, 1.9721999999999795e-05, 1.9985999999999615e-05, 1.9555999999996965e-05, 1.9985999999999615e-05, 1.9583999999996105e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.001" endtime="20201117 14:41:03.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.989" endtime="20201117 14:41:03.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.014" endtime="20201117 14:41:03.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.022" endtime="20201117 14:41:03.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.018" endtime="20201117 14:41:03.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.009" endtime="20201117 14:41:03.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.468" endtime="20201117 14:41:03.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.896" endtime="20201117 14:41:03.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.895" endtime="20201117 14:41:03.049"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.054" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.077" endtime="20201117 14:41:03.096"></status>
</kw>
<msg timestamp="20201117 14:41:03.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.074" endtime="20201117 14:41:03.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.099" endtime="20201117 14:41:03.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.106" endtime="20201117 14:41:03.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.066" endtime="20201117 14:41:03.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.060" endtime="20201117 14:41:03.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.129" endtime="20201117 14:41:03.483"></status>
</kw>
<msg timestamp="20201117 14:41:03.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048065444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.126" endtime="20201117 14:41:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048065444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.493" endtime="20201117 14:41:03.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.512" endtime="20201117 14:41:03.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.119" endtime="20201117 14:41:03.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.114" endtime="20201117 14:41:03.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.532" level="INFO">${RESULT} = [{'time': 0.048085819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.037500000000303e-05, 'source_diff': 2.037500000000303e-05}, {'time': 0.048118819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:03.522" endtime="20201117 14:41:03.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.562" level="INFO">${ACCURACY} = {'source_diff': [2.037500000000303e-05, 2.0458000000000975e-05, 2.0499999999999685e-05, 2.1014000000006694e-05, 2.105499999999899e-05, 2.0749999999999935e-05, 2.0666000000002516e-05, 2.074999999999993...</msg>
<status status="PASS" starttime="20201117 14:41:03.534" endtime="20201117 14:41:03.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.574" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.571" endtime="20201117 14:41:03.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.579" level="INFO">VALUE: [2.037500000000303e-05, 2.0458000000000975e-05, 2.0499999999999685e-05, 2.1014000000006694e-05, 2.105499999999899e-05, 2.0749999999999935e-05, 2.0666000000002516e-05, 2.0749999999999935e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.0333999999996855e-05, 2.094500000000138e-05, 2.1277999999999575e-05, 2.1000000000000185e-05, 2.0263999999999005e-05, 2.090300000000267e-05, 2.0736000000000365e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.062499999999634e-05, 2.0805999999998215e-05, 2.119500000000163e-05, 2.0777999999999075e-05, 2.062499999999634e-05, 2.1013999999999755e-05, 2.1056000000005404e-05, 2.1000000000000185e-05, 2.120899999999426e-05, 2.115300000000292e-05, 2.0291999999998145e-05, 2.0583999999997105e-05, 2.0763999999999505e-05, 2.0612000000003183e-05, 2.1055999999998465e-05, 2.062499999999634e-05, 2.03890000000026e-05, 2.0986000000000615e-05, 2.112499999999684e-05, 2.084699999999745e-05, 2.062500000000328e-05, 2.0208000000000725e-05, 2.036099999999652e-05, 2.0791999999998645e-05, 2.0972000000001045e-05, 2.115300000000292e-05, 2.080499999999874e-05, 2.1000000000000185e-05, 2.1180000000002586e-05, 2.112500000000378e-05, 2.044500000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.576" endtime="20201117 14:41:03.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.564" endtime="20201117 14:41:03.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.588" endtime="20201117 14:41:03.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.596" endtime="20201117 14:41:03.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.592" endtime="20201117 14:41:03.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.583" endtime="20201117 14:41:03.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.056" endtime="20201117 14:41:03.623"></status>
</kw>
<msg timestamp="20201117 14:41:03.623" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.645" endtime="20201117 14:41:03.664"></status>
</kw>
<msg timestamp="20201117 14:41:03.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.642" endtime="20201117 14:41:03.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.667" endtime="20201117 14:41:03.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.673" endtime="20201117 14:41:03.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.634" endtime="20201117 14:41:03.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.628" endtime="20201117 14:41:03.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.697" endtime="20201117 14:41:04.048"></status>
</kw>
<msg timestamp="20201117 14:41:04.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042460889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.694" endtime="20201117 14:41:04.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042460889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.058" endtime="20201117 14:41:04.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.077" endtime="20201117 14:41:04.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.686" endtime="20201117 14:41:04.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.682" endtime="20201117 14:41:04.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.096" level="INFO">${RESULT} = [{'time': 0.042460889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.042499875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.087" endtime="20201117 14:41:04.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.127" level="INFO">${ACCURACY} = {'source_diff': [2.1000000000000185e-05, 2.034699999999695e-05, 2.056899999999806e-05, 2.116699999999555e-05, 2.0555999999997965e-05, 2.112500000000378e-05, 2.1055999999998465e-05, 2.118100000000206e-...</msg>
<status status="PASS" starttime="20201117 14:41:04.098" endtime="20201117 14:41:04.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.138" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.136" endtime="20201117 14:41:04.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.144" level="INFO">VALUE: [2.1000000000000185e-05, 2.034699999999695e-05, 2.056899999999806e-05, 2.116699999999555e-05, 2.0555999999997965e-05, 2.112500000000378e-05, 2.1055999999998465e-05, 2.118100000000206e-05, 2.094500000000138e-05, 2.086099999999702e-05, 2.052699999999935e-05, 2.0820000000004724e-05, 2.0583999999997105e-05, 2.0430000000001836e-05, 2.0749999999999935e-05, 2.037500000000303e-05, 2.0458000000000975e-05, 2.031899999999781e-05, 2.083300000000482e-05, 2.086100000000396e-05, 2.0944000000001906e-05, 2.0415999999995327e-05, 2.1000000000000185e-05, 2.1013999999999755e-05, 2.111099999999727e-05, 2.1250000000000435e-05, 2.033299999999738e-05, 2.1027999999999325e-05, 2.0944000000001906e-05, 2.0556000000004904e-05, 2.041700000000174e-05, 2.0277999999998575e-05, 2.0833999999997355e-05, 2.0472000000000545e-05, 2.0457999999994037e-05, 2.0499999999999685e-05, 2.061100000000371e-05, 2.0472000000000545e-05, 2.0777999999999075e-05, 2.0986000000000615e-05, 2.08890000000031e-05, 2.0819999999997785e-05, 2.034700000000389e-05, 2.0792000000005584e-05, 2.047300000000002e-05, 2.1236000000000865e-05, 2.098700000000009e-05, 2.1194000000002156e-05, 2.069500000000113e-05, 2.03890000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.140" endtime="20201117 14:41:04.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.129" endtime="20201117 14:41:04.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.153" endtime="20201117 14:41:04.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.162" endtime="20201117 14:41:04.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.157" endtime="20201117 14:41:04.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.148" endtime="20201117 14:41:04.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.625" endtime="20201117 14:41:04.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.052" endtime="20201117 14:41:04.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.050" endtime="20201117 14:41:04.188"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.194" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.216" endtime="20201117 14:41:04.235"></status>
</kw>
<msg timestamp="20201117 14:41:04.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.212" endtime="20201117 14:41:04.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.238" endtime="20201117 14:41:04.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.245" endtime="20201117 14:41:04.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.205" endtime="20201117 14:41:04.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.199" endtime="20201117 14:41:04.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.268" endtime="20201117 14:41:04.595"></status>
</kw>
<msg timestamp="20201117 14:41:04.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047157403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.265" endtime="20201117 14:41:04.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047157403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.600" endtime="20201117 14:41:04.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.609" endtime="20201117 14:41:04.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.258" endtime="20201117 14:41:04.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.253" endtime="20201117 14:41:04.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.617" level="INFO">${RESULT} = [{'time': 0.047179167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1764000000000505e-05, 'source_diff': 2.1764000000000505e-05}, {'time': 0.047209181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.613" endtime="20201117 14:41:04.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.630" level="INFO">${ACCURACY} = {'source_diff': [2.1764000000000505e-05, 2.1570000000005474e-05, 2.2097999999998175e-05, 2.188899999999716e-05, 2.1778000000000075e-05, 2.159700000000514e-05, 2.17770000000006e-05, 2.12770000000001e-0...</msg>
<status status="PASS" starttime="20201117 14:41:04.618" endtime="20201117 14:41:04.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.636" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.635" endtime="20201117 14:41:04.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.638" level="INFO">VALUE: [2.1764000000000505e-05, 2.1570000000005474e-05, 2.2097999999998175e-05, 2.188899999999716e-05, 2.1778000000000075e-05, 2.159700000000514e-05, 2.17770000000006e-05, 2.12770000000001e-05, 2.1527999999999825e-05, 2.1916000000003766e-05, 2.131900000000575e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 2.2193999999996217e-05, 2.181899999999931e-05, 2.180499999999974e-05, 2.138899999999666e-05, 2.1986000000001615e-05, 2.1514000000000255e-05, 2.158299999999863e-05, 2.1708000000002226e-05, 2.222300000000177e-05, 2.1986000000001615e-05, 2.190299999999673e-05, 2.1736000000001365e-05, 2.1527999999999825e-05, 2.1569999999998535e-05, 2.191700000000324e-05, 2.162499999999734e-05, 2.136100000000446e-05, 2.1819999999998785e-05, 2.215300000000392e-05, 2.1680000000003086e-05, 2.1333999999997855e-05, 2.1416000000003266e-05, 2.152700000000035e-05, 2.202700000000085e-05, 2.20969999999987e-05, 2.202700000000085e-05, 2.126300000000053e-05, 2.1750000000000935e-05, 2.1736000000001365e-05, 2.15969999999982e-05, 2.1222000000001295e-05, 2.211099999999827e-05, 2.1986000000001615e-05, 2.13890000000036e-05, 2.136099999999752e-05, 2.213899999999741e-05, 2.1457999999995037e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.637" endtime="20201117 14:41:04.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.631" endtime="20201117 14:41:04.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.643" endtime="20201117 14:41:04.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.647" endtime="20201117 14:41:04.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.645" endtime="20201117 14:41:04.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.641" endtime="20201117 14:41:04.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.195" endtime="20201117 14:41:04.668"></status>
</kw>
<msg timestamp="20201117 14:41:04.668" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.678" endtime="20201117 14:41:04.695"></status>
</kw>
<msg timestamp="20201117 14:41:04.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.677" endtime="20201117 14:41:04.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.696" endtime="20201117 14:41:04.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.699" endtime="20201117 14:41:04.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.673" endtime="20201117 14:41:04.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.671" endtime="20201117 14:41:04.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.710" endtime="20201117 14:41:05.046"></status>
</kw>
<msg timestamp="20201117 14:41:05.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02441975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:04.709" endtime="20201117 14:41:05.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02441975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:05.056" endtime="20201117 14:41:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.075" endtime="20201117 14:41:05.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.706" endtime="20201117 14:41:05.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.703" endtime="20201117 14:41:05.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.094" level="INFO">${RESULT} = [{'time': 0.02441975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.02445075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:05.085" endtime="20201117 14:41:05.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.127" level="INFO">${ACCURACY} = {'source_diff': [2.161100000000124e-05, 2.1986000000001615e-05, 2.215299999999698e-05, 2.137500000000056e-05, 2.2055999999999465e-05, 2.2278000000000575e-05, 2.1901999999997257e-05, 2.1319999999998285...</msg>
<status status="PASS" starttime="20201117 14:41:05.096" endtime="20201117 14:41:05.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.138" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.136" endtime="20201117 14:41:05.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.144" level="INFO">VALUE: [2.161100000000124e-05, 2.1986000000001615e-05, 2.215299999999698e-05, 2.137500000000056e-05, 2.2055999999999465e-05, 2.2278000000000575e-05, 2.1901999999997257e-05, 2.1319999999998285e-05, 2.1750000000000935e-05, 2.1528000000003295e-05, 2.1500000000000685e-05, 2.219499999999916e-05, 2.133300000000185e-05, 2.159700000000167e-05, 2.1347999999997425e-05, 2.194499999999891e-05, 2.1736000000001365e-05, 2.1512999999997312e-05, 2.156899999999906e-05, 2.165299999999995e-05, 2.152700000000035e-05, 2.131899999999881e-05, 2.212500000000131e-05, 2.133299999999838e-05, 2.188900000000063e-05, 2.181899999999931e-05, 2.20969999999987e-05, 2.1750000000000935e-05, 2.1306000000002184e-05, 2.1514000000000255e-05, 2.1957999999999006e-05, 2.134699999999795e-05, 2.161100000000124e-05, 2.194499999999891e-05, 2.212500000000131e-05, 2.138900000000013e-05, 2.1612000000000714e-05, 2.1471999999998076e-05, 2.1527999999999825e-05, 2.193099999999934e-05, 2.1348000000000894e-05, 2.211099999999827e-05, 2.1750000000000935e-05, 2.222300000000177e-05, 2.223699999999787e-05, 2.1916000000000296e-05, 2.181899999999931e-05, 2.134699999999795e-05, 2.163900000000038e-05, 2.133299999999838e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.141" endtime="20201117 14:41:05.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.129" endtime="20201117 14:41:05.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.154" endtime="20201117 14:41:05.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.162" endtime="20201117 14:41:05.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.158" endtime="20201117 14:41:05.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.149" endtime="20201117 14:41:05.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.669" endtime="20201117 14:41:05.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.191" endtime="20201117 14:41:05.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.189" endtime="20201117 14:41:05.189"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.194" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.216" endtime="20201117 14:41:05.235"></status>
</kw>
<msg timestamp="20201117 14:41:05.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.213" endtime="20201117 14:41:05.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.239" endtime="20201117 14:41:05.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.245" endtime="20201117 14:41:05.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.205" endtime="20201117 14:41:05.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.199" endtime="20201117 14:41:05.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.269" endtime="20201117 14:41:05.610"></status>
</kw>
<msg timestamp="20201117 14:41:05.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047131542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.266" endtime="20201117 14:41:05.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047131542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.619" endtime="20201117 14:41:05.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.638" endtime="20201117 14:41:05.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.258" endtime="20201117 14:41:05.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.253" endtime="20201117 14:41:05.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.658" level="INFO">${RESULT} = [{'time': 0.047154375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.047188417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:05.649" endtime="20201117 14:41:05.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.689" level="INFO">${ACCURACY} = {'source_diff': [2.283299999999988e-05, 2.2306000000006654e-05, 2.2999999999995246e-05, 2.3028000000001325e-05, 2.236099999999852e-05, 2.316699999999755e-05, 2.313899999999841e-05, 2.236099999999852e-...</msg>
<status status="PASS" starttime="20201117 14:41:05.660" endtime="20201117 14:41:05.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.700" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.697" endtime="20201117 14:41:05.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.706" level="INFO">VALUE: [2.283299999999988e-05, 2.2306000000006654e-05, 2.2999999999995246e-05, 2.3028000000001325e-05, 2.236099999999852e-05, 2.316699999999755e-05, 2.313899999999841e-05, 2.236099999999852e-05, 2.2319999999999285e-05, 2.32090000000032e-05, 2.2861999999998495e-05, 2.230500000000024e-05, 2.258299999999963e-05, 2.293099999999687e-05, 2.2583999999999105e-05, 2.308300000000013e-05, 2.233299999999938e-05, 2.2986000000002615e-05, 2.261099999999877e-05, 2.238899999999766e-05, 2.2722000000002796e-05, 2.308300000000013e-05, 2.2319999999999285e-05, 2.2763999999994566e-05, 2.315299999999798e-05, 2.2513999999994316e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.265299999999748e-05, 2.2542000000000395e-05, 2.241700000000374e-05, 2.3000000000002185e-05, 2.2334000000005794e-05, 2.247300000000202e-05, 2.233299999999938e-05, 2.236099999999852e-05, 2.316700000000449e-05, 2.3070000000000035e-05, 2.295899999999601e-05, 2.2555999999999965e-05, 2.3027999999994386e-05, 2.262500000000528e-05, 2.2943999999996967e-05, 2.3083999999999605e-05, 2.263899999999791e-05, 2.2679999999997147e-05, 2.3000000000002185e-05, 2.2986000000002615e-05, 2.283299999999988e-05, 2.3068999999993622e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.702" endtime="20201117 14:41:05.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.690" endtime="20201117 14:41:05.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.715" endtime="20201117 14:41:05.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.724" endtime="20201117 14:41:05.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.719" endtime="20201117 14:41:05.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.710" endtime="20201117 14:41:05.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.195" endtime="20201117 14:41:05.749"></status>
</kw>
<msg timestamp="20201117 14:41:05.750" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.772" endtime="20201117 14:41:05.790"></status>
</kw>
<msg timestamp="20201117 14:41:05.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.768" endtime="20201117 14:41:05.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.794" endtime="20201117 14:41:05.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.800" endtime="20201117 14:41:05.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.761" endtime="20201117 14:41:05.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.755" endtime="20201117 14:41:05.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.824" endtime="20201117 14:41:06.164"></status>
</kw>
<msg timestamp="20201117 14:41:06.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041673389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.821" endtime="20201117 14:41:06.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041673389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.174" endtime="20201117 14:41:06.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.193" endtime="20201117 14:41:06.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.813" endtime="20201117 14:41:06.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.808" endtime="20201117 14:41:06.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.212" level="INFO">${RESULT} = [{'time': 0.041673389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.041705375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:06.203" endtime="20201117 14:41:06.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.243" level="INFO">${ACCURACY} = {'source_diff': [2.30969999999997e-05, 2.236100000000546e-05, 2.2957999999996537e-05, 2.2736000000002365e-05, 2.288899999999816e-05, 2.2792000000000645e-05, 2.3014000000001755e-05, 2.3292000000001145e...</msg>
<status status="PASS" starttime="20201117 14:41:06.214" endtime="20201117 14:41:06.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.255" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.253" endtime="20201117 14:41:06.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.261" level="INFO">VALUE: [2.30969999999997e-05, 2.236100000000546e-05, 2.2957999999996537e-05, 2.2736000000002365e-05, 2.288899999999816e-05, 2.2792000000000645e-05, 2.3014000000001755e-05, 2.3292000000001145e-05, 2.2736000000002365e-05, 2.230500000000024e-05, 2.2569999999999535e-05, 2.262499999999834e-05, 2.316700000000449e-05, 2.243100000000331e-05, 2.291700000000424e-05, 2.2680000000004086e-05, 2.291700000000424e-05, 2.2916000000004766e-05, 2.2944000000003906e-05, 2.2930000000004336e-05, 2.230500000000024e-05, 2.2915999999997827e-05, 2.3236000000002865e-05, 2.2985999999995677e-05, 2.269500000000313e-05, 2.254100000000092e-05, 2.2486000000002115e-05, 2.312499999999884e-05, 2.231900000000675e-05, 2.30969999999997e-05, 2.2444000000003406e-05, 2.2597999999998675e-05, 2.2555999999999965e-05, 2.234699999999895e-05, 2.243100000000331e-05, 2.3070000000000035e-05, 2.236099999999852e-05, 2.2778000000001075e-05, 2.294499999999644e-05, 2.2569999999999535e-05, 2.3014000000001755e-05, 2.316699999999755e-05, 2.308300000000013e-05, 2.2542000000000395e-05, 2.318099999999712e-05, 2.2792000000000645e-05, 2.2861999999998495e-05, 2.3207999999996787e-05, 2.3097999999999175e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.257" endtime="20201117 14:41:06.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.246" endtime="20201117 14:41:06.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.270" endtime="20201117 14:41:06.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.278" endtime="20201117 14:41:06.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.274" endtime="20201117 14:41:06.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.265" endtime="20201117 14:41:06.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.751" endtime="20201117 14:41:06.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.191" endtime="20201117 14:41:06.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.190" endtime="20201117 14:41:06.305"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.310" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.332" endtime="20201117 14:41:06.351"></status>
</kw>
<msg timestamp="20201117 14:41:06.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.329" endtime="20201117 14:41:06.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.354" endtime="20201117 14:41:06.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.361" endtime="20201117 14:41:06.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.321" endtime="20201117 14:41:06.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.316" endtime="20201117 14:41:06.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.384" endtime="20201117 14:41:06.727"></status>
</kw>
<msg timestamp="20201117 14:41:06.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047205944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047229722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.381" endtime="20201117 14:41:06.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047205944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047229722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.737" endtime="20201117 14:41:06.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.756" endtime="20201117 14:41:06.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.374" endtime="20201117 14:41:06.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.369" endtime="20201117 14:41:06.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.774" level="INFO">${RESULT} = [{'time': 0.047229722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3778000000002075e-05, 'source_diff': 2.3778000000002075e-05}, {'time': 0.04726575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:41:06.765" endtime="20201117 14:41:06.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.805" level="INFO">${ACCURACY} = {'source_diff': [2.3778000000002075e-05, 2.3472000000003546e-05, 2.412499999999984e-05, 2.3764000000002505e-05, 2.416700000000549e-05, 2.384700000000045e-05, 2.419500000000463e-05, 2.3264000000002005e...</msg>
<status status="PASS" starttime="20201117 14:41:06.776" endtime="20201117 14:41:06.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.817" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.814" endtime="20201117 14:41:06.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.822" level="INFO">VALUE: [2.3778000000002075e-05, 2.3472000000003546e-05, 2.412499999999984e-05, 2.3764000000002505e-05, 2.416700000000549e-05, 2.384700000000045e-05, 2.419500000000463e-05, 2.3264000000002005e-05, 2.387499999999959e-05, 2.338899999999866e-05, 2.3500000000002685e-05, 2.4235999999996927e-05, 2.3499999999995747e-05, 2.3514000000002255e-05, 2.3597999999999675e-05, 2.394499999999744e-05, 2.3777999999995136e-05, 2.3929999999998397e-05, 2.405500000000199e-05, 2.3528000000001825e-05, 2.3570000000000535e-05, 2.333300000000038e-05, 2.4137999999999937e-05, 2.3457999999997037e-05, 2.3276999999995163e-05, 2.4165999999999077e-05, 2.379100000000217e-05, 2.4222000000004296e-05, 2.4207999999997787e-05, 2.404100000000242e-05, 2.3542000000001395e-05, 2.3471999999996607e-05, 2.413899999999941e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.3500000000002685e-05, 2.3707999999997287e-05, 2.337499999999909e-05, 2.3486000000003115e-05, 2.390299999999873e-05, 2.411100000000027e-05, 2.3736000000003366e-05, 2.411100000000027e-05, 2.338899999999866e-05, 2.413899999999941e-05, 2.3597999999999675e-05, 2.337499999999909e-05, 2.37090000000037e-05, 2.3749999999995997e-05, 2.4040999999995483e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.819" endtime="20201117 14:41:06.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.807" endtime="20201117 14:41:06.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.831" endtime="20201117 14:41:06.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.839" endtime="20201117 14:41:06.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.835" endtime="20201117 14:41:06.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.826" endtime="20201117 14:41:06.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.312" endtime="20201117 14:41:06.865"></status>
</kw>
<msg timestamp="20201117 14:41:06.865" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.887" endtime="20201117 14:41:06.906"></status>
</kw>
<msg timestamp="20201117 14:41:06.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.884" endtime="20201117 14:41:06.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.909" endtime="20201117 14:41:06.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.916" endtime="20201117 14:41:06.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.877" endtime="20201117 14:41:06.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.871" endtime="20201117 14:41:06.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.939" endtime="20201117 14:41:07.281"></status>
</kw>
<msg timestamp="20201117 14:41:07.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041163014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041186875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.936" endtime="20201117 14:41:07.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041163014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041186875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.291" endtime="20201117 14:41:07.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.311" endtime="20201117 14:41:07.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.929" endtime="20201117 14:41:07.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.924" endtime="20201117 14:41:07.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.330" level="INFO">${RESULT} = [{'time': 0.041186875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.386100000000002e-05, 'source_diff': 2.386100000000002e-05}, {'time': 0.041227889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:07.321" endtime="20201117 14:41:07.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.364" level="INFO">${ACCURACY} = {'source_diff': [2.386100000000002e-05, 2.3471999999996607e-05, 2.4320000000001285e-05, 2.361099999999977e-05, 2.3528000000001825e-05, 2.412499999999984e-05, 2.3570000000000535e-05, 2.412499999999984e...</msg>
<status status="PASS" starttime="20201117 14:41:07.332" endtime="20201117 14:41:07.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.375" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.373" endtime="20201117 14:41:07.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.380" level="INFO">VALUE: [2.386100000000002e-05, 2.3471999999996607e-05, 2.4320000000001285e-05, 2.361099999999977e-05, 2.3528000000001825e-05, 2.412499999999984e-05, 2.3570000000000535e-05, 2.412499999999984e-05, 2.3750000000002935e-05, 2.3347999999999425e-05, 2.3514000000002255e-05, 2.341700000000474e-05, 2.384700000000045e-05, 2.4235999999996927e-05, 2.3750000000002935e-05, 2.3347999999999425e-05, 2.3957999999997537e-05, 2.3361999999998995e-05, 2.3861999999999495e-05, 2.37770000000026e-05, 2.3763999999995566e-05, 2.3401999999998757e-05, 2.3486000000003115e-05, 2.383300000000088e-05, 2.3514000000002255e-05, 2.3500000000002685e-05, 2.39169999999983e-05, 2.334699999999995e-05, 2.383300000000088e-05, 2.415299999999898e-05, 2.405500000000199e-05, 2.3985999999996677e-05, 2.390299999999873e-05, 2.363899999999891e-05, 2.3820000000000785e-05, 2.3306000000000715e-05, 2.4042000000001895e-05, 2.3540999999994983e-05, 2.4222000000004296e-05, 2.394500000000438e-05, 2.336099999999952e-05, 2.369499999999719e-05, 2.386100000000002e-05, 2.405500000000199e-05, 2.3805999999994276e-05, 2.3500000000002685e-05, 2.420899999999726e-05, 2.330500000000124e-05, 2.337499999999909e-05, 2.3999999999996247e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.377" endtime="20201117 14:41:07.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.366" endtime="20201117 14:41:07.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.389" endtime="20201117 14:41:07.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.397" endtime="20201117 14:41:07.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.393" endtime="20201117 14:41:07.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.385" endtime="20201117 14:41:07.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.867" endtime="20201117 14:41:07.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.307" endtime="20201117 14:41:07.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.306" endtime="20201117 14:41:07.424"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.429" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.451" endtime="20201117 14:41:07.470"></status>
</kw>
<msg timestamp="20201117 14:41:07.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.448" endtime="20201117 14:41:07.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.474" endtime="20201117 14:41:07.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.480" endtime="20201117 14:41:07.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.440" endtime="20201117 14:41:07.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.435" endtime="20201117 14:41:07.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.504" endtime="20201117 14:41:07.844"></status>
</kw>
<msg timestamp="20201117 14:41:07.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046988542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047013278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.501" endtime="20201117 14:41:07.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046988542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047013278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.854" endtime="20201117 14:41:07.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.873" endtime="20201117 14:41:07.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.494" endtime="20201117 14:41:07.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.488" endtime="20201117 14:41:07.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.893" level="INFO">${RESULT} = [{'time': 0.047013278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4735999999997427e-05, 'source_diff': 2.4735999999997427e-05}, {'time': 0.047048306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:07.883" endtime="20201117 14:41:07.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.924" level="INFO">${ACCURACY} = {'source_diff': [2.4735999999997427e-05, 2.493099999999887e-05, 2.4638000000000437e-05, 2.511100000000127e-05, 2.4763999999996567e-05, 2.4554999999995553e-05, 2.455500000000249e-05, 2.4806000000002215...</msg>
<status status="PASS" starttime="20201117 14:41:07.895" endtime="20201117 14:41:07.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.935" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.933" endtime="20201117 14:41:07.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.940" level="INFO">VALUE: [2.4735999999997427e-05, 2.493099999999887e-05, 2.4638000000000437e-05, 2.511100000000127e-05, 2.4763999999996567e-05, 2.4554999999995553e-05, 2.455500000000249e-05, 2.4806000000002215e-05, 2.4915999999999827e-05, 2.4346999999994012e-05, 2.4902000000000257e-05, 2.4652000000000007e-05, 2.4499999999996747e-05, 2.505500000000299e-05, 2.436100000000052e-05, 2.443100000000531e-05, 2.429100000000267e-05, 2.4722000000004796e-05, 2.4429999999998897e-05, 2.483300000000188e-05, 2.5056000000002465e-05, 2.4570000000001535e-05, 2.493099999999887e-05, 2.443099999999837e-05, 2.4708000000005226e-05, 2.488900000000016e-05, 2.516699999999955e-05, 2.5318999999995873e-05, 2.4320000000001285e-05, 2.4306000000001715e-05, 2.4999999999997247e-05, 2.4443999999998467e-05, 2.4306000000001715e-05, 2.5040999999996483e-05, 2.5179999999999647e-05, 2.4750000000003936e-05, 2.4777999999996136e-05, 2.481900000000231e-05, 2.5207999999998787e-05, 2.4860999999994082e-05, 2.452700000000335e-05, 2.490299999999973e-05, 2.4526999999996413e-05, 2.463899999999991e-05, 2.4778000000003075e-05, 2.465299999999948e-05, 2.4542000000002395e-05, 2.443099999999837e-05, 2.4874999999993652e-05, 2.4679999999999147e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.937" endtime="20201117 14:41:07.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.926" endtime="20201117 14:41:07.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.949" endtime="20201117 14:41:07.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.958" endtime="20201117 14:41:07.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.953" endtime="20201117 14:41:07.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.945" endtime="20201117 14:41:07.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.431" endtime="20201117 14:41:07.980"></status>
</kw>
<msg timestamp="20201117 14:41:07.980" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.991" endtime="20201117 14:41:08.007"></status>
</kw>
<msg timestamp="20201117 14:41:08.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.989" endtime="20201117 14:41:08.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.008" endtime="20201117 14:41:08.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.017" endtime="20201117 14:41:08.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.986" endtime="20201117 14:41:08.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.983" endtime="20201117 14:41:08.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.029" endtime="20201117 14:41:08.356"></status>
</kw>
<msg timestamp="20201117 14:41:08.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:08.027" endtime="20201117 14:41:08.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:08.366" endtime="20201117 14:41:08.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.386" endtime="20201117 14:41:08.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.024" endtime="20201117 14:41:08.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.022" endtime="20201117 14:41:08.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.407" level="INFO">${RESULT} = [{'time': 0.0247815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5222000000001826e-05, 'source_diff': 2.5222000000001826e-05}, {'time': 0.024814514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.397" endtime="20201117 14:41:08.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.439" level="INFO">${ACCURACY} = {'source_diff': [2.5222000000001826e-05, 2.4832999999998412e-05, 2.481900000000231e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.4777999999999606e-05, 2.49169999999993e-05, 2.444500000000141e-...</msg>
<status status="PASS" starttime="20201117 14:41:08.409" endtime="20201117 14:41:08.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.451" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.448" endtime="20201117 14:41:08.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.456" level="INFO">VALUE: [2.5222000000001826e-05, 2.4832999999998412e-05, 2.481900000000231e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.4777999999999606e-05, 2.49169999999993e-05, 2.444500000000141e-05, 2.486100000000102e-05, 2.4707999999998287e-05, 2.494499999999844e-05, 2.5069999999998566e-05, 2.4569999999998066e-05, 2.463899999999991e-05, 2.437500000000009e-05, 2.4666000000003047e-05, 2.490299999999973e-05, 2.494500000000191e-05, 2.4777999999999606e-05, 2.5027999999999856e-05, 2.5040999999999952e-05, 2.5000000000000716e-05, 2.4290999999999202e-05, 2.437500000000009e-05, 2.488900000000016e-05, 2.4249999999999966e-05, 2.4263999999999536e-05, 2.4596999999997732e-05, 2.5082999999998662e-05, 2.484700000000145e-05, 2.4721999999997857e-05, 2.490299999999973e-05, 2.462500000000034e-05, 2.515299999999998e-05, 2.466699999999905e-05, 2.516699999999955e-05, 2.4458000000001506e-05, 2.490299999999973e-05, 2.4597999999997205e-05, 2.511100000000127e-05, 2.445900000000098e-05, 2.515299999999998e-05, 2.49169999999993e-05, 2.4443999999998467e-05, 2.5222000000001826e-05, 2.5083999999998136e-05, 2.468100000000209e-05, 2.47230000000008e-05, 2.5236000000001396e-05, 2.4833999999997886e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.453" endtime="20201117 14:41:08.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.441" endtime="20201117 14:41:08.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.466" endtime="20201117 14:41:08.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.475" endtime="20201117 14:41:08.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.470" endtime="20201117 14:41:08.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.461" endtime="20201117 14:41:08.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.981" endtime="20201117 14:41:08.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.427" endtime="20201117 14:41:08.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.425" endtime="20201117 14:41:08.502"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.508" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.532" endtime="20201117 14:41:08.551"></status>
</kw>
<msg timestamp="20201117 14:41:08.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.528" endtime="20201117 14:41:08.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.555" endtime="20201117 14:41:08.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.561" endtime="20201117 14:41:08.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.520" endtime="20201117 14:41:08.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.514" endtime="20201117 14:41:08.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.586" endtime="20201117 14:41:08.958"></status>
</kw>
<msg timestamp="20201117 14:41:08.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050283333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050308764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.583" endtime="20201117 14:41:08.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050283333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050308764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.968" endtime="20201117 14:41:08.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.988" endtime="20201117 14:41:08.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.575" endtime="20201117 14:41:08.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.570" endtime="20201117 14:41:08.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.007" level="INFO">${RESULT} = [{'time': 0.050308764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.543099999999937e-05, 'source_diff': 2.543099999999937e-05}, {'time': 0.050352778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.997" endtime="20201117 14:41:09.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.039" level="INFO">${ACCURACY} = {'source_diff': [2.543099999999937e-05, 2.6249999999998497e-05, 2.587500000000159e-05, 2.6070000000003035e-05, 2.6054999999997053e-05, 2.5292000000003145e-05, 2.5416000000000327e-05, 2.541600000000032...</msg>
<status status="PASS" starttime="20201117 14:41:09.009" endtime="20201117 14:41:09.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.051" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.049" endtime="20201117 14:41:09.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.057" level="INFO">VALUE: [2.543099999999937e-05, 2.6249999999998497e-05, 2.587500000000159e-05, 2.6070000000003035e-05, 2.6054999999997053e-05, 2.5292000000003145e-05, 2.5416000000000327e-05, 2.5416000000000327e-05, 2.5305999999995776e-05, 2.598699999999815e-05, 2.537500000000109e-05, 2.6124999999994902e-05, 2.6012999999998343e-05, 2.581900000000331e-05, 2.562500000000134e-05, 2.5693999999999717e-05, 2.6179999999993708e-05, 2.5499999999997747e-05, 2.606900000000356e-05, 2.5805999999996276e-05, 2.5790999999997233e-05, 2.5846999999995512e-05, 2.547299999999808e-05, 2.590300000000073e-05, 2.60970000000027e-05, 2.5735999999998427e-05, 2.5971999999999107e-05, 2.6235999999998927e-05, 2.5528000000003825e-05, 2.594499999999944e-05, 2.60970000000027e-05, 2.5305999999995776e-05, 2.5902999999993792e-05, 2.5598000000001675e-05, 2.570899999999876e-05, 2.536100000000152e-05, 2.5971999999999107e-05, 2.5290999999996733e-05, 2.6026999999997913e-05, 2.6028000000004325e-05, 2.6180000000000647e-05, 2.5791000000004172e-05, 2.561100000000177e-05, 2.581900000000331e-05, 2.5416000000000327e-05, 2.586100000000202e-05, 2.5763999999997567e-05, 2.565300000000048e-05, 2.616700000000055e-05, 2.6221999999999357e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.054" endtime="20201117 14:41:09.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.042" endtime="20201117 14:41:09.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.066" endtime="20201117 14:41:09.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.075" endtime="20201117 14:41:09.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.071" endtime="20201117 14:41:09.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.062" endtime="20201117 14:41:09.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.509" endtime="20201117 14:41:09.102"></status>
</kw>
<msg timestamp="20201117 14:41:09.103" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.126" endtime="20201117 14:41:09.145"></status>
</kw>
<msg timestamp="20201117 14:41:09.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.122" endtime="20201117 14:41:09.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.149" endtime="20201117 14:41:09.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.156" endtime="20201117 14:41:09.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.115" endtime="20201117 14:41:09.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.109" endtime="20201117 14:41:09.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.182" endtime="20201117 14:41:09.544"></status>
</kw>
<msg timestamp="20201117 14:41:09.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044101792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044127389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.179" endtime="20201117 14:41:09.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044101792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044127389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.554" endtime="20201117 14:41:09.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.574" endtime="20201117 14:41:09.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.171" endtime="20201117 14:41:09.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.165" endtime="20201117 14:41:09.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.594" level="INFO">${RESULT} = [{'time': 0.044127389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55970000000022e-05, 'source_diff': 2.55970000000022e-05}, {'time': 0.044166403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:09.585" endtime="20201117 14:41:09.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.629" level="INFO">${ACCURACY} = {'source_diff': [2.55970000000022e-05, 2.561100000000177e-05, 2.587500000000159e-05, 2.5791999999996706e-05, 2.562500000000134e-05, 2.595899999999901e-05, 2.612500000000184e-05, 2.593099999999987e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:09.597" endtime="20201117 14:41:09.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.641" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.639" endtime="20201117 14:41:09.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.647" level="INFO">VALUE: [2.55970000000022e-05, 2.561100000000177e-05, 2.587500000000159e-05, 2.5791999999996706e-05, 2.562500000000134e-05, 2.595899999999901e-05, 2.612500000000184e-05, 2.593099999999987e-05, 2.616700000000055e-05, 2.5624999999994402e-05, 2.588900000000116e-05, 2.6098000000002175e-05, 2.595899999999901e-05, 2.611100000000227e-05, 2.5776999999997663e-05, 2.5429999999999897e-05, 2.540300000000023e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5749999999997997e-05, 2.5666000000000577e-05, 2.5443999999999467e-05, 2.5513999999997317e-05, 2.6040999999997483e-05, 2.5749999999997997e-05, 2.55970000000022e-05, 2.5346999999995012e-05, 2.616700000000055e-05, 2.5999999999998247e-05, 2.5957999999999537e-05, 2.620899999999926e-05, 2.59170000000003e-05, 2.5528000000003825e-05, 2.622299999999883e-05, 2.5527999999996887e-05, 2.569499999999919e-05, 2.5971999999999107e-05, 2.6235999999998927e-05, 2.540300000000023e-05, 2.5388000000001187e-05, 2.5860999999995082e-05, 2.5513999999997317e-05, 2.5334000000001855e-05, 2.6000000000005186e-05, 2.5500000000004686e-05, 2.5598000000001675e-05, 2.5360999999994582e-05, 2.537500000000109e-05, 2.534700000000195e-05, 2.6207999999999787e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.644" endtime="20201117 14:41:09.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.632" endtime="20201117 14:41:09.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.657" endtime="20201117 14:41:09.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.666" endtime="20201117 14:41:09.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.661" endtime="20201117 14:41:09.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.652" endtime="20201117 14:41:09.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.104" endtime="20201117 14:41:09.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.505" endtime="20201117 14:41:09.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.503" endtime="20201117 14:41:09.693"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.699" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.722" endtime="20201117 14:41:09.742"></status>
</kw>
<msg timestamp="20201117 14:41:09.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.718" endtime="20201117 14:41:09.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.746" endtime="20201117 14:41:09.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.752" endtime="20201117 14:41:09.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.710" endtime="20201117 14:41:09.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.704" endtime="20201117 14:41:09.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.777" endtime="20201117 14:41:10.146"></status>
</kw>
<msg timestamp="20201117 14:41:10.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049560139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.774" endtime="20201117 14:41:10.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049560139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.156" endtime="20201117 14:41:10.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.176" endtime="20201117 14:41:10.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.766" endtime="20201117 14:41:10.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.761" endtime="20201117 14:41:10.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.198" level="INFO">${RESULT} = [{'time': 0.049560139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.715300000000198e-05, 'source_diff': 2.715300000000198e-05}, {'time': 0.049597167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:10.188" endtime="20201117 14:41:10.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.231" level="INFO">${ACCURACY} = {'source_diff': [2.715300000000198e-05, 2.6888999999995222e-05, 2.6541999999997457e-05, 2.6778000000005076e-05, 2.711100000000327e-05, 2.661100000000277e-05, 2.665300000000148e-05, 2.6762999999999093e...</msg>
<status status="PASS" starttime="20201117 14:41:10.200" endtime="20201117 14:41:10.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.243" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.240" endtime="20201117 14:41:10.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.249" level="INFO">VALUE: [2.715300000000198e-05, 2.6888999999995222e-05, 2.6541999999997457e-05, 2.6778000000005076e-05, 2.711100000000327e-05, 2.661100000000277e-05, 2.665300000000148e-05, 2.6762999999999093e-05, 2.634700000000295e-05, 2.6749999999998997e-05, 2.6778000000005076e-05, 2.6818999999997373e-05, 2.7208000000000787e-05, 2.6860999999996082e-05, 2.6958000000000537e-05, 2.6568999999997123e-05, 2.6776999999998663e-05, 2.6930000000001397e-05, 2.6485999999999177e-05, 2.6777999999998137e-05, 2.6999999999999247e-05, 2.681900000000431e-05, 2.7013999999998817e-05, 2.661100000000277e-05, 2.6568999999997123e-05, 2.6610999999995832e-05, 2.712500000000284e-05, 2.6499999999998747e-05, 2.6306000000003715e-05, 2.716700000000155e-05, 2.6874999999995652e-05, 2.7070000000004035e-05, 2.644499999999994e-05, 2.672299999999933e-05, 2.6306000000003715e-05, 2.719500000000069e-05, 2.6764000000005506e-05, 2.6735999999999427e-05, 2.698699999999915e-05, 2.6416000000001327e-05, 2.6304999999997303e-05, 2.7040999999998483e-05, 2.6554999999997553e-05, 2.6304999999997303e-05, 2.686100000000302e-05, 2.6777999999998137e-05, 2.686100000000302e-05, 2.7013999999998817e-05, 2.688900000000216e-05, 2.694500000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.245" endtime="20201117 14:41:10.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.233" endtime="20201117 14:41:10.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.259" endtime="20201117 14:41:10.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.268" endtime="20201117 14:41:10.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.263" endtime="20201117 14:41:10.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.254" endtime="20201117 14:41:10.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.700" endtime="20201117 14:41:10.295"></status>
</kw>
<msg timestamp="20201117 14:41:10.295" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.320" endtime="20201117 14:41:10.340"></status>
</kw>
<msg timestamp="20201117 14:41:10.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.316" endtime="20201117 14:41:10.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.343" endtime="20201117 14:41:10.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.350" endtime="20201117 14:41:10.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.308" endtime="20201117 14:41:10.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.301" endtime="20201117 14:41:10.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.377" endtime="20201117 14:41:10.739"></status>
</kw>
<msg timestamp="20201117 14:41:10.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045661194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.373" endtime="20201117 14:41:10.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045661194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.749" endtime="20201117 14:41:10.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.769" endtime="20201117 14:41:10.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.365" endtime="20201117 14:41:10.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.360" endtime="20201117 14:41:10.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.790" level="INFO">${RESULT} = [{'time': 0.045661194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.658300000000363e-05, 'source_diff': 2.658300000000363e-05}, {'time': 0.045701181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:10.780" endtime="20201117 14:41:10.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.822" level="INFO">${ACCURACY} = {'source_diff': [2.658300000000363e-05, 2.672299999999933e-05, 2.687500000000259e-05, 2.6818999999997373e-05, 2.7069999999997096e-05, 2.6763999999998567e-05, 2.6721999999999857e-05, 2.7222000000000357...</msg>
<status status="PASS" starttime="20201117 14:41:10.792" endtime="20201117 14:41:10.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.834" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.831" endtime="20201117 14:41:10.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.839" level="INFO">VALUE: [2.658300000000363e-05, 2.672299999999933e-05, 2.687500000000259e-05, 2.6818999999997373e-05, 2.7069999999997096e-05, 2.6763999999998567e-05, 2.6721999999999857e-05, 2.7222000000000357e-05, 2.7112000000002745e-05, 2.6902000000002257e-05, 2.7068999999997623e-05, 2.7026999999998913e-05, 2.7180000000001647e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.6318999999996873e-05, 2.6790999999998233e-05, 2.688900000000216e-05, 2.64170000000008e-05, 2.7249999999999497e-05, 2.7264000000006006e-05, 2.64170000000008e-05, 2.670899999999976e-05, 2.6610999999995832e-05, 2.6291999999997206e-05, 2.6985999999999677e-05, 2.6319999999996346e-05, 2.6334000000002855e-05, 2.6833999999996416e-05, 2.6540999999997983e-05, 2.713900000000241e-05, 2.720900000000026e-05, 2.6610999999995832e-05, 2.7042000000004895e-05, 2.663900000000191e-05, 2.7180000000001647e-05, 2.7000000000006186e-05, 2.7096999999996763e-05, 2.6526999999998413e-05, 2.6458000000000037e-05, 2.6499999999998747e-05, 2.6666000000001577e-05, 2.6985999999999677e-05, 2.6930000000001397e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.6277999999997637e-05, 2.6735999999999427e-05, 2.6513999999998317e-05, 2.688900000000216e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.836" endtime="20201117 14:41:10.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.824" endtime="20201117 14:41:10.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.850" endtime="20201117 14:41:10.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.858" endtime="20201117 14:41:10.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.854" endtime="20201117 14:41:10.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.845" endtime="20201117 14:41:10.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.297" endtime="20201117 14:41:10.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.696" endtime="20201117 14:41:10.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.694" endtime="20201117 14:41:10.886"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.891" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.914" endtime="20201117 14:41:10.934"></status>
</kw>
<msg timestamp="20201117 14:41:10.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.911" endtime="20201117 14:41:10.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.938" endtime="20201117 14:41:10.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.944" endtime="20201117 14:41:10.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.903" endtime="20201117 14:41:10.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.897" endtime="20201117 14:41:10.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.969" endtime="20201117 14:41:11.332"></status>
</kw>
<msg timestamp="20201117 14:41:11.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049355167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049383208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.966" endtime="20201117 14:41:11.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049355167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049383208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.342" endtime="20201117 14:41:11.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.362" endtime="20201117 14:41:11.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.958" endtime="20201117 14:41:11.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.953" endtime="20201117 14:41:11.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.381" level="INFO">${RESULT} = [{'time': 0.049383208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8040999999999483e-05, 'source_diff': 2.8040999999999483e-05}, {'time': 0.049425194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.371" endtime="20201117 14:41:11.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.413" level="INFO">${ACCURACY} = {'source_diff': [2.8040999999999483e-05, 2.7972000000001107e-05, 2.788900000000316e-05, 2.813900000000341e-05, 2.7500000000006686e-05, 2.7958000000001537e-05, 2.793100000000187e-05, 2.7944000000001967...</msg>
<status status="PASS" starttime="20201117 14:41:11.383" endtime="20201117 14:41:11.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.422" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.420" endtime="20201117 14:41:11.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.425" level="INFO">VALUE: [2.8040999999999483e-05, 2.7972000000001107e-05, 2.788900000000316e-05, 2.813900000000341e-05, 2.7500000000006686e-05, 2.7958000000001537e-05, 2.793100000000187e-05, 2.7944000000001967e-05, 2.7305999999997776e-05, 2.758300000000463e-05, 2.7694000000001717e-05, 2.8055999999998527e-05, 2.7805999999998277e-05, 2.8055999999998527e-05, 2.8305999999998777e-05, 2.8069999999998096e-05, 2.788900000000316e-05, 2.7596999999997263e-05, 2.819500000000169e-05, 2.7334000000003855e-05, 2.8027999999999387e-05, 2.769500000000119e-05, 2.7652999999995542e-05, 2.763900000000291e-05, 2.8250000000000497e-05, 2.7597999999996736e-05, 2.7472000000000607e-05, 2.792999999999546e-05, 2.761100000000377e-05, 2.7763999999999567e-05, 2.7277000000006102e-05, 2.7986000000000677e-05, 2.8222000000001357e-05, 2.8040999999999483e-05, 2.734700000000395e-05, 2.738900000000266e-05, 2.7500000000006686e-05, 2.819500000000169e-05, 2.8027999999999387e-05, 2.7958000000001537e-05, 2.79170000000023e-05, 2.7486000000000177e-05, 2.769500000000119e-05, 2.7791999999998707e-05, 2.7333999999996916e-05, 2.797300000000058e-05, 2.8041999999998957e-05, 2.762500000000334e-05, 2.7348000000003425e-05, 2.769500000000119e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.423" endtime="20201117 14:41:11.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.415" endtime="20201117 14:41:11.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.429" endtime="20201117 14:41:11.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.433" endtime="20201117 14:41:11.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.431" endtime="20201117 14:41:11.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.427" endtime="20201117 14:41:11.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.893" endtime="20201117 14:41:11.455"></status>
</kw>
<msg timestamp="20201117 14:41:11.455" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.466" endtime="20201117 14:41:11.482"></status>
</kw>
<msg timestamp="20201117 14:41:11.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.464" endtime="20201117 14:41:11.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.483" endtime="20201117 14:41:11.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.486" endtime="20201117 14:41:11.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.460" endtime="20201117 14:41:11.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.457" endtime="20201117 14:41:11.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.498" endtime="20201117 14:41:11.852"></status>
</kw>
<msg timestamp="20201117 14:41:11.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024628792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024656528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.496" endtime="20201117 14:41:11.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024628792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024656528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.862" endtime="20201117 14:41:11.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.882" endtime="20201117 14:41:11.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.493" endtime="20201117 14:41:11.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.490" endtime="20201117 14:41:11.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.902" level="INFO">${RESULT} = [{'time': 0.024656528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7736000000000427e-05, 'source_diff': 2.7736000000000427e-05}, {'time': 0.024699556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.892" endtime="20201117 14:41:11.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.937" level="INFO">${ACCURACY} = {'source_diff': [2.7736000000000427e-05, 2.7347999999999956e-05, 2.740299999999876e-05, 2.7929999999998928e-05, 2.7806000000001746e-05, 2.7499999999999747e-05, 2.8138999999999942e-05, 2.79309999999984...</msg>
<status status="PASS" starttime="20201117 14:41:11.904" endtime="20201117 14:41:11.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.950" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.947" endtime="20201117 14:41:11.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.956" level="INFO">VALUE: [2.7736000000000427e-05, 2.7347999999999956e-05, 2.740299999999876e-05, 2.7929999999998928e-05, 2.7806000000001746e-05, 2.7499999999999747e-05, 2.8138999999999942e-05, 2.79309999999984e-05, 2.794499999999797e-05, 2.7472000000000607e-05, 2.7486000000000177e-05, 2.7736000000000427e-05, 2.8040999999999483e-05, 2.7513999999999317e-05, 2.7833000000001412e-05, 2.8027999999999387e-05, 2.7777999999999137e-05, 2.7957999999998068e-05, 2.7708000000001287e-05, 2.737500000000309e-05, 2.7958000000001537e-05, 2.7569000000001592e-05, 2.7707999999997818e-05, 2.8125000000000372e-05, 2.816699999999908e-05, 2.7374999999999622e-05, 2.7805999999998277e-05, 2.7708000000001287e-05, 2.8138999999999942e-05, 2.7486000000000177e-05, 2.7568999999998123e-05, 2.747300000000008e-05, 2.7555000000002022e-05, 2.7556000000001496e-05, 2.7862000000000026e-05, 2.7554999999998553e-05, 2.7611999999999776e-05, 2.8000000000000247e-05, 2.7971999999997638e-05, 2.7818999999998373e-05, 2.7722000000000857e-05, 2.8138999999999942e-05, 2.7736000000000427e-05, 2.8193999999998748e-05, 2.79309999999984e-05, 2.7306000000001246e-05, 2.7958000000001537e-05, 2.7374999999999622e-05, 2.7763999999999567e-05, 2.79309999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.952" endtime="20201117 14:41:11.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.940" endtime="20201117 14:41:11.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.965" endtime="20201117 14:41:11.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.974" endtime="20201117 14:41:11.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.969" endtime="20201117 14:41:11.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.960" endtime="20201117 14:41:12.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.456" endtime="20201117 14:41:12.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.888" endtime="20201117 14:41:12.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.886" endtime="20201117 14:41:12.001"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.007" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.030" endtime="20201117 14:41:12.050"></status>
</kw>
<msg timestamp="20201117 14:41:12.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.027" endtime="20201117 14:41:12.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.054" endtime="20201117 14:41:12.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.060" endtime="20201117 14:41:12.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.019" endtime="20201117 14:41:12.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.013" endtime="20201117 14:41:12.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.085" endtime="20201117 14:41:12.447"></status>
</kw>
<msg timestamp="20201117 14:41:12.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049858611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049887597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.082" endtime="20201117 14:41:12.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049858611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049887597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.457" endtime="20201117 14:41:12.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.477" endtime="20201117 14:41:12.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.074" endtime="20201117 14:41:12.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.069" endtime="20201117 14:41:12.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.498" level="INFO">${RESULT} = [{'time': 0.049887597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8986000000001677e-05, 'source_diff': 2.8986000000001677e-05}, {'time': 0.049935667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:12.488" endtime="20201117 14:41:12.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.531" level="INFO">${ACCURACY} = {'source_diff': [2.8986000000001677e-05, 2.8778000000000137e-05, 2.8708000000002287e-05, 2.9014000000000817e-05, 2.9222000000002357e-05, 2.8916999999996362e-05, 2.9250000000001497e-05, 2.8568999999999...</msg>
<status status="PASS" starttime="20201117 14:41:12.500" endtime="20201117 14:41:12.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.542" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.540" endtime="20201117 14:41:12.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.548" level="INFO">VALUE: [2.8986000000001677e-05, 2.8778000000000137e-05, 2.8708000000002287e-05, 2.9014000000000817e-05, 2.9222000000002357e-05, 2.8916999999996362e-05, 2.9250000000001497e-05, 2.8568999999999123e-05, 2.8527999999999887e-05, 2.9110999999998333e-05, 2.9249999999994558e-05, 2.8680999999995682e-05, 2.894500000000244e-05, 2.916599999999714e-05, 2.9028000000000387e-05, 2.8306000000005715e-05, 2.87370000000009e-05, 2.8958000000002537e-05, 2.8444999999995002e-05, 2.8833000000005882e-05, 2.919399999999628e-05, 2.8541999999999457e-05, 2.8652000000004008e-05, 2.9250000000001497e-05, 2.8596999999998263e-05, 2.9041000000000483e-05, 2.8694000000002717e-05, 2.9235999999994988e-05, 2.9235999999994988e-05, 2.8916999999996362e-05, 2.8708000000002287e-05, 2.8388999999996722e-05, 2.8527999999999887e-05, 2.89579999999956e-05, 2.8527999999999887e-05, 2.9028000000000387e-05, 2.8764000000000567e-05, 2.912500000000484e-05, 2.8846999999998513e-05, 2.890300000000373e-05, 2.9014000000000817e-05, 2.8458999999994572e-05, 2.8334000000004855e-05, 2.9194999999995752e-05, 2.8540999999999983e-05, 2.8458000000002037e-05, 2.86379999999975e-05, 2.8360999999997583e-05, 2.8250000000000497e-05, 2.8971999999995168e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.545" endtime="20201117 14:41:12.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.533" endtime="20201117 14:41:12.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.558" endtime="20201117 14:41:12.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.567" endtime="20201117 14:41:12.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.562" endtime="20201117 14:41:12.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.553" endtime="20201117 14:41:12.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.008" endtime="20201117 14:41:12.593"></status>
</kw>
<msg timestamp="20201117 14:41:12.593" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.616" endtime="20201117 14:41:12.636"></status>
</kw>
<msg timestamp="20201117 14:41:12.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.613" endtime="20201117 14:41:12.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.639" endtime="20201117 14:41:12.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.646" endtime="20201117 14:41:12.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.605" endtime="20201117 14:41:12.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.599" endtime="20201117 14:41:12.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.671" endtime="20201117 14:41:13.033"></status>
</kw>
<msg timestamp="20201117 14:41:13.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043113028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.667" endtime="20201117 14:41:13.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043113028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.044" endtime="20201117 14:41:13.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.072" endtime="20201117 14:41:13.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.659" endtime="20201117 14:41:13.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.655" endtime="20201117 14:41:13.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.092" level="INFO">${RESULT} = [{'time': 0.043113028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9138999999997472e-05, 'source_diff': 2.9138999999997472e-05}, {'time': 0.043161111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.082" endtime="20201117 14:41:13.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.125" level="INFO">${ACCURACY} = {'source_diff': [2.9138999999997472e-05, 2.9000000000001247e-05, 2.8277999999999637e-05, 2.8541999999999457e-05, 2.8347999999997486e-05, 2.8985999999994738e-05, 2.9166000000004078e-05, 2.8554999999999...</msg>
<status status="PASS" starttime="20201117 14:41:13.094" endtime="20201117 14:41:13.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.136" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.134" endtime="20201117 14:41:13.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.142" level="INFO">VALUE: [2.9138999999997472e-05, 2.9000000000001247e-05, 2.8277999999999637e-05, 2.8541999999999457e-05, 2.8347999999997486e-05, 2.8985999999994738e-05, 2.9166000000004078e-05, 2.8554999999999553e-05, 2.912500000000484e-05, 2.8569000000006062e-05, 2.842999999999596e-05, 2.8791000000000233e-05, 2.8736000000001427e-05, 2.9208000000002787e-05, 2.865300000000348e-05, 2.8458000000002037e-05, 2.8402999999996292e-05, 2.8888999999997222e-05, 2.863900000000391e-05, 2.9236000000001927e-05, 2.8402999999996292e-05, 2.8750000000000997e-05, 2.915300000000398e-05, 2.838900000000366e-05, 2.8388999999996722e-05, 2.872300000000133e-05, 2.8749999999994058e-05, 2.8333999999997916e-05, 2.8264000000000067e-05, 2.9041999999999957e-05, 2.8360999999997583e-05, 2.8540999999999983e-05, 2.866599999999664e-05, 2.8346999999998013e-05, 2.9152000000004508e-05, 2.9138000000004938e-05, 2.8818999999999373e-05, 2.9027000000000913e-05, 2.8598000000004675e-05, 2.8804999999999803e-05, 2.8374999999997152e-05, 2.9028000000000387e-05, 2.8318999999998873e-05, 2.8972000000002107e-05, 2.9124999999997903e-05, 2.8500000000000747e-05, 2.8472000000001607e-05, 2.9069999999999097e-05, 2.8916999999996362e-05, 2.8833999999998416e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.139" endtime="20201117 14:41:13.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.127" endtime="20201117 14:41:13.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.151" endtime="20201117 14:41:13.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.160" endtime="20201117 14:41:13.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.156" endtime="20201117 14:41:13.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.147" endtime="20201117 14:41:13.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.595" endtime="20201117 14:41:13.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.004" endtime="20201117 14:41:13.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.002" endtime="20201117 14:41:13.188"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.193" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.216" endtime="20201117 14:41:13.236"></status>
</kw>
<msg timestamp="20201117 14:41:13.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.213" endtime="20201117 14:41:13.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.239" endtime="20201117 14:41:13.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.246" endtime="20201117 14:41:13.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.205" endtime="20201117 14:41:13.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.199" endtime="20201117 14:41:13.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.272" endtime="20201117 14:41:13.634"></status>
</kw>
<msg timestamp="20201117 14:41:13.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049466639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049496431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.268" endtime="20201117 14:41:13.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049466639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049496431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.645" endtime="20201117 14:41:13.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.665" endtime="20201117 14:41:13.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.261" endtime="20201117 14:41:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.255" endtime="20201117 14:41:13.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.684" level="INFO">${RESULT} = [{'time': 0.049496431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9792000000000707e-05, 'source_diff': 2.9792000000000707e-05}, {'time': 0.049535417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.674" endtime="20201117 14:41:13.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.716" level="INFO">${ACCURACY} = {'source_diff': [2.9792000000000707e-05, 2.9792000000000707e-05, 2.9764000000001567e-05, 3.0097999999999236e-05, 2.9319999999999347e-05, 2.9374999999998153e-05, 2.9332999999999443e-05, 2.9332999999999...</msg>
<status status="PASS" starttime="20201117 14:41:13.686" endtime="20201117 14:41:13.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.728" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.726" endtime="20201117 14:41:13.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.734" level="INFO">VALUE: [2.9792000000000707e-05, 2.9792000000000707e-05, 2.9764000000001567e-05, 3.0097999999999236e-05, 2.9319999999999347e-05, 2.9374999999998153e-05, 2.9332999999999443e-05, 2.9332999999999443e-05, 2.9554999999993614e-05, 2.9762999999995154e-05, 2.9318999999999873e-05, 2.9444000000003467e-05, 3.0014000000001817e-05, 2.991599999999789e-05, 3.0152999999998042e-05, 2.9708000000003287e-05, 2.9360999999998583e-05, 2.99579999999966e-05, 2.9624999999998403e-05, 2.9596999999999263e-05, 2.9832999999999943e-05, 2.9708000000003287e-05, 2.9360999999998583e-05, 2.9500000000001747e-05, 2.9500000000001747e-05, 3.0083999999999667e-05, 2.9360999999998583e-05, 2.9292000000000207e-05, 2.9319999999999347e-05, 2.9319999999999347e-05, 2.9528000000000887e-05, 2.9792000000000707e-05, 2.9638999999997973e-05, 2.9958999999996072e-05, 3.0028000000001387e-05, 2.970799999999635e-05, 2.9778000000001137e-05, 2.988799999999875e-05, 3.019399999999728e-05, 3.0013999999994878e-05, 3.0083000000000193e-05, 2.9318999999999873e-05, 2.99579999999966e-05, 2.9722000000002857e-05, 2.9569000000000123e-05, 2.9999999999995308e-05, 2.9318999999999873e-05, 3.0028000000001387e-05, 2.9999999999995308e-05, 2.9346999999999013e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.731" endtime="20201117 14:41:13.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.718" endtime="20201117 14:41:13.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.743" endtime="20201117 14:41:13.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.752" endtime="20201117 14:41:13.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.748" endtime="20201117 14:41:13.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.739" endtime="20201117 14:41:13.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.195" endtime="20201117 14:41:13.779"></status>
</kw>
<msg timestamp="20201117 14:41:13.779" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.802" endtime="20201117 14:41:13.822"></status>
</kw>
<msg timestamp="20201117 14:41:13.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.799" endtime="20201117 14:41:13.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.826" endtime="20201117 14:41:13.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.833" endtime="20201117 14:41:13.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.791" endtime="20201117 14:41:13.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.785" endtime="20201117 14:41:13.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.858" endtime="20201117 14:41:14.222"></status>
</kw>
<msg timestamp="20201117 14:41:14.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043216361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.854" endtime="20201117 14:41:14.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043216361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.232" endtime="20201117 14:41:14.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.252" endtime="20201117 14:41:14.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.847" endtime="20201117 14:41:14.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.842" endtime="20201117 14:41:14.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.272" level="INFO">${RESULT} = [{'time': 0.043216361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9486000000002177e-05, 'source_diff': 2.9486000000002177e-05}, {'time': 0.043257361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:14.263" endtime="20201117 14:41:14.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.308" level="INFO">${ACCURACY} = {'source_diff': [2.9486000000002177e-05, 2.9694000000003717e-05, 2.9764000000001567e-05, 2.9346999999999013e-05, 2.9264000000001067e-05, 2.9944999999996502e-05, 3.0028000000001387e-05, 2.9346999999999...</msg>
<status status="PASS" starttime="20201117 14:41:14.275" endtime="20201117 14:41:14.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.320" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.317" endtime="20201117 14:41:14.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.326" level="INFO">VALUE: [2.9486000000002177e-05, 2.9694000000003717e-05, 2.9764000000001567e-05, 2.9346999999999013e-05, 2.9264000000001067e-05, 2.9944999999996502e-05, 3.0028000000001387e-05, 2.9346999999999013e-05, 2.9833999999999417e-05, 3.020900000000326e-05, 2.9292000000000207e-05, 2.972300000000233e-05, 2.9764000000001567e-05, 3.0152999999998042e-05, 2.9319999999999347e-05, 2.9832999999999943e-05, 2.9610999999998833e-05, 3.0096999999999763e-05, 3.015199999999857e-05, 2.942999999999696e-05, 2.9736000000002427e-05, 2.9958000000003537e-05, 2.9972000000003107e-05, 2.9874999999998653e-05, 2.991599999999789e-05, 2.9319999999999347e-05, 2.9305999999999777e-05, 2.9332999999999443e-05, 2.988900000000516e-05, 2.9832999999999943e-05, 2.9819000000000373e-05, 2.9514000000001317e-05, 2.9556000000000027e-05, 2.937500000000509e-05, 3.0110999999999333e-05, 2.9764000000001567e-05, 2.995900000000301e-05, 2.9305000000000303e-05, 2.9999999999995308e-05, 2.9612000000005245e-05, 2.9528000000000887e-05, 2.991599999999789e-05, 3.0083000000000193e-05, 3.0069000000000623e-05, 2.947199999999567e-05, 2.938799999999825e-05, 2.9777000000001663e-05, 2.972199999999592e-05, 2.9500000000001747e-05, 2.9944000000003967e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.322" endtime="20201117 14:41:14.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.310" endtime="20201117 14:41:14.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.336" endtime="20201117 14:41:14.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.346" endtime="20201117 14:41:14.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.341" endtime="20201117 14:41:14.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.331" endtime="20201117 14:41:14.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.781" endtime="20201117 14:41:14.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.190" endtime="20201117 14:41:14.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.189" endtime="20201117 14:41:14.374"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.379" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.404" endtime="20201117 14:41:14.424"></status>
</kw>
<msg timestamp="20201117 14:41:14.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.401" endtime="20201117 14:41:14.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.427" endtime="20201117 14:41:14.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.433" endtime="20201117 14:41:14.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.394" endtime="20201117 14:41:14.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.385" endtime="20201117 14:41:14.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.456" endtime="20201117 14:41:14.787"></status>
</kw>
<msg timestamp="20201117 14:41:14.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:14.453" endtime="20201117 14:41:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:14.791" endtime="20201117 14:41:14.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.799" endtime="20201117 14:41:14.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.446" endtime="20201117 14:41:14.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.441" endtime="20201117 14:41:14.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.810" level="INFO">${RESULT} = [{'time': 0.051711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.09579999999976e-05, 'source_diff': 3.09579999999976e-05}, {'time': 0.051752014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3....</msg>
<status status="PASS" starttime="20201117 14:41:14.805" endtime="20201117 14:41:14.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.824" level="INFO">${ACCURACY} = {'source_diff': [3.09579999999976e-05, 3.09579999999976e-05, 3.111100000000033e-05, 3.0514000000002317e-05, 3.055600000000103e-05, 3.0402999999998293e-05, 3.0486000000003177e-05, 3.093099999999793e-05...</msg>
<status status="PASS" starttime="20201117 14:41:14.811" endtime="20201117 14:41:14.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.829" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.828" endtime="20201117 14:41:14.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.832" level="INFO">VALUE: [3.09579999999976e-05, 3.09579999999976e-05, 3.111100000000033e-05, 3.0514000000002317e-05, 3.055600000000103e-05, 3.0402999999998293e-05, 3.0486000000003177e-05, 3.093099999999793e-05, 3.097300000000358e-05, 3.111100000000033e-05, 3.092999999999846e-05, 3.088899999999922e-05, 3.065299999999854e-05, 3.095900000000401e-05, 3.092999999999846e-05, 3.108300000000119e-05, 3.091599999999889e-05, 3.0486000000003177e-05, 3.117999999999871e-05, 3.0500000000002747e-05, 3.115299999999904e-05, 3.111100000000033e-05, 3.048599999999624e-05, 3.073600000000343e-05, 3.0347000000000013e-05, 3.058300000000069e-05, 3.0319000000000873e-05, 3.104199999999502e-05, 3.068100000000462e-05, 3.109700000000076e-05, 3.04579999999971e-05, 3.04170000000048e-05, 3.105600000000153e-05, 3.05700000000006e-05, 3.065299999999854e-05, 3.084700000000051e-05, 3.045900000000351e-05, 3.065300000000548e-05, 3.088900000000616e-05, 3.104100000000248e-05, 3.058300000000069e-05, 3.11249999999999e-05, 3.059700000000026e-05, 3.087499999999965e-05, 3.0804999999994864e-05, 3.124999999999656e-05, 3.066599999999864e-05, 3.073600000000343e-05, 3.052799999999495e-05, 3.0278000000001637e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.830" endtime="20201117 14:41:14.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.825" endtime="20201117 14:41:14.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.836" endtime="20201117 14:41:14.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.840" endtime="20201117 14:41:14.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.838" endtime="20201117 14:41:14.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.834" endtime="20201117 14:41:14.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.380" endtime="20201117 14:41:14.862"></status>
</kw>
<msg timestamp="20201117 14:41:14.863" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.884" endtime="20201117 14:41:14.904"></status>
</kw>
<msg timestamp="20201117 14:41:14.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.881" endtime="20201117 14:41:14.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.907" endtime="20201117 14:41:14.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.913" endtime="20201117 14:41:14.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.874" endtime="20201117 14:41:14.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.868" endtime="20201117 14:41:14.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.938" endtime="20201117 14:41:15.275"></status>
</kw>
<msg timestamp="20201117 14:41:15.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038252694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.934" endtime="20201117 14:41:15.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038252694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.285" endtime="20201117 14:41:15.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.303" endtime="20201117 14:41:15.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.926" endtime="20201117 14:41:15.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.921" endtime="20201117 14:41:15.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.322" level="INFO">${RESULT} = [{'time': 0.038283014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0320000000000347e-05, 'source_diff': 3.0320000000000347e-05}, {'time': 0.038326056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.314" endtime="20201117 14:41:15.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.353" level="INFO">${ACCURACY} = {'source_diff': [3.0320000000000347e-05, 3.104199999999502e-05, 3.054200000000146e-05, 3.119499999999775e-05, 3.086100000000008e-05, 3.0320000000000347e-05, 3.1013000000003343e-05, 3.0500000000002747e...</msg>
<status status="PASS" starttime="20201117 14:41:15.325" endtime="20201117 14:41:15.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.365" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.362" endtime="20201117 14:41:15.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.371" level="INFO">VALUE: [3.0320000000000347e-05, 3.104199999999502e-05, 3.054200000000146e-05, 3.119499999999775e-05, 3.086100000000008e-05, 3.0320000000000347e-05, 3.1013000000003343e-05, 3.0500000000002747e-05, 3.111100000000033e-05, 3.0486000000003177e-05, 3.111100000000033e-05, 3.0319000000000873e-05, 3.073600000000343e-05, 3.0486000000003177e-05, 3.04579999999971e-05, 3.037500000000609e-05, 3.0568999999994184e-05, 3.117999999999871e-05, 3.0291999999994268e-05, 3.054200000000146e-05, 3.066699999999811e-05, 3.0292000000001207e-05, 3.056900000000112e-05, 3.120800000000479e-05, 3.0500000000002747e-05, 3.0278000000001637e-05, 3.079200000000171e-05, 3.052799999999495e-05, 3.0416999999997862e-05, 3.0597999999999737e-05, 3.0320000000000347e-05, 3.087499999999965e-05, 3.0763000000003093e-05, 3.115199999999957e-05, 3.0347999999999486e-05, 3.108300000000119e-05, 3.069499999999725e-05, 3.058300000000069e-05, 3.06249999999994e-05, 3.044399999999753e-05, 3.1082999999994254e-05, 3.094399999999803e-05, 3.122200000000436e-05, 3.088899999999922e-05, 3.065299999999854e-05, 3.0319000000000873e-05, 3.104200000000196e-05, 3.061099999999983e-05, 3.054200000000146e-05, 3.123600000000393e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.367" endtime="20201117 14:41:15.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.355" endtime="20201117 14:41:15.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.381" endtime="20201117 14:41:15.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.389" endtime="20201117 14:41:15.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.385" endtime="20201117 14:41:15.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.376" endtime="20201117 14:41:15.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.864" endtime="20201117 14:41:15.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.376" endtime="20201117 14:41:15.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.375" endtime="20201117 14:41:15.416"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.421" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.442" endtime="20201117 14:41:15.461"></status>
</kw>
<msg timestamp="20201117 14:41:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.439" endtime="20201117 14:41:15.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.464" endtime="20201117 14:41:15.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.471" endtime="20201117 14:41:15.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.432" endtime="20201117 14:41:15.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.426" endtime="20201117 14:41:15.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.494" endtime="20201117 14:41:15.828"></status>
</kw>
<msg timestamp="20201117 14:41:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046515778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046547319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.490" endtime="20201117 14:41:15.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046515778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046547319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.838" endtime="20201117 14:41:15.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.857" endtime="20201117 14:41:15.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.483" endtime="20201117 14:41:15.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.479" endtime="20201117 14:41:15.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.874" level="INFO">${RESULT} = [{'time': 0.046547319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1540999999996044e-05, 'source_diff': 3.1540999999996044e-05}, {'time': 0.046593319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.865" endtime="20201117 14:41:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.904" level="INFO">${ACCURACY} = {'source_diff': [3.1540999999996044e-05, 3.129100000000273e-05, 3.197199999999817e-05, 3.144399999999853e-05, 3.187500000000065e-05, 3.216700000000655e-05, 3.202800000000339e-05, 3.129100000000273e-05...</msg>
<status status="PASS" starttime="20201117 14:41:15.876" endtime="20201117 14:41:15.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.915" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.913" endtime="20201117 14:41:15.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.921" level="INFO">VALUE: [3.1540999999996044e-05, 3.129100000000273e-05, 3.197199999999817e-05, 3.144399999999853e-05, 3.187500000000065e-05, 3.216700000000655e-05, 3.202800000000339e-05, 3.129100000000273e-05, 3.188900000000022e-05, 3.163899999999997e-05, 3.201400000000382e-05, 3.150000000000375e-05, 3.215300000000004e-05, 3.155599999999509e-05, 3.166700000000605e-05, 3.163899999999997e-05, 3.211100000000133e-05, 3.169499999999825e-05, 3.202799999999645e-05, 3.129200000000221e-05, 3.202800000000339e-05, 3.172300000000433e-05, 3.183400000000142e-05, 3.21250000000009e-05, 3.17370000000039e-05, 3.172199999999792e-05, 3.148600000000418e-05, 3.1262999999996655e-05, 3.202799999999645e-05, 3.145800000000504e-05, 3.187500000000065e-05, 3.191699999999936e-05, 3.152800000000289e-05, 3.14300000000059e-05, 3.215300000000004e-05, 3.19579999999986e-05, 3.2068999999995684e-05, 3.179200000000271e-05, 3.188900000000022e-05, 3.176400000000357e-05, 3.21250000000009e-05, 3.213900000000047e-05, 3.137500000000015e-05, 3.158400000000117e-05, 3.147300000000408e-05, 3.215300000000004e-05, 3.204200000000296e-05, 3.205599999999559e-05, 3.161100000000083e-05, 3.187500000000065e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.917" endtime="20201117 14:41:15.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.906" endtime="20201117 14:41:15.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.931" endtime="20201117 14:41:15.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.940" endtime="20201117 14:41:15.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.936" endtime="20201117 14:41:15.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.926" endtime="20201117 14:41:15.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.422" endtime="20201117 14:41:15.965"></status>
</kw>
<msg timestamp="20201117 14:41:15.966" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.987" endtime="20201117 14:41:16.006"></status>
</kw>
<msg timestamp="20201117 14:41:16.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.984" endtime="20201117 14:41:16.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.009" endtime="20201117 14:41:16.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.016" endtime="20201117 14:41:16.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.977" endtime="20201117 14:41:16.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.971" endtime="20201117 14:41:16.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.039" endtime="20201117 14:41:16.371"></status>
</kw>
<msg timestamp="20201117 14:41:16.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040806278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.036" endtime="20201117 14:41:16.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040806278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.380" endtime="20201117 14:41:16.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.400" endtime="20201117 14:41:16.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.028" endtime="20201117 14:41:16.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.024" endtime="20201117 14:41:16.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.419" level="INFO">${RESULT} = [{'time': 0.040806278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.129200000000221e-05, 'source_diff': 3.129200000000221e-05}, {'time': 0.040856347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:16.410" endtime="20201117 14:41:16.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.452" level="INFO">${ACCURACY} = {'source_diff': [3.129200000000221e-05, 3.14579999999981e-05, 3.137500000000015e-05, 3.209800000000124e-05, 3.223699999999746e-05, 3.144399999999853e-05, 3.14579999999981e-05, 3.2112000000000807e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:16.421" endtime="20201117 14:41:16.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.464" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.461" endtime="20201117 14:41:16.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.469" level="INFO">VALUE: [3.129200000000221e-05, 3.14579999999981e-05, 3.137500000000015e-05, 3.209800000000124e-05, 3.223699999999746e-05, 3.144399999999853e-05, 3.14579999999981e-05, 3.2112000000000807e-05, 3.223600000000493e-05, 3.167999999999921e-05, 3.144399999999853e-05, 3.202800000000339e-05, 3.156900000000212e-05, 3.150000000000375e-05, 3.149999999999681e-05, 3.209700000000176e-05, 3.131900000000187e-05, 3.222199999999842e-05, 3.17779999999962e-05, 3.140299999999929e-05, 3.169399999999878e-05, 3.183300000000194e-05, 3.205600000000253e-05, 3.152800000000289e-05, 3.2040999999996544e-05, 3.165299999999954e-05, 3.126399999999613e-05, 3.168099999999868e-05, 3.169499999999825e-05, 3.213900000000047e-05, 3.191699999999936e-05, 3.1444999999998e-05, 3.223600000000493e-05, 3.155500000000255e-05, 3.181900000000237e-05, 3.1346999999994074e-05, 3.224999999999756e-05, 3.222199999999842e-05, 3.161100000000083e-05, 3.166600000000658e-05, 3.224999999999756e-05, 3.136100000000058e-05, 3.200000000000425e-05, 3.201399999999688e-05, 3.158300000000169e-05, 3.1598000000000737e-05, 3.188900000000022e-05, 3.147300000000408e-05, 3.222300000000483e-05, 3.202799999999645e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.466" endtime="20201117 14:41:16.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.455" endtime="20201117 14:41:16.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.478" endtime="20201117 14:41:16.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.486" endtime="20201117 14:41:16.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.482" endtime="20201117 14:41:16.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.473" endtime="20201117 14:41:16.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.967" endtime="20201117 14:41:16.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.418" endtime="20201117 14:41:16.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.416" endtime="20201117 14:41:16.512"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.517" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.539" endtime="20201117 14:41:16.558"></status>
</kw>
<msg timestamp="20201117 14:41:16.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.536" endtime="20201117 14:41:16.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.562" endtime="20201117 14:41:16.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.568" endtime="20201117 14:41:16.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.528" endtime="20201117 14:41:16.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.523" endtime="20201117 14:41:16.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.591" endtime="20201117 14:41:16.925"></status>
</kw>
<msg timestamp="20201117 14:41:16.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046471292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.588" endtime="20201117 14:41:16.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046471292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.935" endtime="20201117 14:41:16.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.954" endtime="20201117 14:41:16.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.580" endtime="20201117 14:41:16.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.576" endtime="20201117 14:41:16.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.973" level="INFO">${RESULT} = [{'time': 0.046471292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2360999999994644e-05, 'source_diff': 3.2360999999994644e-05}, {'time': 0.046520319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:16.964" endtime="20201117 14:41:16.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.004" level="INFO">${ACCURACY} = {'source_diff': [3.2360999999994644e-05, 3.269399999999978e-05, 3.241599999999345e-05, 3.277800000000414e-05, 3.32500000000055e-05, 3.231900000000287e-05, 3.229100000000373e-05, 3.2818999999996434e-05...</msg>
<status status="PASS" starttime="20201117 14:41:16.975" endtime="20201117 14:41:17.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.014" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.012" endtime="20201117 14:41:17.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.020" level="INFO">VALUE: [3.2360999999994644e-05, 3.269399999999978e-05, 3.241599999999345e-05, 3.277800000000414e-05, 3.32500000000055e-05, 3.231900000000287e-05, 3.229100000000373e-05, 3.2818999999996434e-05, 3.23050000000033e-05, 3.2554999999996614e-05, 3.298599999999874e-05, 3.290300000000079e-05, 3.2304999999996364e-05, 3.256999999999566e-05, 3.320799999999985e-05, 3.323599999999899e-05, 3.2832999999996004e-05, 3.302799999999745e-05, 3.320799999999985e-05, 3.295899999999907e-05, 3.288900000000122e-05, 3.241699999999986e-05, 3.234800000000149e-05, 3.227800000000364e-05, 3.29449999999995e-05, 3.331900000000387e-05, 3.255600000000303e-05, 3.294400000000003e-05, 3.240200000000082e-05, 3.311100000000233e-05, 3.2360999999994644e-05, 3.259700000000226e-05, 3.266600000000064e-05, 3.255500000000355e-05, 3.229200000000321e-05, 3.233300000000244e-05, 3.2818999999996434e-05, 3.28050000000038e-05, 3.237500000000115e-05, 3.27779999999972e-05, 3.291700000000036e-05, 3.299999999999831e-05, 3.240300000000029e-05, 3.295899999999907e-05, 3.280600000000328e-05, 3.295899999999907e-05, 3.231900000000287e-05, 3.290300000000079e-05, 3.272299999999839e-05, 3.30979999999953e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.017" endtime="20201117 14:41:17.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.005" endtime="20201117 14:41:17.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.028" endtime="20201117 14:41:17.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.037" endtime="20201117 14:41:17.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.032" endtime="20201117 14:41:17.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.024" endtime="20201117 14:41:17.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.519" endtime="20201117 14:41:17.062"></status>
</kw>
<msg timestamp="20201117 14:41:17.062" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.084" endtime="20201117 14:41:17.103"></status>
</kw>
<msg timestamp="20201117 14:41:17.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.080" endtime="20201117 14:41:17.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.107" endtime="20201117 14:41:17.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.113" endtime="20201117 14:41:17.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.073" endtime="20201117 14:41:17.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.068" endtime="20201117 14:41:17.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.136" endtime="20201117 14:41:17.473"></status>
</kw>
<msg timestamp="20201117 14:41:17.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040381972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040415167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.133" endtime="20201117 14:41:17.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040381972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040415167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.483" endtime="20201117 14:41:17.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.502" endtime="20201117 14:41:17.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.126" endtime="20201117 14:41:17.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.121" endtime="20201117 14:41:17.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.521" level="INFO">${RESULT} = [{'time': 0.040415167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319499999999975e-05, 'source_diff': 3.319499999999975e-05}, {'time': 0.040468153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:17.512" endtime="20201117 14:41:17.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.551" level="INFO">${ACCURACY} = {'source_diff': [3.319499999999975e-05, 3.313900000000147e-05, 3.265300000000054e-05, 3.229199999999627e-05, 3.298599999999874e-05, 3.234800000000149e-05, 3.2444999999999e-05, 3.316600000000114e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:41:17.523" endtime="20201117 14:41:17.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.562" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.560" endtime="20201117 14:41:17.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.567" level="INFO">VALUE: [3.319499999999975e-05, 3.313900000000147e-05, 3.265300000000054e-05, 3.229199999999627e-05, 3.298599999999874e-05, 3.234800000000149e-05, 3.2444999999999e-05, 3.316600000000114e-05, 3.300000000000525e-05, 3.28050000000038e-05, 3.226400000000407e-05, 3.274999999999806e-05, 3.322199999999942e-05, 3.2818999999996434e-05, 3.3124999999994964e-05, 3.318000000000071e-05, 3.247199999999867e-05, 3.226399999999713e-05, 3.313900000000147e-05, 3.268099999999968e-05, 3.268000000000021e-05, 3.249999999999781e-05, 3.2916999999993424e-05, 3.259700000000226e-05, 3.298599999999874e-05, 3.254199999999652e-05, 3.319499999999975e-05, 3.320899999999932e-05, 3.22779999999967e-05, 3.311100000000233e-05, 3.227800000000364e-05, 3.315200000000157e-05, 3.326399999999813e-05, 3.316700000000061e-05, 3.252800000000389e-05, 3.263900000000097e-05, 3.322199999999942e-05, 3.2791000000004233e-05, 3.287500000000165e-05, 3.288900000000122e-05, 3.300000000000525e-05, 3.281900000000337e-05, 3.254199999999652e-05, 3.2554999999996614e-05, 3.318100000000018e-05, 3.290300000000079e-05, 3.273599999999849e-05, 3.277800000000414e-05, 3.324999999999856e-05, 3.280600000000328e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.564" endtime="20201117 14:41:17.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.553" endtime="20201117 14:41:17.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.576" endtime="20201117 14:41:17.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.585" endtime="20201117 14:41:17.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.580" endtime="20201117 14:41:17.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.572" endtime="20201117 14:41:17.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.064" endtime="20201117 14:41:17.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.515" endtime="20201117 14:41:17.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.513" endtime="20201117 14:41:17.611"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.616" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.637" endtime="20201117 14:41:17.656"></status>
</kw>
<msg timestamp="20201117 14:41:17.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.634" endtime="20201117 14:41:17.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.660" endtime="20201117 14:41:17.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.666" endtime="20201117 14:41:17.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.627" endtime="20201117 14:41:17.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.621" endtime="20201117 14:41:17.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.690" endtime="20201117 14:41:17.999"></status>
</kw>
<msg timestamp="20201117 14:41:18.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046320208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.686" endtime="20201117 14:41:18.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046320208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.003" endtime="20201117 14:41:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.012" endtime="20201117 14:41:18.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.678" endtime="20201117 14:41:18.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.674" endtime="20201117 14:41:18.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.020" level="INFO">${RESULT} = [{'time': 0.046353764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.355599999999709e-05, 'source_diff': 3.355599999999709e-05}, {'time': 0.046407792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:18.016" endtime="20201117 14:41:18.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.033" level="INFO">${ACCURACY} = {'source_diff': [3.355599999999709e-05, 3.376400000000557e-05, 3.331999999999641e-05, 3.369500000000025e-05, 3.37779999999982e-05, 3.343100000000043e-05, 3.390300000000179e-05, 3.408400000000367e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:18.021" endtime="20201117 14:41:18.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.039" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.037" endtime="20201117 14:41:18.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.041" level="INFO">VALUE: [3.355599999999709e-05, 3.376400000000557e-05, 3.331999999999641e-05, 3.369500000000025e-05, 3.37779999999982e-05, 3.343100000000043e-05, 3.390300000000179e-05, 3.408400000000367e-05, 3.343000000000096e-05, 3.397200000000017e-05, 3.387500000000265e-05, 3.33050000000043e-05, 3.422299999999989e-05, 3.420800000000085e-05, 3.3512999999998905e-05, 3.416700000000161e-05, 3.340199999999488e-05, 3.333300000000344e-05, 3.34580000000001e-05, 3.397199999999323e-05, 3.39580000000006e-05, 3.355600000000403e-05, 3.404200000000496e-05, 3.361100000000283e-05, 3.347199999999967e-05, 3.388900000000222e-05, 3.380599999999734e-05, 3.408399999999673e-05, 3.3610999999995894e-05, 3.358400000000317e-05, 3.406999999999716e-05, 3.343100000000043e-05, 3.349999999999881e-05, 3.390300000000179e-05, 3.384700000000351e-05, 3.337500000000215e-05, 3.409700000000376e-05, 3.419400000000128e-05, 3.3596999999996324e-05, 3.3304999999997364e-05, 3.3610999999995894e-05, 3.4041000000005484e-05, 3.4068999999997684e-05, 3.340300000000129e-05, 3.3332999999996504e-05, 3.32779999999977e-05, 3.3568999999997184e-05, 3.333399999999598e-05, 3.424999999999956e-05, 3.398599999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.040" endtime="20201117 14:41:18.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.034" endtime="20201117 14:41:18.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.045" endtime="20201117 14:41:18.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.049" endtime="20201117 14:41:18.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.047" endtime="20201117 14:41:18.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.043" endtime="20201117 14:41:18.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.617" endtime="20201117 14:41:18.070"></status>
</kw>
<msg timestamp="20201117 14:41:18.070" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.080" endtime="20201117 14:41:18.098"></status>
</kw>
<msg timestamp="20201117 14:41:18.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.079" endtime="20201117 14:41:18.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.099" endtime="20201117 14:41:18.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.112" endtime="20201117 14:41:18.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.076" endtime="20201117 14:41:18.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.073" endtime="20201117 14:41:18.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.135" endtime="20201117 14:41:18.471"></status>
</kw>
<msg timestamp="20201117 14:41:18.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.132" endtime="20201117 14:41:18.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.481" endtime="20201117 14:41:18.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.500" endtime="20201117 14:41:18.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.125" endtime="20201117 14:41:18.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.120" endtime="20201117 14:41:18.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.519" level="INFO">${RESULT} = [{'time': 0.024208056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.423699999999946e-05, 'source_diff': 3.423699999999946e-05}, {'time': 0.024262, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:18.510" endtime="20201117 14:41:18.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.551" level="INFO">${ACCURACY} = {'source_diff': [3.423699999999946e-05, 3.3332999999999974e-05, 3.3860999999999614e-05, 3.4097000000000294e-05, 3.380600000000081e-05, 3.365300000000154e-05, 3.340299999999782e-05, 3.326399999999813e-...</msg>
<status status="PASS" starttime="20201117 14:41:18.521" endtime="20201117 14:41:18.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.562" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.560" endtime="20201117 14:41:18.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.568" level="INFO">VALUE: [3.423699999999946e-05, 3.3332999999999974e-05, 3.3860999999999614e-05, 3.4097000000000294e-05, 3.380600000000081e-05, 3.365300000000154e-05, 3.340299999999782e-05, 3.326399999999813e-05, 3.357000000000013e-05, 3.390299999999832e-05, 3.327800000000117e-05, 3.329199999999727e-05, 3.418000000000171e-05, 3.384800000000299e-05, 3.363900000000197e-05, 3.3860999999999614e-05, 3.380599999999734e-05, 3.3332999999999974e-05, 3.3569000000000654e-05, 3.373599999999949e-05, 3.4110999999999864e-05, 3.4138999999999003e-05, 3.379200000000124e-05, 3.365299999999807e-05, 3.349999999999881e-05, 3.390299999999832e-05, 3.379199999999777e-05, 3.3583000000000224e-05, 3.380600000000081e-05, 3.338900000000172e-05, 3.3346999999999544e-05, 3.3860999999999614e-05, 3.355599999999709e-05, 3.382000000000038e-05, 3.418100000000118e-05, 3.3610999999999364e-05, 3.4124999999999434e-05, 3.4026999999998975e-05, 3.3304999999997364e-05, 3.380600000000081e-05, 3.3513000000002374e-05, 3.365200000000207e-05, 3.344400000000053e-05, 3.3833000000000474e-05, 3.3860999999999614e-05, 3.4110999999999864e-05, 3.3569000000000654e-05, 3.4069000000001154e-05, 3.397200000000017e-05, 3.3332999999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.565" endtime="20201117 14:41:18.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.553" endtime="20201117 14:41:18.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.576" endtime="20201117 14:41:18.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.585" endtime="20201117 14:41:18.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.580" endtime="20201117 14:41:18.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.572" endtime="20201117 14:41:18.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.071" endtime="20201117 14:41:18.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.613" endtime="20201117 14:41:18.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.612" endtime="20201117 14:41:18.611"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.616" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.638" endtime="20201117 14:41:18.658"></status>
</kw>
<msg timestamp="20201117 14:41:18.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.635" endtime="20201117 14:41:18.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.662" endtime="20201117 14:41:18.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.668" endtime="20201117 14:41:18.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.627" endtime="20201117 14:41:18.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.621" endtime="20201117 14:41:18.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.691" endtime="20201117 14:41:19.026"></status>
</kw>
<msg timestamp="20201117 14:41:19.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046867681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046902181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.688" endtime="20201117 14:41:19.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046867681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046902181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.036" endtime="20201117 14:41:19.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.055" endtime="20201117 14:41:19.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.680" endtime="20201117 14:41:19.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.676" endtime="20201117 14:41:19.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.074" level="INFO">${RESULT} = [{'time': 0.046902181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.449999999999981e-05, 'source_diff': 3.449999999999981e-05}, {'time': 0.046946194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.065" endtime="20201117 14:41:19.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.104" level="INFO">${ACCURACY} = {'source_diff': [3.449999999999981e-05, 3.4304999999998365e-05, 3.494400000000203e-05, 3.470800000000135e-05, 3.502799999999945e-05, 3.4610999999996894e-05, 3.4776999999999725e-05, 3.444399999999459e-...</msg>
<status status="PASS" starttime="20201117 14:41:19.076" endtime="20201117 14:41:19.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.115" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.112" endtime="20201117 14:41:19.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.120" level="INFO">VALUE: [3.449999999999981e-05, 3.4304999999998365e-05, 3.494400000000203e-05, 3.470800000000135e-05, 3.502799999999945e-05, 3.4610999999996894e-05, 3.4776999999999725e-05, 3.444399999999459e-05, 3.5026999999999975e-05, 3.5054999999999115e-05, 3.4832999999998004e-05, 3.469399999999484e-05, 3.4624999999996464e-05, 3.47779999999992e-05, 3.4374999999996214e-05, 3.501399999999988e-05, 3.476400000000657e-05, 3.475000000000006e-05, 3.508399999999773e-05, 3.501399999999988e-05, 3.433400000000392e-05, 3.447300000000014e-05, 3.483399999999748e-05, 3.469500000000125e-05, 3.455599999999809e-05, 3.4554999999998615e-05, 3.469400000000178e-05, 3.4874999999996714e-05, 3.517999999999577e-05, 3.4568999999998185e-05, 3.51250000000039e-05, 3.4555000000005553e-05, 3.49580000000016e-05, 3.476399999999963e-05, 3.436100000000358e-05, 3.44580000000011e-05, 3.518000000000271e-05, 3.448600000000024e-05, 3.5068999999998685e-05, 3.493100000000193e-05, 3.436100000000358e-05, 3.4916999999995424e-05, 3.434799999999655e-05, 3.4582999999997754e-05, 3.4360999999996644e-05, 3.473699999999996e-05, 3.4958999999994134e-05, 3.523600000000099e-05, 3.487500000000365e-05, 3.484799999999705e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.117" endtime="20201117 14:41:19.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.106" endtime="20201117 14:41:19.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.129" endtime="20201117 14:41:19.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.137" endtime="20201117 14:41:19.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.133" endtime="20201117 14:41:19.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.124" endtime="20201117 14:41:19.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.617" endtime="20201117 14:41:19.163"></status>
</kw>
<msg timestamp="20201117 14:41:19.163" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.185" endtime="20201117 14:41:19.204"></status>
</kw>
<msg timestamp="20201117 14:41:19.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.182" endtime="20201117 14:41:19.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.207" endtime="20201117 14:41:19.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.214" endtime="20201117 14:41:19.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.174" endtime="20201117 14:41:19.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.168" endtime="20201117 14:41:19.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.237" endtime="20201117 14:41:19.572"></status>
</kw>
<msg timestamp="20201117 14:41:19.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041222542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.234" endtime="20201117 14:41:19.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041222542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.581" endtime="20201117 14:41:19.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.600" endtime="20201117 14:41:19.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.226" endtime="20201117 14:41:19.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.222" endtime="20201117 14:41:19.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.619" level="INFO">${RESULT} = [{'time': 0.041257139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4596999999997324e-05, 'source_diff': 3.4596999999997324e-05}, {'time': 0.041308139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:19.610" endtime="20201117 14:41:19.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.649" level="INFO">${ACCURACY} = {'source_diff': [3.4596999999997324e-05, 3.463900000000297e-05, 3.511199999999687e-05, 3.5110999999997394e-05, 3.441700000000186e-05, 3.511100000000433e-05, 3.470800000000135e-05, 3.459700000000426e-0...</msg>
<status status="PASS" starttime="20201117 14:41:19.621" endtime="20201117 14:41:19.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.660" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.658" endtime="20201117 14:41:19.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.665" level="INFO">VALUE: [3.4596999999997324e-05, 3.463900000000297e-05, 3.511199999999687e-05, 3.5110999999997394e-05, 3.441700000000186e-05, 3.511100000000433e-05, 3.470800000000135e-05, 3.459700000000426e-05, 3.4944999999994564e-05, 3.454199999999852e-05, 3.476399999999963e-05, 3.477800000000614e-05, 3.497200000000117e-05, 3.49580000000016e-05, 3.5124999999996964e-05, 3.42779999999987e-05, 3.430600000000478e-05, 3.5166999999995674e-05, 3.4860999999997144e-05, 3.502799999999945e-05, 3.501399999999988e-05, 3.447200000000067e-05, 3.463900000000297e-05, 3.455599999999809e-05, 3.434800000000349e-05, 3.47370000000069e-05, 3.518100000000218e-05, 3.447300000000014e-05, 3.4554999999998615e-05, 3.526400000000013e-05, 3.491600000000289e-05, 3.494400000000203e-05, 3.443000000000196e-05, 3.443000000000196e-05, 3.441599999999545e-05, 3.5069000000005623e-05, 3.5068999999998685e-05, 3.475000000000006e-05, 3.479200000000571e-05, 3.5152999999996104e-05, 3.4346999999997074e-05, 3.511100000000433e-05, 3.47779999999992e-05, 3.5180999999995244e-05, 3.500000000000031e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.473600000000049e-05, 3.509800000000424e-05, 3.519500000000175e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.662" endtime="20201117 14:41:19.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.651" endtime="20201117 14:41:19.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.675" endtime="20201117 14:41:19.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.683" endtime="20201117 14:41:19.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.679" endtime="20201117 14:41:19.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.669" endtime="20201117 14:41:19.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.165" endtime="20201117 14:41:19.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.614" endtime="20201117 14:41:19.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.612" endtime="20201117 14:41:19.709"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.715" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.736" endtime="20201117 14:41:19.756"></status>
</kw>
<msg timestamp="20201117 14:41:19.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.733" endtime="20201117 14:41:19.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.759" endtime="20201117 14:41:19.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.766" endtime="20201117 14:41:19.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.725" endtime="20201117 14:41:19.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.720" endtime="20201117 14:41:19.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.789" endtime="20201117 14:41:20.124"></status>
</kw>
<msg timestamp="20201117 14:41:20.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046582306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046618181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.785" endtime="20201117 14:41:20.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046582306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046618181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.134" endtime="20201117 14:41:20.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.153" endtime="20201117 14:41:20.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.778" endtime="20201117 14:41:20.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.774" endtime="20201117 14:41:20.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.170" level="INFO">${RESULT} = [{'time': 0.046618181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.587500000000465e-05, 'source_diff': 3.587500000000465e-05}, {'time': 0.046671194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.161" endtime="20201117 14:41:20.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.200" level="INFO">${ACCURACY} = {'source_diff': [3.587500000000465e-05, 3.5582999999998755e-05, 3.601400000000088e-05, 3.5860999999998144e-05, 3.6138999999997534e-05, 3.552799999999995e-05, 3.620800000000285e-05, 3.594399999999609e-...</msg>
<status status="PASS" starttime="20201117 14:41:20.172" endtime="20201117 14:41:20.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.211" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.209" endtime="20201117 14:41:20.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.216" level="INFO">VALUE: [3.587500000000465e-05, 3.5582999999998755e-05, 3.601400000000088e-05, 3.5860999999998144e-05, 3.6138999999997534e-05, 3.552799999999995e-05, 3.620800000000285e-05, 3.594399999999609e-05, 3.541700000000286e-05, 3.5360999999997644e-05, 3.629200000000027e-05, 3.531999999999841e-05, 3.616700000000361e-05, 3.597200000000217e-05, 3.6096999999998824e-05, 3.573600000000149e-05, 3.597300000000164e-05, 3.582000000000585e-05, 3.5902999999996854e-05, 3.622200000000242e-05, 3.5458999999994634e-05, 3.552799999999995e-05, 3.570800000000235e-05, 3.626400000000113e-05, 3.5304999999999365e-05, 3.592999999999652e-05, 3.534700000000501e-05, 3.6027000000000975e-05, 3.5902999999996854e-05, 3.6110999999998394e-05, 3.625000000000156e-05, 3.568000000000321e-05, 3.591599999999695e-05, 3.5832999999999005e-05, 3.6041000000000545e-05, 3.576399999999369e-05, 3.534700000000501e-05, 3.6083000000006193e-05, 3.572200000000192e-05, 3.551400000000038e-05, 3.5332999999998504e-05, 3.625000000000156e-05, 3.536100000000458e-05, 3.5360999999997644e-05, 3.5944999999995564e-05, 3.5791000000000295e-05, 3.556999999999866e-05, 3.572300000000139e-05, 3.581999999999891e-05, 3.615199999999763e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.213" endtime="20201117 14:41:20.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.202" endtime="20201117 14:41:20.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.226" endtime="20201117 14:41:20.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.234" endtime="20201117 14:41:20.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.230" endtime="20201117 14:41:20.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.221" endtime="20201117 14:41:20.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.716" endtime="20201117 14:41:20.260"></status>
</kw>
<msg timestamp="20201117 14:41:20.260" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.281" endtime="20201117 14:41:20.300"></status>
</kw>
<msg timestamp="20201117 14:41:20.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.278" endtime="20201117 14:41:20.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.304" endtime="20201117 14:41:20.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.310" endtime="20201117 14:41:20.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.271" endtime="20201117 14:41:20.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.265" endtime="20201117 14:41:20.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.333" endtime="20201117 14:41:20.667"></status>
</kw>
<msg timestamp="20201117 14:41:20.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040656722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040692597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.330" endtime="20201117 14:41:20.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040656722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040692597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.676" endtime="20201117 14:41:20.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.695" endtime="20201117 14:41:20.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.323" endtime="20201117 14:41:20.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.318" endtime="20201117 14:41:20.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.714" level="INFO">${RESULT} = [{'time': 0.040692597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5874999999997714e-05, 'source_diff': 3.5874999999997714e-05}, {'time': 0.040743639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:20.705" endtime="20201117 14:41:20.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.746" level="INFO">${ACCURACY} = {'source_diff': [3.5874999999997714e-05, 3.550000000000081e-05, 3.584700000000551e-05, 3.544400000000253e-05, 3.620799999999591e-05, 3.609800000000524e-05, 3.6124999999997964e-05, 3.606999999999916e-0...</msg>
<status status="PASS" starttime="20201117 14:41:20.716" endtime="20201117 14:41:20.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.757" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.755" endtime="20201117 14:41:20.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.763" level="INFO">VALUE: [3.5874999999997714e-05, 3.550000000000081e-05, 3.584700000000551e-05, 3.544400000000253e-05, 3.620799999999591e-05, 3.609800000000524e-05, 3.6124999999997964e-05, 3.606999999999916e-05, 3.5304999999999365e-05, 3.6110999999998394e-05, 3.558399999999823e-05, 3.526400000000013e-05, 3.5583000000005693e-05, 3.558400000000517e-05, 3.5791000000000295e-05, 3.6180999999996244e-05, 3.531999999999841e-05, 3.570800000000235e-05, 3.5638999999997034e-05, 3.5846999999998574e-05, 3.591599999999695e-05, 3.565199999999713e-05, 3.622200000000242e-05, 3.6110999999998394e-05, 3.591599999999695e-05, 3.6096999999998824e-05, 3.5346999999998074e-05, 3.5374999999997214e-05, 3.579199999999977e-05, 3.61250000000049e-05, 3.5444999999995064e-05, 3.624999999999462e-05, 3.618100000000318e-05, 3.561100000000483e-05, 3.5513000000000905e-05, 3.531999999999841e-05, 3.6152999999997104e-05, 3.565300000000354e-05, 3.533400000000492e-05, 3.56250000000044e-05, 3.548600000000124e-05, 3.619399999999634e-05, 3.6027000000000975e-05, 3.540200000000382e-05, 3.547200000000167e-05, 3.5374999999997214e-05, 3.573600000000149e-05, 3.591600000000389e-05, 3.619399999999634e-05, 3.551400000000038e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.760" endtime="20201117 14:41:20.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.748" endtime="20201117 14:41:20.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.772" endtime="20201117 14:41:20.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.780" endtime="20201117 14:41:20.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.776" endtime="20201117 14:41:20.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.768" endtime="20201117 14:41:20.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.261" endtime="20201117 14:41:20.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.712" endtime="20201117 14:41:20.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.710" endtime="20201117 14:41:20.806"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.812" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.833" endtime="20201117 14:41:20.853"></status>
</kw>
<msg timestamp="20201117 14:41:20.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.830" endtime="20201117 14:41:20.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.856" endtime="20201117 14:41:20.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.862" endtime="20201117 14:41:20.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.823" endtime="20201117 14:41:20.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.817" endtime="20201117 14:41:20.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.885" endtime="20201117 14:41:21.221"></status>
</kw>
<msg timestamp="20201117 14:41:21.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046338667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046375486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.882" endtime="20201117 14:41:21.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046338667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046375486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.230" endtime="20201117 14:41:21.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.248" endtime="20201117 14:41:21.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.875" endtime="20201117 14:41:21.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.870" endtime="20201117 14:41:21.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.268" level="INFO">${RESULT} = [{'time': 0.046375486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6819000000000435e-05, 'source_diff': 3.6819000000000435e-05}, {'time': 0.046433556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:21.259" endtime="20201117 14:41:21.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.298" level="INFO">${ACCURACY} = {'source_diff': [3.6819000000000435e-05, 3.70979999999993e-05, 3.7277000000002225e-05, 3.688900000000522e-05, 3.6610999999998894e-05, 3.6694999999996314e-05, 3.70979999999993e-05, 3.690300000000479e-0...</msg>
<status status="PASS" starttime="20201117 14:41:21.270" endtime="20201117 14:41:21.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.308" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.306" endtime="20201117 14:41:21.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.315" level="INFO">VALUE: [3.6819000000000435e-05, 3.70979999999993e-05, 3.7277000000002225e-05, 3.688900000000522e-05, 3.6610999999998894e-05, 3.6694999999996314e-05, 3.70979999999993e-05, 3.690300000000479e-05, 3.713900000000547e-05, 3.698600000000274e-05, 3.7110999999999394e-05, 3.722199999999648e-05, 3.702800000000145e-05, 3.648600000000224e-05, 3.6305000000000365e-05, 3.6638999999998034e-05, 3.637500000000515e-05, 3.690199999999838e-05, 3.6819000000000435e-05, 3.691599999999795e-05, 3.711100000000633e-05, 3.694400000000403e-05, 3.6305000000000365e-05, 3.6582999999999755e-05, 3.6624999999998464e-05, 3.6860999999999144e-05, 3.64859999999953e-05, 3.711100000000633e-05, 3.650000000000181e-05, 3.67780000000012e-05, 3.702800000000145e-05, 3.676400000000163e-05, 3.722199999999648e-05, 3.698700000000221e-05, 3.711199999999887e-05, 3.6569000000000185e-05, 3.7027000000001975e-05, 3.6874999999998714e-05, 3.6819000000000435e-05, 3.6388999999997784e-05, 3.673600000000249e-05, 3.672200000000292e-05, 3.672199999999598e-05, 3.702800000000145e-05, 3.655600000000009e-05, 3.67780000000012e-05, 3.634700000000601e-05, 3.705600000000059e-05, 3.655600000000009e-05, 3.69450000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.311" endtime="20201117 14:41:21.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.299" endtime="20201117 14:41:21.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.323" endtime="20201117 14:41:21.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.332" endtime="20201117 14:41:21.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.327" endtime="20201117 14:41:21.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.319" endtime="20201117 14:41:21.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.813" endtime="20201117 14:41:21.353"></status>
</kw>
<msg timestamp="20201117 14:41:21.354" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.364" endtime="20201117 14:41:21.380"></status>
</kw>
<msg timestamp="20201117 14:41:21.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.362" endtime="20201117 14:41:21.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.382" endtime="20201117 14:41:21.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.385" endtime="20201117 14:41:21.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.359" endtime="20201117 14:41:21.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.356" endtime="20201117 14:41:21.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.396" endtime="20201117 14:41:21.723"></status>
</kw>
<msg timestamp="20201117 14:41:21.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024322333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.394" endtime="20201117 14:41:21.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024322333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.732" endtime="20201117 14:41:21.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.751" endtime="20201117 14:41:21.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.391" endtime="20201117 14:41:21.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.389" endtime="20201117 14:41:21.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.770" level="INFO">${RESULT} = [{'time': 0.024359625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.72919999999978e-05, 'source_diff': 3.72919999999978e-05}, {'time': 0.024414611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:21.761" endtime="20201117 14:41:21.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.800" level="INFO">${ACCURACY} = {'source_diff': [3.72919999999978e-05, 3.702799999999798e-05, 3.69719999999997e-05, 3.654200000000052e-05, 3.69719999999997e-05, 3.7124999999998964e-05, 3.7068999999997215e-05, 3.6846999999999575e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:21.772" endtime="20201117 14:41:21.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.811" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.809" endtime="20201117 14:41:21.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.817" level="INFO">VALUE: [3.72919999999978e-05, 3.702799999999798e-05, 3.69719999999997e-05, 3.654200000000052e-05, 3.69719999999997e-05, 3.7124999999998964e-05, 3.7068999999997215e-05, 3.6846999999999575e-05, 3.672199999999945e-05, 3.7153000000001574e-05, 3.704200000000102e-05, 3.6874999999998714e-05, 3.704199999999755e-05, 3.683400000000295e-05, 3.70979999999993e-05, 3.670899999999935e-05, 3.679200000000077e-05, 3.694500000000003e-05, 3.669499999999978e-05, 3.6861000000002614e-05, 3.6903000000001324e-05, 3.6332999999999505e-05, 3.6361000000002114e-05, 3.6540999999997575e-05, 3.7180999999997244e-05, 3.699999999999884e-05, 3.668000000000074e-05, 3.652800000000095e-05, 3.645799999999963e-05, 3.6318999999999935e-05, 3.698599999999927e-05, 3.673599999999902e-05, 3.6596999999999325e-05, 3.7152999999998104e-05, 3.6347000000002544e-05, 3.655600000000009e-05, 3.707000000000016e-05, 3.645799999999963e-05, 3.676399999999816e-05, 3.7124999999998964e-05, 3.64719999999992e-05, 3.650000000000181e-05, 3.669499999999978e-05, 3.7096999999999825e-05, 3.6332999999999505e-05, 3.6291000000000795e-05, 3.6347000000002544e-05, 3.676400000000163e-05, 3.7096999999999825e-05, 3.7166999999997674e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.814" endtime="20201117 14:41:21.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.802" endtime="20201117 14:41:21.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.826" endtime="20201117 14:41:21.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.834" endtime="20201117 14:41:21.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.829" endtime="20201117 14:41:21.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.821" endtime="20201117 14:41:21.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.354" endtime="20201117 14:41:21.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.809" endtime="20201117 14:41:21.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.807" endtime="20201117 14:41:21.860"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.865" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.887" endtime="20201117 14:41:21.906"></status>
</kw>
<msg timestamp="20201117 14:41:21.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.883" endtime="20201117 14:41:21.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.909" endtime="20201117 14:41:21.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.916" endtime="20201117 14:41:21.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.876" endtime="20201117 14:41:21.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.870" endtime="20201117 14:41:21.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.939" endtime="20201117 14:41:22.275"></status>
</kw>
<msg timestamp="20201117 14:41:22.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046048333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046085792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.936" endtime="20201117 14:41:22.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046048333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046085792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.285" endtime="20201117 14:41:22.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.303" endtime="20201117 14:41:22.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.928" endtime="20201117 14:41:22.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.924" endtime="20201117 14:41:22.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.321" level="INFO">${RESULT} = [{'time': 0.046085792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.745900000000357e-05, 'source_diff': 3.745900000000357e-05}, {'time': 0.046135792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.312" endtime="20201117 14:41:22.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.352" level="INFO">${ACCURACY} = {'source_diff': [3.745900000000357e-05, 3.7874999999999714e-05, 3.7374999999999214e-05, 3.768100000000468e-05, 3.776400000000263e-05, 3.8166999999998674e-05, 3.805599999999465e-05, 3.822200000000442e-...</msg>
<status status="PASS" starttime="20201117 14:41:22.323" endtime="20201117 14:41:22.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.362" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.360" endtime="20201117 14:41:22.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.368" level="INFO">VALUE: [3.745900000000357e-05, 3.7874999999999714e-05, 3.7374999999999214e-05, 3.768100000000468e-05, 3.776400000000263e-05, 3.8166999999998674e-05, 3.805599999999465e-05, 3.822200000000442e-05, 3.733399999999998e-05, 3.776399999999569e-05, 3.8152999999999104e-05, 3.761199999999937e-05, 3.7347000000000075e-05, 3.8083000000001255e-05, 3.7762999999996216e-05, 3.7583000000000755e-05, 3.81659999999992e-05, 3.819399999999834e-05, 3.769399999999784e-05, 3.7583000000000755e-05, 3.776399999999569e-05, 3.806999999999422e-05, 3.730600000000084e-05, 3.79859999999968e-05, 3.729200000000127e-05, 3.74859999999963e-05, 3.7666999999998174e-05, 3.749999999999587e-05, 3.8208999999997384e-05, 3.747199999999673e-05, 3.7416999999997924e-05, 3.823599999999705e-05, 3.8083000000001255e-05, 3.819399999999834e-05, 3.749999999999587e-05, 3.7610999999999895e-05, 3.750000000000281e-05, 3.769399999999784e-05, 3.7624999999999464e-05, 3.740199999999888e-05, 3.7888999999999284e-05, 3.740300000000529e-05, 3.798600000000374e-05, 3.8069000000001685e-05, 3.7388999999998784e-05, 3.794399999999809e-05, 3.806999999999422e-05, 3.791700000000536e-05, 3.755600000000109e-05, 3.820900000000432e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.365" endtime="20201117 14:41:22.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.353" endtime="20201117 14:41:22.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.377" endtime="20201117 14:41:22.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.385" endtime="20201117 14:41:22.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.380" endtime="20201117 14:41:22.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.372" endtime="20201117 14:41:22.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.867" endtime="20201117 14:41:22.410"></status>
</kw>
<msg timestamp="20201117 14:41:22.411" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.432" endtime="20201117 14:41:22.452"></status>
</kw>
<msg timestamp="20201117 14:41:22.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.429" endtime="20201117 14:41:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.455" endtime="20201117 14:41:22.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.461" endtime="20201117 14:41:22.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.422" endtime="20201117 14:41:22.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.416" endtime="20201117 14:41:22.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.484" endtime="20201117 14:41:22.820"></status>
</kw>
<msg timestamp="20201117 14:41:22.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040613944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040651292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.481" endtime="20201117 14:41:22.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040613944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040651292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.829" endtime="20201117 14:41:22.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.849" endtime="20201117 14:41:22.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.474" endtime="20201117 14:41:22.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.469" endtime="20201117 14:41:22.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.868" level="INFO">${RESULT} = [{'time': 0.040651292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.734799999999955e-05, 'source_diff': 3.734799999999955e-05}, {'time': 0.040699222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.859" endtime="20201117 14:41:22.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.901" level="INFO">${ACCURACY} = {'source_diff': [3.734799999999955e-05, 3.7319000000000935e-05, 3.772200000000392e-05, 3.791700000000536e-05, 3.7888999999999284e-05, 3.772199999999698e-05, 3.7569000000001185e-05, 3.7597000000000325e...</msg>
<status status="PASS" starttime="20201117 14:41:22.870" endtime="20201117 14:41:22.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.911" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.909" endtime="20201117 14:41:22.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.917" level="INFO">VALUE: [3.734799999999955e-05, 3.7319000000000935e-05, 3.772200000000392e-05, 3.791700000000536e-05, 3.7888999999999284e-05, 3.772199999999698e-05, 3.7569000000001185e-05, 3.7597000000000325e-05, 3.79450000000045e-05, 3.755600000000109e-05, 3.786199999999962e-05, 3.799999999999637e-05, 3.824999999999662e-05, 3.7874999999999714e-05, 3.774999999999612e-05, 3.805600000000159e-05, 3.7624999999999464e-05, 3.757000000000066e-05, 3.76659999999987e-05, 3.773599999999655e-05, 3.7582999999993816e-05, 3.7277000000002225e-05, 3.820799999999791e-05, 3.8069000000001685e-05, 3.7583000000000755e-05, 3.80980000000003e-05, 3.790199999999938e-05, 3.7458999999996634e-05, 3.757000000000066e-05, 3.783400000000048e-05, 3.7874999999999714e-05, 3.7652999999998604e-05, 3.750000000000281e-05, 3.7652999999998604e-05, 3.779200000000177e-05, 3.734799999999955e-05, 3.7930999999997994e-05, 3.8152999999999104e-05, 3.745799999999716e-05, 3.8124999999999964e-05, 3.7763000000003155e-05, 3.7776999999995786e-05, 3.74580000000041e-05, 3.726399999999519e-05, 3.794400000000503e-05, 3.817999999999877e-05, 3.815300000000604e-05, 3.767999999999827e-05, 3.7888999999999284e-05, 3.770800000000435e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.914" endtime="20201117 14:41:22.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.902" endtime="20201117 14:41:22.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.925" endtime="20201117 14:41:22.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.934" endtime="20201117 14:41:22.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.930" endtime="20201117 14:41:22.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.921" endtime="20201117 14:41:22.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.412" endtime="20201117 14:41:22.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.863" endtime="20201117 14:41:22.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.861" endtime="20201117 14:41:22.960"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.965" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.987" endtime="20201117 14:41:23.006"></status>
</kw>
<msg timestamp="20201117 14:41:23.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.983" endtime="20201117 14:41:23.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.009" endtime="20201117 14:41:23.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.016" endtime="20201117 14:41:23.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.976" endtime="20201117 14:41:23.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.971" endtime="20201117 14:41:23.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.039" endtime="20201117 14:41:23.375"></status>
</kw>
<msg timestamp="20201117 14:41:23.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046019792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.036" endtime="20201117 14:41:23.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046019792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.385" endtime="20201117 14:41:23.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.403" endtime="20201117 14:41:23.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.028" endtime="20201117 14:41:23.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.024" endtime="20201117 14:41:23.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.422" level="INFO">${RESULT} = [{'time': 0.046059014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.922200000000542e-05, 'source_diff': 3.922200000000542e-05}, {'time': 0.046106986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.413" endtime="20201117 14:41:23.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.453" level="INFO">${ACCURACY} = {'source_diff': [3.922200000000542e-05, 3.854200000000252e-05, 3.8444999999998064e-05, 3.8333000000001505e-05, 3.895799999999866e-05, 3.9082999999995316e-05, 3.8361000000000645e-05, 3.873599999999755e...</msg>
<status status="PASS" starttime="20201117 14:41:23.424" endtime="20201117 14:41:23.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.464" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.461" endtime="20201117 14:41:23.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.469" level="INFO">VALUE: [3.922200000000542e-05, 3.854200000000252e-05, 3.8444999999998064e-05, 3.8333000000001505e-05, 3.895799999999866e-05, 3.9082999999995316e-05, 3.8361000000000645e-05, 3.873599999999755e-05, 3.8889000000000284e-05, 3.905599999999565e-05, 3.8639000000000034e-05, 3.89859999999978e-05, 3.9139000000000534e-05, 3.857000000000166e-05, 3.8790999999996356e-05, 3.86659999999997e-05, 3.847199999999773e-05, 3.9055000000003115e-05, 3.852800000000295e-05, 3.8875000000000715e-05, 3.8819000000002435e-05, 3.841700000000586e-05, 3.8889000000000284e-05, 3.8639000000000034e-05, 3.9096999999994886e-05, 3.8402999999999354e-05, 3.8402999999999354e-05, 3.904200000000302e-05, 3.9111000000001395e-05, 3.922200000000542e-05, 3.857000000000166e-05, 3.8388999999999784e-05, 3.8666999999999174e-05, 3.9111000000001395e-05, 3.893100000000593e-05, 3.880600000000234e-05, 3.908400000000173e-05, 3.9096999999994886e-05, 3.8597000000001325e-05, 3.8332999999994566e-05, 3.9111000000001395e-05, 3.8832999999995066e-05, 3.919399999999934e-05, 3.892999999999952e-05, 3.8319000000001935e-05, 3.902799999999651e-05, 3.8596999999994386e-05, 3.922199999999848e-05, 3.848600000000424e-05, 3.847200000000467e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.466" endtime="20201117 14:41:23.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.455" endtime="20201117 14:41:23.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.478" endtime="20201117 14:41:23.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.486" endtime="20201117 14:41:23.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.481" endtime="20201117 14:41:23.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.473" endtime="20201117 14:41:23.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.967" endtime="20201117 14:41:23.511"></status>
</kw>
<msg timestamp="20201117 14:41:23.512" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.533" endtime="20201117 14:41:23.553"></status>
</kw>
<msg timestamp="20201117 14:41:23.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.530" endtime="20201117 14:41:23.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.556" endtime="20201117 14:41:23.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.563" endtime="20201117 14:41:23.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.523" endtime="20201117 14:41:23.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.517" endtime="20201117 14:41:23.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.586" endtime="20201117 14:41:23.921"></status>
</kw>
<msg timestamp="20201117 14:41:23.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.583" endtime="20201117 14:41:23.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.931" endtime="20201117 14:41:23.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.949" endtime="20201117 14:41:23.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.576" endtime="20201117 14:41:23.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.571" endtime="20201117 14:41:23.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.968" level="INFO">${RESULT} = [{'time': 0.040358597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8375000000000214e-05, 'source_diff': 3.8375000000000214e-05}, {'time': 0.040407597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:23.959" endtime="20201117 14:41:23.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.999" level="INFO">${ACCURACY} = {'source_diff': [3.8375000000000214e-05, 3.9153000000000104e-05, 3.8375000000000214e-05, 3.8861000000001145e-05, 3.829199999999533e-05, 3.847199999999773e-05, 3.847200000000467e-05, 3.88059999999954e-...</msg>
<status status="PASS" starttime="20201117 14:41:23.970" endtime="20201117 14:41:23.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.010" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.007" endtime="20201117 14:41:24.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.015" level="INFO">VALUE: [3.8375000000000214e-05, 3.9153000000000104e-05, 3.8375000000000214e-05, 3.8861000000001145e-05, 3.829199999999533e-05, 3.847199999999773e-05, 3.847200000000467e-05, 3.88059999999954e-05, 3.8444999999998064e-05, 3.832000000000141e-05, 3.900000000000431e-05, 3.897199999999823e-05, 3.8930999999998994e-05, 3.9153000000000104e-05, 3.919399999999934e-05, 3.8540999999996106e-05, 3.8652999999999604e-05, 3.9110999999994456e-05, 3.8305000000002365e-05, 3.845799999999816e-05, 3.874999999999712e-05, 3.925000000000456e-05, 3.8583000000001755e-05, 3.917999999999977e-05, 3.8818999999995496e-05, 3.854200000000252e-05, 3.924999999999762e-05, 3.8916999999999424e-05, 3.902800000000345e-05, 3.832000000000141e-05, 3.877799999999626e-05, 3.8972999999997704e-05, 3.908400000000173e-05, 3.865300000000654e-05, 3.874999999999712e-05, 3.9180999999999244e-05, 3.901399999999694e-05, 3.915199999999369e-05, 3.8819000000002435e-05, 3.8776999999996786e-05, 3.9012999999997466e-05, 3.8902999999999854e-05, 3.844399999999859e-05, 3.8332999999994566e-05, 3.844399999999859e-05, 3.901400000000388e-05, 3.9069000000002685e-05, 3.9153000000000104e-05, 3.855599999999515e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.012" endtime="20201117 14:41:24.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.000" endtime="20201117 14:41:24.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.024" endtime="20201117 14:41:24.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.032" endtime="20201117 14:41:24.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.028" endtime="20201117 14:41:24.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.019" endtime="20201117 14:41:24.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.513" endtime="20201117 14:41:24.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.963" endtime="20201117 14:41:24.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.961" endtime="20201117 14:41:24.058"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.063" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.086" endtime="20201117 14:41:24.106"></status>
</kw>
<msg timestamp="20201117 14:41:24.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.082" endtime="20201117 14:41:24.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.109" endtime="20201117 14:41:24.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.115" endtime="20201117 14:41:24.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.074" endtime="20201117 14:41:24.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.069" endtime="20201117 14:41:24.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.138" endtime="20201117 14:41:24.473"></status>
</kw>
<msg timestamp="20201117 14:41:24.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046854472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046894097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.135" endtime="20201117 14:41:24.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046854472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046894097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.482" endtime="20201117 14:41:24.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.501" endtime="20201117 14:41:24.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.128" endtime="20201117 14:41:24.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.123" endtime="20201117 14:41:24.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.518" level="INFO">${RESULT} = [{'time': 0.046894097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9625000000001465e-05, 'source_diff': 3.9625000000001465e-05}, {'time': 0.046943083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:24.509" endtime="20201117 14:41:24.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.549" level="INFO">${ACCURACY} = {'source_diff': [3.9625000000001465e-05, 4.017999999999383e-05, 4.0139000000001535e-05, 4.0139000000001535e-05, 4.002800000000445e-05, 3.9597000000002325e-05, 3.94580000000061e-05, 4.0194999999999814e...</msg>
<status status="PASS" starttime="20201117 14:41:24.520" endtime="20201117 14:41:24.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.559" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.557" endtime="20201117 14:41:24.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.565" level="INFO">VALUE: [3.9625000000001465e-05, 4.017999999999383e-05, 4.0139000000001535e-05, 4.0139000000001535e-05, 4.002800000000445e-05, 3.9597000000002325e-05, 3.94580000000061e-05, 4.0194999999999814e-05, 4.023600000000599e-05, 3.9610999999994956e-05, 3.9860999999995206e-05, 3.9333000000002505e-05, 3.9846999999995636e-05, 3.9346999999995136e-05, 3.974999999999812e-05, 3.9917000000000424e-05, 4.011199999999493e-05, 3.9597000000002325e-05, 3.999999999999837e-05, 4.020799999999991e-05, 4.019400000000034e-05, 3.9610999999994956e-05, 3.9790999999997356e-05, 4.019400000000034e-05, 3.9430999999999494e-05, 3.9889000000001285e-05, 3.9305000000003365e-05, 3.998600000000574e-05, 4.0083000000003255e-05, 4.002800000000445e-05, 3.9930999999999994e-05, 3.949999999999787e-05, 3.952799999999701e-05, 3.98059999999964e-05, 4.026399999999819e-05, 3.9694999999999314e-05, 3.9625000000001465e-05, 3.968000000000027e-05, 3.9582999999995816e-05, 4.0194999999999814e-05, 3.974999999999812e-05, 4.020800000000685e-05, 3.9625000000001465e-05, 3.941600000000045e-05, 3.940200000000088e-05, 3.9903000000000854e-05, 3.99859999999988e-05, 3.9833000000003005e-05, 3.9903000000000854e-05, 3.9832999999996066e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.562" endtime="20201117 14:41:24.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.550" endtime="20201117 14:41:24.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.574" endtime="20201117 14:41:24.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.582" endtime="20201117 14:41:24.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.578" endtime="20201117 14:41:24.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.569" endtime="20201117 14:41:24.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.065" endtime="20201117 14:41:24.608"></status>
</kw>
<msg timestamp="20201117 14:41:24.608" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.630" endtime="20201117 14:41:24.650"></status>
</kw>
<msg timestamp="20201117 14:41:24.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.627" endtime="20201117 14:41:24.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.653" endtime="20201117 14:41:24.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.660" endtime="20201117 14:41:24.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.619" endtime="20201117 14:41:24.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.614" endtime="20201117 14:41:24.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.681" endtime="20201117 14:41:24.999"></status>
</kw>
<msg timestamp="20201117 14:41:25.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04170375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:24.680" endtime="20201117 14:41:25.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04170375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:25.009" endtime="20201117 14:41:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.028" endtime="20201117 14:41:25.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.673" endtime="20201117 14:41:25.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.668" endtime="20201117 14:41:25.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.046" level="INFO">${RESULT} = [{'time': 0.041743333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9583000000002755e-05, 'source_diff': 3.9583000000002755e-05}, {'time': 0.041793333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:25.037" endtime="20201117 14:41:25.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.079" level="INFO">${ACCURACY} = {'source_diff': [3.9583000000002755e-05, 3.973599999999855e-05, 4.000000000000531e-05, 3.997199999999923e-05, 4.018000000000077e-05, 4.0111000000002395e-05, 3.9444999999999064e-05, 4.0097000000002825e...</msg>
<status status="PASS" starttime="20201117 14:41:25.048" endtime="20201117 14:41:25.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.090" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.088" endtime="20201117 14:41:25.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.096" level="INFO">VALUE: [3.9583000000002755e-05, 3.973599999999855e-05, 4.000000000000531e-05, 3.997199999999923e-05, 4.018000000000077e-05, 4.0111000000002395e-05, 3.9444999999999064e-05, 4.0097000000002825e-05, 3.9639000000001035e-05, 3.9361000000001645e-05, 3.9458999999998634e-05, 4.001399999999794e-05, 3.944399999999959e-05, 4.001399999999794e-05, 3.965200000000113e-05, 3.9888999999994346e-05, 4.006999999999622e-05, 3.990200000000138e-05, 3.9361000000001645e-05, 3.9847000000002575e-05, 3.9277000000004225e-05, 3.954199999999658e-05, 3.9832999999996066e-05, 4.0040999999997606e-05, 3.9818999999996496e-05, 3.954200000000352e-05, 3.954199999999658e-05, 3.9333000000002505e-05, 4.024999999999862e-05, 3.944399999999959e-05, 3.9430999999999494e-05, 3.980600000000334e-05, 3.9375000000001215e-05, 3.972199999999898e-05, 3.9403000000000354e-05, 3.983400000000248e-05, 3.9597000000002325e-05, 3.94859999999983e-05, 4.002800000000445e-05, 3.9930999999999994e-05, 3.9568999999996246e-05, 3.9667000000000174e-05, 4.000000000000531e-05, 3.99859999999988e-05, 4.018000000000077e-05, 3.9611000000001895e-05, 3.99859999999988e-05, 3.94859999999983e-05, 3.9597000000002325e-05, 4.0139000000001535e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.093" endtime="20201117 14:41:25.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.081" endtime="20201117 14:41:25.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.105" endtime="20201117 14:41:25.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.113" endtime="20201117 14:41:25.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.109" endtime="20201117 14:41:25.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.100" endtime="20201117 14:41:25.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.610" endtime="20201117 14:41:25.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.061" endtime="20201117 14:41:25.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.059" endtime="20201117 14:41:25.140"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.145" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.166" endtime="20201117 14:41:25.186"></status>
</kw>
<msg timestamp="20201117 14:41:25.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.163" endtime="20201117 14:41:25.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.189" endtime="20201117 14:41:25.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.195" endtime="20201117 14:41:25.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.156" endtime="20201117 14:41:25.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.150" endtime="20201117 14:41:25.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.218" endtime="20201117 14:41:25.553"></status>
</kw>
<msg timestamp="20201117 14:41:25.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046076944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.215" endtime="20201117 14:41:25.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046076944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.562" endtime="20201117 14:41:25.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.581" endtime="20201117 14:41:25.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.208" endtime="20201117 14:41:25.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.204" endtime="20201117 14:41:25.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.600" level="INFO">${RESULT} = [{'time': 0.046076944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.113800000000306e-05, 'source_diff': 4.113800000000306e-05}, {'time': 0.046132931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:25.591" endtime="20201117 14:41:25.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.630" level="INFO">${ACCURACY} = {'source_diff': [4.113800000000306e-05, 4.0889000000002285e-05, 4.077799999999826e-05, 4.0776999999998786e-05, 4.040199999999494e-05, 4.0847000000003575e-05, 4.0319000000003935e-05, 4.0903000000001855...</msg>
<status status="PASS" starttime="20201117 14:41:25.602" endtime="20201117 14:41:25.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.641" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.639" endtime="20201117 14:41:25.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.646" level="INFO">VALUE: [4.113800000000306e-05, 4.0889000000002285e-05, 4.077799999999826e-05, 4.0776999999998786e-05, 4.040199999999494e-05, 4.0847000000003575e-05, 4.0319000000003935e-05, 4.0903000000001855e-05, 4.1068999999997746e-05, 4.0582999999996816e-05, 4.0889000000002285e-05, 4.0874999999995776e-05, 4.0861000000003145e-05, 4.106999999999722e-05, 4.055599999999715e-05, 4.0681000000000744e-05, 4.0903000000001855e-05, 4.0583000000003755e-05, 4.1181000000001244e-05, 4.1195000000000814e-05, 4.1195000000000814e-05, 4.09859999999998e-05, 4.026399999999819e-05, 4.0568999999997246e-05, 4.0374999999995276e-05, 4.0639000000002035e-05, 4.091600000000195e-05, 4.1167000000001674e-05, 4.068000000000127e-05, 4.123600000000005e-05, 4.0374999999995276e-05, 4.0625000000002465e-05, 4.051399999999844e-05, 4.0805000000004865e-05, 4.0403000000001354e-05, 4.0860999999996206e-05, 4.0888999999995346e-05, 4.099999999999937e-05, 4.1153000000002105e-05, 4.034800000000255e-05, 4.127799999999876e-05, 4.115200000000263e-05, 4.0582999999996816e-05, 4.0959000000000134e-05, 4.090200000000238e-05, 4.0875000000002715e-05, 4.032000000000341e-05, 4.090200000000238e-05, 4.04859999999993e-05, 4.068000000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.643" endtime="20201117 14:41:25.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.632" endtime="20201117 14:41:25.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.656" endtime="20201117 14:41:25.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.664" endtime="20201117 14:41:25.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.660" endtime="20201117 14:41:25.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.651" endtime="20201117 14:41:25.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.146" endtime="20201117 14:41:25.690"></status>
</kw>
<msg timestamp="20201117 14:41:25.690" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.713" endtime="20201117 14:41:25.733"></status>
</kw>
<msg timestamp="20201117 14:41:25.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.709" endtime="20201117 14:41:25.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.736" endtime="20201117 14:41:25.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.742" endtime="20201117 14:41:25.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.702" endtime="20201117 14:41:25.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.696" endtime="20201117 14:41:25.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.765" endtime="20201117 14:41:26.101"></status>
</kw>
<msg timestamp="20201117 14:41:26.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042691986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.762" endtime="20201117 14:41:26.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042691986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.110" endtime="20201117 14:41:26.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.129" endtime="20201117 14:41:26.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.755" endtime="20201117 14:41:26.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.750" endtime="20201117 14:41:26.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.148" level="INFO">${RESULT} = [{'time': 0.042732375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0389000000001785e-05, 'source_diff': 4.0389000000001785e-05}, {'time': 0.042783431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.139" endtime="20201117 14:41:26.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.178" level="INFO">${ACCURACY} = {'source_diff': [4.0389000000001785e-05, 4.056999999999672e-05, 4.0445000000000064e-05, 4.104200000000502e-05, 4.02780000000047e-05, 4.105599999999765e-05, 4.1110999999996456e-05, 4.058400000000323e-0...</msg>
<status status="PASS" starttime="20201117 14:41:26.150" endtime="20201117 14:41:26.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.189" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.187" endtime="20201117 14:41:26.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.194" level="INFO">VALUE: [4.0389000000001785e-05, 4.056999999999672e-05, 4.0445000000000064e-05, 4.104200000000502e-05, 4.02780000000047e-05, 4.105599999999765e-05, 4.1110999999996456e-05, 4.058400000000323e-05, 4.05980000000028e-05, 4.081999999999697e-05, 4.0512999999998967e-05, 4.1012999999999467e-05, 4.090199999999544e-05, 4.1068999999997746e-05, 4.126399999999919e-05, 4.0833000000004005e-05, 4.054199999999758e-05, 4.122200000000048e-05, 4.0596999999996386e-05, 4.049999999999887e-05, 4.1167000000001674e-05, 4.1110999999996456e-05, 4.106999999999722e-05, 4.0708999999999884e-05, 4.0417000000000924e-05, 4.1139000000002535e-05, 4.0959000000000134e-05, 4.097200000000023e-05, 4.03059999999969e-05, 4.102799999999851e-05, 4.054199999999758e-05, 4.117999999999483e-05, 4.0276999999998286e-05, 4.0347000000003075e-05, 4.0832999999997066e-05, 4.047199999999973e-05, 4.076399999999869e-05, 4.0540999999998106e-05, 4.0445000000000064e-05, 4.051399999999844e-05, 4.102799999999851e-05, 4.102799999999851e-05, 4.0889000000002285e-05, 4.0903000000001855e-05, 4.0375000000002215e-05, 4.1209000000000384e-05, 4.1181000000001244e-05, 4.0319000000003935e-05, 4.052799999999801e-05, 4.041600000000145e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.191" endtime="20201117 14:41:26.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.180" endtime="20201117 14:41:26.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.204" endtime="20201117 14:41:26.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.212" endtime="20201117 14:41:26.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.207" endtime="20201117 14:41:26.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.199" endtime="20201117 14:41:26.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.692" endtime="20201117 14:41:26.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.142" endtime="20201117 14:41:26.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.141" endtime="20201117 14:41:26.238"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.243" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.265" endtime="20201117 14:41:26.285"></status>
</kw>
<msg timestamp="20201117 14:41:26.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.261" endtime="20201117 14:41:26.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.288" endtime="20201117 14:41:26.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.294" endtime="20201117 14:41:26.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.254" endtime="20201117 14:41:26.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.248" endtime="20201117 14:41:26.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.317" endtime="20201117 14:41:26.653"></status>
</kw>
<msg timestamp="20201117 14:41:26.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046134278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046175681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.314" endtime="20201117 14:41:26.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046134278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046175681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.662" endtime="20201117 14:41:26.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.681" endtime="20201117 14:41:26.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.307" endtime="20201117 14:41:26.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.302" endtime="20201117 14:41:26.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.698" level="INFO">${RESULT} = [{'time': 0.046175681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1403000000002355e-05, 'source_diff': 4.1403000000002355e-05}, {'time': 0.046237681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.689" endtime="20201117 14:41:26.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.729" level="INFO">${ACCURACY} = {'source_diff': [4.1403000000002355e-05, 4.1695000000001314e-05, 4.197200000000123e-05, 4.168000000000227e-05, 4.144400000000159e-05, 4.2138999999996596e-05, 4.1597000000004325e-05, 4.173600000000055e...</msg>
<status status="PASS" starttime="20201117 14:41:26.700" endtime="20201117 14:41:26.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.740" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.738" endtime="20201117 14:41:26.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.747" level="INFO">VALUE: [4.1403000000002355e-05, 4.1695000000001314e-05, 4.197200000000123e-05, 4.168000000000227e-05, 4.144400000000159e-05, 4.2138999999996596e-05, 4.1597000000004325e-05, 4.173600000000055e-05, 4.194400000000209e-05, 4.200000000000037e-05, 4.177799999999926e-05, 4.167999999999533e-05, 4.1389000000002785e-05, 4.14860000000003e-05, 4.2054999999999176e-05, 4.169400000000184e-05, 4.19860000000008e-05, 4.1639000000003035e-05, 4.2111000000004395e-05, 4.127799999999876e-05, 4.176300000000022e-05, 4.1945000000001564e-05, 4.2040999999999606e-05, 4.2167000000002675e-05, 4.176399999999969e-05, 4.1875000000003715e-05, 4.1319000000004935e-05, 4.1652999999995666e-05, 4.2096999999997886e-05, 4.201399999999994e-05, 4.1667000000002175e-05, 4.1554999999998676e-05, 4.198599999999386e-05, 4.152800000000595e-05, 4.194400000000209e-05, 4.170800000000141e-05, 4.1512999999999967e-05, 4.1667000000002175e-05, 4.2194999999994875e-05, 4.1875000000003715e-05, 4.136200000000312e-05, 4.129200000000527e-05, 4.222200000000148e-05, 4.2124999999997026e-05, 4.216599999999626e-05, 4.138799999999637e-05, 4.124999999999962e-05, 4.1554999999998676e-05, 4.2138999999996596e-05, 4.220799999999497e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.743" endtime="20201117 14:41:26.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.731" endtime="20201117 14:41:26.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.756" endtime="20201117 14:41:26.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.765" endtime="20201117 14:41:26.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.760" endtime="20201117 14:41:26.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.751" endtime="20201117 14:41:26.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.245" endtime="20201117 14:41:26.790"></status>
</kw>
<msg timestamp="20201117 14:41:26.790" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.812" endtime="20201117 14:41:26.832"></status>
</kw>
<msg timestamp="20201117 14:41:26.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.809" endtime="20201117 14:41:26.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.835" endtime="20201117 14:41:26.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.841" endtime="20201117 14:41:26.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.802" endtime="20201117 14:41:26.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.796" endtime="20201117 14:41:26.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.865" endtime="20201117 14:41:27.201"></status>
</kw>
<msg timestamp="20201117 14:41:27.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040799653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040841194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.861" endtime="20201117 14:41:27.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040799653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040841194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.211" endtime="20201117 14:41:27.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.229" endtime="20201117 14:41:27.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.854" endtime="20201117 14:41:27.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.849" endtime="20201117 14:41:27.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.248" level="INFO">${RESULT} = [{'time': 0.040841194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1540999999999106e-05, 'source_diff': 4.1540999999999106e-05}, {'time': 0.040902167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:27.239" endtime="20201117 14:41:27.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.281" level="INFO">${ACCURACY} = {'source_diff': [4.1540999999999106e-05, 4.151400000000638e-05, 4.2223000000000954e-05, 4.2097000000004825e-05, 4.1959000000001134e-05, 4.1737000000000024e-05, 4.2181000000002244e-05, 4.22220000000014...</msg>
<status status="PASS" starttime="20201117 14:41:27.250" endtime="20201117 14:41:27.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.293" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.290" endtime="20201117 14:41:27.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.298" level="INFO">VALUE: [4.1540999999999106e-05, 4.151400000000638e-05, 4.2223000000000954e-05, 4.2097000000004825e-05, 4.1959000000001134e-05, 4.1737000000000024e-05, 4.2181000000002244e-05, 4.222200000000148e-05, 4.1818999999998496e-05, 4.1610999999996956e-05, 4.155599999999815e-05, 4.194399999999515e-05, 4.1568999999998246e-05, 4.1819000000005435e-05, 4.226400000000019e-05, 4.152799999999901e-05, 4.2138999999996596e-05, 4.155599999999815e-05, 4.1695000000001314e-05, 4.1333000000004505e-05, 4.126399999999919e-05, 4.1361000000003645e-05, 4.173600000000055e-05, 4.1611000000003895e-05, 4.1945000000001564e-05, 4.218000000000277e-05, 4.2125000000003965e-05, 4.2110999999997456e-05, 4.1374999999996276e-05, 4.1639000000003035e-05, 4.176400000000663e-05, 4.2096999999997886e-05, 4.219400000000234e-05, 4.1554999999998676e-05, 4.154199999999858e-05, 4.169400000000184e-05, 4.156999999999772e-05, 4.1568999999998246e-05, 4.1931000000001994e-05, 4.1430999999994556e-05, 4.1666999999995236e-05, 4.176399999999969e-05, 4.183400000000448e-05, 4.208399999999779e-05, 4.1417000000001924e-05, 4.136200000000312e-05, 4.1638999999996096e-05, 4.2195000000001814e-05, 4.1597000000004325e-05, 4.1332999999997566e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.295" endtime="20201117 14:41:27.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.283" endtime="20201117 14:41:27.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.307" endtime="20201117 14:41:27.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.315" endtime="20201117 14:41:27.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.311" endtime="20201117 14:41:27.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.302" endtime="20201117 14:41:27.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.792" endtime="20201117 14:41:27.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.241" endtime="20201117 14:41:27.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.239" endtime="20201117 14:41:27.341"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.346" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.368" endtime="20201117 14:41:27.387"></status>
</kw>
<msg timestamp="20201117 14:41:27.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.364" endtime="20201117 14:41:27.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.391" endtime="20201117 14:41:27.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.397" endtime="20201117 14:41:27.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.357" endtime="20201117 14:41:27.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.352" endtime="20201117 14:41:27.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.420" endtime="20201117 14:41:27.754"></status>
</kw>
<msg timestamp="20201117 14:41:27.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045903778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045946875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.417" endtime="20201117 14:41:27.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045903778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045946875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.764" endtime="20201117 14:41:27.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.783" endtime="20201117 14:41:27.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.409" endtime="20201117 14:41:27.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.405" endtime="20201117 14:41:27.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.803" level="INFO">${RESULT} = [{'time': 0.045946875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3096999999998886e-05, 'source_diff': 4.3096999999998886e-05}, {'time': 0.046006847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:27.794" endtime="20201117 14:41:27.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.833" level="INFO">${ACCURACY} = {'source_diff': [4.3096999999998886e-05, 4.304099999999367e-05, 4.252800000000001e-05, 4.2818999999999496e-05, 4.2318999999998996e-05, 4.2695000000002314e-05, 4.325000000000162e-05, 4.3195000000002814...</msg>
<status status="PASS" starttime="20201117 14:41:27.805" endtime="20201117 14:41:27.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.844" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.842" endtime="20201117 14:41:27.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.849" level="INFO">VALUE: [4.3096999999998886e-05, 4.304099999999367e-05, 4.252800000000001e-05, 4.2818999999999496e-05, 4.2318999999998996e-05, 4.2695000000002314e-05, 4.325000000000162e-05, 4.3195000000002814e-05, 4.226400000000019e-05, 4.2652999999996666e-05, 4.2860999999998206e-05, 4.2944999999995626e-05, 4.256999999999872e-05, 4.3152999999997166e-05, 4.2582999999998816e-05, 4.2388999999996846e-05, 4.320799999999597e-05, 4.2374999999997276e-05, 4.3110999999998456e-05, 4.276400000000069e-05, 4.2861000000005145e-05, 4.2917000000003425e-05, 4.295800000000266e-05, 4.275000000000112e-05, 4.2596999999998386e-05, 4.2417000000002925e-05, 4.322200000000248e-05, 4.2445000000002064e-05, 4.3110999999998456e-05, 4.231999999999847e-05, 4.276400000000069e-05, 4.2889000000004285e-05, 4.319400000000334e-05, 4.2403000000003355e-05, 4.255599999999915e-05, 4.297199999999529e-05, 4.2374999999997276e-05, 4.2888999999997346e-05, 4.2402999999996416e-05, 4.300000000000137e-05, 4.300000000000137e-05, 4.2318999999998996e-05, 4.295800000000266e-05, 4.29860000000018e-05, 4.3167000000003675e-05, 4.3110999999998456e-05, 4.2375000000004215e-05, 4.251400000000044e-05, 4.2945000000002564e-05, 4.3291000000000857e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.846" endtime="20201117 14:41:27.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.835" endtime="20201117 14:41:27.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.858" endtime="20201117 14:41:27.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.866" endtime="20201117 14:41:27.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.862" endtime="20201117 14:41:27.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.854" endtime="20201117 14:41:27.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.348" endtime="20201117 14:41:27.892"></status>
</kw>
<msg timestamp="20201117 14:41:27.892" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.914" endtime="20201117 14:41:27.934"></status>
</kw>
<msg timestamp="20201117 14:41:27.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.910" endtime="20201117 14:41:27.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.937" endtime="20201117 14:41:27.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.943" endtime="20201117 14:41:27.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.903" endtime="20201117 14:41:27.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.897" endtime="20201117 14:41:27.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.967" endtime="20201117 14:41:28.284"></status>
</kw>
<msg timestamp="20201117 14:41:28.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040517292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.963" endtime="20201117 14:41:28.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040517292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.294" endtime="20201117 14:41:28.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.313" endtime="20201117 14:41:28.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.956" endtime="20201117 14:41:28.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.952" endtime="20201117 14:41:28.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.332" level="INFO">${RESULT} = [{'time': 0.040559833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2541000000000107e-05, 'source_diff': 4.2541000000000107e-05}, {'time': 0.040616889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:28.323" endtime="20201117 14:41:28.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.363" level="INFO">${ACCURACY} = {'source_diff': [4.2541000000000107e-05, 4.2625000000004465e-05, 4.2874999999997776e-05, 4.3110999999998456e-05, 4.3125000000004965e-05, 4.247199999999479e-05, 4.251400000000044e-05, 4.256999999999872...</msg>
<status status="PASS" starttime="20201117 14:41:28.334" endtime="20201117 14:41:28.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.374" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.371" endtime="20201117 14:41:28.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.379" level="INFO">VALUE: [4.2541000000000107e-05, 4.2625000000004465e-05, 4.2874999999997776e-05, 4.3110999999998456e-05, 4.3125000000004965e-05, 4.247199999999479e-05, 4.251400000000044e-05, 4.256999999999872e-05, 4.2318999999998996e-05, 4.2680999999995806e-05, 4.276400000000069e-05, 4.254199999999958e-05, 4.3166999999996736e-05, 4.305599999999965e-05, 4.2667000000003175e-05, 4.2527000000000537e-05, 4.254200000000652e-05, 4.31660000000042e-05, 4.326400000000119e-05, 4.295799999999572e-05, 4.292999999999658e-05, 4.2903000000003855e-05, 4.245800000000216e-05, 4.2582999999998816e-05, 4.227799999999976e-05, 4.2417000000002925e-05, 4.2818999999999496e-05, 4.2402999999996416e-05, 4.3111000000005395e-05, 4.3209000000002384e-05, 4.3167000000003675e-05, 4.2902999999996916e-05, 4.2944999999995626e-05, 4.308400000000573e-05, 4.2527000000000537e-05, 4.3166999999996736e-05, 4.256999999999872e-05, 4.259799999999786e-05, 4.232000000000541e-05, 4.288799999999787e-05, 4.2818999999999496e-05, 4.315200000000463e-05, 4.251400000000044e-05, 4.331999999999947e-05, 4.272200000000198e-05, 4.322200000000248e-05, 4.2374999999997276e-05, 4.254199999999958e-05, 4.2902999999996916e-05, 4.247199999999479e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.376" endtime="20201117 14:41:28.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.364" endtime="20201117 14:41:28.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.388" endtime="20201117 14:41:28.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.396" endtime="20201117 14:41:28.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.392" endtime="20201117 14:41:28.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.383" endtime="20201117 14:41:28.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.894" endtime="20201117 14:41:28.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.344" endtime="20201117 14:41:28.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.342" endtime="20201117 14:41:28.422"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.427" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.449" endtime="20201117 14:41:28.469"></status>
</kw>
<msg timestamp="20201117 14:41:28.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.445" endtime="20201117 14:41:28.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.472" endtime="20201117 14:41:28.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.478" endtime="20201117 14:41:28.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.438" endtime="20201117 14:41:28.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.433" endtime="20201117 14:41:28.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.503" endtime="20201117 14:41:28.839"></status>
</kw>
<msg timestamp="20201117 14:41:28.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046162458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046205806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.499" endtime="20201117 14:41:28.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046162458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046205806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.848" endtime="20201117 14:41:28.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.867" endtime="20201117 14:41:28.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.492" endtime="20201117 14:41:28.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.486" endtime="20201117 14:41:28.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.885" level="INFO">${RESULT} = [{'time': 0.046205806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.334799999999861e-05, 'source_diff': 4.334799999999861e-05}, {'time': 0.046261806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.876" endtime="20201117 14:41:28.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.915" level="INFO">${ACCURACY} = {'source_diff': [4.334799999999861e-05, 4.35980000000058e-05, 4.379100000000136e-05, 4.404100000000161e-05, 4.390199999999844e-05, 4.3624999999998526e-05, 4.3374999999998276e-05, 4.3555000000000677e-0...</msg>
<status status="PASS" starttime="20201117 14:41:28.887" endtime="20201117 14:41:28.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.926" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.924" endtime="20201117 14:41:28.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.932" level="INFO">VALUE: [4.334799999999861e-05, 4.35980000000058e-05, 4.379100000000136e-05, 4.404100000000161e-05, 4.390199999999844e-05, 4.3624999999998526e-05, 4.3374999999998276e-05, 4.3555000000000677e-05, 4.329200000000033e-05, 4.376399999999475e-05, 4.379200000000083e-05, 4.3694999999996376e-05, 4.3610999999998956e-05, 4.3930999999997056e-05, 4.3430999999996556e-05, 4.3847000000006575e-05, 4.3846999999999636e-05, 4.347200000000273e-05, 4.377800000000126e-05, 4.3291000000000857e-05, 4.388799999999887e-05, 4.352800000000101e-05, 4.348599999999536e-05, 4.398599999999586e-05, 4.419400000000434e-05, 4.3305000000000426e-05, 4.3388999999997846e-05, 4.394399999999715e-05, 4.3888999999998346e-05, 4.4125000000005965e-05, 4.425000000000262e-05, 4.3332999999999566e-05, 4.3833000000000066e-05, 4.3681000000003745e-05, 4.329200000000033e-05, 4.3709000000002884e-05, 4.373599999999561e-05, 4.3430999999996556e-05, 4.4209000000003384e-05, 4.3931000000003995e-05, 4.372200000000298e-05, 4.398599999999586e-05, 4.352700000000154e-05, 4.3305000000000426e-05, 4.3555000000000677e-05, 4.326400000000119e-05, 4.352800000000101e-05, 4.394399999999715e-05, 4.4096999999999886e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.928" endtime="20201117 14:41:28.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.917" endtime="20201117 14:41:28.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.940" endtime="20201117 14:41:28.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.948" endtime="20201117 14:41:28.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.944" endtime="20201117 14:41:28.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.936" endtime="20201117 14:41:28.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.429" endtime="20201117 14:41:28.974"></status>
</kw>
<msg timestamp="20201117 14:41:28.974" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.996" endtime="20201117 14:41:29.016"></status>
</kw>
<msg timestamp="20201117 14:41:29.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.993" endtime="20201117 14:41:29.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.019" endtime="20201117 14:41:29.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.032" endtime="20201117 14:41:29.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.985" endtime="20201117 14:41:29.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.979" endtime="20201117 14:41:29.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.055" endtime="20201117 14:41:29.390"></status>
</kw>
<msg timestamp="20201117 14:41:29.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.052" endtime="20201117 14:41:29.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.400" endtime="20201117 14:41:29.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.418" endtime="20201117 14:41:29.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.045" endtime="20201117 14:41:29.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.040" endtime="20201117 14:41:29.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.437" level="INFO">${RESULT} = [{'time': 0.040602153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3417000000003925e-05, 'source_diff': 4.3417000000003925e-05}, {'time': 0.040664222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:29.428" endtime="20201117 14:41:29.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.470" level="INFO">${ACCURACY} = {'source_diff': [4.3417000000003925e-05, 4.3402999999997416e-05, 4.352800000000101e-05, 4.4013999999995e-05, 4.36939999999969e-05, 4.4083000000000316e-05, 4.4110999999999456e-05, 4.344400000000359e-05...</msg>
<status status="PASS" starttime="20201117 14:41:29.439" endtime="20201117 14:41:29.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.481" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.479" endtime="20201117 14:41:29.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.486" level="INFO">VALUE: [4.3417000000003925e-05, 4.3402999999997416e-05, 4.352800000000101e-05, 4.4013999999995e-05, 4.36939999999969e-05, 4.4083000000000316e-05, 4.4110999999999456e-05, 4.344400000000359e-05, 4.3610999999998956e-05, 4.349999999999493e-05, 4.3888999999998346e-05, 4.327800000000076e-05, 4.356999999999972e-05, 4.3874999999998776e-05, 4.3874999999998776e-05, 4.331999999999947e-05, 4.375000000000212e-05, 4.349999999999493e-05, 4.351300000000197e-05, 4.427800000000176e-05, 4.334800000000555e-05, 4.379200000000083e-05, 4.4152999999998166e-05, 4.3472999999995265e-05, 4.376400000000169e-05, 4.4013999999995e-05, 4.391599999999801e-05, 4.3541000000001107e-05, 4.3318999999999996e-05, 4.41660000000052e-05, 4.3332999999999566e-05, 4.3318999999999996e-05, 4.350000000000187e-05, 4.395799999999672e-05, 4.4138999999998596e-05, 4.39860000000028e-05, 4.354200000000058e-05, 4.4110999999999456e-05, 4.3902999999997916e-05, 4.3709000000002884e-05, 4.383399999999954e-05, 4.3709000000002884e-05, 4.427699999999535e-05, 4.3930999999997056e-05, 4.4194999999996876e-05, 4.3388999999997846e-05, 4.3874999999998776e-05, 4.3402999999997416e-05, 4.4069000000000746e-05, 4.4110999999999456e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.483" endtime="20201117 14:41:29.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.472" endtime="20201117 14:41:29.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.495" endtime="20201117 14:41:29.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.503" endtime="20201117 14:41:29.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.499" endtime="20201117 14:41:29.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.490" endtime="20201117 14:41:29.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.976" endtime="20201117 14:41:29.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.425" endtime="20201117 14:41:29.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.423" endtime="20201117 14:41:29.530"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.535" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.557" endtime="20201117 14:41:29.577"></status>
</kw>
<msg timestamp="20201117 14:41:29.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.554" endtime="20201117 14:41:29.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.580" endtime="20201117 14:41:29.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.587" endtime="20201117 14:41:29.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.546" endtime="20201117 14:41:29.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.540" endtime="20201117 14:41:29.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.610" endtime="20201117 14:41:29.947"></status>
</kw>
<msg timestamp="20201117 14:41:29.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046932556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.607" endtime="20201117 14:41:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046932556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.956" endtime="20201117 14:41:29.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.975" endtime="20201117 14:41:29.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.599" endtime="20201117 14:41:29.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.595" endtime="20201117 14:41:29.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.994" level="INFO">${RESULT} = [{'time': 0.046932556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4874999999999776e-05, 'source_diff': 4.4874999999999776e-05}, {'time': 0.046989556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:29.985" endtime="20201117 14:41:29.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.024" level="INFO">${ACCURACY} = {'source_diff': [4.4874999999999776e-05, 4.486199999999968e-05, 4.504199999999514e-05, 4.452799999999507e-05, 4.4666999999998236e-05, 4.4916999999998486e-05, 4.455600000000115e-05, 4.522200000000448e-...</msg>
<status status="PASS" starttime="20201117 14:41:29.996" endtime="20201117 14:41:30.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.035" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.033" endtime="20201117 14:41:30.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.041" level="INFO">VALUE: [4.4874999999999776e-05, 4.486199999999968e-05, 4.504199999999514e-05, 4.452799999999507e-05, 4.4666999999998236e-05, 4.4916999999998486e-05, 4.455600000000115e-05, 4.522200000000448e-05, 4.452799999999507e-05, 4.477700000000279e-05, 4.452700000000254e-05, 4.479100000000236e-05, 4.445799999999722e-05, 4.477800000000226e-05, 4.4652999999998666e-05, 4.4610999999999956e-05, 4.5180999999998306e-05, 4.495800000000466e-05, 4.4861000000000206e-05, 4.455600000000115e-05, 4.4945000000004565e-05, 4.473599999999661e-05, 4.4402999999998416e-05, 4.500000000000337e-05, 4.4347000000000136e-05, 4.4652999999998666e-05, 4.441599999999851e-05, 4.502800000000251e-05, 4.4833000000001066e-05, 4.529200000000233e-05, 4.5111000000000456e-05, 4.4347000000000136e-05, 4.4583000000000816e-05, 4.443000000000502e-05, 4.499999999999643e-05, 4.5138999999999596e-05, 4.4360999999999706e-05, 4.495800000000466e-05, 4.4610999999999956e-05, 4.4417000000004925e-05, 4.48060000000014e-05, 4.507000000000122e-05, 4.5194999999997876e-05, 4.4958999999997196e-05, 4.43060000000009e-05, 4.4638999999999096e-05, 4.477799999999532e-05, 4.436200000000612e-05, 4.4597000000000386e-05, 4.466599999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.038" endtime="20201117 14:41:30.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.026" endtime="20201117 14:41:30.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.049" endtime="20201117 14:41:30.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.058" endtime="20201117 14:41:30.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.053" endtime="20201117 14:41:30.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.045" endtime="20201117 14:41:30.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.536" endtime="20201117 14:41:30.084"></status>
</kw>
<msg timestamp="20201117 14:41:30.084" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.106" endtime="20201117 14:41:30.126"></status>
</kw>
<msg timestamp="20201117 14:41:30.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.102" endtime="20201117 14:41:30.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.130" endtime="20201117 14:41:30.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.136" endtime="20201117 14:41:30.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.095" endtime="20201117 14:41:30.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.089" endtime="20201117 14:41:30.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.159" endtime="20201117 14:41:30.502"></status>
</kw>
<msg timestamp="20201117 14:41:30.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041542153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041586458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.156" endtime="20201117 14:41:30.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041542153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041586458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.511" endtime="20201117 14:41:30.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.530" endtime="20201117 14:41:30.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.149" endtime="20201117 14:41:30.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.144" endtime="20201117 14:41:30.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.549" level="INFO">${RESULT} = [{'time': 0.041586458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4305000000001427e-05, 'source_diff': 4.4305000000001427e-05}, {'time': 0.041652444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:30.540" endtime="20201117 14:41:30.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.579" level="INFO">${ACCURACY} = {'source_diff': [4.4305000000001427e-05, 4.509699999999395e-05, 4.488799999999987e-05, 4.447200000000373e-05, 4.5083000000001316e-05, 4.4624999999999526e-05, 4.525000000000362e-05, 4.5180999999998306e...</msg>
<status status="PASS" starttime="20201117 14:41:30.551" endtime="20201117 14:41:30.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.590" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.588" endtime="20201117 14:41:30.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.596" level="INFO">VALUE: [4.4305000000001427e-05, 4.509699999999395e-05, 4.488799999999987e-05, 4.447200000000373e-05, 4.5083000000001316e-05, 4.4624999999999526e-05, 4.525000000000362e-05, 4.5180999999998306e-05, 4.427800000000176e-05, 4.508400000000079e-05, 4.452800000000201e-05, 4.4694999999997376e-05, 4.4417000000004925e-05, 4.451400000000244e-05, 4.498599999999686e-05, 4.4459000000003635e-05, 4.4402999999998416e-05, 4.454199999999464e-05, 4.5236999999996585e-05, 4.454100000000211e-05, 4.5111000000000456e-05, 4.427700000000229e-05, 4.458299999999388e-05, 4.497199999999729e-05, 4.497200000000423e-05, 4.46939999999979e-05, 4.4445000000004065e-05, 4.477800000000226e-05, 4.498599999999686e-05, 4.5152999999999166e-05, 4.476399999999575e-05, 4.4903000000005855e-05, 4.433400000000004e-05, 4.5194999999997876e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.4694999999997376e-05, 4.475000000000312e-05, 4.454100000000211e-05, 4.472199999999704e-05, 4.508400000000079e-05, 4.46660000000057e-05, 4.44860000000033e-05, 4.525000000000362e-05, 4.483299999999413e-05, 4.5013999999996e-05, 4.4875000000006715e-05, 4.5138999999999596e-05, 4.5111000000000456e-05, 4.4723000000003454e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.593" endtime="20201117 14:41:30.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.581" endtime="20201117 14:41:30.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.605" endtime="20201117 14:41:30.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.614" endtime="20201117 14:41:30.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.609" endtime="20201117 14:41:30.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.600" endtime="20201117 14:41:30.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.086" endtime="20201117 14:41:30.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.532" endtime="20201117 14:41:30.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.531" endtime="20201117 14:41:30.640"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.646" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.667" endtime="20201117 14:41:30.687"></status>
</kw>
<msg timestamp="20201117 14:41:30.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.663" endtime="20201117 14:41:30.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.690" endtime="20201117 14:41:30.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.697" endtime="20201117 14:41:30.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.656" endtime="20201117 14:41:30.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.651" endtime="20201117 14:41:30.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.720" endtime="20201117 14:41:31.055"></status>
</kw>
<msg timestamp="20201117 14:41:31.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046387569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046433069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.716" endtime="20201117 14:41:31.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046387569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046433069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.065" endtime="20201117 14:41:31.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.084" endtime="20201117 14:41:31.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.709" endtime="20201117 14:41:31.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.705" endtime="20201117 14:41:31.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.101" level="INFO">${RESULT} = [{'time': 0.046433069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.550000000000387e-05, 'source_diff': 4.550000000000387e-05}, {'time': 0.046490056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.092" endtime="20201117 14:41:31.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.131" level="INFO">${ACCURACY} = {'source_diff': [4.550000000000387e-05, 4.5430999999998556e-05, 4.5375000000000276e-05, 4.56939999999989e-05, 4.5597000000001386e-05, 4.600000000000437e-05, 4.574999999999718e-05, 4.5445000000005065e-...</msg>
<status status="PASS" starttime="20201117 14:41:31.103" endtime="20201117 14:41:31.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.142" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.140" endtime="20201117 14:41:31.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.148" level="INFO">VALUE: [4.550000000000387e-05, 4.5430999999998556e-05, 4.5375000000000276e-05, 4.56939999999989e-05, 4.5597000000001386e-05, 4.600000000000437e-05, 4.574999999999718e-05, 4.5445000000005065e-05, 4.558299999999488e-05, 4.627799999999682e-05, 4.600000000000437e-05, 4.5666999999999236e-05, 4.5944999999998626e-05, 4.569400000000584e-05, 4.527799999999582e-05, 4.626399999999725e-05, 4.5889000000000346e-05, 4.624999999999768e-05, 4.5722999999997516e-05, 4.602700000000404e-05, 4.529200000000233e-05, 4.588800000000087e-05, 4.620800000000591e-05, 4.606900000000275e-05, 4.599999999999743e-05, 4.555499999999574e-05, 4.548599999999736e-05, 4.612499999999409e-05, 4.5569000000002247e-05, 4.531899999999506e-05, 4.6153000000000166e-05, 4.5666999999999236e-05, 4.573600000000455e-05, 4.53060000000019e-05, 4.5861000000001206e-05, 4.602800000000351e-05, 4.5444999999998126e-05, 4.6139000000000596e-05, 4.5487000000003774e-05, 4.6166999999999736e-05, 4.545799999999822e-05, 4.555500000000268e-05, 4.562499999999359e-05, 4.591600000000001e-05, 4.597199999999829e-05, 4.605499999999624e-05, 4.5333000000001566e-05, 4.602799999999657e-05, 4.5652999999999666e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.144" endtime="20201117 14:41:31.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.133" endtime="20201117 14:41:31.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.157" endtime="20201117 14:41:31.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.165" endtime="20201117 14:41:31.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.161" endtime="20201117 14:41:31.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.153" endtime="20201117 14:41:31.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.647" endtime="20201117 14:41:31.191"></status>
</kw>
<msg timestamp="20201117 14:41:31.191" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.213" endtime="20201117 14:41:31.233"></status>
</kw>
<msg timestamp="20201117 14:41:31.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.209" endtime="20201117 14:41:31.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.236" endtime="20201117 14:41:31.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.242" endtime="20201117 14:41:31.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.202" endtime="20201117 14:41:31.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.196" endtime="20201117 14:41:31.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.266" endtime="20201117 14:41:31.561"></status>
</kw>
<msg timestamp="20201117 14:41:31.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.262" endtime="20201117 14:41:31.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.570" endtime="20201117 14:41:31.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.589" endtime="20201117 14:41:31.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.255" endtime="20201117 14:41:31.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.251" endtime="20201117 14:41:31.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.608" level="INFO">${RESULT} = [{'time': 0.040868917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5680999999998806e-05, 'source_diff': 4.5680999999998806e-05}, {'time': 0.040925931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:31.599" endtime="20201117 14:41:31.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.641" level="INFO">${ACCURACY} = {'source_diff': [4.5680999999998806e-05, 4.5652999999999666e-05, 4.552799999999607e-05, 4.5583000000001817e-05, 4.54860000000043e-05, 4.555499999999574e-05, 4.554099999999617e-05, 4.602700000000404e-0...</msg>
<status status="PASS" starttime="20201117 14:41:31.610" endtime="20201117 14:41:31.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.652" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.649" endtime="20201117 14:41:31.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.657" level="INFO">VALUE: [4.5680999999998806e-05, 4.5652999999999666e-05, 4.552799999999607e-05, 4.5583000000001817e-05, 4.54860000000043e-05, 4.555499999999574e-05, 4.554099999999617e-05, 4.602700000000404e-05, 4.556899999999531e-05, 4.566599999999976e-05, 4.5875000000000776e-05, 4.530500000000243e-05, 4.552800000000301e-05, 4.6013999999997e-05, 4.5444999999998126e-05, 4.582000000000197e-05, 4.5361000000000706e-05, 4.602800000000351e-05, 4.5875000000000776e-05, 4.5639000000000096e-05, 4.6153000000000166e-05, 4.602799999999657e-05, 4.582000000000197e-05, 4.529099999999592e-05, 4.548599999999736e-05, 4.6125000000001026e-05, 4.552800000000301e-05, 4.592999999999958e-05, 4.622199999999854e-05, 4.5945000000005565e-05, 4.6111000000001456e-05, 4.552800000000301e-05, 4.573599999999761e-05, 4.557000000000172e-05, 4.567999999999933e-05, 4.533400000000104e-05, 4.540199999999994e-05, 4.624999999999768e-05, 4.604200000000308e-05, 4.611200000000093e-05, 4.622199999999854e-05, 4.530499999999549e-05, 4.5887999999993934e-05, 4.591600000000001e-05, 4.574999999999718e-05, 4.5639000000000096e-05, 4.6083000000002317e-05, 4.572200000000498e-05, 4.594399999999915e-05, 4.623600000000505e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.654" endtime="20201117 14:41:31.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.643" endtime="20201117 14:41:31.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.666" endtime="20201117 14:41:31.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.674" endtime="20201117 14:41:31.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.670" endtime="20201117 14:41:31.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.662" endtime="20201117 14:41:31.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.192" endtime="20201117 14:41:31.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.643" endtime="20201117 14:41:31.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.641" endtime="20201117 14:41:31.701"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.706" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.727" endtime="20201117 14:41:31.747"></status>
</kw>
<msg timestamp="20201117 14:41:31.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.724" endtime="20201117 14:41:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.751" endtime="20201117 14:41:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.757" endtime="20201117 14:41:31.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.717" endtime="20201117 14:41:31.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.711" endtime="20201117 14:41:31.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.780" endtime="20201117 14:41:32.116"></status>
</kw>
<msg timestamp="20201117 14:41:32.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045944903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.777" endtime="20201117 14:41:32.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045944903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.126" endtime="20201117 14:41:32.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.144" endtime="20201117 14:41:32.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.769" endtime="20201117 14:41:32.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.765" endtime="20201117 14:41:32.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.164" level="INFO">${RESULT} = [{'time': 0.045991514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.661099999999502e-05, 'source_diff': 4.661099999999502e-05}, {'time': 0.046052472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.155" endtime="20201117 14:41:32.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.194" level="INFO">${ACCURACY} = {'source_diff': [4.661099999999502e-05, 4.673599999999861e-05, 4.6639000000001096e-05, 4.670799999999947e-05, 4.6375000000001276e-05, 4.672200000000598e-05, 4.659699999999545e-05, 4.7125000000002026e-...</msg>
<status status="PASS" starttime="20201117 14:41:32.166" endtime="20201117 14:41:32.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.205" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.202" endtime="20201117 14:41:32.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.211" level="INFO">VALUE: [4.661099999999502e-05, 4.673599999999861e-05, 4.6639000000001096e-05, 4.670799999999947e-05, 4.6375000000001276e-05, 4.672200000000598e-05, 4.659699999999545e-05, 4.7125000000002026e-05, 4.720799999999997e-05, 4.6680999999999806e-05, 4.645799999999922e-05, 4.7125000000002026e-05, 4.702799999999757e-05, 4.7194999999999876e-05, 4.629099999999692e-05, 4.708299999999638e-05, 4.63469999999952e-05, 4.637499999999434e-05, 4.71940000000004e-05, 4.656899999999631e-05, 4.631899999999606e-05, 4.636099999999477e-05, 4.631899999999606e-05, 4.627799999999682e-05, 4.68060000000034e-05, 4.68339999999956e-05, 4.7208999999999446e-05, 4.6625000000001526e-05, 4.6416999999999986e-05, 4.661099999999502e-05, 4.6389000000000846e-05, 4.6458999999998696e-05, 4.702799999999757e-05, 4.650000000000487e-05, 4.6915999999994074e-05, 4.644399999999965e-05, 4.71940000000004e-05, 4.699999999999843e-05, 4.672199999999904e-05, 4.723599999999911e-05, 4.697200000000623e-05, 4.6889000000001346e-05, 4.65139999999975e-05, 4.6430999999999556e-05, 4.6667000000000236e-05, 4.652799999999707e-05, 4.698599999999886e-05, 4.699999999999843e-05, 4.708399999999585e-05, 4.647199999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.207" endtime="20201117 14:41:32.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.196" endtime="20201117 14:41:32.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.219" endtime="20201117 14:41:32.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.228" endtime="20201117 14:41:32.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.223" endtime="20201117 14:41:32.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.215" endtime="20201117 14:41:32.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.707" endtime="20201117 14:41:32.253"></status>
</kw>
<msg timestamp="20201117 14:41:32.254" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.275" endtime="20201117 14:41:32.296"></status>
</kw>
<msg timestamp="20201117 14:41:32.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.272" endtime="20201117 14:41:32.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.299" endtime="20201117 14:41:32.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.305" endtime="20201117 14:41:32.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.265" endtime="20201117 14:41:32.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.259" endtime="20201117 14:41:32.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.328" endtime="20201117 14:41:32.663"></status>
</kw>
<msg timestamp="20201117 14:41:32.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040587444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.325" endtime="20201117 14:41:32.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040587444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.673" endtime="20201117 14:41:32.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.692" endtime="20201117 14:41:32.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.318" endtime="20201117 14:41:32.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.314" endtime="20201117 14:41:32.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.710" level="INFO">${RESULT} = [{'time': 0.040587444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.691600000000101e-05, 'source_diff': 4.691600000000101e-05}, {'time': 0.040650444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.702" endtime="20201117 14:41:32.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.741" level="INFO">${ACCURACY} = {'source_diff': [4.691600000000101e-05, 4.627700000000429e-05, 4.64860000000053e-05, 4.6875000000001776e-05, 4.695799999999972e-05, 4.66939999999999e-05, 4.704199999999714e-05, 4.6889000000001346e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:32.713" endtime="20201117 14:41:32.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.752" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.750" endtime="20201117 14:41:32.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.758" level="INFO">VALUE: [4.691600000000101e-05, 4.627700000000429e-05, 4.64860000000053e-05, 4.6875000000001776e-05, 4.695799999999972e-05, 4.66939999999999e-05, 4.704199999999714e-05, 4.6889000000001346e-05, 4.708299999999638e-05, 4.7013999999998e-05, 4.65139999999975e-05, 4.6375000000001276e-05, 4.6667000000000236e-05, 4.6875000000001776e-05, 4.659800000000186e-05, 4.699999999999843e-05, 4.686099999999527e-05, 4.627799999999682e-05, 4.6931000000000056e-05, 4.666600000000076e-05, 4.629100000000386e-05, 4.6665999999993824e-05, 4.68469999999957e-05, 4.7153000000001166e-05, 4.666600000000076e-05, 4.649999999999793e-05, 4.6347000000002136e-05, 4.6931000000000056e-05, 4.652800000000401e-05, 4.688800000000187e-05, 4.6903000000000916e-05, 4.702800000000451e-05, 4.702799999999757e-05, 4.65139999999975e-05, 4.6611000000001956e-05, 4.668000000000033e-05, 4.654200000000358e-05, 4.648599999999836e-05, 4.7165999999994324e-05, 4.691600000000101e-05, 4.68190000000035e-05, 4.650000000000487e-05, 4.673599999999861e-05, 4.644399999999965e-05, 4.6597000000002387e-05, 4.698599999999886e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.688800000000187e-05, 4.7194999999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.755" endtime="20201117 14:41:32.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.743" endtime="20201117 14:41:32.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.766" endtime="20201117 14:41:32.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.775" endtime="20201117 14:41:32.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.770" endtime="20201117 14:41:32.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.762" endtime="20201117 14:41:32.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.255" endtime="20201117 14:41:32.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.703" endtime="20201117 14:41:32.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.702" endtime="20201117 14:41:32.801"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.806" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.827" endtime="20201117 14:41:32.848"></status>
</kw>
<msg timestamp="20201117 14:41:32.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.824" endtime="20201117 14:41:32.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.851" endtime="20201117 14:41:32.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.857" endtime="20201117 14:41:32.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.817" endtime="20201117 14:41:32.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.811" endtime="20201117 14:41:32.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.880" endtime="20201117 14:41:33.217"></status>
</kw>
<msg timestamp="20201117 14:41:33.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046061653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046109056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.877" endtime="20201117 14:41:33.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046061653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046109056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.226" endtime="20201117 14:41:33.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.245" endtime="20201117 14:41:33.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.870" endtime="20201117 14:41:33.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.866" endtime="20201117 14:41:33.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.263" level="INFO">${RESULT} = [{'time': 0.046109056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7403000000001416e-05, 'source_diff': 4.7403000000001416e-05}, {'time': 0.046168069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:33.254" endtime="20201117 14:41:33.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.293" level="INFO">${ACCURACY} = {'source_diff': [4.7403000000001416e-05, 4.730499999999749e-05, 4.7665999999994824e-05, 4.754099999999817e-05, 4.7875000000002776e-05, 4.758299999999688e-05, 4.815200000000269e-05, 4.743099999999362e-...</msg>
<status status="PASS" starttime="20201117 14:41:33.265" endtime="20201117 14:41:33.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.304" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.302" endtime="20201117 14:41:33.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.310" level="INFO">VALUE: [4.7403000000001416e-05, 4.730499999999749e-05, 4.7665999999994824e-05, 4.754099999999817e-05, 4.7875000000002776e-05, 4.758299999999688e-05, 4.815200000000269e-05, 4.743099999999362e-05, 4.749999999999893e-05, 4.754199999999764e-05, 4.745800000000022e-05, 4.790299999999498e-05, 4.822200000000054e-05, 4.805599999999771e-05, 4.7875000000002776e-05, 4.777799999999832e-05, 4.797200000000029e-05, 4.7458999999999696e-05, 4.773599999999961e-05, 4.7681000000000806e-05, 4.73339999999961e-05, 4.797200000000029e-05, 4.733299999999663e-05, 4.765200000000219e-05, 4.752700000000554e-05, 4.756899999999731e-05, 4.826399999999925e-05, 4.822200000000054e-05, 4.7611000000002957e-05, 4.8139000000002596e-05, 4.822200000000054e-05, 4.7695000000000376e-05, 4.797200000000029e-05, 4.822200000000054e-05, 4.772200000000004e-05, 4.811099999999652e-05, 4.8181000000001306e-05, 4.7625000000002526e-05, 4.783400000000354e-05, 4.8125000000003026e-05, 4.815200000000269e-05, 4.758299999999688e-05, 4.8207999999994033e-05, 4.7667000000001236e-05, 4.7611000000002957e-05, 4.779099999999842e-05, 4.7597000000003387e-05, 4.7417000000000986e-05, 4.730499999999749e-05, 4.8111000000003457e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.307" endtime="20201117 14:41:33.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.295" endtime="20201117 14:41:33.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.318" endtime="20201117 14:41:33.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.327" endtime="20201117 14:41:33.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.322" endtime="20201117 14:41:33.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.314" endtime="20201117 14:41:33.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.807" endtime="20201117 14:41:33.352"></status>
</kw>
<msg timestamp="20201117 14:41:33.353" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.374" endtime="20201117 14:41:33.394"></status>
</kw>
<msg timestamp="20201117 14:41:33.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.371" endtime="20201117 14:41:33.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.398" endtime="20201117 14:41:33.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.404" endtime="20201117 14:41:33.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.364" endtime="20201117 14:41:33.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.358" endtime="20201117 14:41:33.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.427" endtime="20201117 14:41:33.762"></status>
</kw>
<msg timestamp="20201117 14:41:33.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040562194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040609556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.424" endtime="20201117 14:41:33.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040562194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040609556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.772" endtime="20201117 14:41:33.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.791" endtime="20201117 14:41:33.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.417" endtime="20201117 14:41:33.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.412" endtime="20201117 14:41:33.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.810" level="INFO">${RESULT} = [{'time': 0.040609556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736199999999524e-05, 'source_diff': 4.736199999999524e-05}, {'time': 0.040674528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.801" endtime="20201117 14:41:33.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.843" level="INFO">${ACCURACY} = {'source_diff': [4.736199999999524e-05, 4.779200000000483e-05, 4.777700000000579e-05, 4.733299999999663e-05, 4.7389000000001846e-05, 4.8193999999994463e-05, 4.7681000000000806e-05, 4.8111000000003457e...</msg>
<status status="PASS" starttime="20201117 14:41:33.812" endtime="20201117 14:41:33.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.855" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.853" endtime="20201117 14:41:33.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.860" level="INFO">VALUE: [4.736199999999524e-05, 4.779200000000483e-05, 4.777700000000579e-05, 4.733299999999663e-05, 4.7389000000001846e-05, 4.8193999999994463e-05, 4.7681000000000806e-05, 4.8111000000003457e-05, 4.756900000000425e-05, 4.7889000000002346e-05, 4.777799999999832e-05, 4.7319000000004e-05, 4.777799999999832e-05, 4.786099999999627e-05, 4.784700000000364e-05, 4.78469999999967e-05, 4.7861000000003207e-05, 4.811099999999652e-05, 4.798599999999986e-05, 4.763899999999516e-05, 4.752799999999807e-05, 4.7401999999995004e-05, 4.7611000000002957e-05, 4.808300000000432e-05, 4.797200000000029e-05, 4.824999999999968e-05, 4.758300000000382e-05, 4.756900000000425e-05, 4.765200000000219e-05, 4.797200000000029e-05, 4.806900000000475e-05, 4.7347000000003137e-05, 4.759699999999645e-05, 4.7653000000001666e-05, 4.776399999999875e-05, 4.804199999999814e-05, 4.7387999999995434e-05, 4.78190000000045e-05, 4.73060000000039e-05, 4.7639000000002096e-05, 4.738899999999491e-05, 4.809799999999642e-05, 4.7431000000000556e-05, 4.726399999999825e-05, 4.802800000000551e-05, 4.805499999999824e-05, 4.790200000000244e-05, 4.723599999999911e-05, 4.824999999999968e-05, 4.733300000000357e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.857" endtime="20201117 14:41:33.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.845" endtime="20201117 14:41:33.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.869" endtime="20201117 14:41:33.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.877" endtime="20201117 14:41:33.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.873" endtime="20201117 14:41:33.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.865" endtime="20201117 14:41:33.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.354" endtime="20201117 14:41:33.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.804" endtime="20201117 14:41:33.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.802" endtime="20201117 14:41:33.904"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.909" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.930" endtime="20201117 14:41:33.950"></status>
</kw>
<msg timestamp="20201117 14:41:33.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.927" endtime="20201117 14:41:33.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.953" endtime="20201117 14:41:33.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.960" endtime="20201117 14:41:33.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.919" endtime="20201117 14:41:33.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.914" endtime="20201117 14:41:33.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.985" endtime="20201117 14:41:34.321"></status>
</kw>
<msg timestamp="20201117 14:41:34.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046418861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046467111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.981" endtime="20201117 14:41:34.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046418861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046467111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.330" endtime="20201117 14:41:34.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.349" endtime="20201117 14:41:34.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.973" endtime="20201117 14:41:34.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.968" endtime="20201117 14:41:34.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.368" level="INFO">${RESULT} = [{'time': 0.046467111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.824999999999968e-05, 'source_diff': 4.824999999999968e-05}, {'time': 0.046530111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.359" endtime="20201117 14:41:34.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.399" level="INFO">${ACCURACY} = {'source_diff': [4.824999999999968e-05, 4.877799999999932e-05, 4.894400000000215e-05, 4.865299999999573e-05, 4.861099999999702e-05, 4.847200000000079e-05, 4.902799999999957e-05, 4.875000000000018e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:34.370" endtime="20201117 14:41:34.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.409" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.407" endtime="20201117 14:41:34.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.415" level="INFO">VALUE: [4.824999999999968e-05, 4.877799999999932e-05, 4.894400000000215e-05, 4.865299999999573e-05, 4.861099999999702e-05, 4.847200000000079e-05, 4.902799999999957e-05, 4.875000000000018e-05, 4.8473000000000266e-05, 4.8959000000001196e-05, 4.858299999999788e-05, 4.862499999999659e-05, 4.865200000000319e-05, 4.9167000000002736e-05, 4.85139999999995e-05, 4.829099999999892e-05, 4.8943999999995214e-05, 4.913899999999666e-05, 4.908299999999838e-05, 4.849999999999993e-05, 4.831999999999753e-05, 4.905599999999871e-05, 4.879199999999889e-05, 4.922200000000154e-05, 4.9209000000001446e-05, 4.8889000000003346e-05, 4.855599999999821e-05, 4.83469999999972e-05, 4.894499999999469e-05, 4.882000000000497e-05, 4.897200000000129e-05, 4.9137999999997184e-05, 4.879099999999942e-05, 4.922200000000154e-05, 4.849999999999993e-05, 4.844400000000165e-05, 4.9193999999995464e-05, 4.844400000000165e-05, 4.9139000000003596e-05, 4.906999999999828e-05, 4.912499999999709e-05, 4.852800000000601e-05, 4.8945000000001626e-05, 4.872200000000104e-05, 4.9167000000002736e-05, 4.8959000000001196e-05, 4.838899999999591e-05, 4.904099999999967e-05, 4.849999999999993e-05, 4.827700000000629e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.412" endtime="20201117 14:41:34.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.400" endtime="20201117 14:41:34.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.424" endtime="20201117 14:41:34.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.432" endtime="20201117 14:41:34.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.427" endtime="20201117 14:41:34.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.419" endtime="20201117 14:41:34.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.910" endtime="20201117 14:41:34.458"></status>
</kw>
<msg timestamp="20201117 14:41:34.458" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.485" endtime="20201117 14:41:34.504"></status>
</kw>
<msg timestamp="20201117 14:41:34.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.481" endtime="20201117 14:41:34.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.508" endtime="20201117 14:41:34.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.515" endtime="20201117 14:41:34.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.471" endtime="20201117 14:41:34.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.464" endtime="20201117 14:41:34.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.538" endtime="20201117 14:41:34.864"></status>
</kw>
<msg timestamp="20201117 14:41:34.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046198333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046247458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.535" endtime="20201117 14:41:34.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046198333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046247458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.869" endtime="20201117 14:41:34.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.878" endtime="20201117 14:41:34.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.528" endtime="20201117 14:41:34.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.523" endtime="20201117 14:41:34.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.888" level="INFO">${RESULT} = [{'time': 0.046247458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.912499999999709e-05, 'source_diff': 4.912499999999709e-05}, {'time': 0.046314458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.883" endtime="20201117 14:41:34.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.902" level="INFO">${ACCURACY} = {'source_diff': [4.912499999999709e-05, 4.895800000000172e-05, 4.911099999999752e-05, 4.861099999999702e-05, 4.897199999999435e-05, 4.838899999999591e-05, 4.8389000000002846e-05, 4.8361000000003707e-0...</msg>
<status status="PASS" starttime="20201117 14:41:34.889" endtime="20201117 14:41:34.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.913" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.910" endtime="20201117 14:41:34.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.918" level="INFO">VALUE: [4.912499999999709e-05, 4.895800000000172e-05, 4.911099999999752e-05, 4.861099999999702e-05, 4.897199999999435e-05, 4.838899999999591e-05, 4.8389000000002846e-05, 4.8361000000003707e-05, 4.86669999999953e-05, 4.897200000000129e-05, 4.9153000000003166e-05, 4.8681000000001806e-05, 4.9139000000003596e-05, 4.9153000000003166e-05, 4.9014e-05, 4.9014e-05, 4.8973000000000766e-05, 4.838800000000337e-05, 4.8403000000002416e-05, 4.872200000000104e-05, 4.9165999999996324e-05, 4.836099999999677e-05, 4.880500000000593e-05, 4.855600000000515e-05, 4.8375000000003276e-05, 4.894400000000215e-05, 4.827799999999882e-05, 4.849999999999993e-05, 4.847200000000079e-05, 4.858299999999788e-05, 4.848600000000036e-05, 4.898600000000086e-05, 4.873600000000061e-05, 4.908300000000532e-05, 4.854200000000558e-05, 4.876300000000028e-05, 4.900000000000043e-05, 4.8875000000003777e-05, 4.908299999999838e-05, 4.8695000000001376e-05, 4.9125000000004027e-05, 4.865299999999573e-05, 4.894400000000215e-05, 4.9014e-05, 4.86669999999953e-05, 4.911099999999752e-05, 4.8361000000003707e-05, 4.904199999999914e-05, 4.852799999999907e-05, 4.85139999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.915" endtime="20201117 14:41:34.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.903" endtime="20201117 14:41:34.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.927" endtime="20201117 14:41:34.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.935" endtime="20201117 14:41:34.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.931" endtime="20201117 14:41:34.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.922" endtime="20201117 14:41:34.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.460" endtime="20201117 14:41:34.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.906" endtime="20201117 14:41:34.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.905" endtime="20201117 14:41:34.962"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.967" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.989" endtime="20201117 14:41:35.010"></status>
</kw>
<msg timestamp="20201117 14:41:35.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.986" endtime="20201117 14:41:35.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.013" endtime="20201117 14:41:35.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.020" endtime="20201117 14:41:35.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.978" endtime="20201117 14:41:35.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.972" endtime="20201117 14:41:35.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.044" endtime="20201117 14:41:35.386"></status>
</kw>
<msg timestamp="20201117 14:41:35.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047574056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.040" endtime="20201117 14:41:35.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047574056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.396" endtime="20201117 14:41:35.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.414" endtime="20201117 14:41:35.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.033" endtime="20201117 14:41:35.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.028" endtime="20201117 14:41:35.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.432" level="INFO">${RESULT} = [{'time': 0.047574056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.047639125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:35.423" endtime="20201117 14:41:35.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.462" level="INFO">${ACCURACY} = {'source_diff': [4.95140000000005e-05, 4.998599999999492e-05, 5.001300000000153e-05, 4.973600000000161e-05, 4.995800000000272e-05, 5.011099999999852e-05, 4.998600000000186e-05, 5.009700000000589e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:35.434" endtime="20201117 14:41:35.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.473" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.471" endtime="20201117 14:41:35.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.478" level="INFO">VALUE: [4.95140000000005e-05, 4.998599999999492e-05, 5.001300000000153e-05, 4.973600000000161e-05, 4.995800000000272e-05, 5.011099999999852e-05, 4.998600000000186e-05, 5.009700000000589e-05, 4.980599999999946e-05, 4.972200000000204e-05, 4.9639000000004097e-05, 4.995800000000272e-05, 4.934700000000514e-05, 4.981999999999903e-05, 4.926400000000025e-05, 4.938899999999691e-05, 4.9417000000002986e-05, 4.937499999999734e-05, 4.980599999999946e-05, 5.009699999999895e-05, 4.925000000000068e-05, 5.009700000000589e-05, 5.012499999999809e-05, 4.990299999999698e-05, 4.958299999999888e-05, 4.926400000000025e-05, 4.968099999999587e-05, 5.011099999999852e-05, 4.968099999999587e-05, 4.938899999999691e-05, 4.933299999999863e-05, 4.927799999999982e-05, 4.947299999999433e-05, 5.025000000000168e-05, 5.012500000000503e-05, 4.959699999999845e-05, 5.0179999999996894e-05, 4.926300000000078e-05, 4.959699999999845e-05, 4.963899999999716e-05, 4.936099999999777e-05, 4.9457999999995284e-05, 4.945800000000222e-05, 4.980599999999946e-05, 4.947200000000179e-05, 4.975000000000118e-05, 4.970899999999501e-05, 5.025000000000168e-05, 5.026399999999431e-05, 4.984800000000511e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.475" endtime="20201117 14:41:35.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.464" endtime="20201117 14:41:35.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.487" endtime="20201117 14:41:35.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.495" endtime="20201117 14:41:35.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.491" endtime="20201117 14:41:35.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.482" endtime="20201117 14:41:35.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.968" endtime="20201117 14:41:35.521"></status>
</kw>
<msg timestamp="20201117 14:41:35.522" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.543" endtime="20201117 14:41:35.563"></status>
</kw>
<msg timestamp="20201117 14:41:35.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.540" endtime="20201117 14:41:35.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.567" endtime="20201117 14:41:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.573" endtime="20201117 14:41:35.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.533" endtime="20201117 14:41:35.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.527" endtime="20201117 14:41:35.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.596" endtime="20201117 14:41:35.932"></status>
</kw>
<msg timestamp="20201117 14:41:35.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.593" endtime="20201117 14:41:35.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.941" endtime="20201117 14:41:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.960" endtime="20201117 14:41:35.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.585" endtime="20201117 14:41:35.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.581" endtime="20201117 14:41:35.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.979" level="INFO">${RESULT} = [{'time': 0.041527181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.955600000000615e-05, 'source_diff': 4.955600000000615e-05}, {'time': 0.041597167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.970" endtime="20201117 14:41:35.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.012" level="INFO">${ACCURACY} = {'source_diff': [4.955600000000615e-05, 5.01669999999968e-05, 4.933300000000557e-05, 4.955499999999974e-05, 4.9695000000002376e-05, 5.022200000000254e-05, 4.954100000000017e-05, 4.955499999999974e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:35.981" endtime="20201117 14:41:36.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.023" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.020" endtime="20201117 14:41:36.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.028" level="INFO">VALUE: [4.955600000000615e-05, 5.01669999999968e-05, 4.933300000000557e-05, 4.955499999999974e-05, 4.9695000000002376e-05, 5.022200000000254e-05, 4.954100000000017e-05, 4.955499999999974e-05, 4.952699999999366e-05, 4.983299999999913e-05, 4.9653000000003666e-05, 4.975000000000118e-05, 4.961099999999802e-05, 4.976400000000075e-05, 4.988899999999741e-05, 4.975000000000118e-05, 5.026400000000125e-05, 5.002800000000057e-05, 4.9625000000004527e-05, 4.987499999999784e-05, 4.984799999999817e-05, 4.979199999999989e-05, 4.973600000000161e-05, 4.966600000000376e-05, 4.9915999999997074e-05, 4.983299999999913e-05, 4.9665999999996824e-05, 4.9943999999996214e-05, 4.936100000000471e-05, 5.012499999999809e-05, 4.937499999999734e-05, 4.9917000000003486e-05, 4.955599999999921e-05, 4.9931000000003056e-05, 4.991699999999655e-05, 5.027799999999388e-05, 4.930599999999896e-05, 5.026400000000125e-05, 4.933400000000504e-05, 5.001300000000153e-05, 5.0165999999997324e-05, 4.95140000000005e-05, 5.0193999999996464e-05, 5.011099999999852e-05, 4.9625000000004527e-05, 4.9319000000006e-05, 4.947200000000179e-05, 4.956899999999931e-05, 4.933299999999863e-05, 4.990299999999698e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.025" endtime="20201117 14:41:36.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.014" endtime="20201117 14:41:36.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.038" endtime="20201117 14:41:36.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.047" endtime="20201117 14:41:36.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.042" endtime="20201117 14:41:36.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.033" endtime="20201117 14:41:36.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.523" endtime="20201117 14:41:36.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.964" endtime="20201117 14:41:36.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.963" endtime="20201117 14:41:36.074"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.079" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.101" endtime="20201117 14:41:36.121"></status>
</kw>
<msg timestamp="20201117 14:41:36.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.097" endtime="20201117 14:41:36.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.125" endtime="20201117 14:41:36.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.131" endtime="20201117 14:41:36.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.090" endtime="20201117 14:41:36.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.085" endtime="20201117 14:41:36.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.154" endtime="20201117 14:41:36.489"></status>
</kw>
<msg timestamp="20201117 14:41:36.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047130417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047181639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.151" endtime="20201117 14:41:36.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047130417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047181639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.499" endtime="20201117 14:41:36.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.518" endtime="20201117 14:41:36.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.144" endtime="20201117 14:41:36.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.139" endtime="20201117 14:41:36.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.537" level="INFO">${RESULT} = [{'time': 0.047181639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1221999999996604e-05, 'source_diff': 5.1221999999996604e-05}, {'time': 0.047251569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:36.528" endtime="20201117 14:41:36.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.567" level="INFO">${ACCURACY} = {'source_diff': [5.1221999999996604e-05, 5.076300000000228e-05, 5.030499999999355e-05, 5.029100000000092e-05, 5.061099999999902e-05, 5.073600000000261e-05, 5.0693999999996964e-05, 5.105500000000124e-0...</msg>
<status status="PASS" starttime="20201117 14:41:36.539" endtime="20201117 14:41:36.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.578" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.576" endtime="20201117 14:41:36.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.583" level="INFO">VALUE: [5.1221999999996604e-05, 5.076300000000228e-05, 5.030499999999355e-05, 5.029100000000092e-05, 5.061099999999902e-05, 5.073600000000261e-05, 5.0693999999996964e-05, 5.105500000000124e-05, 5.109699999999995e-05, 5.061100000000596e-05, 5.123699999999565e-05, 5.052799999999413e-05, 5.061099999999902e-05, 5.115299999999823e-05, 5.087499999999884e-05, 5.093099999999712e-05, 5.0679999999997394e-05, 5.03469999999992e-05, 5.1137999999999184e-05, 5.1165999999998324e-05, 5.112499999999909e-05, 5.068099999999687e-05, 5.11940000000044e-05, 5.126400000000225e-05, 5.050000000000193e-05, 5.079200000000089e-05, 5.0681000000003806e-05, 5.054200000000064e-05, 5.082000000000003e-05, 5.107000000000028e-05, 5.031999999999953e-05, 5.097200000000329e-05, 5.101399999999506e-05, 5.031900000000006e-05, 5.09869999999954e-05, 5.058299999999988e-05, 5.03469999999992e-05, 5.056900000000031e-05, 5.0915999999998074e-05, 5.087499999999884e-05, 5.058299999999988e-05, 5.041699999999705e-05, 5.113899999999866e-05, 5.11669999999978e-05, 5.0471999999995854e-05, 5.056999999999978e-05, 5.073600000000261e-05, 5.091699999999755e-05, 5.075000000000218e-05, 5.058399999999935e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.580" endtime="20201117 14:41:36.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.569" endtime="20201117 14:41:36.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.593" endtime="20201117 14:41:36.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.601" endtime="20201117 14:41:36.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.597" endtime="20201117 14:41:36.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.588" endtime="20201117 14:41:36.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.081" endtime="20201117 14:41:36.626"></status>
</kw>
<msg timestamp="20201117 14:41:36.627" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.648" endtime="20201117 14:41:36.669"></status>
</kw>
<msg timestamp="20201117 14:41:36.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.645" endtime="20201117 14:41:36.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.672" endtime="20201117 14:41:36.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.678" endtime="20201117 14:41:36.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.638" endtime="20201117 14:41:36.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.632" endtime="20201117 14:41:36.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.701" endtime="20201117 14:41:37.040"></status>
</kw>
<msg timestamp="20201117 14:41:37.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040299083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040349819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.698" endtime="20201117 14:41:37.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040299083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040349819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.049" endtime="20201117 14:41:37.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.068" endtime="20201117 14:41:37.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.691" endtime="20201117 14:41:37.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.686" endtime="20201117 14:41:37.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.088" level="INFO">${RESULT} = [{'time': 0.040349819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.073600000000261e-05, 'source_diff': 5.073600000000261e-05}, {'time': 0.040416861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.078" endtime="20201117 14:41:37.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.119" level="INFO">${ACCURACY} = {'source_diff': [5.073600000000261e-05, 5.108300000000038e-05, 5.061099999999902e-05, 5.068099999999687e-05, 5.070800000000347e-05, 5.059799999999892e-05, 5.055500000000074e-05, 5.0445000000003126e-05...</msg>
<status status="PASS" starttime="20201117 14:41:37.090" endtime="20201117 14:41:37.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.129" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.127" endtime="20201117 14:41:37.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.135" level="INFO">VALUE: [5.073600000000261e-05, 5.108300000000038e-05, 5.061099999999902e-05, 5.068099999999687e-05, 5.070800000000347e-05, 5.059799999999892e-05, 5.055500000000074e-05, 5.0445000000003126e-05, 5.0957999999996784e-05, 5.0403000000004416e-05, 5.111099999999952e-05, 5.120899999999651e-05, 5.0903000000004917e-05, 5.082000000000003e-05, 5.111099999999952e-05, 5.111199999999899e-05, 5.059799999999892e-05, 5.1137999999999184e-05, 5.062499999999859e-05, 5.122200000000354e-05, 5.054100000000117e-05, 5.031900000000006e-05, 5.122200000000354e-05, 5.097200000000329e-05, 5.122200000000354e-05, 5.068099999999687e-05, 5.037499999999834e-05, 5.072200000000304e-05, 5.076399999999481e-05, 5.126399999999531e-05, 5.075000000000218e-05, 5.0487000000001836e-05, 5.055600000000021e-05, 5.061099999999902e-05, 5.036199999999824e-05, 5.1207999999997034e-05, 5.083300000000013e-05, 5.0707999999996534e-05, 5.086100000000621e-05, 5.0403000000004416e-05, 5.070800000000347e-05, 5.075000000000218e-05, 5.122200000000354e-05, 5.126399999999531e-05, 5.094499999999669e-05, 5.061099999999902e-05, 5.097200000000329e-05, 5.062500000000553e-05, 5.054200000000064e-05, 5.10419999999942e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.132" endtime="20201117 14:41:37.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.120" endtime="20201117 14:41:37.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.144" endtime="20201117 14:41:37.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.153" endtime="20201117 14:41:37.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.148" endtime="20201117 14:41:37.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.140" endtime="20201117 14:41:37.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.628" endtime="20201117 14:41:37.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.077" endtime="20201117 14:41:37.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.075" endtime="20201117 14:41:37.179"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.184" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.205" endtime="20201117 14:41:37.226"></status>
</kw>
<msg timestamp="20201117 14:41:37.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.202" endtime="20201117 14:41:37.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.229" endtime="20201117 14:41:37.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.236" endtime="20201117 14:41:37.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.195" endtime="20201117 14:41:37.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.189" endtime="20201117 14:41:37.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.258" endtime="20201117 14:41:37.597"></status>
</kw>
<msg timestamp="20201117 14:41:37.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046202167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.255" endtime="20201117 14:41:37.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046202167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.607" endtime="20201117 14:41:37.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.625" endtime="20201117 14:41:37.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.248" endtime="20201117 14:41:37.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.244" endtime="20201117 14:41:37.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.643" level="INFO">${RESULT} = [{'time': 0.046253417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999995743e-05, 'source_diff': 5.1249999999995743e-05}, {'time': 0.046316417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:37.634" endtime="20201117 14:41:37.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.673" level="INFO">${ACCURACY} = {'source_diff': [5.1249999999995743e-05, 5.211100000000052e-05, 5.183300000000113e-05, 5.209800000000042e-05, 5.172200000000404e-05, 5.2165999999999324e-05, 5.223600000000411e-05, 5.15549999999948e-05...</msg>
<status status="PASS" starttime="20201117 14:41:37.645" endtime="20201117 14:41:37.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.684" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.682" endtime="20201117 14:41:37.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.690" level="INFO">VALUE: [5.1249999999995743e-05, 5.211100000000052e-05, 5.183300000000113e-05, 5.209800000000042e-05, 5.172200000000404e-05, 5.2165999999999324e-05, 5.223600000000411e-05, 5.15549999999948e-05, 5.175000000000318e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.1499999999995993e-05, 5.213899999999966e-05, 5.197200000000429e-05, 5.186100000000027e-05, 5.1653000000005667e-05, 5.21669999999988e-05, 5.187499999999984e-05, 5.1665999999998824e-05, 5.129200000000139e-05, 5.223699999999665e-05, 5.163899999999916e-05, 5.212500000000009e-05, 5.177699999999591e-05, 5.1943999999998214e-05, 5.2235999999997174e-05, 5.133300000000063e-05, 5.16940000000049e-05, 5.187499999999984e-05, 5.147200000000379e-05, 5.1459000000003696e-05, 5.197200000000429e-05, 5.206999999999434e-05, 5.156899999999437e-05, 5.159700000000045e-05, 5.129200000000139e-05, 5.215299999999923e-05, 5.211199999999999e-05, 5.154100000000217e-05, 5.159700000000045e-05, 5.1499999999995993e-05, 5.1901999999999504e-05, 5.2207999999998034e-05, 5.188899999999941e-05, 5.1695000000004376e-05, 5.200000000000343e-05, 5.205600000000171e-05, 5.175000000000318e-05, 5.165299999999873e-05, 5.176400000000275e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.686" endtime="20201117 14:41:37.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.675" endtime="20201117 14:41:37.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.699" endtime="20201117 14:41:37.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.707" endtime="20201117 14:41:37.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.703" endtime="20201117 14:41:37.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.694" endtime="20201117 14:41:37.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.185" endtime="20201117 14:41:37.733"></status>
</kw>
<msg timestamp="20201117 14:41:37.733" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.755" endtime="20201117 14:41:37.776"></status>
</kw>
<msg timestamp="20201117 14:41:37.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.751" endtime="20201117 14:41:37.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.779" endtime="20201117 14:41:37.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.785" endtime="20201117 14:41:37.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.744" endtime="20201117 14:41:37.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.738" endtime="20201117 14:41:37.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.808" endtime="20201117 14:41:38.152"></status>
</kw>
<msg timestamp="20201117 14:41:38.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0410285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041080458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:37.805" endtime="20201117 14:41:38.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0410285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041080458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:38.156" endtime="20201117 14:41:38.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.164" endtime="20201117 14:41:38.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.798" endtime="20201117 14:41:38.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.793" endtime="20201117 14:41:38.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.173" level="INFO">${RESULT} = [{'time': 0.041080458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1957999999997784e-05, 'source_diff': 5.1957999999997784e-05}, {'time': 0.041141444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:38.169" endtime="20201117 14:41:38.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.188" level="INFO">${ACCURACY} = {'source_diff': [5.1957999999997784e-05, 5.1985999999996924e-05, 5.200000000000343e-05, 5.127699999999541e-05, 5.166600000000576e-05, 5.1445000000004126e-05, 5.209700000000095e-05, 5.177800000000232e-...</msg>
<status status="PASS" starttime="20201117 14:41:38.174" endtime="20201117 14:41:38.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.194" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.193" endtime="20201117 14:41:38.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.196" level="INFO">VALUE: [5.1957999999997784e-05, 5.1985999999996924e-05, 5.200000000000343e-05, 5.127699999999541e-05, 5.166600000000576e-05, 5.1445000000004126e-05, 5.209700000000095e-05, 5.177800000000232e-05, 5.2207999999998034e-05, 5.1985999999996924e-05, 5.152800000000207e-05, 5.2151999999999754e-05, 5.215299999999923e-05, 5.2209000000004446e-05, 5.134799999999967e-05, 5.188899999999941e-05, 5.152799999999513e-05, 5.1693999999997964e-05, 5.176399999999581e-05, 5.183300000000113e-05, 5.159700000000045e-05, 5.2207999999998034e-05, 5.157000000000078e-05, 5.154099999999523e-05, 5.152800000000207e-05, 5.1707999999997534e-05, 5.1971999999997354e-05, 5.218099999999837e-05, 5.184800000000017e-05, 5.137500000000628e-05, 5.152800000000207e-05, 5.204100000000267e-05, 5.157000000000078e-05, 5.1679999999998394e-05, 5.219499999999794e-05, 5.133300000000063e-05, 5.20549999999953e-05, 5.129100000000192e-05, 5.197200000000429e-05, 5.182000000000103e-05, 5.18470000000007e-05, 5.2235999999997174e-05, 5.21669999999988e-05, 5.2235999999997174e-05, 5.2207999999998034e-05, 5.162499999999959e-05, 5.179199999999495e-05, 5.212500000000009e-05, 5.177800000000232e-05, 5.157000000000078e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.195" endtime="20201117 14:41:38.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.189" endtime="20201117 14:41:38.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.200" endtime="20201117 14:41:38.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.204" endtime="20201117 14:41:38.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.202" endtime="20201117 14:41:38.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.198" endtime="20201117 14:41:38.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.735" endtime="20201117 14:41:38.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.182" endtime="20201117 14:41:38.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.180" endtime="20201117 14:41:38.226"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.228" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.238" endtime="20201117 14:41:38.255"></status>
</kw>
<msg timestamp="20201117 14:41:38.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.237" endtime="20201117 14:41:38.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.256" endtime="20201117 14:41:38.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.259" endtime="20201117 14:41:38.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.233" endtime="20201117 14:41:38.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.231" endtime="20201117 14:41:38.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.270" endtime="20201117 14:41:38.602"></status>
</kw>
<msg timestamp="20201117 14:41:38.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026592375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026644806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.268" endtime="20201117 14:41:38.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026592375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026644806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.612" endtime="20201117 14:41:38.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.630" endtime="20201117 14:41:38.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.265" endtime="20201117 14:41:38.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.263" endtime="20201117 14:41:38.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.650" level="INFO">${RESULT} = [{'time': 0.026644806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.243099999999862e-05, 'source_diff': 5.243099999999862e-05}, {'time': 0.026710792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.641" endtime="20201117 14:41:38.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.680" level="INFO">${ACCURACY} = {'source_diff': [5.243099999999862e-05, 5.320900000000198e-05, 5.258400000000135e-05, 5.2443999999998714e-05, 5.2888000000000934e-05, 5.306999999999881e-05, 5.28609999999978e-05, 5.322200000000207e-05...</msg>
<status status="PASS" starttime="20201117 14:41:38.652" endtime="20201117 14:41:38.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.691" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.689" endtime="20201117 14:41:38.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.696" level="INFO">VALUE: [5.243099999999862e-05, 5.320900000000198e-05, 5.258400000000135e-05, 5.2443999999998714e-05, 5.2888000000000934e-05, 5.306999999999881e-05, 5.28609999999978e-05, 5.322200000000207e-05, 5.283300000000213e-05, 5.2665999999999824e-05, 5.2957999999998784e-05, 5.2721999999998104e-05, 5.322200000000207e-05, 5.233299999999816e-05, 5.237500000000034e-05, 5.281999999999856e-05, 5.237500000000034e-05, 5.31669999999998e-05, 5.247299999999733e-05, 5.30280000000001e-05, 5.258400000000135e-05, 5.268100000000234e-05, 5.265299999999973e-05, 5.3151999999997285e-05, 5.245800000000175e-05, 5.301400000000053e-05, 5.290299999999998e-05, 5.281899999999909e-05, 5.30280000000001e-05, 5.293099999999912e-05, 5.229199999999892e-05, 5.294500000000216e-05, 5.269500000000191e-05, 5.294500000000216e-05, 5.23470000000012e-05, 5.323600000000164e-05, 5.306999999999881e-05, 5.273700000000062e-05, 5.226300000000031e-05, 5.3221999999998604e-05, 5.233300000000163e-05, 5.300000000000096e-05, 5.3179999999999894e-05, 5.241700000000252e-05, 5.3166000000000324e-05, 5.255599999999874e-05, 5.273600000000114e-05, 5.258299999999841e-05, 5.300000000000096e-05, 5.280600000000246e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.693" endtime="20201117 14:41:38.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.682" endtime="20201117 14:41:38.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.705" endtime="20201117 14:41:38.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.713" endtime="20201117 14:41:38.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.709" endtime="20201117 14:41:38.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.701" endtime="20201117 14:41:38.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.229" endtime="20201117 14:41:38.739"></status>
</kw>
<msg timestamp="20201117 14:41:38.739" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.761" endtime="20201117 14:41:38.782"></status>
</kw>
<msg timestamp="20201117 14:41:38.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.757" endtime="20201117 14:41:38.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.785" endtime="20201117 14:41:38.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.791" endtime="20201117 14:41:38.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.750" endtime="20201117 14:41:38.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.745" endtime="20201117 14:41:38.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.814" endtime="20201117 14:41:39.160"></status>
</kw>
<msg timestamp="20201117 14:41:39.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040872097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040924847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.811" endtime="20201117 14:41:39.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040872097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040924847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.170" endtime="20201117 14:41:39.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.189" endtime="20201117 14:41:39.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.804" endtime="20201117 14:41:39.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.799" endtime="20201117 14:41:39.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.208" level="INFO">${RESULT} = [{'time': 0.040924847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2749999999997244e-05, 'source_diff': 5.2749999999997244e-05}, {'time': 0.040991847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:39.199" endtime="20201117 14:41:39.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.239" level="INFO">${ACCURACY} = {'source_diff': [5.2749999999997244e-05, 5.279099999999648e-05, 5.229099999999598e-05, 5.2943999999999214e-05, 5.272200000000504e-05, 5.2971999999998354e-05, 5.3221999999998604e-05, 5.315300000000023e...</msg>
<status status="PASS" starttime="20201117 14:41:39.210" endtime="20201117 14:41:39.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.250" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.247" endtime="20201117 14:41:39.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.255" level="INFO">VALUE: [5.2749999999997244e-05, 5.279099999999648e-05, 5.229099999999598e-05, 5.2943999999999214e-05, 5.272200000000504e-05, 5.2971999999998354e-05, 5.3221999999998604e-05, 5.315300000000023e-05, 5.243099999999862e-05, 5.3179999999999894e-05, 5.3209000000005446e-05, 5.236100000000077e-05, 5.290299999999998e-05, 5.290299999999998e-05, 5.257000000000178e-05, 5.283300000000213e-05, 5.258299999999494e-05, 5.229099999999598e-05, 5.305500000000324e-05, 5.275000000000418e-05, 5.326400000000425e-05, 5.3235999999998174e-05, 5.31669999999998e-05, 5.282000000000203e-05, 5.247200000000479e-05, 5.308400000000185e-05, 5.286100000000127e-05, 5.248600000000436e-05, 5.232000000000153e-05, 5.2513999999996563e-05, 5.3235999999998174e-05, 5.326299999999784e-05, 5.254099999999623e-05, 5.254099999999623e-05, 5.305599999999577e-05, 5.3221999999998604e-05, 5.308300000000238e-05, 5.304100000000367e-05, 5.261099999999408e-05, 5.3221999999998604e-05, 5.255600000000221e-05, 5.295800000000572e-05, 5.320899999999851e-05, 5.257000000000178e-05, 5.297200000000529e-05, 5.3235999999998174e-05, 5.319499999999894e-05, 5.3179999999999894e-05, 5.294499999999869e-05, 5.3138000000001184e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.252" endtime="20201117 14:41:39.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.241" endtime="20201117 14:41:39.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.264" endtime="20201117 14:41:39.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.272" endtime="20201117 14:41:39.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.268" endtime="20201117 14:41:39.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.259" endtime="20201117 14:41:39.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.741" endtime="20201117 14:41:39.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.227" endtime="20201117 14:41:39.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.226" endtime="20201117 14:41:39.298"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.304" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.325" endtime="20201117 14:41:39.346"></status>
</kw>
<msg timestamp="20201117 14:41:39.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.322" endtime="20201117 14:41:39.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.349" endtime="20201117 14:41:39.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.355" endtime="20201117 14:41:39.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.315" endtime="20201117 14:41:39.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.309" endtime="20201117 14:41:39.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.379" endtime="20201117 14:41:39.726"></status>
</kw>
<msg timestamp="20201117 14:41:39.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046730639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046784056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.376" endtime="20201117 14:41:39.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046730639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046784056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.735" endtime="20201117 14:41:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.754" endtime="20201117 14:41:39.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.368" endtime="20201117 14:41:39.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.363" endtime="20201117 14:41:39.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.771" level="INFO">${RESULT} = [{'time': 0.046784056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.341700000000005e-05, 'source_diff': 5.341700000000005e-05}, {'time': 0.046851056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.762" endtime="20201117 14:41:39.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.802" level="INFO">${ACCURACY} = {'source_diff': [5.341700000000005e-05, 5.361200000000149e-05, 5.36670000000003e-05, 5.3915999999994135e-05, 5.327699999999741e-05, 5.411099999999558e-05, 5.4194000000000464e-05, 5.330500000000349e-05...</msg>
<status status="PASS" starttime="20201117 14:41:39.773" endtime="20201117 14:41:39.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.813" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.810" endtime="20201117 14:41:39.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.818" level="INFO">VALUE: [5.341700000000005e-05, 5.361200000000149e-05, 5.36670000000003e-05, 5.3915999999994135e-05, 5.327699999999741e-05, 5.411099999999558e-05, 5.4194000000000464e-05, 5.330500000000349e-05, 5.405500000000424e-05, 5.3930000000000644e-05, 5.361099999999508e-05, 5.3902000000001504e-05, 5.361100000000202e-05, 5.3721999999999104e-05, 5.3485999999998424e-05, 5.3277999999996883e-05, 5.3416000000000574e-05, 5.36670000000003e-05, 5.33749999999944e-05, 5.362500000000159e-05, 5.3888000000001934e-05, 5.362500000000159e-05, 5.388899999999447e-05, 5.334699999999526e-05, 5.387500000000184e-05, 5.3249999999997744e-05, 5.36670000000003e-05, 5.380599999999652e-05, 5.41670000000008e-05, 5.355600000000321e-05, 5.419499999999994e-05, 5.420899999999951e-05, 5.357000000000278e-05, 5.356999999999584e-05, 5.391700000000055e-05, 5.359699999999551e-05, 5.361100000000202e-05, 5.331900000000306e-05, 5.3930000000000644e-05, 5.358300000000288e-05, 5.3707999999999534e-05, 5.412500000000209e-05, 5.4027999999997633e-05, 5.390300000000098e-05, 5.3513999999997564e-05, 5.35140000000045e-05, 5.381900000000356e-05, 5.3749999999998244e-05, 5.344499999999919e-05, 5.395899999999926e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.815" endtime="20201117 14:41:39.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.804" endtime="20201117 14:41:39.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.827" endtime="20201117 14:41:39.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.835" endtime="20201117 14:41:39.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.831" endtime="20201117 14:41:39.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.822" endtime="20201117 14:41:39.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.305" endtime="20201117 14:41:39.861"></status>
</kw>
<msg timestamp="20201117 14:41:39.861" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.883" endtime="20201117 14:41:39.903"></status>
</kw>
<msg timestamp="20201117 14:41:39.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.879" endtime="20201117 14:41:39.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.907" endtime="20201117 14:41:39.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.914" endtime="20201117 14:41:39.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.872" endtime="20201117 14:41:39.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.866" endtime="20201117 14:41:39.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.938" endtime="20201117 14:41:40.277"></status>
</kw>
<msg timestamp="20201117 14:41:40.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040890472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.934" endtime="20201117 14:41:40.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040890472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.287" endtime="20201117 14:41:40.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.306" endtime="20201117 14:41:40.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.927" endtime="20201117 14:41:40.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.922" endtime="20201117 14:41:40.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.326" level="INFO">${RESULT} = [{'time': 0.040944069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.359700000000245e-05, 'source_diff': 5.359700000000245e-05}, {'time': 0.041013042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.316" endtime="20201117 14:41:40.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.359" level="INFO">${ACCURACY} = {'source_diff': [5.359700000000245e-05, 5.3277999999996883e-05, 5.4235999999999174e-05, 5.411100000000252e-05, 5.383299999999619e-05, 5.362500000000159e-05, 5.3971999999999354e-05, 5.40549999999973e-0...</msg>
<status status="PASS" starttime="20201117 14:41:40.328" endtime="20201117 14:41:40.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.370" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.368" endtime="20201117 14:41:40.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.376" level="INFO">VALUE: [5.359700000000245e-05, 5.3277999999996883e-05, 5.4235999999999174e-05, 5.411100000000252e-05, 5.383299999999619e-05, 5.362500000000159e-05, 5.3971999999999354e-05, 5.40549999999973e-05, 5.3416000000000574e-05, 5.406900000000381e-05, 5.390300000000098e-05, 5.362500000000159e-05, 5.4221999999999604e-05, 5.361100000000202e-05, 5.362499999999465e-05, 5.383300000000313e-05, 5.357000000000278e-05, 5.4194000000000464e-05, 5.420899999999951e-05, 5.386200000000174e-05, 5.409800000000242e-05, 5.3985999999998924e-05, 5.3901999999994565e-05, 5.3944000000000214e-05, 5.3416000000000574e-05, 5.413900000000166e-05, 5.361100000000202e-05, 5.350000000000493e-05, 5.336100000000177e-05, 5.380600000000346e-05, 5.408299999999644e-05, 5.419499999999994e-05, 5.365300000000073e-05, 5.388900000000141e-05, 5.361099999999508e-05, 5.409800000000242e-05, 5.405599999999677e-05, 5.409800000000242e-05, 5.411100000000252e-05, 5.381900000000356e-05, 5.354099999999723e-05, 5.406900000000381e-05, 5.4194000000000464e-05, 5.3749999999998244e-05, 5.4221999999999604e-05, 5.4013999999998064e-05, 5.36670000000003e-05, 5.356899999999637e-05, 5.334699999999526e-05, 5.3985999999998924e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.373" endtime="20201117 14:41:40.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.361" endtime="20201117 14:41:40.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.385" endtime="20201117 14:41:40.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.393" endtime="20201117 14:41:40.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.389" endtime="20201117 14:41:40.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.380" endtime="20201117 14:41:40.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.862" endtime="20201117 14:41:40.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.301" endtime="20201117 14:41:40.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.299" endtime="20201117 14:41:40.420"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.425" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.448" endtime="20201117 14:41:40.469"></status>
</kw>
<msg timestamp="20201117 14:41:40.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.445" endtime="20201117 14:41:40.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.472" endtime="20201117 14:41:40.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.478" endtime="20201117 14:41:40.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.436" endtime="20201117 14:41:40.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.431" endtime="20201117 14:41:40.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.502" endtime="20201117 14:41:40.841"></status>
</kw>
<msg timestamp="20201117 14:41:40.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.499" endtime="20201117 14:41:40.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.851" endtime="20201117 14:41:40.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.870" endtime="20201117 14:41:40.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.491" endtime="20201117 14:41:40.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.487" endtime="20201117 14:41:40.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.889" level="INFO">${RESULT} = [{'time': 0.048079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.490300000000198e-05, 'source_diff': 5.490300000000198e-05}, {'time': 0.048153861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.880" endtime="20201117 14:41:40.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.920" level="INFO">${ACCURACY} = {'source_diff': [5.490300000000198e-05, 5.4708000000000534e-05, 5.518099999999443e-05, 5.440300000000148e-05, 5.516699999999486e-05, 5.456999999999684e-05, 5.504200000000514e-05, 5.4485999999999424e-0...</msg>
<status status="PASS" starttime="20201117 14:41:40.891" endtime="20201117 14:41:40.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.932" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.929" endtime="20201117 14:41:40.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.937" level="INFO">VALUE: [5.490300000000198e-05, 5.4708000000000534e-05, 5.518099999999443e-05, 5.440300000000148e-05, 5.516699999999486e-05, 5.456999999999684e-05, 5.504200000000514e-05, 5.4485999999999424e-05, 5.506899999999787e-05, 5.431999999999659e-05, 5.430599999999702e-05, 5.519500000000094e-05, 5.458299999999694e-05, 5.456899999999737e-05, 5.4485999999999424e-05, 5.512500000000309e-05, 5.5165999999995385e-05, 5.5235999999993235e-05, 5.463900000000216e-05, 5.506900000000481e-05, 5.519500000000094e-05, 5.469500000000044e-05, 5.4249999999998744e-05, 5.429200000000439e-05, 5.461100000000302e-05, 5.4541999999997703e-05, 5.4499999999998994e-05, 5.5027999999998634e-05, 5.4999999999999494e-05, 5.461099999999608e-05, 5.4971999999993415e-05, 5.458300000000388e-05, 5.4679999999994455e-05, 5.4541999999997703e-05, 5.480600000000446e-05, 5.436100000000277e-05, 5.4277999999997883e-05, 5.4777999999998384e-05, 5.493100000000112e-05, 5.4722000000000104e-05, 5.459800000000292e-05, 5.483399999999666e-05, 5.497299999999983e-05, 5.444500000000019e-05, 5.506899999999787e-05, 5.5041999999998203e-05, 5.4985999999999924e-05, 5.481899999999762e-05, 5.4972000000000354e-05, 5.494500000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.934" endtime="20201117 14:41:40.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.922" endtime="20201117 14:41:40.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.946" endtime="20201117 14:41:40.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.955" endtime="20201117 14:41:40.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.950" endtime="20201117 14:41:40.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.941" endtime="20201117 14:41:40.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.427" endtime="20201117 14:41:40.981"></status>
</kw>
<msg timestamp="20201117 14:41:40.981" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.003" endtime="20201117 14:41:41.024"></status>
</kw>
<msg timestamp="20201117 14:41:41.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.000" endtime="20201117 14:41:41.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.027" endtime="20201117 14:41:41.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.034" endtime="20201117 14:41:41.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.993" endtime="20201117 14:41:41.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.987" endtime="20201117 14:41:41.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.057" endtime="20201117 14:41:41.399"></status>
</kw>
<msg timestamp="20201117 14:41:41.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042274167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.054" endtime="20201117 14:41:41.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042274167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.409" endtime="20201117 14:41:41.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.428" endtime="20201117 14:41:41.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.047" endtime="20201117 14:41:41.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.042" endtime="20201117 14:41:41.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.447" level="INFO">${RESULT} = [{'time': 0.042274167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4791999999997953e-05, 'source_diff': 5.4791999999997953e-05}, {'time': 0.042342167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:41.438" endtime="20201117 14:41:41.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.478" level="INFO">${ACCURACY} = {'source_diff': [5.4791999999997953e-05, 5.470900000000001e-05, 5.512499999999615e-05, 5.4958000000000784e-05, 5.4638000000002684e-05, 5.4694000000000964e-05, 5.481899999999762e-05, 5.4722000000000104...</msg>
<status status="PASS" starttime="20201117 14:41:41.449" endtime="20201117 14:41:41.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.489" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.487" endtime="20201117 14:41:41.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.495" level="INFO">VALUE: [5.4791999999997953e-05, 5.470900000000001e-05, 5.512499999999615e-05, 5.4958000000000784e-05, 5.4638000000002684e-05, 5.4694000000000964e-05, 5.481899999999762e-05, 5.4722000000000104e-05, 5.515299999999529e-05, 5.458300000000388e-05, 5.50549999999983e-05, 5.479200000000489e-05, 5.4277999999997883e-05, 5.458299999999694e-05, 5.4527999999998134e-05, 5.490299999999504e-05, 5.482000000000403e-05, 5.50549999999983e-05, 5.487500000000284e-05, 5.483300000000413e-05, 5.48340000000036e-05, 5.506899999999787e-05, 5.512499999999615e-05, 5.4915999999995135e-05, 5.5222000000000604e-05, 5.483299999999719e-05, 5.4499999999998994e-05, 5.5179999999994955e-05, 5.5263999999999314e-05, 5.483300000000413e-05, 5.461100000000302e-05, 5.440300000000148e-05, 5.470900000000001e-05, 5.5027999999998634e-05, 5.5041999999998203e-05, 5.509699999999701e-05, 5.519500000000094e-05, 5.50549999999983e-05, 5.5151999999995815e-05, 5.462500000000259e-05, 5.5194000000001464e-05, 5.4680000000001394e-05, 5.486100000000327e-05, 5.488900000000241e-05, 5.4972000000000354e-05, 5.493100000000112e-05, 5.487500000000284e-05, 5.5236000000000174e-05, 5.441700000000105e-05, 5.483300000000413e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.492" endtime="20201117 14:41:41.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.480" endtime="20201117 14:41:41.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.505" endtime="20201117 14:41:41.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.513" endtime="20201117 14:41:41.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.509" endtime="20201117 14:41:41.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.499" endtime="20201117 14:41:41.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.983" endtime="20201117 14:41:41.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.423" endtime="20201117 14:41:41.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.421" endtime="20201117 14:41:41.540"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.545" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.567" endtime="20201117 14:41:41.586"></status>
</kw>
<msg timestamp="20201117 14:41:41.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.563" endtime="20201117 14:41:41.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.587" endtime="20201117 14:41:41.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.590" endtime="20201117 14:41:41.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.556" endtime="20201117 14:41:41.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.550" endtime="20201117 14:41:41.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.602" endtime="20201117 14:41:41.886"></status>
</kw>
<msg timestamp="20201117 14:41:41.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047287306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047343, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:41.600" endtime="20201117 14:41:41.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047287306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047343, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:41.891" endtime="20201117 14:41:41.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.899" endtime="20201117 14:41:41.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.597" endtime="20201117 14:41:41.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.594" endtime="20201117 14:41:41.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.907" level="INFO">${RESULT} = [{'time': 0.047343, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5694000000001964e-05, 'source_diff': 5.5694000000001964e-05}, {'time': 0.047416014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:41.903" endtime="20201117 14:41:41.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.921" level="INFO">${ACCURACY} = {'source_diff': [5.5694000000001964e-05, 5.559699999999751e-05, 5.5472000000000854e-05, 5.5972000000001354e-05, 5.579200000000589e-05, 5.612499999999715e-05, 5.5472000000000854e-05, 5.5708000000001534...</msg>
<status status="PASS" starttime="20201117 14:41:41.908" endtime="20201117 14:41:41.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.927" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.925" endtime="20201117 14:41:41.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.929" level="INFO">VALUE: [5.5694000000001964e-05, 5.559699999999751e-05, 5.5472000000000854e-05, 5.5972000000001354e-05, 5.579200000000589e-05, 5.612499999999715e-05, 5.5472000000000854e-05, 5.5708000000001534e-05, 5.565300000000273e-05, 5.540299999999554e-05, 5.581899999999862e-05, 5.526400000000625e-05, 5.534699999999726e-05, 5.53749999999964e-05, 5.554100000000617e-05, 5.561099999999708e-05, 5.630499999999955e-05, 5.5736000000000674e-05, 5.541699999999511e-05, 5.5541999999998704e-05, 5.629099999999998e-05, 5.556999999999784e-05, 5.5986000000000924e-05, 5.543099999999468e-05, 5.6222000000001604e-05, 5.5777999999999384e-05, 5.5791999999998954e-05, 5.53470000000042e-05, 5.606899999999887e-05, 5.591700000000255e-05, 5.6208000000002034e-05, 5.6222000000001604e-05, 5.615300000000323e-05, 5.613899999999672e-05, 5.615299999999629e-05, 5.561099999999708e-05, 5.563900000000316e-05, 5.611200000000399e-05, 5.618100000000237e-05, 5.5666000000002824e-05, 5.606999999999834e-05, 5.5277999999998884e-05, 5.561099999999708e-05, 5.579099999999948e-05, 5.533299999999769e-05, 5.606899999999887e-05, 5.5736000000000674e-05, 5.615299999999629e-05, 5.561099999999708e-05, 5.5513999999999564e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.928" endtime="20201117 14:41:41.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.922" endtime="20201117 14:41:41.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.934" endtime="20201117 14:41:41.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.938" endtime="20201117 14:41:41.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.936" endtime="20201117 14:41:41.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.932" endtime="20201117 14:41:41.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.546" endtime="20201117 14:41:41.959"></status>
</kw>
<msg timestamp="20201117 14:41:41.959" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.970" endtime="20201117 14:41:41.986"></status>
</kw>
<msg timestamp="20201117 14:41:41.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.968" endtime="20201117 14:41:41.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.988" endtime="20201117 14:41:41.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.991" endtime="20201117 14:41:41.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.965" endtime="20201117 14:41:41.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.962" endtime="20201117 14:41:41.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.002" endtime="20201117 14:41:42.288"></status>
</kw>
<msg timestamp="20201117 14:41:42.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.000" endtime="20201117 14:41:42.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.298" endtime="20201117 14:41:42.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.317" endtime="20201117 14:41:42.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.997" endtime="20201117 14:41:42.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.995" endtime="20201117 14:41:42.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.336" level="INFO">${RESULT} = [{'time': 0.024485681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.619499999999847e-05, 'source_diff': 5.619499999999847e-05}, {'time': 0.024549694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.327" endtime="20201117 14:41:42.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.370" level="INFO">${ACCURACY} = {'source_diff': [5.619499999999847e-05, 5.5986000000000924e-05, 5.6208000000002034e-05, 5.612500000000062e-05, 5.5721999999997635e-05, 5.604099999999973e-05, 5.5986000000000924e-05, 5.5750000000000244...</msg>
<status status="PASS" starttime="20201117 14:41:42.338" endtime="20201117 14:41:42.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.381" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.379" endtime="20201117 14:41:42.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.386" level="INFO">VALUE: [5.619499999999847e-05, 5.5986000000000924e-05, 5.6208000000002034e-05, 5.612500000000062e-05, 5.5721999999997635e-05, 5.604099999999973e-05, 5.5986000000000924e-05, 5.5750000000000244e-05, 5.557000000000131e-05, 5.595899999999779e-05, 5.579200000000242e-05, 5.5263999999999314e-05, 5.5499999999999994e-05, 5.536199999999977e-05, 5.5943999999998745e-05, 5.595900000000126e-05, 5.573700000000015e-05, 5.5999999999997024e-05, 5.5943999999998745e-05, 5.5985999999997454e-05, 5.556899999999837e-05, 5.5736000000000674e-05, 5.5486000000000424e-05, 5.606900000000234e-05, 5.541700000000205e-05, 5.5750000000000244e-05, 5.5555999999998273e-05, 5.561099999999708e-05, 5.5458000000001284e-05, 5.536199999999977e-05, 5.6055999999998773e-05, 5.613900000000019e-05, 5.576300000000034e-05, 5.556900000000184e-05, 5.561100000000055e-05, 5.5791999999998954e-05, 5.60549999999993e-05, 5.5763999999999814e-05, 5.581899999999862e-05, 5.5750000000000244e-05, 5.619500000000194e-05, 5.5791999999998954e-05, 5.5986000000000924e-05, 5.619499999999847e-05, 5.5541999999998704e-05, 5.5777999999999384e-05, 5.540299999999901e-05, 5.557000000000131e-05, 5.6249999999997274e-05, 5.615299999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.383" endtime="20201117 14:41:42.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.372" endtime="20201117 14:41:42.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.396" endtime="20201117 14:41:42.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.405" endtime="20201117 14:41:42.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.400" endtime="20201117 14:41:42.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.391" endtime="20201117 14:41:42.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.960" endtime="20201117 14:41:42.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.542" endtime="20201117 14:41:42.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.541" endtime="20201117 14:41:42.431"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.436" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.458" endtime="20201117 14:41:42.479"></status>
</kw>
<msg timestamp="20201117 14:41:42.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.455" endtime="20201117 14:41:42.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.482" endtime="20201117 14:41:42.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.489" endtime="20201117 14:41:42.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.448" endtime="20201117 14:41:42.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.442" endtime="20201117 14:41:42.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.512" endtime="20201117 14:41:42.852"></status>
</kw>
<msg timestamp="20201117 14:41:42.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046882833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046939944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.509" endtime="20201117 14:41:42.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046882833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046939944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.861" endtime="20201117 14:41:42.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.880" endtime="20201117 14:41:42.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.502" endtime="20201117 14:41:42.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.497" endtime="20201117 14:41:42.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.900" level="INFO">${RESULT} = [{'time': 0.046939944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.711099999999858e-05, 'source_diff': 5.711099999999858e-05}, {'time': 0.047014958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.891" endtime="20201117 14:41:42.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.931" level="INFO">${ACCURACY} = {'source_diff': [5.711099999999858e-05, 5.702700000000116e-05, 5.6402000000004004e-05, 5.688900000000441e-05, 5.6430000000003144e-05, 5.661100000000502e-05, 5.6528000000000134e-05, 5.7250000000001744e...</msg>
<status status="PASS" starttime="20201117 14:41:42.902" endtime="20201117 14:41:42.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.942" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.940" endtime="20201117 14:41:42.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.948" level="INFO">VALUE: [5.711099999999858e-05, 5.702700000000116e-05, 5.6402000000004004e-05, 5.688900000000441e-05, 5.6430000000003144e-05, 5.661100000000502e-05, 5.6528000000000134e-05, 5.7250000000001744e-05, 5.712500000000509e-05, 5.6319999999998593e-05, 5.647300000000133e-05, 5.683399999999866e-05, 5.6791999999999954e-05, 5.7151999999997816e-05, 5.6736000000001674e-05, 5.6819999999999093e-05, 5.704100000000073e-05, 5.7235999999995235e-05, 5.6764000000000814e-05, 5.6665999999996886e-05, 5.6915999999997136e-05, 5.716699999999686e-05, 5.633300000000563e-05, 5.7264000000001314e-05, 5.6514000000000564e-05, 5.668100000000287e-05, 5.638899999999697e-05, 5.66670000000033e-05, 5.654100000000023e-05, 5.658400000000535e-05, 5.643100000000262e-05, 5.679100000000048e-05, 5.6722000000002104e-05, 5.6916000000004074e-05, 5.6943999999996275e-05, 5.7151999999997816e-05, 5.63749999999974e-05, 5.70550000000003e-05, 5.7208000000003034e-05, 5.713900000000466e-05, 5.6569999999998843e-05, 5.7028000000000634e-05, 5.715299999999729e-05, 5.6528000000000134e-05, 5.711099999999858e-05, 5.658399999999841e-05, 5.6930000000003644e-05, 5.709699999999901e-05, 5.634699999999826e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.944" endtime="20201117 14:41:42.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.933" endtime="20201117 14:41:42.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.957" endtime="20201117 14:41:42.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.966" endtime="20201117 14:41:42.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.961" endtime="20201117 14:41:42.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.953" endtime="20201117 14:41:42.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.438" endtime="20201117 14:41:42.991"></status>
</kw>
<msg timestamp="20201117 14:41:42.992" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.014" endtime="20201117 14:41:43.035"></status>
</kw>
<msg timestamp="20201117 14:41:43.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.010" endtime="20201117 14:41:43.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.038" endtime="20201117 14:41:43.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.045" endtime="20201117 14:41:43.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.003" endtime="20201117 14:41:43.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.997" endtime="20201117 14:41:43.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.068" endtime="20201117 14:41:43.410"></status>
</kw>
<msg timestamp="20201117 14:41:43.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041753208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.065" endtime="20201117 14:41:43.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041753208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.419" endtime="20201117 14:41:43.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.439" endtime="20201117 14:41:43.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.058" endtime="20201117 14:41:43.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.053" endtime="20201117 14:41:43.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.458" level="INFO">${RESULT} = [{'time': 0.041753208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6680000000003394e-05, 'source_diff': 5.6680000000003394e-05}, {'time': 0.041829181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:43.449" endtime="20201117 14:41:43.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.489" level="INFO">${ACCURACY} = {'source_diff': [5.6680000000003394e-05, 5.6541999999999704e-05, 5.629099999999998e-05, 5.6680000000003394e-05, 5.633300000000563e-05, 5.654100000000023e-05, 5.7028000000000634e-05, 5.63749999999974e-...</msg>
<status status="PASS" starttime="20201117 14:41:43.460" endtime="20201117 14:41:43.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.501" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.499" endtime="20201117 14:41:43.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.506" level="INFO">VALUE: [5.6680000000003394e-05, 5.6541999999999704e-05, 5.629099999999998e-05, 5.6680000000003394e-05, 5.633300000000563e-05, 5.654100000000023e-05, 5.7028000000000634e-05, 5.63749999999974e-05, 5.636099999999783e-05, 5.6305999999999023e-05, 5.663900000000416e-05, 5.7069999999999343e-05, 5.690299999999704e-05, 5.672300000000158e-05, 5.709699999999901e-05, 5.709800000000542e-05, 5.6291999999999454e-05, 5.681899999999962e-05, 5.713899999999772e-05, 5.659699999999851e-05, 5.6514000000000564e-05, 5.6750000000001244e-05, 5.630499999999955e-05, 5.6805999999999524e-05, 5.6736000000001674e-05, 5.6528000000000134e-05, 5.711099999999858e-05, 5.6791999999999954e-05, 5.7194999999996e-05, 5.640300000000348e-05, 5.665299999999679e-05, 5.697300000000183e-05, 5.6721999999995165e-05, 5.68749999999979e-05, 5.6528000000000134e-05, 5.630499999999955e-05, 5.684699999999876e-05, 5.630499999999955e-05, 5.7055999999999774e-05, 5.636099999999783e-05, 5.7000000000001494e-05, 5.6736000000001674e-05, 5.693100000000312e-05, 5.7208000000003034e-05, 5.690300000000398e-05, 5.6500000000000994e-05, 5.6569999999998843e-05, 5.6528000000000134e-05, 5.6819999999999093e-05, 5.658299999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.503" endtime="20201117 14:41:43.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.492" endtime="20201117 14:41:43.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.515" endtime="20201117 14:41:43.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.524" endtime="20201117 14:41:43.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.519" endtime="20201117 14:41:43.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.511" endtime="20201117 14:41:43.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.993" endtime="20201117 14:41:43.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.434" endtime="20201117 14:41:43.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.432" endtime="20201117 14:41:43.551"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.556" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.578" endtime="20201117 14:41:43.599"></status>
</kw>
<msg timestamp="20201117 14:41:43.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.574" endtime="20201117 14:41:43.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.602" endtime="20201117 14:41:43.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.609" endtime="20201117 14:41:43.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.567" endtime="20201117 14:41:43.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.561" endtime="20201117 14:41:43.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.632" endtime="20201117 14:41:43.973"></status>
</kw>
<msg timestamp="20201117 14:41:43.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047259236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.629" endtime="20201117 14:41:43.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047259236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.983" endtime="20201117 14:41:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.002" endtime="20201117 14:41:44.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.622" endtime="20201117 14:41:44.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.617" endtime="20201117 14:41:44.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.021" level="INFO">${RESULT} = [{'time': 0.047317028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7791999999994015e-05, 'source_diff': 5.7791999999994015e-05}, {'time': 0.047393028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:44.012" endtime="20201117 14:41:44.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.052" level="INFO">${ACCURACY} = {'source_diff': [5.7791999999994015e-05, 5.7805999999993585e-05, 5.78749999999989e-05, 5.736099999999883e-05, 5.772299999999564e-05, 5.761099999999908e-05, 5.73749999999984e-05, 5.7972000000003354e-05...</msg>
<status status="PASS" starttime="20201117 14:41:44.023" endtime="20201117 14:41:44.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.063" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.061" endtime="20201117 14:41:44.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.069" level="INFO">VALUE: [5.7791999999994015e-05, 5.7805999999993585e-05, 5.78749999999989e-05, 5.736099999999883e-05, 5.772299999999564e-05, 5.761099999999908e-05, 5.73749999999984e-05, 5.7972000000003354e-05, 5.7736000000002674e-05, 5.7485999999995485e-05, 5.795900000000326e-05, 5.780500000000105e-05, 5.743099999999668e-05, 5.791699999999761e-05, 5.7930000000004644e-05, 5.7569999999999844e-05, 5.78749999999989e-05, 5.7764000000001814e-05, 5.7569999999999844e-05, 5.786099999999933e-05, 5.8264000000002314e-05, 5.734699999999926e-05, 5.8264000000002314e-05, 5.7514000000001564e-05, 5.7443999999996775e-05, 5.7430000000004144e-05, 5.7528000000001134e-05, 5.809700000000001e-05, 5.741700000000405e-05, 5.7833999999999663e-05, 5.808300000000044e-05, 5.793100000000412e-05, 5.7750000000002244e-05, 5.736099999999883e-05, 5.7971999999996415e-05, 5.809700000000001e-05, 5.78619999999988e-05, 5.783300000000019e-05, 5.730500000000055e-05, 5.804100000000173e-05, 5.7500000000001994e-05, 5.7694000000003964e-05, 5.7735999999995735e-05, 5.7680000000004394e-05, 5.8028000000001634e-05, 5.768100000000387e-05, 5.7513999999994625e-05, 5.7777999999994445e-05, 5.741699999999711e-05, 5.812500000000609e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.066" endtime="20201117 14:41:44.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.054" endtime="20201117 14:41:44.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.078" endtime="20201117 14:41:44.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.086" endtime="20201117 14:41:44.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.082" endtime="20201117 14:41:44.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.073" endtime="20201117 14:41:44.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.557" endtime="20201117 14:41:44.112"></status>
</kw>
<msg timestamp="20201117 14:41:44.112" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.135" endtime="20201117 14:41:44.155"></status>
</kw>
<msg timestamp="20201117 14:41:44.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.131" endtime="20201117 14:41:44.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.158" endtime="20201117 14:41:44.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.165" endtime="20201117 14:41:44.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.124" endtime="20201117 14:41:44.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.118" endtime="20201117 14:41:44.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.188" endtime="20201117 14:41:44.530"></status>
</kw>
<msg timestamp="20201117 14:41:44.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041567639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041625042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.185" endtime="20201117 14:41:44.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041567639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041625042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.539" endtime="20201117 14:41:44.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.559" endtime="20201117 14:41:44.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.178" endtime="20201117 14:41:44.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.173" endtime="20201117 14:41:44.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.579" level="INFO">${RESULT} = [{'time': 0.041625042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.740299999999754e-05, 'source_diff': 5.740299999999754e-05}, {'time': 0.041704056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:44.569" endtime="20201117 14:41:44.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.612" level="INFO">${ACCURACY} = {'source_diff': [5.740299999999754e-05, 5.811200000000599e-05, 5.8151999999998816e-05, 5.78749999999989e-05, 5.7749999999995305e-05, 5.7708000000003534e-05, 5.7764000000001814e-05, 5.729100000000098e-...</msg>
<status status="PASS" starttime="20201117 14:41:44.581" endtime="20201117 14:41:44.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.623" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.621" endtime="20201117 14:41:44.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.629" level="INFO">VALUE: [5.740299999999754e-05, 5.811200000000599e-05, 5.8151999999998816e-05, 5.78749999999989e-05, 5.7749999999995305e-05, 5.7708000000003534e-05, 5.7764000000001814e-05, 5.729100000000098e-05, 5.790299999999804e-05, 5.78749999999989e-05, 5.736099999999883e-05, 5.7958000000003784e-05, 5.7486000000002424e-05, 5.766699999999736e-05, 5.7778000000001384e-05, 5.7333999999999163e-05, 5.7778000000001384e-05, 5.7556000000000274e-05, 5.7569999999999844e-05, 5.7693999999997025e-05, 5.8264000000002314e-05, 5.730500000000055e-05, 5.794500000000369e-05, 5.806900000000087e-05, 5.7722000000003104e-05, 5.731900000000012e-05, 5.8193999999997525e-05, 5.7736000000002674e-05, 5.811099999999958e-05, 5.7736000000002674e-05, 5.770900000000301e-05, 5.741699999999711e-05, 5.790299999999804e-05, 5.761199999999855e-05, 5.8278000000001884e-05, 5.752700000000166e-05, 5.7402000000005005e-05, 5.7444000000003714e-05, 5.7499999999995055e-05, 5.8013999999995125e-05, 5.7708000000003534e-05, 5.8028000000001634e-05, 5.740299999999754e-05, 5.781900000000062e-05, 5.816699999999786e-05, 5.8000000000002494e-05, 5.7833999999999663e-05, 5.8056000000000774e-05, 5.794499999999675e-05, 5.7985999999995985e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.626" endtime="20201117 14:41:44.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.614" endtime="20201117 14:41:44.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.638" endtime="20201117 14:41:44.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.646" endtime="20201117 14:41:44.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.642" endtime="20201117 14:41:44.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.633" endtime="20201117 14:41:44.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.114" endtime="20201117 14:41:44.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.553" endtime="20201117 14:41:44.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.551" endtime="20201117 14:41:44.673"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.678" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.700" endtime="20201117 14:41:44.721"></status>
</kw>
<msg timestamp="20201117 14:41:44.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.697" endtime="20201117 14:41:44.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.725" endtime="20201117 14:41:44.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.731" endtime="20201117 14:41:44.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.689" endtime="20201117 14:41:44.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.684" endtime="20201117 14:41:44.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.756" endtime="20201117 14:41:45.095"></status>
</kw>
<msg timestamp="20201117 14:41:45.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047234111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047292986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.752" endtime="20201117 14:41:45.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047234111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047292986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.105" endtime="20201117 14:41:45.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.124" endtime="20201117 14:41:45.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.745" endtime="20201117 14:41:45.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.739" endtime="20201117 14:41:45.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.143" level="INFO">${RESULT} = [{'time': 0.047292986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.88749999999999e-05, 'source_diff': 5.88749999999999e-05}, {'time': 0.047368042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:45.134" endtime="20201117 14:41:45.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.174" level="INFO">${ACCURACY} = {'source_diff': [5.88749999999999e-05, 5.915299999999929e-05, 5.877700000000291e-05, 5.886100000000033e-05, 5.8320000000000594e-05, 5.895899999999732e-05, 5.919500000000494e-05, 5.9098000000000483e-05...</msg>
<status status="PASS" starttime="20201117 14:41:45.146" endtime="20201117 14:41:45.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.186" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.183" endtime="20201117 14:41:45.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.191" level="INFO">VALUE: [5.88749999999999e-05, 5.915299999999929e-05, 5.877700000000291e-05, 5.886100000000033e-05, 5.8320000000000594e-05, 5.895899999999732e-05, 5.919500000000494e-05, 5.9098000000000483e-05, 5.8347999999999733e-05, 5.9070000000001344e-05, 5.9042000000002204e-05, 5.866699999999836e-05, 5.9165999999999386e-05, 5.8514000000002564e-05, 5.843099999999768e-05, 5.890299999999904e-05, 5.8486000000003424e-05, 5.9041999999995265e-05, 5.918100000000537e-05, 5.856900000000137e-05, 5.8763999999995875e-05, 5.836099999999983e-05, 5.8999999999996555e-05, 5.858300000000094e-05, 5.8320000000000594e-05, 5.8499999999996055e-05, 5.897300000000383e-05, 5.912500000000015e-05, 5.8735999999996735e-05, 5.8750000000003244e-05, 5.833300000000069e-05, 5.8485999999996485e-05, 5.9221999999997665e-05, 5.858300000000094e-05, 5.8943999999998276e-05, 5.912500000000015e-05, 5.919500000000494e-05, 5.8777999999995445e-05, 5.88619999999998e-05, 5.8556000000001274e-05, 5.8514000000002564e-05, 5.8999999999996555e-05, 5.9222000000004604e-05, 5.8958000000004784e-05, 5.8679999999998456e-05, 5.8915999999999136e-05, 5.911100000000058e-05, 5.834700000000026e-05, 5.861100000000008e-05, 5.8556000000001274e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.188" endtime="20201117 14:41:45.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.176" endtime="20201117 14:41:45.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.200" endtime="20201117 14:41:45.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.208" endtime="20201117 14:41:45.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.204" endtime="20201117 14:41:45.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.195" endtime="20201117 14:41:45.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.680" endtime="20201117 14:41:45.234"></status>
</kw>
<msg timestamp="20201117 14:41:45.234" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.256" endtime="20201117 14:41:45.277"></status>
</kw>
<msg timestamp="20201117 14:41:45.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.253" endtime="20201117 14:41:45.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.281" endtime="20201117 14:41:45.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.294" endtime="20201117 14:41:45.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.246" endtime="20201117 14:41:45.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.240" endtime="20201117 14:41:45.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.318" endtime="20201117 14:41:45.630"></status>
</kw>
<msg timestamp="20201117 14:41:45.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041239958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.314" endtime="20201117 14:41:45.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041239958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.635" endtime="20201117 14:41:45.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.643" endtime="20201117 14:41:45.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.307" endtime="20201117 14:41:45.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.302" endtime="20201117 14:41:45.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.652" level="INFO">${RESULT} = [{'time': 0.041298319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.836099999999983e-05, 'source_diff': 5.836099999999983e-05}, {'time': 0.041372278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.648" endtime="20201117 14:41:45.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.666" level="INFO">${ACCURACY} = {'source_diff': [5.836099999999983e-05, 5.9084000000000914e-05, 5.8514000000002564e-05, 5.9098000000000483e-05, 5.9194999999998e-05, 5.843100000000462e-05, 5.8387999999999496e-05, 5.8402000000006005e-...</msg>
<status status="PASS" starttime="20201117 14:41:45.654" endtime="20201117 14:41:45.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.671" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.670" endtime="20201117 14:41:45.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.674" level="INFO">VALUE: [5.836099999999983e-05, 5.9084000000000914e-05, 5.8514000000002564e-05, 5.9098000000000483e-05, 5.9194999999998e-05, 5.843100000000462e-05, 5.8387999999999496e-05, 5.8402000000006005e-05, 5.884700000000076e-05, 5.9165999999999386e-05, 5.840299999999854e-05, 5.838899999999897e-05, 5.8458000000004284e-05, 5.840300000000548e-05, 5.8500000000002994e-05, 5.8848000000000233e-05, 5.841699999999811e-05, 5.856899999999443e-05, 5.91670000000058e-05, 5.840299999999854e-05, 5.890300000000598e-05, 5.9055999999994835e-05, 5.851300000000309e-05, 5.88749999999999e-05, 5.9151999999999816e-05, 5.90829999999945e-05, 5.88749999999999e-05, 5.888899999999947e-05, 5.840299999999854e-05, 5.9069999999994405e-05, 5.836099999999983e-05, 5.88749999999999e-05, 5.8972000000004354e-05, 5.890299999999904e-05, 5.8679999999998456e-05, 5.895899999999732e-05, 5.831900000000112e-05, 5.845900000000376e-05, 5.856900000000137e-05, 5.852700000000266e-05, 5.904100000000273e-05, 5.8693999999998026e-05, 5.9249999999996805e-05, 5.88749999999999e-05, 5.8513999999995625e-05, 5.915299999999929e-05, 5.8570000000000844e-05, 5.9236000000004174e-05, 5.8500000000002994e-05, 5.8305999999994085e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.672" endtime="20201117 14:41:45.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.667" endtime="20201117 14:41:45.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.678" endtime="20201117 14:41:45.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.682" endtime="20201117 14:41:45.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.680" endtime="20201117 14:41:45.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.676" endtime="20201117 14:41:45.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.236" endtime="20201117 14:41:45.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.675" endtime="20201117 14:41:45.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.674" endtime="20201117 14:41:45.704"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.706" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.717" endtime="20201117 14:41:45.735"></status>
</kw>
<msg timestamp="20201117 14:41:45.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.715" endtime="20201117 14:41:45.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.736" endtime="20201117 14:41:45.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.739" endtime="20201117 14:41:45.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.712" endtime="20201117 14:41:45.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.709" endtime="20201117 14:41:45.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.751" endtime="20201117 14:41:46.036"></status>
</kw>
<msg timestamp="20201117 14:41:46.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02755425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027614181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:45.749" endtime="20201117 14:41:46.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02755425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027614181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:46.040" endtime="20201117 14:41:46.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.049" endtime="20201117 14:41:46.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.746" endtime="20201117 14:41:46.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.743" endtime="20201117 14:41:46.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.057" level="INFO">${RESULT} = [{'time': 0.027614181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.993100000000265e-05, 'source_diff': 5.993100000000265e-05}, {'time': 0.027686167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.053" endtime="20201117 14:41:46.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.071" level="INFO">${ACCURACY} = {'source_diff': [5.993100000000265e-05, 5.944500000000172e-05, 5.9722000000001635e-05, 5.952700000000019e-05, 5.9902000000000566e-05, 5.9665999999999886e-05, 6.011100000000158e-05, 6.0250000000001275e...</msg>
<status status="PASS" starttime="20201117 14:41:46.058" endtime="20201117 14:41:46.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.076" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.075" endtime="20201117 14:41:46.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.079" level="INFO">VALUE: [5.993100000000265e-05, 5.944500000000172e-05, 5.9722000000001635e-05, 5.952700000000019e-05, 5.9902000000000566e-05, 5.9665999999999886e-05, 6.011100000000158e-05, 6.0250000000001275e-05, 5.9458000000001815e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.9777999999999915e-05, 5.9805999999999054e-05, 6.0028000000000165e-05, 5.9929999999999706e-05, 5.972300000000111e-05, 5.9306000000002024e-05, 5.973700000000068e-05, 5.9429999999999206e-05, 5.930499999999908e-05, 5.983299999999872e-05, 6.009700000000201e-05, 5.93750000000004e-05, 6.011100000000158e-05, 6.013900000000072e-05, 5.9277999999999414e-05, 5.986100000000133e-05, 6.008299999999897e-05, 5.9556000000002274e-05, 5.938899999999997e-05, 5.988900000000047e-05, 6.0235999999998235e-05, 6.012499999999768e-05, 5.98750000000009e-05, 5.9429999999999206e-05, 5.9958000000002315e-05, 5.98750000000009e-05, 5.9471999999997915e-05, 6.013900000000072e-05, 5.9679999999999456e-05, 6.0041999999999734e-05, 5.9721999999998165e-05, 6.0014000000000595e-05, 5.994499999999875e-05, 5.965299999999979e-05, 5.9500000000000525e-05, 5.986100000000133e-05, 5.934700000000126e-05, 6.016700000000333e-05, 5.9986000000004924e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.077" endtime="20201117 14:41:46.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.072" endtime="20201117 14:41:46.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.083" endtime="20201117 14:41:46.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.087" endtime="20201117 14:41:46.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.085" endtime="20201117 14:41:46.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.081" endtime="20201117 14:41:46.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.707" endtime="20201117 14:41:46.109"></status>
</kw>
<msg timestamp="20201117 14:41:46.109" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.119" endtime="20201117 14:41:46.137"></status>
</kw>
<msg timestamp="20201117 14:41:46.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.118" endtime="20201117 14:41:46.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.139" endtime="20201117 14:41:46.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.142" endtime="20201117 14:41:46.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.114" endtime="20201117 14:41:46.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.112" endtime="20201117 14:41:46.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.153" endtime="20201117 14:41:46.441"></status>
</kw>
<msg timestamp="20201117 14:41:46.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.151" endtime="20201117 14:41:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.451" endtime="20201117 14:41:46.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.470" endtime="20201117 14:41:46.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.148" endtime="20201117 14:41:46.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.146" endtime="20201117 14:41:46.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.489" level="INFO">${RESULT} = [{'time': 0.024833153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0221999999998665e-05, 'source_diff': 6.0221999999998665e-05}, {'time': 0.024903125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:46.480" endtime="20201117 14:41:46.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.523" level="INFO">${ACCURACY} = {'source_diff': [6.0221999999998665e-05, 5.9486000000000955e-05, 6.0084000000001914e-05, 5.9306000000002024e-05, 5.965299999999979e-05, 6.020899999999857e-05, 5.9486000000000955e-05, 6.012499999999768...</msg>
<status status="PASS" starttime="20201117 14:41:46.491" endtime="20201117 14:41:46.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.534" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.532" endtime="20201117 14:41:46.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.540" level="INFO">VALUE: [6.0221999999998665e-05, 5.9486000000000955e-05, 6.0084000000001914e-05, 5.9306000000002024e-05, 5.965299999999979e-05, 6.020899999999857e-05, 5.9486000000000955e-05, 6.012499999999768e-05, 5.9471999999997915e-05, 5.938899999999997e-05, 6.0207999999999096e-05, 5.9957999999998846e-05, 5.984699999999829e-05, 5.9665999999999886e-05, 5.930500000000255e-05, 5.981899999999915e-05, 6.0235999999998235e-05, 5.9236000000000705e-05, 5.9320000000001594e-05, 5.961100000000108e-05, 5.941699999999911e-05, 5.968099999999893e-05, 5.9583999999997944e-05, 5.9986000000001455e-05, 6.0235999999998235e-05, 5.9750000000000775e-05, 5.952700000000019e-05, 5.9457999999998346e-05, 5.9458000000001815e-05, 5.9665999999999886e-05, 5.938899999999997e-05, 5.9235999999997235e-05, 5.944499999999825e-05, 6.0041999999999734e-05, 5.9805999999999054e-05, 5.990300000000004e-05, 5.936100000000083e-05, 5.9777999999999915e-05, 5.9542000000002704e-05, 5.9291999999998984e-05, 5.965299999999979e-05, 5.9736000000001205e-05, 5.9736000000001205e-05, 5.9736000000001205e-05, 6.0235999999998235e-05, 5.9777999999999915e-05, 5.9806000000002524e-05, 5.934699999999779e-05, 5.9292000000002454e-05, 6.027699999999747e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.536" endtime="20201117 14:41:46.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.525" endtime="20201117 14:41:46.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.549" endtime="20201117 14:41:46.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.557" endtime="20201117 14:41:46.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.553" endtime="20201117 14:41:46.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.545" endtime="20201117 14:41:46.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.110" endtime="20201117 14:41:46.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.705" endtime="20201117 14:41:46.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.704" endtime="20201117 14:41:46.584"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.589" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.611" endtime="20201117 14:41:46.632"></status>
</kw>
<msg timestamp="20201117 14:41:46.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.608" endtime="20201117 14:41:46.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.636" endtime="20201117 14:41:46.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.642" endtime="20201117 14:41:46.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.601" endtime="20201117 14:41:46.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.595" endtime="20201117 14:41:46.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.666" endtime="20201117 14:41:47.004"></status>
</kw>
<msg timestamp="20201117 14:41:47.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047282792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.663" endtime="20201117 14:41:47.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047282792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.014" endtime="20201117 14:41:47.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.033" endtime="20201117 14:41:47.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.655" endtime="20201117 14:41:47.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.650" endtime="20201117 14:41:47.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.052" level="INFO">${RESULT} = [{'time': 0.047282792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.094499999999975e-05, 'source_diff': 6.094499999999975e-05}, {'time': 0.047354792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.043" endtime="20201117 14:41:47.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.083" level="INFO">${ACCURACY} = {'source_diff': [6.094499999999975e-05, 6.12499999999988e-05, 6.0888000000001996e-05, 6.080499999999711e-05, 6.030499999999661e-05, 6.08750000000019e-05, 6.102699999999822e-05, 6.081900000000362e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:47.054" endtime="20201117 14:41:47.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.094" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.092" endtime="20201117 14:41:47.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.100" level="INFO">VALUE: [6.094499999999975e-05, 6.12499999999988e-05, 6.0888000000001996e-05, 6.080499999999711e-05, 6.030499999999661e-05, 6.08750000000019e-05, 6.102699999999822e-05, 6.081900000000362e-05, 6.0999999999998555e-05, 6.12499999999988e-05, 6.0499999999998055e-05, 6.10420000000042e-05, 6.0527999999997195e-05, 6.111100000000258e-05, 6.0485999999998485e-05, 6.061099999999514e-05, 6.0735999999998735e-05, 6.0528000000004134e-05, 6.029099999999704e-05, 6.0457999999999346e-05, 6.027699999999747e-05, 6.041700000000011e-05, 6.125000000000574e-05, 6.087499999999496e-05, 6.0541999999996765e-05, 6.108300000000344e-05, 6.12080000000001e-05, 6.0542000000003704e-05, 6.091700000000061e-05, 6.0513999999997625e-05, 6.0806000000003524e-05, 6.126399999999838e-05, 6.048699999999796e-05, 6.0513999999997625e-05, 6.031900000000312e-05, 6.0388000000001496e-05, 6.0443999999999776e-05, 6.061100000000208e-05, 6.084699999999582e-05, 6.105600000000377e-05, 6.067999999999352e-05, 6.112500000000215e-05, 6.0707999999999596e-05, 6.06949999999995e-05, 6.105600000000377e-05, 6.0541999999996765e-05, 6.109799999999554e-05, 6.068099999999993e-05, 6.118000000000096e-05, 6.0944000000000276e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.097" endtime="20201117 14:41:47.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.085" endtime="20201117 14:41:47.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.110" endtime="20201117 14:41:47.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.118" endtime="20201117 14:41:47.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.114" endtime="20201117 14:41:47.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.105" endtime="20201117 14:41:47.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.591" endtime="20201117 14:41:47.144"></status>
</kw>
<msg timestamp="20201117 14:41:47.144" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.166" endtime="20201117 14:41:47.187"></status>
</kw>
<msg timestamp="20201117 14:41:47.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.163" endtime="20201117 14:41:47.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.191" endtime="20201117 14:41:47.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.197" endtime="20201117 14:41:47.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.155" endtime="20201117 14:41:47.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.150" endtime="20201117 14:41:47.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.220" endtime="20201117 14:41:47.560"></status>
</kw>
<msg timestamp="20201117 14:41:47.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041156236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041217083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.217" endtime="20201117 14:41:47.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041156236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041217083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.570" endtime="20201117 14:41:47.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.589" endtime="20201117 14:41:47.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.210" endtime="20201117 14:41:47.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.205" endtime="20201117 14:41:47.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.609" level="INFO">${RESULT} = [{'time': 0.041217083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.084700000000276e-05, 'source_diff': 6.084700000000276e-05}, {'time': 0.041290069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.599" endtime="20201117 14:41:47.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.640" level="INFO">${ACCURACY} = {'source_diff': [6.084700000000276e-05, 6.106899999999693e-05, 6.061100000000208e-05, 6.108300000000344e-05, 6.0542000000003704e-05, 6.122199999999967e-05, 6.0694000000000026e-05, 6.120899999999957e-0...</msg>
<status status="PASS" starttime="20201117 14:41:47.611" endtime="20201117 14:41:47.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.651" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.648" endtime="20201117 14:41:47.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.656" level="INFO">VALUE: [6.084700000000276e-05, 6.106899999999693e-05, 6.061100000000208e-05, 6.108300000000344e-05, 6.0542000000003704e-05, 6.122199999999967e-05, 6.0694000000000026e-05, 6.120899999999957e-05, 6.086099999999539e-05, 6.0806000000003524e-05, 6.0638000000001746e-05, 6.0471999999998916e-05, 6.063900000000122e-05, 6.107000000000334e-05, 6.0334000000002164e-05, 6.029100000000398e-05, 6.031899999999618e-05, 6.0694000000000026e-05, 6.0652000000001316e-05, 6.0694000000000026e-05, 6.106899999999693e-05, 6.12080000000001e-05, 6.0791999999997015e-05, 6.0472000000005854e-05, 6.091700000000061e-05, 6.122199999999967e-05, 6.079099999999754e-05, 6.12080000000001e-05, 6.045899999999882e-05, 6.1013999999998125e-05, 6.065300000000079e-05, 6.1013999999998125e-05, 6.079099999999754e-05, 6.109700000000301e-05, 6.0999999999998555e-05, 6.0763999999997875e-05, 6.0944000000000276e-05, 6.068099999999993e-05, 6.06949999999995e-05, 6.056900000000337e-05, 6.10420000000042e-05, 6.061099999999514e-05, 6.120900000000651e-05, 6.10420000000042e-05, 6.119400000000053e-05, 6.048699999999796e-05, 6.0680000000000456e-05, 6.0485999999998485e-05, 6.059700000000251e-05, 6.058300000000294e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.653" endtime="20201117 14:41:47.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.642" endtime="20201117 14:41:47.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.666" endtime="20201117 14:41:47.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.674" endtime="20201117 14:41:47.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.670" endtime="20201117 14:41:47.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.661" endtime="20201117 14:41:47.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.146" endtime="20201117 14:41:47.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.587" endtime="20201117 14:41:47.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.585" endtime="20201117 14:41:47.701"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.706" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.728" endtime="20201117 14:41:47.749"></status>
</kw>
<msg timestamp="20201117 14:41:47.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.724" endtime="20201117 14:41:47.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.752" endtime="20201117 14:41:47.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.759" endtime="20201117 14:41:47.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.717" endtime="20201117 14:41:47.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.711" endtime="20201117 14:41:47.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.782" endtime="20201117 14:41:48.123"></status>
</kw>
<msg timestamp="20201117 14:41:48.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047000778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.779" endtime="20201117 14:41:48.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047000778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.133" endtime="20201117 14:41:48.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.152" endtime="20201117 14:41:48.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.772" endtime="20201117 14:41:48.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.767" endtime="20201117 14:41:48.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.170" level="INFO">${RESULT} = [{'time': 0.047000778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.226399999999938e-05, 'source_diff': 6.226399999999938e-05}, {'time': 0.047078833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.161" endtime="20201117 14:41:48.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.201" level="INFO">${ACCURACY} = {'source_diff': [6.226399999999938e-05, 6.176399999999888e-05, 6.158400000000341e-05, 6.144500000000025e-05, 6.170900000000007e-05, 6.211100000000358e-05, 6.191600000000214e-05, 6.195800000000085e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:48.172" endtime="20201117 14:41:48.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.212" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.209" endtime="20201117 14:41:48.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.218" level="INFO">VALUE: [6.226399999999938e-05, 6.176399999999888e-05, 6.158400000000341e-05, 6.144500000000025e-05, 6.170900000000007e-05, 6.211100000000358e-05, 6.191600000000214e-05, 6.195800000000085e-05, 6.184699999999682e-05, 6.138900000000197e-05, 6.188900000000247e-05, 6.20829999999975e-05, 6.155499999999786e-05, 6.186100000000333e-05, 6.147199999999992e-05, 6.163800000000275e-05, 6.204099999999879e-05, 6.162500000000265e-05, 6.13620000000023e-05, 6.215199999999588e-05, 6.223600000000024e-05, 6.202699999999922e-05, 6.177699999999897e-05, 6.13750000000024e-05, 6.131899999999718e-05, 6.219399999999459e-05, 6.13750000000024e-05, 6.134700000000326e-05, 6.190300000000204e-05, 6.199999999999956e-05, 6.151399999999863e-05, 6.2195000000001e-05, 6.145899999999982e-05, 6.130499999999761e-05, 6.159800000000298e-05, 6.223699999999971e-05, 6.127799999999795e-05, 6.199999999999956e-05, 6.197200000000042e-05, 6.215300000000229e-05, 6.130499999999761e-05, 6.209700000000401e-05, 6.199999999999956e-05, 6.1582999999997e-05, 6.190300000000204e-05, 6.22080000000011e-05, 6.163900000000222e-05, 6.197200000000042e-05, 6.15699999999969e-05, 6.133399999999622e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.214" endtime="20201117 14:41:48.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.203" endtime="20201117 14:41:48.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.227" endtime="20201117 14:41:48.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.235" endtime="20201117 14:41:48.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.231" endtime="20201117 14:41:48.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.222" endtime="20201117 14:41:48.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.707" endtime="20201117 14:41:48.261"></status>
</kw>
<msg timestamp="20201117 14:41:48.261" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.284" endtime="20201117 14:41:48.305"></status>
</kw>
<msg timestamp="20201117 14:41:48.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.280" endtime="20201117 14:41:48.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.308" endtime="20201117 14:41:48.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.315" endtime="20201117 14:41:48.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.273" endtime="20201117 14:41:48.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.267" endtime="20201117 14:41:48.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.338" endtime="20201117 14:41:48.678"></status>
</kw>
<msg timestamp="20201117 14:41:48.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041887222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041948722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.335" endtime="20201117 14:41:48.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041887222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041948722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.688" endtime="20201117 14:41:48.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.707" endtime="20201117 14:41:48.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.327" endtime="20201117 14:41:48.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.323" endtime="20201117 14:41:48.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.726" level="INFO">${RESULT} = [{'time': 0.041948722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.149999999999906e-05, 'source_diff': 6.149999999999906e-05}, {'time': 0.042027736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.717" endtime="20201117 14:41:48.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.760" level="INFO">${ACCURACY} = {'source_diff': [6.149999999999906e-05, 6.145800000000035e-05, 6.20279999999987e-05, 6.223600000000024e-05, 6.216699999999492e-05, 6.138900000000197e-05, 6.218100000000143e-05, 6.157000000000384e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:48.728" endtime="20201117 14:41:48.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.771" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.769" endtime="20201117 14:41:48.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.777" level="INFO">VALUE: [6.149999999999906e-05, 6.145800000000035e-05, 6.20279999999987e-05, 6.223600000000024e-05, 6.216699999999492e-05, 6.138900000000197e-05, 6.218100000000143e-05, 6.157000000000384e-05, 6.199999999999956e-05, 6.211200000000305e-05, 6.197299999999989e-05, 6.172200000000017e-05, 6.199999999999956e-05, 6.177799999999845e-05, 6.206899999999793e-05, 6.206899999999793e-05, 6.165300000000179e-05, 6.188900000000247e-05, 6.173599999999974e-05, 6.191700000000161e-05, 6.195800000000085e-05, 6.195900000000032e-05, 6.216600000000239e-05, 6.15420000000047e-05, 6.162499999999571e-05, 6.176399999999888e-05, 6.151300000000609e-05, 6.141700000000111e-05, 6.172200000000017e-05, 6.168000000000146e-05, 6.20279999999987e-05, 6.179200000000495e-05, 6.22080000000011e-05, 6.133300000000369e-05, 6.216700000000186e-05, 6.220900000000057e-05, 6.138899999999503e-05, 6.143100000000068e-05, 6.168100000000093e-05, 6.144500000000025e-05, 6.166600000000189e-05, 6.199999999999956e-05, 6.194399999999434e-05, 6.216699999999492e-05, 6.169400000000103e-05, 6.17499999999993e-05, 6.19159999999952e-05, 6.166699999999442e-05, 6.193100000000118e-05, 6.165300000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.774" endtime="20201117 14:41:48.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.762" endtime="20201117 14:41:48.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.786" endtime="20201117 14:41:48.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.795" endtime="20201117 14:41:48.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.790" endtime="20201117 14:41:48.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.781" endtime="20201117 14:41:48.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.263" endtime="20201117 14:41:48.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.703" endtime="20201117 14:41:48.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.702" endtime="20201117 14:41:48.821"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.826" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.848" endtime="20201117 14:41:48.869"></status>
</kw>
<msg timestamp="20201117 14:41:48.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.845" endtime="20201117 14:41:48.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.872" endtime="20201117 14:41:48.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.878" endtime="20201117 14:41:48.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.837" endtime="20201117 14:41:48.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.832" endtime="20201117 14:41:48.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.903" endtime="20201117 14:41:49.242"></status>
</kw>
<msg timestamp="20201117 14:41:49.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047186042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.899" endtime="20201117 14:41:49.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047186042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.252" endtime="20201117 14:41:49.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.271" endtime="20201117 14:41:49.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.892" endtime="20201117 14:41:49.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.887" endtime="20201117 14:41:49.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.291" level="INFO">${RESULT} = [{'time': 0.047248806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276399999999988e-05, 'source_diff': 6.276399999999988e-05}, {'time': 0.047320806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.282" endtime="20201117 14:41:49.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.322" level="INFO">${ACCURACY} = {'source_diff': [6.276399999999988e-05, 6.279199999999902e-05, 6.313900000000372e-05, 6.279099999999954e-05, 6.301300000000065e-05, 6.302700000000022e-05, 6.234699999999732e-05, 6.247200000000092e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:49.294" endtime="20201117 14:41:49.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.333" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.331" endtime="20201117 14:41:49.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.339" level="INFO">VALUE: [6.276399999999988e-05, 6.279199999999902e-05, 6.313900000000372e-05, 6.279099999999954e-05, 6.301300000000065e-05, 6.302700000000022e-05, 6.234699999999732e-05, 6.247200000000092e-05, 6.242999999999527e-05, 6.284699999999782e-05, 6.300000000000056e-05, 6.286099999999739e-05, 6.294500000000175e-05, 6.32080000000021e-05, 6.27500000000003e-05, 6.280599999999859e-05, 6.254199999999877e-05, 6.266699999999542e-05, 6.236199999999636e-05, 6.292999999999577e-05, 6.255499999999886e-05, 6.266599999999595e-05, 6.277799999999945e-05, 6.265300000000279e-05, 6.229199999999852e-05, 6.236099999999689e-05, 6.240300000000254e-05, 6.265299999999585e-05, 6.26950000000015e-05, 6.255599999999834e-05, 6.320900000000157e-05, 6.265300000000279e-05, 6.315299999999635e-05, 6.28620000000038e-05, 6.248599999999355e-05, 6.304099999999979e-05, 6.233299999999775e-05, 6.250000000000006e-05, 6.306899999999893e-05, 6.326400000000038e-05, 6.293099999999524e-05, 6.295900000000132e-05, 6.295800000000185e-05, 6.247200000000092e-05, 6.3195000000002e-05, 6.236100000000383e-05, 6.32500000000008e-05, 6.280599999999859e-05, 6.315199999999688e-05, 6.279099999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.336" endtime="20201117 14:41:49.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.324" endtime="20201117 14:41:49.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.348" endtime="20201117 14:41:49.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.357" endtime="20201117 14:41:49.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.352" endtime="20201117 14:41:49.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.343" endtime="20201117 14:41:49.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.828" endtime="20201117 14:41:49.382"></status>
</kw>
<msg timestamp="20201117 14:41:49.383" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.405" endtime="20201117 14:41:49.426"></status>
</kw>
<msg timestamp="20201117 14:41:49.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.401" endtime="20201117 14:41:49.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.429" endtime="20201117 14:41:49.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.436" endtime="20201117 14:41:49.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.394" endtime="20201117 14:41:49.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.388" endtime="20201117 14:41:49.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.461" endtime="20201117 14:41:49.774"></status>
</kw>
<msg timestamp="20201117 14:41:49.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.458" endtime="20201117 14:41:49.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.778" endtime="20201117 14:41:49.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.787" endtime="20201117 14:41:49.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.450" endtime="20201117 14:41:49.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.445" endtime="20201117 14:41:49.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.796" level="INFO">${RESULT} = [{'time': 0.041621875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236100000000383e-05, 'source_diff': 6.236100000000383e-05}, {'time': 0.041699875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.792" endtime="20201117 14:41:49.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.809" level="INFO">${ACCURACY} = {'source_diff': [6.236100000000383e-05, 6.272199999999423e-05, 6.294399999999534e-05, 6.294500000000175e-05, 6.28750000000039e-05, 6.277799999999945e-05, 6.236099999999689e-05, 6.298600000000099e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:49.797" endtime="20201117 14:41:49.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.815" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.814" endtime="20201117 14:41:49.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.817" level="INFO">VALUE: [6.236100000000383e-05, 6.272199999999423e-05, 6.294399999999534e-05, 6.294500000000175e-05, 6.28750000000039e-05, 6.277799999999945e-05, 6.236099999999689e-05, 6.298600000000099e-05, 6.276299999999346e-05, 6.279199999999902e-05, 6.313900000000372e-05, 6.300000000000056e-05, 6.230499999999861e-05, 6.265199999999638e-05, 6.29300000000027e-05, 6.301400000000013e-05, 6.311100000000458e-05, 6.263899999999628e-05, 6.262500000000365e-05, 6.293100000000218e-05, 6.265300000000279e-05, 6.304199999999927e-05, 6.297300000000089e-05, 6.306899999999893e-05, 6.255599999999834e-05, 6.27630000000004e-05, 6.300000000000056e-05, 6.284700000000476e-05, 6.302700000000022e-05, 6.305499999999936e-05, 6.300000000000056e-05, 6.27500000000003e-05, 6.298599999999405e-05, 6.313900000000372e-05, 6.273600000000074e-05, 6.30699999999984e-05, 6.236199999999636e-05, 6.281999999999816e-05, 6.258400000000441e-05, 6.279200000000595e-05, 6.317999999999602e-05, 6.27500000000003e-05, 6.294400000000228e-05, 6.313900000000372e-05, 6.302700000000022e-05, 6.305499999999936e-05, 6.295800000000185e-05, 6.279200000000595e-05, 6.244400000000178e-05, 6.308399999999798e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.816" endtime="20201117 14:41:49.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.810" endtime="20201117 14:41:49.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.822" endtime="20201117 14:41:49.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.826" endtime="20201117 14:41:49.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.824" endtime="20201117 14:41:49.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.819" endtime="20201117 14:41:49.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.384" endtime="20201117 14:41:49.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.824" endtime="20201117 14:41:49.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.822" endtime="20201117 14:41:49.847"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.850" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.860" endtime="20201117 14:41:49.879"></status>
</kw>
<msg timestamp="20201117 14:41:49.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.858" endtime="20201117 14:41:49.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.881" endtime="20201117 14:41:49.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.884" endtime="20201117 14:41:49.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.855" endtime="20201117 14:41:49.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.852" endtime="20201117 14:41:49.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.896" endtime="20201117 14:41:50.219"></status>
</kw>
<msg timestamp="20201117 14:41:50.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027254486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.894" endtime="20201117 14:41:50.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027254486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.229" endtime="20201117 14:41:50.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.248" endtime="20201117 14:41:50.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.890" endtime="20201117 14:41:50.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.888" endtime="20201117 14:41:50.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.266" level="INFO">${RESULT} = [{'time': 0.027318444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.395799999999938e-05, 'source_diff': 6.395799999999938e-05}, {'time': 0.027391444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.256" endtime="20201117 14:41:50.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.296" level="INFO">${ACCURACY} = {'source_diff': [6.395799999999938e-05, 6.336100000000136e-05, 6.379099999999707e-05, 6.373600000000174e-05, 6.35690000000029e-05, 6.398599999999852e-05, 6.327799999999995e-05, 6.35699999999989e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:50.268" endtime="20201117 14:41:50.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.307" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.305" endtime="20201117 14:41:50.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.313" level="INFO">VALUE: [6.395799999999938e-05, 6.336100000000136e-05, 6.379099999999707e-05, 6.373600000000174e-05, 6.35690000000029e-05, 6.398599999999852e-05, 6.327799999999995e-05, 6.35699999999989e-05, 6.331999999999866e-05, 6.423599999999877e-05, 6.398600000000199e-05, 6.331999999999866e-05, 6.387499999999796e-05, 6.387500000000143e-05, 6.387500000000143e-05, 6.413800000000178e-05, 6.404100000000079e-05, 6.42219999999992e-05, 6.40280000000007e-05, 6.400000000000156e-05, 6.340300000000007e-05, 6.393099999999971e-05, 6.358300000000247e-05, 6.386200000000133e-05, 6.405599999999984e-05, 6.345899999999835e-05, 6.359700000000204e-05, 6.393099999999971e-05, 6.418099999999996e-05, 6.376400000000088e-05, 6.411099999999864e-05, 6.39020000000011e-05, 6.416599999999745e-05, 6.39439999999998e-05, 6.381900000000315e-05, 6.418000000000049e-05, 6.404200000000027e-05, 6.40280000000007e-05, 6.423599999999877e-05, 6.366699999999989e-05, 6.347300000000139e-05, 6.404200000000027e-05, 6.351300000000115e-05, 6.391700000000014e-05, 6.374999999999784e-05, 6.341600000000017e-05, 6.345799999999888e-05, 6.390300000000057e-05, 6.384699999999882e-05, 6.332000000000212e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.310" endtime="20201117 14:41:50.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.298" endtime="20201117 14:41:50.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.322" endtime="20201117 14:41:50.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.330" endtime="20201117 14:41:50.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.326" endtime="20201117 14:41:50.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.317" endtime="20201117 14:41:50.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.850" endtime="20201117 14:41:50.356"></status>
</kw>
<msg timestamp="20201117 14:41:50.356" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.378" endtime="20201117 14:41:50.400"></status>
</kw>
<msg timestamp="20201117 14:41:50.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.375" endtime="20201117 14:41:50.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.403" endtime="20201117 14:41:50.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.416" endtime="20201117 14:41:50.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.367" endtime="20201117 14:41:50.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.362" endtime="20201117 14:41:50.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.440" endtime="20201117 14:41:50.780"></status>
</kw>
<msg timestamp="20201117 14:41:50.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041431875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.436" endtime="20201117 14:41:50.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041431875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.790" endtime="20201117 14:41:50.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.809" endtime="20201117 14:41:50.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.429" endtime="20201117 14:41:50.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.424" endtime="20201117 14:41:50.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.828" level="INFO">${RESULT} = [{'time': 0.041431875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.405599999999984e-05, 'source_diff': 6.405599999999984e-05}, {'time': 0.041510861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.819" endtime="20201117 14:41:50.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.861" level="INFO">${ACCURACY} = {'source_diff': [6.405599999999984e-05, 6.35280000000002e-05, 6.398600000000199e-05, 6.337499999999746e-05, 6.358399999999848e-05, 6.348600000000149e-05, 6.331999999999866e-05, 6.343099999999574e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:50.830" endtime="20201117 14:41:50.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.872" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.870" endtime="20201117 14:41:50.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.878" level="INFO">VALUE: [6.405599999999984e-05, 6.35280000000002e-05, 6.398600000000199e-05, 6.337499999999746e-05, 6.358399999999848e-05, 6.348600000000149e-05, 6.331999999999866e-05, 6.343099999999574e-05, 6.362499999999771e-05, 6.406899999999993e-05, 6.351400000000063e-05, 6.37500000000013e-05, 6.372200000000217e-05, 6.417999999999702e-05, 6.333299999999875e-05, 6.361099999999814e-05, 6.381899999999968e-05, 6.366700000000336e-05, 6.418099999999649e-05, 6.37779999999935e-05, 6.413899999999778e-05, 6.388899999999753e-05, 6.363899999999728e-05, 6.343099999999574e-05, 6.409799999999855e-05, 6.388899999999753e-05, 6.358300000000594e-05, 6.333300000000569e-05, 6.383299999999925e-05, 6.415299999999735e-05, 6.333299999999875e-05, 6.413899999999778e-05, 6.416599999999745e-05, 6.3582999999999e-05, 6.398600000000199e-05, 6.393099999999624e-05, 6.348600000000149e-05, 6.36950000000025e-05, 6.340199999999713e-05, 6.359799999999804e-05, 6.379100000000054e-05, 6.401400000000113e-05, 6.336099999999789e-05, 6.351400000000063e-05, 6.394400000000328e-05, 6.356899999999943e-05, 6.356899999999943e-05, 6.426400000000138e-05, 6.334699999999832e-05, 6.36950000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.875" endtime="20201117 14:41:50.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.863" endtime="20201117 14:41:50.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.886" endtime="20201117 14:41:50.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.895" endtime="20201117 14:41:50.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.890" endtime="20201117 14:41:50.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.882" endtime="20201117 14:41:50.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.358" endtime="20201117 14:41:50.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.848" endtime="20201117 14:41:50.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.848" endtime="20201117 14:41:50.921"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.927" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.949" endtime="20201117 14:41:50.970"></status>
</kw>
<msg timestamp="20201117 14:41:50.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.946" endtime="20201117 14:41:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.974" endtime="20201117 14:41:50.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.980" endtime="20201117 14:41:50.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.938" endtime="20201117 14:41:50.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.932" endtime="20201117 14:41:50.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.004" endtime="20201117 14:41:51.343"></status>
</kw>
<msg timestamp="20201117 14:41:51.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047839375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.000" endtime="20201117 14:41:51.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047839375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.353" endtime="20201117 14:41:51.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.372" endtime="20201117 14:41:51.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.993" endtime="20201117 14:41:51.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.988" endtime="20201117 14:41:51.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.391" level="INFO">${RESULT} = [{'time': 0.047839375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.466700000000436e-05, 'source_diff': 6.466700000000436e-05}, {'time': 0.047925403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.382" endtime="20201117 14:41:51.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.422" level="INFO">${ACCURACY} = {'source_diff': [6.466700000000436e-05, 6.484699999999982e-05, 6.491700000000461e-05, 6.513899999999878e-05, 6.45280000000012e-05, 6.441700000000411e-05, 6.498599999999605e-05, 6.431999999999966e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:51.393" endtime="20201117 14:41:51.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.433" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.431" endtime="20201117 14:41:51.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.438" level="INFO">VALUE: [6.466700000000436e-05, 6.484699999999982e-05, 6.491700000000461e-05, 6.513899999999878e-05, 6.45280000000012e-05, 6.441700000000411e-05, 6.498599999999605e-05, 6.431999999999966e-05, 6.470899999999613e-05, 6.50280000000017e-05, 6.506899999999399e-05, 6.506900000000093e-05, 6.517999999999802e-05, 6.4583e-05, 6.431900000000018e-05, 6.430600000000009e-05, 6.519499999999706e-05, 6.491699999999767e-05, 6.527800000000195e-05, 6.441699999999717e-05, 6.440300000000454e-05, 6.438899999999803e-05, 6.493099999999724e-05, 6.518099999999749e-05, 6.517999999999802e-05, 6.511099999999964e-05, 6.449999999999512e-05, 6.509700000000007e-05, 6.445899999999588e-05, 6.444499999999631e-05, 6.465299999999785e-05, 6.47500000000023e-05, 6.429200000000052e-05, 6.509700000000007e-05, 6.482000000000016e-05, 6.45280000000012e-05, 6.515300000000529e-05, 6.52359999999963e-05, 6.456900000000043e-05, 6.527800000000195e-05, 6.492999999999777e-05, 6.511099999999964e-05, 6.47080000000036e-05, 6.488899999999853e-05, 6.427800000000095e-05, 6.441699999999717e-05, 6.48750000000059e-05, 6.529200000000152e-05, 6.448600000000249e-05, 6.459800000000598e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.435" endtime="20201117 14:41:51.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.424" endtime="20201117 14:41:51.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.447" endtime="20201117 14:41:51.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.456" endtime="20201117 14:41:51.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.451" endtime="20201117 14:41:51.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.443" endtime="20201117 14:41:51.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.928" endtime="20201117 14:41:51.482"></status>
</kw>
<msg timestamp="20201117 14:41:51.482" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.505" endtime="20201117 14:41:51.527"></status>
</kw>
<msg timestamp="20201117 14:41:51.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.501" endtime="20201117 14:41:51.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.530" endtime="20201117 14:41:51.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.537" endtime="20201117 14:41:51.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.494" endtime="20201117 14:41:51.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.488" endtime="20201117 14:41:51.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.561" endtime="20201117 14:41:51.900"></status>
</kw>
<msg timestamp="20201117 14:41:51.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04267125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:51.558" endtime="20201117 14:41:51.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04267125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:51.910" endtime="20201117 14:41:51.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.929" endtime="20201117 14:41:51.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.550" endtime="20201117 14:41:51.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.545" endtime="20201117 14:41:51.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.948" level="INFO">${RESULT} = [{'time': 0.04267125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.509700000000007e-05, 'source_diff': 6.509700000000007e-05}, {'time': 0.042751236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:51.939" endtime="20201117 14:41:51.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.979" level="INFO">${ACCURACY} = {'source_diff': [6.509700000000007e-05, 6.492999999999777e-05, 6.477800000000145e-05, 6.450000000000206e-05, 6.430600000000009e-05, 6.515299999999835e-05, 6.437499999999846e-05, 6.516699999999792e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:51.950" endtime="20201117 14:41:51.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.990" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.988" endtime="20201117 14:41:51.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.995" level="INFO">VALUE: [6.509700000000007e-05, 6.492999999999777e-05, 6.477800000000145e-05, 6.450000000000206e-05, 6.430600000000009e-05, 6.515299999999835e-05, 6.437499999999846e-05, 6.516699999999792e-05, 6.47909999999946e-05, 6.437499999999846e-05, 6.473600000000274e-05, 6.49159999999982e-05, 6.502700000000222e-05, 6.530600000000109e-05, 6.49029999999981e-05, 6.509699999999313e-05, 6.482000000000016e-05, 6.498600000000299e-05, 6.495899999999638e-05, 6.491700000000461e-05, 6.444499999999631e-05, 6.472300000000264e-05, 6.449999999999512e-05, 6.43750000000054e-05, 6.473600000000274e-05, 6.502700000000222e-05, 6.45280000000012e-05, 6.437499999999846e-05, 6.47500000000023e-05, 6.494400000000428e-05, 6.497200000000342e-05, 6.49029999999981e-05, 6.443100000000368e-05, 6.511099999999964e-05, 6.529100000000204e-05, 6.470799999999666e-05, 6.430600000000009e-05, 6.501299999999571e-05, 6.459699999999957e-05, 6.502700000000222e-05, 6.509700000000007e-05, 6.431900000000018e-05, 6.527800000000195e-05, 6.4583e-05, 6.512499999999921e-05, 6.479200000000102e-05, 6.455600000000034e-05, 6.504200000000127e-05, 6.459699999999957e-05, 6.527700000000247e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.992" endtime="20201117 14:41:51.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.981" endtime="20201117 14:41:51.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.004" endtime="20201117 14:41:52.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.014" endtime="20201117 14:41:52.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.009" endtime="20201117 14:41:52.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.000" endtime="20201117 14:41:52.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.484" endtime="20201117 14:41:52.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.924" endtime="20201117 14:41:52.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.922" endtime="20201117 14:41:52.040"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.045" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.067" endtime="20201117 14:41:52.088"></status>
</kw>
<msg timestamp="20201117 14:41:52.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.064" endtime="20201117 14:41:52.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.091" endtime="20201117 14:41:52.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.098" endtime="20201117 14:41:52.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.057" endtime="20201117 14:41:52.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.051" endtime="20201117 14:41:52.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.121" endtime="20201117 14:41:52.461"></status>
</kw>
<msg timestamp="20201117 14:41:52.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046941903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047007708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.118" endtime="20201117 14:41:52.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046941903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047007708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.471" endtime="20201117 14:41:52.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.490" endtime="20201117 14:41:52.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.111" endtime="20201117 14:41:52.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.106" endtime="20201117 14:41:52.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.507" level="INFO">${RESULT} = [{'time': 0.047007708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580500000000211e-05, 'source_diff': 6.580500000000211e-05}, {'time': 0.047082722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.498" endtime="20201117 14:41:52.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.538" level="INFO">${ACCURACY} = {'source_diff': [6.580500000000211e-05, 6.580500000000211e-05, 6.554099999999535e-05, 6.609700000000107e-05, 6.604200000000227e-05, 6.545799999999741e-05, 6.584700000000082e-05, 6.60700000000014e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:52.509" endtime="20201117 14:41:52.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.550" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.547" endtime="20201117 14:41:52.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.556" level="INFO">VALUE: [6.580500000000211e-05, 6.580500000000211e-05, 6.554099999999535e-05, 6.609700000000107e-05, 6.604200000000227e-05, 6.545799999999741e-05, 6.584700000000082e-05, 6.60700000000014e-05, 6.605600000000184e-05, 6.554199999999483e-05, 6.545900000000382e-05, 6.593099999999824e-05, 6.55280000000022e-05, 6.60700000000014e-05, 6.555500000000186e-05, 6.620799999999816e-05, 6.565299999999885e-05, 6.588899999999953e-05, 6.624999999999687e-05, 6.541699999999817e-05, 6.616699999999892e-05, 6.611100000000064e-05, 6.568100000000493e-05, 6.594499999999781e-05, 6.593099999999824e-05, 6.549999999999612e-05, 6.549999999999612e-05, 6.576399999999594e-05, 6.566599999999895e-05, 6.590199999999963e-05, 6.544399999999784e-05, 6.563899999999928e-05, 6.533299999999381e-05, 6.551400000000263e-05, 6.576399999999594e-05, 6.545900000000382e-05, 6.566699999999842e-05, 6.547199999999698e-05, 6.55280000000022e-05, 6.627700000000347e-05, 6.549999999999612e-05, 6.58480000000003e-05, 6.624999999999687e-05, 6.531900000000118e-05, 6.555500000000186e-05, 6.554100000000229e-05, 6.604199999999533e-05, 6.559700000000057e-05, 6.554200000000177e-05, 6.619399999999859e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.552" endtime="20201117 14:41:52.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.540" endtime="20201117 14:41:52.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.566" endtime="20201117 14:41:52.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.575" endtime="20201117 14:41:52.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.570" endtime="20201117 14:41:52.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.561" endtime="20201117 14:41:52.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.047" endtime="20201117 14:41:52.600"></status>
</kw>
<msg timestamp="20201117 14:41:52.601" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.623" endtime="20201117 14:41:52.644"></status>
</kw>
<msg timestamp="20201117 14:41:52.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.620" endtime="20201117 14:41:52.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.648" endtime="20201117 14:41:52.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.654" endtime="20201117 14:41:52.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.612" endtime="20201117 14:41:52.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.607" endtime="20201117 14:41:52.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.678" endtime="20201117 14:41:53.017"></status>
</kw>
<msg timestamp="20201117 14:41:53.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041741181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.675" endtime="20201117 14:41:53.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041741181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.026" endtime="20201117 14:41:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.045" endtime="20201117 14:41:53.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.667" endtime="20201117 14:41:53.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.662" endtime="20201117 14:41:53.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.064" level="INFO">${RESULT} = [{'time': 0.041741181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.570900000000407e-05, 'source_diff': 6.570900000000407e-05}, {'time': 0.041825181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.055" endtime="20201117 14:41:53.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.098" level="INFO">${ACCURACY} = {'source_diff': [6.570900000000407e-05, 6.538900000000597e-05, 6.566700000000536e-05, 6.609699999999413e-05, 6.605500000000236e-05, 6.592999999999877e-05, 6.5583000000001e-05, 6.576399999999594e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:53.067" endtime="20201117 14:41:53.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.109" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.107" endtime="20201117 14:41:53.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.115" level="INFO">VALUE: [6.570900000000407e-05, 6.538900000000597e-05, 6.566700000000536e-05, 6.609699999999413e-05, 6.605500000000236e-05, 6.592999999999877e-05, 6.5583000000001e-05, 6.576399999999594e-05, 6.616699999999892e-05, 6.580600000000159e-05, 6.534700000000032e-05, 6.584700000000082e-05, 6.565300000000579e-05, 6.584700000000082e-05, 6.555600000000134e-05, 6.620899999999763e-05, 6.611100000000064e-05, 6.576299999999646e-05, 6.566600000000589e-05, 6.59029999999991e-05, 6.5583000000001e-05, 6.580599999999465e-05, 6.576400000000288e-05, 6.545800000000435e-05, 6.595799999999791e-05, 6.619499999999806e-05, 6.55280000000022e-05, 6.597299999999695e-05, 6.523700000000271e-05, 6.611100000000064e-05, 6.549999999999612e-05, 6.626400000000338e-05, 6.576400000000288e-05, 6.59159999999992e-05, 6.556900000000143e-05, 6.54029999999986e-05, 6.566699999999842e-05, 6.618099999999849e-05, 6.602799999999576e-05, 6.606999999999447e-05, 6.537499999999946e-05, 6.548599999999655e-05, 6.576399999999594e-05, 6.536099999999989e-05, 6.566599999999895e-05, 6.597200000000442e-05, 6.602700000000322e-05, 6.552699999999578e-05, 6.545800000000435e-05, 6.60830000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.112" endtime="20201117 14:41:53.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.100" endtime="20201117 14:41:53.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.124" endtime="20201117 14:41:53.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.133" endtime="20201117 14:41:53.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.128" endtime="20201117 14:41:53.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.120" endtime="20201117 14:41:53.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.603" endtime="20201117 14:41:53.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.043" endtime="20201117 14:41:53.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.041" endtime="20201117 14:41:53.159"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.165" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.186" endtime="20201117 14:41:53.208"></status>
</kw>
<msg timestamp="20201117 14:41:53.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.183" endtime="20201117 14:41:53.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.211" endtime="20201117 14:41:53.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.217" endtime="20201117 14:41:53.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.176" endtime="20201117 14:41:53.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.170" endtime="20201117 14:41:53.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.228" endtime="20201117 14:41:53.514"></status>
</kw>
<msg timestamp="20201117 14:41:53.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046789444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046856236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.226" endtime="20201117 14:41:53.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046789444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046856236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.518" endtime="20201117 14:41:53.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.536" endtime="20201117 14:41:53.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.223" endtime="20201117 14:41:53.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.220" endtime="20201117 14:41:53.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.555" level="INFO">${RESULT} = [{'time': 0.046856236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.679200000000302e-05, 'source_diff': 6.679200000000302e-05}, {'time': 0.046937236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.546" endtime="20201117 14:41:53.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.587" level="INFO">${ACCURACY} = {'source_diff': [6.679200000000302e-05, 6.691699999999967e-05, 6.722199999999873e-05, 6.718099999999949e-05, 6.688900000000053e-05, 6.704200000000327e-05, 6.644499999999831e-05, 6.720899999999863e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:53.558" endtime="20201117 14:41:53.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.598" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.596" endtime="20201117 14:41:53.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.605" level="INFO">VALUE: [6.679200000000302e-05, 6.691699999999967e-05, 6.722199999999873e-05, 6.718099999999949e-05, 6.688900000000053e-05, 6.704200000000327e-05, 6.644499999999831e-05, 6.720899999999863e-05, 6.645899999999788e-05, 6.636100000000089e-05, 6.704100000000379e-05, 6.640200000000013e-05, 6.672199999999823e-05, 6.724999999999787e-05, 6.67359999999978e-05, 6.677799999999651e-05, 6.676400000000388e-05, 6.650000000000406e-05, 6.663900000000028e-05, 6.6277999999996e-05, 6.655600000000234e-05, 6.712500000000121e-05, 6.651400000000363e-05, 6.632000000000166e-05, 6.701399999999719e-05, 6.636200000000037e-05, 6.709699999999513e-05, 6.684700000000182e-05, 6.633300000000175e-05, 6.656899999999549e-05, 6.672199999999823e-05, 6.665299999999985e-05, 6.716699999999992e-05, 6.636100000000089e-05, 6.713900000000078e-05, 6.654199999999583e-05, 6.682000000000216e-05, 6.691699999999967e-05, 6.702699999999728e-05, 6.708400000000198e-05, 6.690200000000063e-05, 6.688900000000053e-05, 6.64159999999997e-05, 6.65280000000032e-05, 6.704100000000379e-05, 6.644499999999831e-05, 6.647199999999798e-05, 6.706900000000293e-05, 6.64029999999996e-05, 6.69030000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.601" endtime="20201117 14:41:53.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.589" endtime="20201117 14:41:53.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.614" endtime="20201117 14:41:53.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.622" endtime="20201117 14:41:53.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.618" endtime="20201117 14:41:53.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.609" endtime="20201117 14:41:53.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.166" endtime="20201117 14:41:53.648"></status>
</kw>
<msg timestamp="20201117 14:41:53.648" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.670" endtime="20201117 14:41:53.691"></status>
</kw>
<msg timestamp="20201117 14:41:53.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.667" endtime="20201117 14:41:53.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.695" endtime="20201117 14:41:53.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.701" endtime="20201117 14:41:53.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.660" endtime="20201117 14:41:53.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.654" endtime="20201117 14:41:53.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.725" endtime="20201117 14:41:54.065"></status>
</kw>
<msg timestamp="20201117 14:41:54.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041359569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.721" endtime="20201117 14:41:54.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041359569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.074" endtime="20201117 14:41:54.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.093" endtime="20201117 14:41:54.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.714" endtime="20201117 14:41:54.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.709" endtime="20201117 14:41:54.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.113" level="INFO">${RESULT} = [{'time': 0.041359569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.72359999999983e-05, 'source_diff': 6.72359999999983e-05}, {'time': 0.041440625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:54.103" endtime="20201117 14:41:54.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.143" level="INFO">${ACCURACY} = {'source_diff': [6.72359999999983e-05, 6.72500000000048e-05, 6.70830000000025e-05, 6.65280000000032e-05, 6.724999999999787e-05, 6.680599999999565e-05, 6.655600000000234e-05, 6.680599999999565e-05, 6.7...</msg>
<status status="PASS" starttime="20201117 14:41:54.115" endtime="20201117 14:41:54.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.155" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.153" endtime="20201117 14:41:54.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.161" level="INFO">VALUE: [6.72359999999983e-05, 6.72500000000048e-05, 6.70830000000025e-05, 6.65280000000032e-05, 6.724999999999787e-05, 6.680599999999565e-05, 6.655600000000234e-05, 6.680599999999565e-05, 6.704199999999633e-05, 6.658400000000148e-05, 6.666699999999942e-05, 6.682000000000216e-05, 6.704199999999633e-05, 6.65700000000019e-05, 6.645800000000535e-05, 6.704200000000327e-05, 6.715200000000088e-05, 6.648600000000449e-05, 6.69030000000001e-05, 6.663900000000028e-05, 6.661100000000114e-05, 6.67080000000056e-05, 6.712500000000121e-05, 6.720899999999863e-05, 6.688900000000053e-05, 6.698700000000446e-05, 6.654200000000277e-05, 6.694399999999934e-05, 6.724999999999787e-05, 6.674999999999737e-05, 6.709700000000207e-05, 6.701399999999719e-05, 6.716600000000045e-05, 6.681999999999522e-05, 6.626399999999644e-05, 6.697199999999848e-05, 6.633300000000175e-05, 6.663900000000028e-05, 6.6583000000002e-05, 6.65559999999954e-05, 6.706999999999547e-05, 6.716600000000045e-05, 6.692999999999977e-05, 6.642999999999927e-05, 6.630499999999567e-05, 6.6583000000002e-05, 6.631899999999524e-05, 6.687500000000096e-05, 6.716699999999992e-05, 6.658399999999454e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.157" endtime="20201117 14:41:54.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.146" endtime="20201117 14:41:54.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.169" endtime="20201117 14:41:54.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.178" endtime="20201117 14:41:54.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.174" endtime="20201117 14:41:54.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.165" endtime="20201117 14:41:54.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.650" endtime="20201117 14:41:54.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.162" endtime="20201117 14:41:54.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.160" endtime="20201117 14:41:54.204"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.210" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.231" endtime="20201117 14:41:54.253"></status>
</kw>
<msg timestamp="20201117 14:41:54.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.228" endtime="20201117 14:41:54.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.256" endtime="20201117 14:41:54.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.262" endtime="20201117 14:41:54.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.221" endtime="20201117 14:41:54.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.215" endtime="20201117 14:41:54.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.286" endtime="20201117 14:41:54.628"></status>
</kw>
<msg timestamp="20201117 14:41:54.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047143375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047211417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.283" endtime="20201117 14:41:54.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047143375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047211417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.638" endtime="20201117 14:41:54.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.658" endtime="20201117 14:41:54.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.275" endtime="20201117 14:41:54.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.271" endtime="20201117 14:41:54.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.676" level="INFO">${RESULT} = [{'time': 0.047211417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.804199999999733e-05, 'source_diff': 6.804199999999733e-05}, {'time': 0.047299417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.667" endtime="20201117 14:41:54.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.707" level="INFO">${ACCURACY} = {'source_diff': [6.804199999999733e-05, 6.794500000000675e-05, 6.812499999999527e-05, 6.774999999999837e-05, 6.798600000000599e-05, 6.820800000000016e-05, 6.744399999999984e-05, 6.733300000000275e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:54.678" endtime="20201117 14:41:54.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.718" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.716" endtime="20201117 14:41:54.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.724" level="INFO">VALUE: [6.804199999999733e-05, 6.794500000000675e-05, 6.812499999999527e-05, 6.774999999999837e-05, 6.798600000000599e-05, 6.820800000000016e-05, 6.744399999999984e-05, 6.733300000000275e-05, 6.818100000000049e-05, 6.752799999999726e-05, 6.76109999999952e-05, 6.820800000000016e-05, 6.754200000000377e-05, 6.795899999999938e-05, 6.797299999999895e-05, 6.772199999999923e-05, 6.813900000000178e-05, 6.795799999999991e-05, 6.762499999999477e-05, 6.820800000000016e-05, 6.733300000000275e-05, 6.806899999999699e-05, 6.799999999999862e-05, 6.799999999999862e-05, 6.759700000000257e-05, 6.786099999999545e-05, 6.801399999999819e-05, 6.798600000000599e-05, 6.818100000000049e-05, 6.749999999999812e-05, 6.741700000000017e-05, 6.819500000000006e-05, 6.76109999999952e-05, 6.766600000000095e-05, 6.765200000000138e-05, 6.781900000000368e-05, 6.779200000000402e-05, 6.799999999999862e-05, 6.791700000000067e-05, 6.793100000000024e-05, 6.759800000000205e-05, 6.730600000000309e-05, 6.819500000000006e-05, 6.762500000000171e-05, 6.791700000000067e-05, 6.73480000000018e-05, 6.751300000000515e-05, 6.812500000000221e-05, 6.756899999999649e-05, 6.733299999999581e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.720" endtime="20201117 14:41:54.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.709" endtime="20201117 14:41:54.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.733" endtime="20201117 14:41:54.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.742" endtime="20201117 14:41:54.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.737" endtime="20201117 14:41:54.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.728" endtime="20201117 14:41:54.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.211" endtime="20201117 14:41:54.768"></status>
</kw>
<msg timestamp="20201117 14:41:54.768" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.790" endtime="20201117 14:41:54.811"></status>
</kw>
<msg timestamp="20201117 14:41:54.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.787" endtime="20201117 14:41:54.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.815" endtime="20201117 14:41:54.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.821" endtime="20201117 14:41:54.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.780" endtime="20201117 14:41:54.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.774" endtime="20201117 14:41:54.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.845" endtime="20201117 14:41:55.186"></status>
</kw>
<msg timestamp="20201117 14:41:55.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.842" endtime="20201117 14:41:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.196" endtime="20201117 14:41:55.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.217" endtime="20201117 14:41:55.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.834" endtime="20201117 14:41:55.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.829" endtime="20201117 14:41:55.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.236" level="INFO">${RESULT} = [{'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.79030000000011e-05, 'source_diff': 6.79030000000011e-05}, {'time': 0.042146375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:55.227" endtime="20201117 14:41:55.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.269" level="INFO">${ACCURACY} = {'source_diff': [6.79030000000011e-05, 6.741700000000017e-05, 6.793000000000077e-05, 6.76109999999952e-05, 6.783300000000325e-05, 6.794499999999981e-05, 6.812499999999527e-05, 6.774999999999837e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:55.238" endtime="20201117 14:41:55.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.280" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.278" endtime="20201117 14:41:55.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.286" level="INFO">VALUE: [6.79030000000011e-05, 6.741700000000017e-05, 6.793000000000077e-05, 6.76109999999952e-05, 6.783300000000325e-05, 6.794499999999981e-05, 6.812499999999527e-05, 6.774999999999837e-05, 6.77359999999988e-05, 6.787499999999502e-05, 6.787499999999502e-05, 6.740200000000113e-05, 6.808299999999656e-05, 6.787500000000196e-05, 6.734699999999538e-05, 6.82359999999993e-05, 6.787500000000196e-05, 6.798599999999905e-05, 6.776399999999794e-05, 6.741700000000017e-05, 6.791700000000067e-05, 6.801400000000513e-05, 6.756999999999597e-05, 6.741700000000017e-05, 6.774999999999837e-05, 6.824999999999887e-05, 6.758299999999606e-05, 6.762500000000171e-05, 6.806899999999699e-05, 6.748599999999855e-05, 6.82359999999993e-05, 6.748599999999855e-05, 6.732000000000266e-05, 6.782000000000316e-05, 6.820800000000016e-05, 6.745899999999888e-05, 6.74160000000007e-05, 6.802699999999828e-05, 6.819400000000059e-05, 6.749999999999812e-05, 6.754099999999735e-05, 6.784699999999588e-05, 6.772199999999923e-05, 6.763900000000128e-05, 6.761100000000214e-05, 6.797199999999948e-05, 6.833300000000375e-05, 6.779199999999708e-05, 6.777799999999751e-05, 6.74160000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.283" endtime="20201117 14:41:55.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.271" endtime="20201117 14:41:55.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.295" endtime="20201117 14:41:55.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.303" endtime="20201117 14:41:55.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.299" endtime="20201117 14:41:55.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.290" endtime="20201117 14:41:55.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.770" endtime="20201117 14:41:55.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.207" endtime="20201117 14:41:55.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.205" endtime="20201117 14:41:55.330"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.335" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.357" endtime="20201117 14:41:55.378"></status>
</kw>
<msg timestamp="20201117 14:41:55.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.354" endtime="20201117 14:41:55.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.382" endtime="20201117 14:41:55.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.388" endtime="20201117 14:41:55.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.346" endtime="20201117 14:41:55.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.340" endtime="20201117 14:41:55.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.420" endtime="20201117 14:41:55.761"></status>
</kw>
<msg timestamp="20201117 14:41:55.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047223222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047292056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.417" endtime="20201117 14:41:55.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047223222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047292056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.771" endtime="20201117 14:41:55.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.790" endtime="20201117 14:41:55.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.401" endtime="20201117 14:41:55.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.396" endtime="20201117 14:41:55.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.809" level="INFO">${RESULT} = [{'time': 0.047292056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.883399999999679e-05, 'source_diff': 6.883399999999679e-05}, {'time': 0.047378056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.800" endtime="20201117 14:41:55.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.841" level="INFO">${ACCURACY} = {'source_diff': [6.883399999999679e-05, 6.83480000000028e-05, 6.900000000000656e-05, 6.887499999999602e-05, 6.877799999999851e-05, 6.844400000000084e-05, 6.92360000000003e-05, 6.920799999999422e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:55.812" endtime="20201117 14:41:55.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.852" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.850" endtime="20201117 14:41:55.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.858" level="INFO">VALUE: [6.883399999999679e-05, 6.83480000000028e-05, 6.900000000000656e-05, 6.887499999999602e-05, 6.877799999999851e-05, 6.844400000000084e-05, 6.92360000000003e-05, 6.920799999999422e-05, 6.841700000000117e-05, 6.920800000000116e-05, 6.920800000000116e-05, 6.898699999999952e-05, 6.862499999999577e-05, 6.877799999999851e-05, 6.84030000000016e-05, 6.8583000000004e-05, 6.881899999999774e-05, 6.887499999999602e-05, 6.916700000000192e-05, 6.884699999999688e-05, 6.918000000000202e-05, 6.922200000000073e-05, 6.89309999999943e-05, 6.908299999999756e-05, 6.915300000000235e-05, 6.840200000000213e-05, 6.895900000000038e-05, 6.877699999999903e-05, 6.859699999999663e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.876399999999894e-05, 6.870800000000066e-05, 6.884699999999688e-05, 6.894400000000134e-05, 6.897200000000048e-05, 6.8583000000004e-05, 6.868099999999405e-05, 6.862499999999577e-05, 6.862500000000271e-05, 6.859699999999663e-05, 6.883400000000373e-05, 6.841700000000117e-05, 6.902799999999876e-05, 6.838800000000256e-05, 6.831900000000418e-05, 6.890200000000263e-05, 6.862500000000271e-05, 6.829199999999758e-05, 6.886100000000339e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.854" endtime="20201117 14:41:55.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.843" endtime="20201117 14:41:55.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.867" endtime="20201117 14:41:55.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.875" endtime="20201117 14:41:55.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.871" endtime="20201117 14:41:55.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.862" endtime="20201117 14:41:55.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.337" endtime="20201117 14:41:55.901"></status>
</kw>
<msg timestamp="20201117 14:41:55.901" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.923" endtime="20201117 14:41:55.945"></status>
</kw>
<msg timestamp="20201117 14:41:55.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.920" endtime="20201117 14:41:55.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.948" endtime="20201117 14:41:55.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.955" endtime="20201117 14:41:55.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.912" endtime="20201117 14:41:55.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.907" endtime="20201117 14:41:55.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.979" endtime="20201117 14:41:56.318"></status>
</kw>
<msg timestamp="20201117 14:41:56.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.975" endtime="20201117 14:41:56.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.327" endtime="20201117 14:41:56.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.347" endtime="20201117 14:41:56.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.968" endtime="20201117 14:41:56.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.963" endtime="20201117 14:41:56.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.366" level="INFO">${RESULT} = [{'time': 0.041297417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.918100000000149e-05, 'source_diff': 6.918100000000149e-05}, {'time': 0.041378417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.357" endtime="20201117 14:41:56.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.397" level="INFO">${ACCURACY} = {'source_diff': [6.918100000000149e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.86109999999962e-05, 6.902699999999928e-05, 6.870800000000066e-05, 6.899999999999962e-05, 6.902799999999876e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:56.368" endtime="20201117 14:41:56.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.408" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.405" endtime="20201117 14:41:56.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.413" level="INFO">VALUE: [6.918100000000149e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.86109999999962e-05, 6.902699999999928e-05, 6.870800000000066e-05, 6.899999999999962e-05, 6.902799999999876e-05, 6.897200000000048e-05, 6.880499999999817e-05, 6.840299999999466e-05, 6.90830000000045e-05, 6.868100000000099e-05, 6.838899999999509e-05, 6.838900000000203e-05, 6.880600000000459e-05, 6.888899999999559e-05, 6.884700000000382e-05, 6.850000000000606e-05, 6.858299999999706e-05, 6.909700000000407e-05, 6.888900000000253e-05, 6.904199999999833e-05, 6.847199999999998e-05, 6.851399999999869e-05, 6.837500000000246e-05, 6.924999999999987e-05, 6.852799999999826e-05, 6.897299999999995e-05, 6.848599999999955e-05, 6.916600000000245e-05, 6.913800000000331e-05, 6.879100000000554e-05, 6.890200000000263e-05, 6.895800000000091e-05, 6.922200000000073e-05, 6.916700000000192e-05, 6.888900000000253e-05, 6.913800000000331e-05, 6.918000000000202e-05, 6.845899999999988e-05, 6.831999999999672e-05, 6.916599999999551e-05, 6.858400000000348e-05, 6.851399999999869e-05, 6.843000000000127e-05, 6.859700000000357e-05, 6.844400000000084e-05, 6.865300000000185e-05, 6.838899999999509e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.410" endtime="20201117 14:41:56.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.399" endtime="20201117 14:41:56.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.422" endtime="20201117 14:41:56.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.431" endtime="20201117 14:41:56.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.426" endtime="20201117 14:41:56.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.418" endtime="20201117 14:41:56.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.903" endtime="20201117 14:41:56.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.332" endtime="20201117 14:41:56.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.330" endtime="20201117 14:41:56.457"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.463" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.485" endtime="20201117 14:41:56.507"></status>
</kw>
<msg timestamp="20201117 14:41:56.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.482" endtime="20201117 14:41:56.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.510" endtime="20201117 14:41:56.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.517" endtime="20201117 14:41:56.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.474" endtime="20201117 14:41:56.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.468" endtime="20201117 14:41:56.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.540" endtime="20201117 14:41:56.855"></status>
</kw>
<msg timestamp="20201117 14:41:56.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048264806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048334569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.537" endtime="20201117 14:41:56.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048264806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048334569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.859" endtime="20201117 14:41:56.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.878" endtime="20201117 14:41:56.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.530" endtime="20201117 14:41:56.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.525" endtime="20201117 14:41:56.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.896" level="INFO">${RESULT} = [{'time': 0.048334569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.976300000000046e-05, 'source_diff': 6.976300000000046e-05}, {'time': 0.048413569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.887" endtime="20201117 14:41:56.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.927" level="INFO">${ACCURACY} = {'source_diff': [6.976300000000046e-05, 6.931899999999824e-05, 6.97360000000008e-05, 6.956899999999849e-05, 6.937499999999652e-05, 6.956899999999849e-05, 6.929199999999858e-05, 6.948600000000055e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:56.898" endtime="20201117 14:41:56.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.938" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.936" endtime="20201117 14:41:56.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.944" level="INFO">VALUE: [6.976300000000046e-05, 6.931899999999824e-05, 6.97360000000008e-05, 6.956899999999849e-05, 6.937499999999652e-05, 6.956899999999849e-05, 6.929199999999858e-05, 6.948600000000055e-05, 6.995899999999444e-05, 6.955600000000534e-05, 6.95559999999984e-05, 7.020899999999469e-05, 6.931899999999824e-05, 6.937499999999652e-05, 6.950000000000012e-05, 7.015200000000388e-05, 6.972199999999429e-05, 6.954099999999935e-05, 7.016599999999651e-05, 7.002799999999976e-05, 7.013899999999684e-05, 6.994500000000181e-05, 6.995900000000138e-05, 6.962500000000371e-05, 7.008399999999804e-05, 7.002799999999976e-05, 6.998599999999411e-05, 6.990299999999616e-05, 6.988799999999712e-05, 6.937499999999652e-05, 6.945800000000141e-05, 6.956900000000543e-05, 7.026400000000044e-05, 6.966700000000242e-05, 6.9583000000005e-05, 7.020800000000216e-05, 6.956999999999797e-05, 6.933399999999729e-05, 7.016700000000292e-05, 6.986099999999745e-05, 6.962500000000371e-05, 6.937500000000346e-05, 6.92909999999991e-05, 6.995799999999497e-05, 6.943000000000227e-05, 6.981899999999874e-05, 6.975000000000037e-05, 6.951399999999969e-05, 6.970800000000166e-05, 6.934700000000432e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.940" endtime="20201117 14:41:56.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.929" endtime="20201117 14:41:56.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.952" endtime="20201117 14:41:56.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.961" endtime="20201117 14:41:56.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.957" endtime="20201117 14:41:56.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.948" endtime="20201117 14:41:56.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.464" endtime="20201117 14:41:56.987"></status>
</kw>
<msg timestamp="20201117 14:41:56.988" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.011" endtime="20201117 14:41:57.032"></status>
</kw>
<msg timestamp="20201117 14:41:57.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.007" endtime="20201117 14:41:57.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.035" endtime="20201117 14:41:57.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.042" endtime="20201117 14:41:57.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.000" endtime="20201117 14:41:57.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.994" endtime="20201117 14:41:57.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.065" endtime="20201117 14:41:57.404"></status>
</kw>
<msg timestamp="20201117 14:41:57.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042978542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.062" endtime="20201117 14:41:57.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042978542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.414" endtime="20201117 14:41:57.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.433" endtime="20201117 14:41:57.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.055" endtime="20201117 14:41:57.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.050" endtime="20201117 14:41:57.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.452" level="INFO">${RESULT} = [{'time': 0.042978542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.015300000000335e-05, 'source_diff': 7.015300000000335e-05}, {'time': 0.043057528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.443" endtime="20201117 14:41:57.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.485" level="INFO">${ACCURACY} = {'source_diff': [7.015300000000335e-05, 6.937499999999652e-05, 6.938900000000303e-05, 6.952699999999978e-05, 6.937500000000346e-05, 6.941700000000217e-05, 6.952799999999926e-05, 7.005499999999942e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:57.454" endtime="20201117 14:41:57.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.497" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.494" endtime="20201117 14:41:57.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.502" level="INFO">VALUE: [7.015300000000335e-05, 6.937499999999652e-05, 6.938900000000303e-05, 6.952699999999978e-05, 6.937500000000346e-05, 6.941700000000217e-05, 6.952799999999926e-05, 7.005499999999942e-05, 6.981899999999874e-05, 6.945800000000141e-05, 6.983299999999831e-05, 6.941699999999523e-05, 6.926399999999944e-05, 6.94030000000026e-05, 6.954099999999935e-05, 6.956999999999797e-05, 6.958400000000448e-05, 6.968100000000199e-05, 7.026299999999402e-05, 7.016700000000292e-05, 6.983299999999831e-05, 7.008299999999856e-05, 6.944400000000184e-05, 7.019400000000259e-05, 7.002799999999976e-05, 6.940299999999566e-05, 6.988900000000353e-05, 6.950000000000012e-05, 6.97360000000008e-05, 6.941700000000217e-05, 7.015199999999694e-05, 7.001400000000019e-05, 6.958400000000448e-05, 6.947200000000098e-05, 6.962500000000371e-05, 6.950000000000012e-05, 6.974999999999343e-05, 7.004199999999933e-05, 6.997299999999401e-05, 7.00559999999989e-05, 6.952799999999926e-05, 6.995799999999497e-05, 6.943100000000174e-05, 6.954199999999883e-05, 6.997300000000095e-05, 7.006999999999847e-05, 6.948600000000055e-05, 6.987499999999702e-05, 6.966600000000295e-05, 6.948599999999361e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.499" endtime="20201117 14:41:57.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.487" endtime="20201117 14:41:57.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.512" endtime="20201117 14:41:57.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.520" endtime="20201117 14:41:57.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.516" endtime="20201117 14:41:57.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.506" endtime="20201117 14:41:57.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.990" endtime="20201117 14:41:57.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.460" endtime="20201117 14:41:57.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.458" endtime="20201117 14:41:57.547"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.552" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.574" endtime="20201117 14:41:57.596"></status>
</kw>
<msg timestamp="20201117 14:41:57.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.570" endtime="20201117 14:41:57.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.599" endtime="20201117 14:41:57.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.606" endtime="20201117 14:41:57.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.563" endtime="20201117 14:41:57.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.557" endtime="20201117 14:41:57.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.629" endtime="20201117 14:41:57.970"></status>
</kw>
<msg timestamp="20201117 14:41:57.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047235806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047306833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.626" endtime="20201117 14:41:57.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047235806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047306833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.980" endtime="20201117 14:41:57.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.999" endtime="20201117 14:41:58.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.619" endtime="20201117 14:41:58.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.614" endtime="20201117 14:41:58.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.019" level="INFO">${RESULT} = [{'time': 0.047306833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.102700000000128e-05, 'source_diff': 7.102700000000128e-05}, {'time': 0.047398847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.009" endtime="20201117 14:41:58.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.049" level="INFO">${ACCURACY} = {'source_diff': [7.102700000000128e-05, 7.093000000000377e-05, 7.065300000000385e-05, 7.12360000000023e-05, 7.05559999999994e-05, 7.097200000000248e-05, 7.026400000000044e-05, 7.097199999999554e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:41:58.021" endtime="20201117 14:41:58.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.060" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.058" endtime="20201117 14:41:58.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.066" level="INFO">VALUE: [7.102700000000128e-05, 7.093000000000377e-05, 7.065300000000385e-05, 7.12360000000023e-05, 7.05559999999994e-05, 7.097200000000248e-05, 7.026400000000044e-05, 7.097199999999554e-05, 7.048600000000155e-05, 7.048600000000155e-05, 7.097300000000195e-05, 7.047199999999504e-05, 7.111200000000512e-05, 7.07360000000018e-05, 7.036099999999795e-05, 7.116600000000445e-05, 7.12360000000023e-05, 7.074999999999443e-05, 7.081899999999974e-05, 7.088899999999759e-05, 7.052799999999332e-05, 7.097199999999554e-05, 7.07360000000018e-05, 7.11109999999987e-05, 7.029199999999958e-05, 7.083299999999931e-05, 7.040200000000413e-05, 7.051300000000121e-05, 7.037500000000446e-05, 7.044400000000284e-05, 7.037499999999752e-05, 7.112499999999827e-05, 7.095799999999597e-05, 7.056900000000643e-05, 7.119500000000306e-05, 7.029199999999958e-05, 7.098600000000205e-05, 7.058399999999854e-05, 7.04160000000037e-05, 7.098600000000205e-05, 7.070800000000266e-05, 7.077700000000103e-05, 7.104100000000085e-05, 7.07910000000006e-05, 7.050000000000112e-05, 7.084699999999888e-05, 7.054200000000677e-05, 7.034699999999838e-05, 7.045799999999547e-05, 7.063899999999734e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.063" endtime="20201117 14:41:58.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.051" endtime="20201117 14:41:58.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.076" endtime="20201117 14:41:58.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.084" endtime="20201117 14:41:58.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.080" endtime="20201117 14:41:58.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.071" endtime="20201117 14:41:58.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.553" endtime="20201117 14:41:58.110"></status>
</kw>
<msg timestamp="20201117 14:41:58.110" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.132" endtime="20201117 14:41:58.154"></status>
</kw>
<msg timestamp="20201117 14:41:58.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.129" endtime="20201117 14:41:58.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.157" endtime="20201117 14:41:58.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.164" endtime="20201117 14:41:58.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.121" endtime="20201117 14:41:58.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.116" endtime="20201117 14:41:58.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.187" endtime="20201117 14:41:58.526"></status>
</kw>
<msg timestamp="20201117 14:41:58.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.184" endtime="20201117 14:41:58.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.536" endtime="20201117 14:41:58.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.554" endtime="20201117 14:41:58.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.177" endtime="20201117 14:41:58.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.172" endtime="20201117 14:41:58.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.574" level="INFO">${RESULT} = [{'time': 0.041943444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.033300000000575e-05, 'source_diff': 7.033300000000575e-05}, {'time': 0.042034444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.565" endtime="20201117 14:41:58.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.605" level="INFO">${ACCURACY} = {'source_diff': [7.033300000000575e-05, 7.074999999999443e-05, 7.073599999999486e-05, 7.100000000000162e-05, 7.034699999999838e-05, 7.07360000000018e-05, 7.087499999999802e-05, 7.031899999999924e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:58.576" endtime="20201117 14:41:58.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.616" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.613" endtime="20201117 14:41:58.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.621" level="INFO">VALUE: [7.033300000000575e-05, 7.074999999999443e-05, 7.073599999999486e-05, 7.100000000000162e-05, 7.034699999999838e-05, 7.07360000000018e-05, 7.087499999999802e-05, 7.031899999999924e-05, 7.040299999999666e-05, 7.104200000000033e-05, 7.052800000000026e-05, 7.029199999999958e-05, 7.037499999999752e-05, 7.081999999999922e-05, 7.097300000000195e-05, 7.09439999999964e-05, 7.099999999999468e-05, 7.080500000000017e-05, 7.062499999999777e-05, 7.051400000000069e-05, 7.072200000000223e-05, 7.118100000000349e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.062499999999777e-05, 7.047200000000198e-05, 7.112499999999827e-05, 7.068100000000299e-05, 7.125000000000187e-05, 7.036099999999795e-05, 7.06109999999982e-05, 7.050000000000112e-05, 7.070799999999572e-05, 7.083399999999879e-05, 7.059699999999863e-05, 7.109699999999913e-05, 7.091700000000367e-05, 7.09030000000041e-05, 7.044499999999537e-05, 7.056999999999897e-05, 7.058299999999906e-05, 7.092999999999683e-05, 7.116600000000445e-05, 7.06109999999982e-05, 7.120800000000316e-05, 7.037500000000446e-05, 7.038899999999709e-05, 7.054199999999983e-05, 7.091699999999673e-05, 7.07230000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.618" endtime="20201117 14:41:58.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.607" endtime="20201117 14:41:58.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.631" endtime="20201117 14:41:58.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.640" endtime="20201117 14:41:58.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.636" endtime="20201117 14:41:58.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.626" endtime="20201117 14:41:58.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.112" endtime="20201117 14:41:58.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.549" endtime="20201117 14:41:58.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.548" endtime="20201117 14:41:58.666"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.672" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.694" endtime="20201117 14:41:58.715"></status>
</kw>
<msg timestamp="20201117 14:41:58.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.690" endtime="20201117 14:41:58.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.719" endtime="20201117 14:41:58.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.725" endtime="20201117 14:41:58.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.683" endtime="20201117 14:41:58.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.677" endtime="20201117 14:41:58.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.749" endtime="20201117 14:41:59.089"></status>
</kw>
<msg timestamp="20201117 14:41:59.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04698775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047059736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:58.746" endtime="20201117 14:41:59.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04698775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047059736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:59.099" endtime="20201117 14:41:59.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.118" endtime="20201117 14:41:59.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.738" endtime="20201117 14:41:59.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.733" endtime="20201117 14:41:59.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.136" level="INFO">${RESULT} = [{'time': 0.047059736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.198599999999611e-05, 'source_diff': 7.198599999999611e-05}, {'time': 0.04714875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:59.127" endtime="20201117 14:41:59.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.167" level="INFO">${ACCURACY} = {'source_diff': [7.198599999999611e-05, 7.208300000000056e-05, 7.204199999999439e-05, 7.202800000000176e-05, 7.195899999999644e-05, 7.202799999999482e-05, 7.149999999999518e-05, 7.144499999999637e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:59.138" endtime="20201117 14:41:59.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.178" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.176" endtime="20201117 14:41:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.184" level="INFO">VALUE: [7.198599999999611e-05, 7.208300000000056e-05, 7.204199999999439e-05, 7.202800000000176e-05, 7.195899999999644e-05, 7.202799999999482e-05, 7.149999999999518e-05, 7.144499999999637e-05, 7.163899999999834e-05, 7.22639999999955e-05, 7.1763999999995e-05, 7.140299999999766e-05, 7.212499999999927e-05, 7.219399999999765e-05, 7.200000000000262e-05, 7.168100000000399e-05, 7.208300000000056e-05, 7.133399999999929e-05, 7.216600000000545e-05, 7.198599999999611e-05, 7.163900000000528e-05, 7.168000000000452e-05, 7.180500000000117e-05, 7.148600000000255e-05, 7.133299999999981e-05, 7.198599999999611e-05, 7.188900000000553e-05, 7.173700000000227e-05, 7.19309999999973e-05, 7.131999999999972e-05, 7.169499999999662e-05, 7.137499999999852e-05, 7.158300000000006e-05, 7.170799999999672e-05, 7.179099999999466e-05, 7.212499999999927e-05, 7.229199999999464e-05, 7.22360000000033e-05, 7.200000000000262e-05, 7.159699999999963e-05, 7.197200000000348e-05, 7.123599999999536e-05, 7.220799999999722e-05, 7.212500000000621e-05, 7.141700000000417e-05, 7.123599999999536e-05, 7.15560000000004e-05, 7.200000000000262e-05, 7.161100000000614e-05, 7.15560000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.180" endtime="20201117 14:41:59.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.169" endtime="20201117 14:41:59.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.193" endtime="20201117 14:41:59.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.202" endtime="20201117 14:41:59.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.197" endtime="20201117 14:41:59.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.189" endtime="20201117 14:41:59.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.673" endtime="20201117 14:41:59.227"></status>
</kw>
<msg timestamp="20201117 14:41:59.228" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.250" endtime="20201117 14:41:59.272"></status>
</kw>
<msg timestamp="20201117 14:41:59.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.246" endtime="20201117 14:41:59.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.275" endtime="20201117 14:41:59.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.281" endtime="20201117 14:41:59.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.239" endtime="20201117 14:41:59.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.233" endtime="20201117 14:41:59.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.305" endtime="20201117 14:41:59.646"></status>
</kw>
<msg timestamp="20201117 14:41:59.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041470361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.302" endtime="20201117 14:41:59.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041470361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.656" endtime="20201117 14:41:59.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.675" endtime="20201117 14:41:59.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.295" endtime="20201117 14:41:59.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.290" endtime="20201117 14:41:59.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.694" level="INFO">${RESULT} = [{'time': 0.041470361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.148599999999561e-05, 'source_diff': 7.148599999999561e-05}, {'time': 0.041557375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:59.685" endtime="20201117 14:41:59.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.727" level="INFO">${ACCURACY} = {'source_diff': [7.148599999999561e-05, 7.152800000000126e-05, 7.131999999999972e-05, 7.148600000000255e-05, 7.138900000000503e-05, 7.138900000000503e-05, 7.17230000000027e-05, 7.140200000000513e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:59.696" endtime="20201117 14:41:59.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.739" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.737" endtime="20201117 14:41:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.745" level="INFO">VALUE: [7.148599999999561e-05, 7.152800000000126e-05, 7.131999999999972e-05, 7.148600000000255e-05, 7.138900000000503e-05, 7.138900000000503e-05, 7.17230000000027e-05, 7.140200000000513e-05, 7.134699999999938e-05, 7.181900000000074e-05, 7.209700000000013e-05, 7.227799999999507e-05, 7.13189999999933e-05, 7.154200000000083e-05, 7.150000000000212e-05, 7.148600000000255e-05, 7.169399999999715e-05, 7.170900000000313e-05, 7.162500000000571e-05, 7.191699999999773e-05, 7.227700000000253e-05, 7.192999999999783e-05, 7.169399999999715e-05, 7.151400000000169e-05, 7.19439999999974e-05, 7.197199999999654e-05, 7.21109999999997e-05, 7.161100000000614e-05, 7.138899999999809e-05, 7.213900000000578e-05, 7.16109999999992e-05, 7.131999999999972e-05, 7.137500000000546e-05, 7.159699999999963e-05, 7.151399999999475e-05, 7.216599999999851e-05, 7.220800000000416e-05, 7.19439999999974e-05, 7.134699999999938e-05, 7.190299999999816e-05, 7.204199999999439e-05, 7.180600000000065e-05, 7.136099999999895e-05, 7.198600000000305e-05, 7.150000000000212e-05, 7.158399999999954e-05, 7.14309999999968e-05, 7.190299999999816e-05, 7.216599999999851e-05, 7.184699999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.742" endtime="20201117 14:41:59.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.730" endtime="20201117 14:41:59.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.754" endtime="20201117 14:41:59.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.762" endtime="20201117 14:41:59.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.758" endtime="20201117 14:41:59.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.749" endtime="20201117 14:41:59.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.229" endtime="20201117 14:41:59.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.669" endtime="20201117 14:41:59.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.667" endtime="20201117 14:41:59.789"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.795" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.818" endtime="20201117 14:41:59.839"></status>
</kw>
<msg timestamp="20201117 14:41:59.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.814" endtime="20201117 14:41:59.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.842" endtime="20201117 14:41:59.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.849" endtime="20201117 14:41:59.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.806" endtime="20201117 14:41:59.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.800" endtime="20201117 14:41:59.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.872" endtime="20201117 14:42:00.191"></status>
</kw>
<msg timestamp="20201117 14:42:00.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049071889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049144583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.869" endtime="20201117 14:42:00.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049071889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049144583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.195" endtime="20201117 14:42:00.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.204" endtime="20201117 14:42:00.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.862" endtime="20201117 14:42:00.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.857" endtime="20201117 14:42:00.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.214" level="INFO">${RESULT} = [{'time': 0.049144583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.269399999999815e-05, 'source_diff': 7.269399999999815e-05}, {'time': 0.049227611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.209" endtime="20201117 14:42:00.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.227" level="INFO">${ACCURACY} = {'source_diff': [7.269399999999815e-05, 7.273599999999686e-05, 7.23189999999943e-05, 7.26110000000002e-05, 7.230600000000115e-05, 7.258300000000106e-05, 7.244400000000484e-05, 7.323599999999736e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:00.215" endtime="20201117 14:42:00.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.233" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.231" endtime="20201117 14:42:00.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.235" level="INFO">VALUE: [7.269399999999815e-05, 7.273599999999686e-05, 7.23189999999943e-05, 7.26110000000002e-05, 7.230600000000115e-05, 7.258300000000106e-05, 7.244400000000484e-05, 7.323599999999736e-05, 7.270900000000413e-05, 7.241699999999823e-05, 7.322200000000473e-05, 7.247199999999704e-05, 7.237499999999952e-05, 7.27360000000038e-05, 7.305500000000242e-05, 7.236100000000689e-05, 7.308300000000156e-05, 7.327799999999607e-05, 7.240299999999866e-05, 7.279200000000208e-05, 7.298599999999711e-05, 7.286100000000045e-05, 7.297299999999701e-05, 7.319399999999865e-05, 7.252799999999532e-05, 7.269499999999762e-05, 7.268100000000499e-05, 7.247200000000398e-05, 7.266699999999848e-05, 7.324999999999693e-05, 7.249999999999618e-05, 7.233300000000081e-05, 7.269500000000456e-05, 7.279200000000208e-05, 7.269499999999762e-05, 7.287500000000002e-05, 7.257000000000097e-05, 7.294499999999787e-05, 7.244400000000484e-05, 7.241599999999876e-05, 7.29439999999984e-05, 7.266699999999848e-05, 7.263899999999934e-05, 7.236099999999995e-05, 7.284699999999394e-05, 7.277800000000251e-05, 7.316599999999951e-05, 7.272200000000423e-05, 7.307000000000147e-05, 7.254200000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.234" endtime="20201117 14:42:00.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.228" endtime="20201117 14:42:00.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.239" endtime="20201117 14:42:00.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.243" endtime="20201117 14:42:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.241" endtime="20201117 14:42:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.237" endtime="20201117 14:42:00.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.796" endtime="20201117 14:42:00.264"></status>
</kw>
<msg timestamp="20201117 14:42:00.265" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.275" endtime="20201117 14:42:00.293"></status>
</kw>
<msg timestamp="20201117 14:42:00.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.273" endtime="20201117 14:42:00.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.295" endtime="20201117 14:42:00.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.298" endtime="20201117 14:42:00.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.270" endtime="20201117 14:42:00.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.267" endtime="20201117 14:42:00.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.318" endtime="20201117 14:42:00.657"></status>
</kw>
<msg timestamp="20201117 14:42:00.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.315" endtime="20201117 14:42:00.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.667" endtime="20201117 14:42:00.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.693" endtime="20201117 14:42:00.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.308" endtime="20201117 14:42:00.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.303" endtime="20201117 14:42:00.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.713" level="INFO">${RESULT} = [{'time': 0.024230917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322300000000073e-05, 'source_diff': 7.322300000000073e-05}, {'time': 0.024320917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.704" endtime="20201117 14:42:00.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.744" level="INFO">${ACCURACY} = {'source_diff': [7.322300000000073e-05, 7.258400000000054e-05, 7.238899999999909e-05, 7.238899999999909e-05, 7.237500000000299e-05, 7.26110000000002e-05, 7.32500000000004e-05, 7.286100000000045e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:00.715" endtime="20201117 14:42:00.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.755" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.752" endtime="20201117 14:42:00.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.760" level="INFO">VALUE: [7.322300000000073e-05, 7.258400000000054e-05, 7.238899999999909e-05, 7.238899999999909e-05, 7.237500000000299e-05, 7.26110000000002e-05, 7.32500000000004e-05, 7.286100000000045e-05, 7.258300000000106e-05, 7.306899999999852e-05, 7.227800000000201e-05, 7.265299999999891e-05, 7.240300000000213e-05, 7.269500000000109e-05, 7.241699999999823e-05, 7.244500000000084e-05, 7.295900000000091e-05, 7.315199999999994e-05, 7.319400000000212e-05, 7.29439999999984e-05, 7.281899999999827e-05, 7.323600000000083e-05, 7.313899999999984e-05, 7.320799999999822e-05, 7.234700000000038e-05, 7.248600000000008e-05, 7.32500000000004e-05, 7.251400000000269e-05, 7.290199999999969e-05, 7.306899999999852e-05, 7.245800000000094e-05, 7.286100000000045e-05, 7.241699999999823e-05, 7.248600000000008e-05, 7.29439999999984e-05, 7.318100000000202e-05, 7.241699999999823e-05, 7.315299999999941e-05, 7.297200000000101e-05, 7.290299999999916e-05, 7.236099999999995e-05, 7.292999999999883e-05, 7.322199999999779e-05, 7.245900000000041e-05, 7.237499999999952e-05, 7.27499999999999e-05, 7.28049999999987e-05, 7.284700000000088e-05, 7.252799999999879e-05, 7.313899999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.757" endtime="20201117 14:42:00.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.746" endtime="20201117 14:42:00.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.769" endtime="20201117 14:42:00.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.778" endtime="20201117 14:42:00.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.773" endtime="20201117 14:42:00.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.765" endtime="20201117 14:42:00.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.265" endtime="20201117 14:42:00.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.792" endtime="20201117 14:42:00.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.790" endtime="20201117 14:42:00.804"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.809" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.833" endtime="20201117 14:42:00.855"></status>
</kw>
<msg timestamp="20201117 14:42:00.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.829" endtime="20201117 14:42:00.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.859" endtime="20201117 14:42:00.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.865" endtime="20201117 14:42:00.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.821" endtime="20201117 14:42:00.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.815" endtime="20201117 14:42:00.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.890" endtime="20201117 14:42:01.231"></status>
</kw>
<msg timestamp="20201117 14:42:01.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049135903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.887" endtime="20201117 14:42:01.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049135903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.241" endtime="20201117 14:42:01.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.260" endtime="20201117 14:42:01.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.879" endtime="20201117 14:42:01.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.874" endtime="20201117 14:42:01.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.277" level="INFO">${RESULT} = [{'time': 0.049210056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415300000000041e-05, 'source_diff': 7.415300000000041e-05}, {'time': 0.049301069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:01.268" endtime="20201117 14:42:01.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.308" level="INFO">${ACCURACY} = {'source_diff': [7.415300000000041e-05, 7.422200000000573e-05, 7.402699999999734e-05, 7.420800000000616e-05, 7.338900000000009e-05, 7.383299999999537e-05, 7.338900000000009e-05, 7.362499999999383e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:01.279" endtime="20201117 14:42:01.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.319" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.317" endtime="20201117 14:42:01.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.325" level="INFO">VALUE: [7.415300000000041e-05, 7.422200000000573e-05, 7.402699999999734e-05, 7.420800000000616e-05, 7.338900000000009e-05, 7.383299999999537e-05, 7.338900000000009e-05, 7.362499999999383e-05, 7.39309999999993e-05, 7.404099999999691e-05, 7.416699999999998e-05, 7.347199999999804e-05, 7.384800000000136e-05, 7.401400000000419e-05, 7.40969999999952e-05, 7.351300000000421e-05, 7.329099999999616e-05, 7.388900000000059e-05, 7.390299999999322e-05, 7.352800000000326e-05, 7.345800000000541e-05, 7.334700000000138e-05, 7.338900000000009e-05, 7.387500000000102e-05, 7.377800000000351e-05, 7.425000000000487e-05, 7.330600000000215e-05, 7.423599999999836e-05, 7.3763999999997e-05, 7.366600000000001e-05, 7.379099999999666e-05, 7.347200000000498e-05, 7.351399999999675e-05, 7.377800000000351e-05, 7.347199999999804e-05, 7.34309999999988e-05, 7.401399999999725e-05, 7.37230000000047e-05, 7.415300000000041e-05, 7.334700000000138e-05, 7.354200000000283e-05, 7.37769999999971e-05, 7.386100000000145e-05, 7.398599999999811e-05, 7.374999999999743e-05, 7.380500000000317e-05, 7.405599999999596e-05, 7.401400000000419e-05, 7.413900000000084e-05, 7.395899999999844e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.322" endtime="20201117 14:42:01.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.310" endtime="20201117 14:42:01.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.334" endtime="20201117 14:42:01.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.342" endtime="20201117 14:42:01.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.338" endtime="20201117 14:42:01.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.329" endtime="20201117 14:42:01.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.811" endtime="20201117 14:42:01.368"></status>
</kw>
<msg timestamp="20201117 14:42:01.368" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.390" endtime="20201117 14:42:01.412"></status>
</kw>
<msg timestamp="20201117 14:42:01.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.387" endtime="20201117 14:42:01.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.415" endtime="20201117 14:42:01.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.422" endtime="20201117 14:42:01.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.380" endtime="20201117 14:42:01.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.374" endtime="20201117 14:42:01.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.446" endtime="20201117 14:42:01.788"></status>
</kw>
<msg timestamp="20201117 14:42:01.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.442" endtime="20201117 14:42:01.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.799" endtime="20201117 14:42:01.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.823" endtime="20201117 14:42:01.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.435" endtime="20201117 14:42:01.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.430" endtime="20201117 14:42:01.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.846" level="INFO">${RESULT} = [{'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.381900000000274e-05, 'source_diff': 7.381900000000274e-05}, {'time': 0.0416075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:01.836" endtime="20201117 14:42:01.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.885" level="INFO">${ACCURACY} = {'source_diff': [7.381900000000274e-05, 7.366699999999948e-05, 7.358300000000206e-05, 7.382000000000222e-05, 7.338900000000009e-05, 7.409700000000213e-05, 7.391699999999973e-05, 7.419399999999965e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:01.849" endtime="20201117 14:42:01.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.896" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.894" endtime="20201117 14:42:01.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.901" level="INFO">VALUE: [7.381900000000274e-05, 7.366699999999948e-05, 7.358300000000206e-05, 7.382000000000222e-05, 7.338900000000009e-05, 7.409700000000213e-05, 7.391699999999973e-05, 7.419399999999965e-05, 7.416600000000051e-05, 7.386100000000145e-05, 7.422199999999879e-05, 7.415300000000041e-05, 7.347299999999751e-05, 7.404200000000333e-05, 7.355500000000292e-05, 7.388900000000059e-05, 7.413900000000084e-05, 7.40839999999951e-05, 7.35560000000024e-05, 7.423599999999836e-05, 7.395899999999844e-05, 7.367999999999958e-05, 7.374999999999743e-05, 7.395799999999897e-05, 7.379199999999614e-05, 7.406899999999605e-05, 7.39439999999994e-05, 7.351399999999675e-05, 7.413800000000137e-05, 7.348599999999761e-05, 7.422299999999826e-05, 7.333400000000129e-05, 7.367999999999958e-05, 7.35560000000024e-05, 7.412500000000127e-05, 7.379099999999666e-05, 7.355499999999598e-05, 7.348599999999761e-05, 7.402799999999682e-05, 7.370899999999819e-05, 7.380600000000265e-05, 7.365299999999991e-05, 7.332000000000172e-05, 7.357000000000197e-05, 7.376400000000394e-05, 7.415300000000041e-05, 7.329200000000258e-05, 7.367999999999958e-05, 7.334700000000138e-05, 7.333300000000181e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.898" endtime="20201117 14:42:01.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.886" endtime="20201117 14:42:01.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.910" endtime="20201117 14:42:01.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.919" endtime="20201117 14:42:01.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.914" endtime="20201117 14:42:01.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.906" endtime="20201117 14:42:01.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.370" endtime="20201117 14:42:01.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.807" endtime="20201117 14:42:01.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.805" endtime="20201117 14:42:01.945"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.951" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.973" endtime="20201117 14:42:01.995"></status>
</kw>
<msg timestamp="20201117 14:42:01.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.970" endtime="20201117 14:42:01.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.998" endtime="20201117 14:42:02.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.005" endtime="20201117 14:42:02.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.962" endtime="20201117 14:42:02.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.956" endtime="20201117 14:42:02.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.028" endtime="20201117 14:42:02.366"></status>
</kw>
<msg timestamp="20201117 14:42:02.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048084722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.025" endtime="20201117 14:42:02.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048084722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.376" endtime="20201117 14:42:02.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.395" endtime="20201117 14:42:02.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.018" endtime="20201117 14:42:02.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.013" endtime="20201117 14:42:02.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.414" level="INFO">${RESULT} = [{'time': 0.048084722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513900000000184e-05, 'source_diff': 7.513900000000184e-05}, {'time': 0.048167722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.405" endtime="20201117 14:42:02.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.445" level="INFO">${ACCURACY} = {'source_diff': [7.513900000000184e-05, 7.481900000000374e-05, 7.452799999999732e-05, 7.473599999999886e-05, 7.480499999999723e-05, 7.499999999999868e-05, 7.429199999999664e-05, 7.462500000000177e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:02.416" endtime="20201117 14:42:02.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.456" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.454" endtime="20201117 14:42:02.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.462" level="INFO">VALUE: [7.513900000000184e-05, 7.481900000000374e-05, 7.452799999999732e-05, 7.473599999999886e-05, 7.480499999999723e-05, 7.499999999999868e-05, 7.429199999999664e-05, 7.462500000000177e-05, 7.440300000000066e-05, 7.461099999999526e-05, 7.429199999999664e-05, 7.475000000000537e-05, 7.456899999999655e-05, 7.52639999999985e-05, 7.483300000000331e-05, 7.504099999999791e-05, 7.463900000000134e-05, 7.477800000000451e-05, 7.45969999999957e-05, 7.474999999999843e-05, 7.440300000000066e-05, 7.487500000000202e-05, 7.466700000000048e-05, 7.50969999999962e-05, 7.451399999999775e-05, 7.495799999999997e-05, 7.44309999999998e-05, 7.502699999999835e-05, 7.513900000000184e-05, 7.454200000000383e-05, 7.506899999999705e-05, 7.504200000000433e-05, 7.519500000000012e-05, 7.469499999999962e-05, 7.520800000000022e-05, 7.490300000000116e-05, 7.506899999999705e-05, 7.498700000000552e-05, 7.468000000000058e-05, 7.433299999999587e-05, 7.45560000000034e-05, 7.487500000000202e-05, 7.438900000000109e-05, 7.508400000000304e-05, 7.524999999999893e-05, 7.487500000000202e-05, 7.43189999999963e-05, 7.518100000000055e-05, 7.511099999999576e-05, 7.480599999999671e-05]</msg>
<status status="PASS" starttime="20201117 14:42:02.459" endtime="20201117 14:42:02.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.447" endtime="20201117 14:42:02.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.470" endtime="20201117 14:42:02.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.479" endtime="20201117 14:42:02.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.475" endtime="20201117 14:42:02.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.466" endtime="20201117 14:42:02.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.952" endtime="20201117 14:42:02.505"></status>
</kw>
<msg timestamp="20201117 14:42:02.506" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.528" endtime="20201117 14:42:02.549"></status>
</kw>
<msg timestamp="20201117 14:42:02.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.524" endtime="20201117 14:42:02.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.552" endtime="20201117 14:42:02.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.559" endtime="20201117 14:42:02.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.517" endtime="20201117 14:42:02.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.511" endtime="20201117 14:42:02.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.582" endtime="20201117 14:42:02.923"></status>
</kw>
<msg timestamp="20201117 14:42:02.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042082778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042157806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.579" endtime="20201117 14:42:02.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042082778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042157806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.933" endtime="20201117 14:42:02.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.952" endtime="20201117 14:42:02.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.572" endtime="20201117 14:42:02.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.567" endtime="20201117 14:42:02.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.971" level="INFO">${RESULT} = [{'time': 0.042157806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.502799999999782e-05, 'source_diff': 7.502799999999782e-05}, {'time': 0.042243778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.962" endtime="20201117 14:42:02.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.002" level="INFO">${ACCURACY} = {'source_diff': [7.502799999999782e-05, 7.491700000000073e-05, 7.507000000000347e-05, 7.522299999999926e-05, 7.451400000000469e-05, 7.519399999999371e-05, 7.443000000000033e-05, 7.45969999999957e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:02.973" endtime="20201117 14:42:03.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.013" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.011" endtime="20201117 14:42:03.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.019" level="INFO">VALUE: [7.502799999999782e-05, 7.491700000000073e-05, 7.507000000000347e-05, 7.522299999999926e-05, 7.451400000000469e-05, 7.519399999999371e-05, 7.443000000000033e-05, 7.45969999999957e-05, 7.50969999999962e-05, 7.474999999999843e-05, 7.493000000000083e-05, 7.461099999999526e-05, 7.509700000000313e-05, 7.51110000000027e-05, 7.479199999999714e-05, 7.477799999999757e-05, 7.498599999999911e-05, 7.522299999999926e-05, 7.447299999999851e-05, 7.456899999999655e-05, 7.516600000000151e-05, 7.426400000000444e-05, 7.491700000000073e-05, 7.502800000000476e-05, 7.498599999999911e-05, 7.46110000000022e-05, 7.50969999999962e-05, 7.518100000000055e-05, 7.477799999999757e-05, 7.484800000000236e-05, 7.511199999999524e-05, 7.46110000000022e-05, 7.441600000000076e-05, 7.466600000000101e-05, 7.480500000000417e-05, 7.459700000000263e-05, 7.501399999999825e-05, 7.438900000000109e-05, 7.52639999999985e-05, 7.523599999999936e-05, 7.494499999999987e-05, 7.484699999999594e-05, 7.474999999999843e-05, 7.50839999999961e-05, 7.429199999999664e-05, 7.523599999999936e-05, 7.498599999999911e-05, 7.519399999999371e-05, 7.477800000000451e-05, 7.504200000000433e-05]</msg>
<status status="PASS" starttime="20201117 14:42:03.016" endtime="20201117 14:42:03.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.004" endtime="20201117 14:42:03.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.028" endtime="20201117 14:42:03.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.037" endtime="20201117 14:42:03.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.033" endtime="20201117 14:42:03.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.023" endtime="20201117 14:42:03.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.507" endtime="20201117 14:42:03.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.948" endtime="20201117 14:42:03.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.946" endtime="20201117 14:42:03.064"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.069" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.091" endtime="20201117 14:42:03.112"></status>
</kw>
<msg timestamp="20201117 14:42:03.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.087" endtime="20201117 14:42:03.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.115" endtime="20201117 14:42:03.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.122" endtime="20201117 14:42:03.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.080" endtime="20201117 14:42:03.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.074" endtime="20201117 14:42:03.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.145" endtime="20201117 14:42:03.485"></status>
</kw>
<msg timestamp="20201117 14:42:03.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047229611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.142" endtime="20201117 14:42:03.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047229611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.495" endtime="20201117 14:42:03.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.514" endtime="20201117 14:42:03.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.135" endtime="20201117 14:42:03.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.130" endtime="20201117 14:42:03.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.532" level="INFO">${RESULT} = [{'time': 0.047305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.579200000000508e-05, 'source_diff': 7.579200000000508e-05}, {'time': 0.047391347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.523" endtime="20201117 14:42:03.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.550" level="INFO">${ACCURACY} = {'source_diff': [7.579200000000508e-05, 7.58890000000026e-05, 7.55560000000044e-05, 7.566700000000148e-05, 7.56110000000032e-05, 7.618100000000155e-05, 7.572299999999976e-05, 7.544500000000037e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:42:03.534" endtime="20201117 14:42:03.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.555" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.554" endtime="20201117 14:42:03.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.557" level="INFO">VALUE: [7.579200000000508e-05, 7.58890000000026e-05, 7.55560000000044e-05, 7.566700000000148e-05, 7.56110000000032e-05, 7.618100000000155e-05, 7.572299999999976e-05, 7.544500000000037e-05, 7.543099999999386e-05, 7.620800000000122e-05, 7.565299999999497e-05, 7.580500000000517e-05, 7.604099999999892e-05, 7.547200000000004e-05, 7.544500000000037e-05, 7.582000000000422e-05, 7.549999999999918e-05, 7.590300000000216e-05, 7.597200000000054e-05, 7.537500000000252e-05, 7.619500000000112e-05, 7.56110000000032e-05, 7.598600000000011e-05, 7.545800000000047e-05, 7.562500000000277e-05, 7.554099999999841e-05, 7.581999999999728e-05, 7.577799999999857e-05, 7.59719999999936e-05, 7.58189999999978e-05, 7.53890000000021e-05, 7.568100000000105e-05, 7.577700000000603e-05, 7.599999999999968e-05, 7.538899999999515e-05, 7.612499999999633e-05, 7.604100000000585e-05, 7.599999999999968e-05, 7.551399999999875e-05, 7.615300000000241e-05, 7.579199999999814e-05, 7.587499999999608e-05, 7.541700000000123e-05, 7.579200000000508e-05, 7.562500000000277e-05, 7.54310000000008e-05, 7.55839999999966e-05, 7.601399999999925e-05, 7.53890000000021e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:42:03.556" endtime="20201117 14:42:03.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.550" endtime="20201117 14:42:03.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.562" endtime="20201117 14:42:03.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.566" endtime="20201117 14:42:03.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.564" endtime="20201117 14:42:03.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.560" endtime="20201117 14:42:03.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.070" endtime="20201117 14:42:03.587"></status>
</kw>
<msg timestamp="20201117 14:42:03.587" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.598" endtime="20201117 14:42:03.616"></status>
</kw>
<msg timestamp="20201117 14:42:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.596" endtime="20201117 14:42:03.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.618" endtime="20201117 14:42:03.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.620" endtime="20201117 14:42:03.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.593" endtime="20201117 14:42:03.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.590" endtime="20201117 14:42:03.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.632" endtime="20201117 14:42:03.952"></status>
</kw>
<msg timestamp="20201117 14:42:03.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024167042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024242819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.630" endtime="20201117 14:42:03.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024167042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024242819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.961" endtime="20201117 14:42:03.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.980" endtime="20201117 14:42:03.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.627" endtime="20201117 14:42:03.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.624" endtime="20201117 14:42:03.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.000" level="INFO">${RESULT} = [{'time': 0.024242819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.57769999999991e-05, 'source_diff': 7.57769999999991e-05}, {'time': 0.024338819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:03.990" endtime="20201117 14:42:04.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.033" level="INFO">${ACCURACY} = {'source_diff': [7.57769999999991e-05, 7.615199999999947e-05, 7.597300000000001e-05, 7.583300000000084e-05, 7.538799999999915e-05, 7.56249999999993e-05, 7.613899999999937e-05, 7.598600000000011e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:04.002" endtime="20201117 14:42:04.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.044" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.042" endtime="20201117 14:42:04.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.050" level="INFO">VALUE: [7.57769999999991e-05, 7.615199999999947e-05, 7.597300000000001e-05, 7.583300000000084e-05, 7.538799999999915e-05, 7.56249999999993e-05, 7.613899999999937e-05, 7.598600000000011e-05, 7.565300000000191e-05, 7.597200000000054e-05, 7.529200000000111e-05, 7.579199999999814e-05, 7.545899999999994e-05, 7.534699999999991e-05, 7.590199999999922e-05, 7.561199999999921e-05, 7.579100000000213e-05, 7.587499999999955e-05, 7.531900000000077e-05, 7.577800000000204e-05, 7.597200000000054e-05, 7.591700000000173e-05, 7.61249999999998e-05, 7.581900000000127e-05, 7.626400000000297e-05, 7.540300000000166e-05, 7.61379999999999e-05, 7.562500000000277e-05, 7.548599999999961e-05, 7.530499999999773e-05, 7.599999999999968e-05, 7.562500000000277e-05, 7.629199999999864e-05, 7.622199999999732e-05, 7.552799999999832e-05, 7.615299999999894e-05, 7.558400000000007e-05, 7.551399999999875e-05, 7.604200000000186e-05, 7.555599999999746e-05, 7.542999999999786e-05, 7.601399999999925e-05, 7.577799999999857e-05, 7.615300000000241e-05, 7.559700000000016e-05, 7.566699999999801e-05, 7.617999999999861e-05, 7.53890000000021e-05, 7.572199999999682e-05, 7.538899999999862e-05]</msg>
<status status="PASS" starttime="20201117 14:42:04.047" endtime="20201117 14:42:04.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.035" endtime="20201117 14:42:04.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.060" endtime="20201117 14:42:04.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.068" endtime="20201117 14:42:04.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.064" endtime="20201117 14:42:04.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.055" endtime="20201117 14:42:04.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.588" endtime="20201117 14:42:04.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.066" endtime="20201117 14:42:04.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.064" endtime="20201117 14:42:04.094"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.100" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.121" endtime="20201117 14:42:04.143"></status>
</kw>
<msg timestamp="20201117 14:42:04.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.118" endtime="20201117 14:42:04.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.146" endtime="20201117 14:42:04.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.152" endtime="20201117 14:42:04.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.111" endtime="20201117 14:42:04.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.105" endtime="20201117 14:42:04.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.176" endtime="20201117 14:42:04.517"></status>
</kw>
<msg timestamp="20201117 14:42:04.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046942278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.173" endtime="20201117 14:42:04.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046942278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.526" endtime="20201117 14:42:04.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.545" endtime="20201117 14:42:04.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.165" endtime="20201117 14:42:04.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.160" endtime="20201117 14:42:04.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.565" level="INFO">${RESULT} = [{'time': 0.046942278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.640299999999572e-05, 'source_diff': 7.640299999999572e-05}, {'time': 0.047030292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:04.556" endtime="20201117 14:42:04.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.595" level="INFO">${ACCURACY} = {'source_diff': [7.640299999999572e-05, 7.644500000000137e-05, 7.670900000000119e-05, 7.706899999999905e-05, 7.693000000000283e-05, 7.652699999999985e-05, 7.66110000000042e-05, 7.667999999999564e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:04.567" endtime="20201117 14:42:04.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.606" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.604" endtime="20201117 14:42:04.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.613" level="INFO">VALUE: [7.640299999999572e-05, 7.644500000000137e-05, 7.670900000000119e-05, 7.706899999999905e-05, 7.693000000000283e-05, 7.652699999999985e-05, 7.66110000000042e-05, 7.667999999999564e-05, 7.645799999999453e-05, 7.658299999999812e-05, 7.725000000000093e-05, 7.719400000000265e-05, 7.631999999999778e-05, 7.64310000000018e-05, 7.655599999999846e-05, 7.654199999999889e-05, 7.637500000000352e-05, 7.695799999999503e-05, 7.656899999999855e-05, 7.677799999999957e-05, 7.64440000000019e-05, 7.643000000000233e-05, 7.702799999999982e-05, 7.640300000000266e-05, 7.690300000000316e-05, 7.680599999999871e-05, 7.687500000000402e-05, 7.695900000000144e-05, 7.668100000000205e-05, 7.713800000000437e-05, 7.72640000000005e-05, 7.725000000000093e-05, 7.636099999999701e-05, 7.637499999999658e-05, 7.637500000000352e-05, 7.686099999999751e-05, 7.629200000000558e-05, 7.700000000000068e-05, 7.688899999999665e-05, 7.648600000000061e-05, 7.680599999999871e-05, 7.644399999999496e-05, 7.715299999999647e-05, 7.679099999999967e-05, 7.655499999999898e-05, 7.706899999999905e-05, 7.708299999999862e-05, 7.654199999999889e-05, 7.658299999999812e-05, 7.656999999999803e-05]</msg>
<status status="PASS" starttime="20201117 14:42:04.609" endtime="20201117 14:42:04.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.597" endtime="20201117 14:42:04.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.622" endtime="20201117 14:42:04.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.630" endtime="20201117 14:42:04.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.625" endtime="20201117 14:42:04.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.617" endtime="20201117 14:42:04.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.101" endtime="20201117 14:42:04.655"></status>
</kw>
<msg timestamp="20201117 14:42:04.656" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.678" endtime="20201117 14:42:04.699"></status>
</kw>
<msg timestamp="20201117 14:42:04.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.674" endtime="20201117 14:42:04.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.703" endtime="20201117 14:42:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.709" endtime="20201117 14:42:04.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.667" endtime="20201117 14:42:04.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.661" endtime="20201117 14:42:04.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.733" endtime="20201117 14:42:05.074"></status>
</kw>
<msg timestamp="20201117 14:42:05.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041196153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.729" endtime="20201117 14:42:05.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041196153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.084" endtime="20201117 14:42:05.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.102" endtime="20201117 14:42:05.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.722" endtime="20201117 14:42:05.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.717" endtime="20201117 14:42:05.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.122" level="INFO">${RESULT} = [{'time': 0.041272847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.669400000000215e-05, 'source_diff': 7.669400000000215e-05}, {'time': 0.041357847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.112" endtime="20201117 14:42:05.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.152" level="INFO">${ACCURACY} = {'source_diff': [7.669400000000215e-05, 7.675000000000043e-05, 7.69719999999946e-05, 7.655599999999846e-05, 7.695799999999503e-05, 7.708299999999862e-05, 7.712499999999733e-05, 7.64310000000018e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:05.124" endtime="20201117 14:42:05.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.164" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.162" endtime="20201117 14:42:05.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.169" level="INFO">VALUE: [7.669400000000215e-05, 7.675000000000043e-05, 7.69719999999946e-05, 7.655599999999846e-05, 7.695799999999503e-05, 7.708299999999862e-05, 7.712499999999733e-05, 7.64310000000018e-05, 7.701400000000025e-05, 7.66519999999965e-05, 7.675000000000043e-05, 7.637499999999658e-05, 7.634699999999744e-05, 7.702700000000035e-05, 7.702799999999982e-05, 7.686100000000445e-05, 7.644500000000137e-05, 7.6764e-05, 7.654200000000583e-05, 7.694500000000187e-05, 7.655599999999846e-05, 7.6764e-05, 7.700000000000068e-05, 7.702700000000035e-05, 7.694399999999546e-05, 7.637499999999658e-05, 7.69440000000024e-05, 7.677799999999957e-05, 7.651399999999975e-05, 7.713900000000384e-05, 7.64169999999953e-05, 7.700000000000068e-05, 7.636100000000395e-05, 7.683299999999837e-05, 7.715299999999647e-05, 7.637500000000352e-05, 7.669399999999521e-05, 7.716599999999657e-05, 7.719400000000265e-05, 7.634699999999744e-05, 7.637499999999658e-05, 7.662500000000377e-05, 7.677800000000651e-05, 7.651399999999975e-05, 7.695800000000197e-05, 7.672200000000129e-05, 7.645800000000147e-05, 7.6764e-05, 7.648600000000061e-05, 7.666600000000301e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.166" endtime="20201117 14:42:05.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.155" endtime="20201117 14:42:05.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.178" endtime="20201117 14:42:05.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.187" endtime="20201117 14:42:05.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.182" endtime="20201117 14:42:05.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.174" endtime="20201117 14:42:05.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.657" endtime="20201117 14:42:05.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.097" endtime="20201117 14:42:05.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.095" endtime="20201117 14:42:05.213"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.218" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.240" endtime="20201117 14:42:05.262"></status>
</kw>
<msg timestamp="20201117 14:42:05.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.237" endtime="20201117 14:42:05.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.265" endtime="20201117 14:42:05.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.272" endtime="20201117 14:42:05.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.230" endtime="20201117 14:42:05.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.224" endtime="20201117 14:42:05.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.296" endtime="20201117 14:42:05.637"></status>
</kw>
<msg timestamp="20201117 14:42:05.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047037264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047114611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.292" endtime="20201117 14:42:05.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047037264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047114611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.646" endtime="20201117 14:42:05.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.665" endtime="20201117 14:42:05.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.285" endtime="20201117 14:42:05.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.280" endtime="20201117 14:42:05.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.690" level="INFO">${RESULT} = [{'time': 0.047114611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734699999999844e-05, 'source_diff': 7.734699999999844e-05}, {'time': 0.047211597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.681" endtime="20201117 14:42:05.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.722" level="INFO">${ACCURACY} = {'source_diff': [7.734699999999844e-05, 7.756899999999955e-05, 7.770900000000219e-05, 7.754199999999989e-05, 7.768100000000305e-05, 7.755599999999946e-05, 7.761099999999826e-05, 7.781999999999928e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:05.693" endtime="20201117 14:42:05.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.733" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.730" endtime="20201117 14:42:05.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.738" level="INFO">VALUE: [7.734699999999844e-05, 7.756899999999955e-05, 7.770900000000219e-05, 7.754199999999989e-05, 7.768100000000305e-05, 7.755599999999946e-05, 7.761099999999826e-05, 7.781999999999928e-05, 7.733399999999835e-05, 7.823700000000183e-05, 7.813799999999843e-05, 7.76110000000052e-05, 7.791700000000373e-05, 7.797200000000254e-05, 7.769499999999568e-05, 7.723599999999442e-05, 7.759799999999817e-05, 7.773600000000186e-05, 7.798600000000211e-05, 7.798600000000211e-05, 7.798599999999517e-05, 7.82770000000016e-05, 7.790199999999775e-05, 7.751400000000075e-05, 7.7764000000001e-05, 7.787499999999808e-05, 7.769500000000262e-05, 7.75969999999987e-05, 7.783299999999937e-05, 7.794500000000287e-05, 7.806900000000006e-05, 7.754199999999989e-05, 7.818099999999661e-05, 7.751400000000075e-05, 7.813900000000484e-05, 7.752700000000085e-05, 7.73890000000041e-05, 7.752800000000032e-05, 7.740299999999672e-05, 7.745799999999553e-05, 7.808299999999962e-05, 7.79169999999968e-05, 7.815299999999747e-05, 7.740299999999672e-05, 7.811099999999876e-05, 7.758400000000554e-05, 7.784799999999842e-05, 7.822200000000279e-05, 7.794399999999646e-05, 7.805499999999355e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.735" endtime="20201117 14:42:05.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.724" endtime="20201117 14:42:05.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.747" endtime="20201117 14:42:05.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.756" endtime="20201117 14:42:05.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.751" endtime="20201117 14:42:05.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.743" endtime="20201117 14:42:05.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.220" endtime="20201117 14:42:05.781"></status>
</kw>
<msg timestamp="20201117 14:42:05.782" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.804" endtime="20201117 14:42:05.825"></status>
</kw>
<msg timestamp="20201117 14:42:05.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.801" endtime="20201117 14:42:05.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.828" endtime="20201117 14:42:05.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.835" endtime="20201117 14:42:05.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.793" endtime="20201117 14:42:05.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.787" endtime="20201117 14:42:05.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.858" endtime="20201117 14:42:06.200"></status>
</kw>
<msg timestamp="20201117 14:42:06.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041650972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.855" endtime="20201117 14:42:06.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041650972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.210" endtime="20201117 14:42:06.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.230" endtime="20201117 14:42:06.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.848" endtime="20201117 14:42:06.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.843" endtime="20201117 14:42:06.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.249" level="INFO">${RESULT} = [{'time': 0.041650972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.766600000000401e-05, 'source_diff': 7.766600000000401e-05}, {'time': 0.041748972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.240" endtime="20201117 14:42:06.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.282" level="INFO">${ACCURACY} = {'source_diff': [7.766600000000401e-05, 7.79440000000034e-05, 7.819399999999671e-05, 7.80969999999992e-05, 7.805500000000049e-05, 7.811099999999876e-05, 7.818100000000355e-05, 7.816699999999704e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:06.251" endtime="20201117 14:42:06.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.294" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.291" endtime="20201117 14:42:06.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.299" level="INFO">VALUE: [7.766600000000401e-05, 7.79440000000034e-05, 7.819399999999671e-05, 7.80969999999992e-05, 7.805500000000049e-05, 7.811099999999876e-05, 7.818100000000355e-05, 7.816699999999704e-05, 7.734799999999792e-05, 7.76110000000052e-05, 7.779200000000014e-05, 7.770800000000272e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.726399999999356e-05, 7.761099999999826e-05, 7.754199999999989e-05, 7.731999999999878e-05, 7.827799999999413e-05, 7.812499999999833e-05, 7.775000000000143e-05, 7.816700000000398e-05, 7.741599999999682e-05, 7.816700000000398e-05, 7.736199999999749e-05, 7.758299999999912e-05, 7.813900000000484e-05, 7.772199999999535e-05, 7.74310000000028e-05, 7.816699999999704e-05, 7.808299999999962e-05, 7.79169999999968e-05, 7.747200000000204e-05, 7.812499999999833e-05, 7.816700000000398e-05, 7.799999999999474e-05, 7.752800000000032e-05, 7.777799999999363e-05, 7.820800000000322e-05, 7.743000000000333e-05, 7.733300000000581e-05, 7.73189999999993e-05, 7.745799999999553e-05, 7.820800000000322e-05, 7.794500000000287e-05, 7.790299999999722e-05, 7.740300000000366e-05, 7.752800000000032e-05, 7.781999999999928e-05, 7.800000000000168e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.296" endtime="20201117 14:42:06.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.284" endtime="20201117 14:42:06.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.308" endtime="20201117 14:42:06.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.317" endtime="20201117 14:42:06.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.312" endtime="20201117 14:42:06.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.304" endtime="20201117 14:42:06.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.783" endtime="20201117 14:42:06.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.216" endtime="20201117 14:42:06.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.214" endtime="20201117 14:42:06.343"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.348" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.370" endtime="20201117 14:42:06.392"></status>
</kw>
<msg timestamp="20201117 14:42:06.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.367" endtime="20201117 14:42:06.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.395" endtime="20201117 14:42:06.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.402" endtime="20201117 14:42:06.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.359" endtime="20201117 14:42:06.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.354" endtime="20201117 14:42:06.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.426" endtime="20201117 14:42:06.765"></status>
</kw>
<msg timestamp="20201117 14:42:06.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04695075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047029278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:06.423" endtime="20201117 14:42:06.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04695075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047029278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:06.775" endtime="20201117 14:42:06.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.794" endtime="20201117 14:42:06.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.415" endtime="20201117 14:42:06.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.410" endtime="20201117 14:42:06.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.813" level="INFO">${RESULT} = [{'time': 0.047029278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852800000000132e-05, 'source_diff': 7.852800000000132e-05}, {'time': 0.047128292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.804" endtime="20201117 14:42:06.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.844" level="INFO">${ACCURACY} = {'source_diff': [7.852800000000132e-05, 7.915300000000541e-05, 7.869499999999668e-05, 7.877800000000157e-05, 7.874999999999549e-05, 7.872199999999635e-05, 7.906900000000106e-05, 7.869399999999721e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:06.815" endtime="20201117 14:42:06.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.855" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.853" endtime="20201117 14:42:06.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.861" level="INFO">VALUE: [7.852800000000132e-05, 7.915300000000541e-05, 7.869499999999668e-05, 7.877800000000157e-05, 7.874999999999549e-05, 7.872199999999635e-05, 7.906900000000106e-05, 7.869399999999721e-05, 7.845800000000347e-05, 7.902800000000182e-05, 7.874999999999549e-05, 7.90970000000002e-05, 7.840299999999772e-05, 7.852800000000132e-05, 7.899999999999574e-05, 7.904200000000139e-05, 7.837499999999858e-05, 7.836099999999901e-05, 7.911099999999976e-05, 7.874999999999549e-05, 7.844399999999696e-05, 7.851400000000175e-05, 7.833299999999987e-05, 7.880600000000071e-05, 7.833399999999935e-05, 7.837499999999858e-05, 7.919499999999718e-05, 7.920900000000369e-05, 7.830500000000074e-05, 7.872199999999635e-05, 7.900000000000268e-05, 7.9151999999999e-05, 7.85969999999997e-05, 7.854200000000089e-05, 7.88190000000008e-05, 7.927800000000207e-05, 7.827799999999413e-05, 7.850000000000218e-05, 7.857000000000003e-05, 7.831999999999978e-05, 7.850000000000218e-05, 7.893000000000483e-05, 7.90970000000002e-05, 7.85969999999997e-05, 7.855500000000099e-05, 7.872300000000276e-05, 7.900000000000268e-05, 7.916699999999804e-05, 7.831999999999978e-05, 7.861099999999926e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.857" endtime="20201117 14:42:06.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.846" endtime="20201117 14:42:06.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.869" endtime="20201117 14:42:06.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.878" endtime="20201117 14:42:06.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.873" endtime="20201117 14:42:06.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.865" endtime="20201117 14:42:06.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.350" endtime="20201117 14:42:06.903"></status>
</kw>
<msg timestamp="20201117 14:42:06.904" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.926" endtime="20201117 14:42:06.947"></status>
</kw>
<msg timestamp="20201117 14:42:06.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.922" endtime="20201117 14:42:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.951" endtime="20201117 14:42:06.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.958" endtime="20201117 14:42:06.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.915" endtime="20201117 14:42:06.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.909" endtime="20201117 14:42:06.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.981" endtime="20201117 14:42:07.303"></status>
</kw>
<msg timestamp="20201117 14:42:07.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041195472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.978" endtime="20201117 14:42:07.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041195472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.312" endtime="20201117 14:42:07.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.331" endtime="20201117 14:42:07.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.971" endtime="20201117 14:42:07.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.966" endtime="20201117 14:42:07.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.350" level="INFO">${RESULT} = [{'time': 0.041274292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.882000000000028e-05, 'source_diff': 7.882000000000028e-05}, {'time': 0.041364306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.341" endtime="20201117 14:42:07.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.381" level="INFO">${ACCURACY} = {'source_diff': [7.882000000000028e-05, 7.84310000000038e-05, 7.913900000000584e-05, 7.912499999999933e-05, 7.865299999999797e-05, 7.920799999999728e-05, 7.874999999999549e-05, 7.851400000000175e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:07.353" endtime="20201117 14:42:07.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.392" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.390" endtime="20201117 14:42:07.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.398" level="INFO">VALUE: [7.882000000000028e-05, 7.84310000000038e-05, 7.913900000000584e-05, 7.912499999999933e-05, 7.865299999999797e-05, 7.920799999999728e-05, 7.874999999999549e-05, 7.851400000000175e-05, 7.927799999999513e-05, 7.901399999999531e-05, 7.869500000000362e-05, 7.852800000000132e-05, 7.881999999999334e-05, 7.869399999999721e-05, 7.883399999999985e-05, 7.880500000000124e-05, 7.858300000000012e-05, 7.836099999999901e-05, 7.879100000000167e-05, 7.91389999999989e-05, 7.848599999999567e-05, 7.862499999999883e-05, 7.851400000000175e-05, 7.841700000000423e-05, 7.911099999999976e-05, 7.919499999999718e-05, 7.91389999999989e-05, 7.837499999999858e-05, 7.875000000000243e-05, 7.89719999999966e-05, 7.917999999999814e-05, 7.898599999999617e-05, 7.84440000000039e-05, 7.836099999999901e-05, 7.869499999999668e-05, 7.897200000000354e-05, 7.831999999999978e-05, 7.901400000000225e-05, 7.915299999999847e-05, 7.907000000000053e-05, 7.912499999999933e-05, 7.884699999999994e-05, 7.908299999999369e-05, 7.905499999999455e-05, 7.83190000000003e-05, 7.869500000000362e-05, 7.830600000000021e-05, 7.920900000000369e-05, 7.84169999999973e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.395" endtime="20201117 14:42:07.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.383" endtime="20201117 14:42:07.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.407" endtime="20201117 14:42:07.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.415" endtime="20201117 14:42:07.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.411" endtime="20201117 14:42:07.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.402" endtime="20201117 14:42:07.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.905" endtime="20201117 14:42:07.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.346" endtime="20201117 14:42:07.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.344" endtime="20201117 14:42:07.442"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.447" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.469" endtime="20201117 14:42:07.492"></status>
</kw>
<msg timestamp="20201117 14:42:07.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.466" endtime="20201117 14:42:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.495" endtime="20201117 14:42:07.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.502" endtime="20201117 14:42:07.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.458" endtime="20201117 14:42:07.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.452" endtime="20201117 14:42:07.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.525" endtime="20201117 14:42:07.865"></status>
</kw>
<msg timestamp="20201117 14:42:07.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048198486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048278653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.522" endtime="20201117 14:42:07.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048198486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048278653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.875" endtime="20201117 14:42:07.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.894" endtime="20201117 14:42:07.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.515" endtime="20201117 14:42:07.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.510" endtime="20201117 14:42:07.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.912" level="INFO">${RESULT} = [{'time': 0.048278653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.016699999999904e-05, 'source_diff': 8.016699999999904e-05}, {'time': 0.048366681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.902" endtime="20201117 14:42:07.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.942" level="INFO">${ACCURACY} = {'source_diff': [8.016699999999904e-05, 7.982000000000128e-05, 7.986100000000051e-05, 7.942999999999839e-05, 7.970800000000472e-05, 7.926300000000303e-05, 7.995799999999803e-05, 7.958300000000113e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:07.914" endtime="20201117 14:42:07.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.953" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.951" endtime="20201117 14:42:07.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.959" level="INFO">VALUE: [8.016699999999904e-05, 7.982000000000128e-05, 7.986100000000051e-05, 7.942999999999839e-05, 7.970800000000472e-05, 7.926300000000303e-05, 7.995799999999803e-05, 7.958300000000113e-05, 8.001399999999631e-05, 7.957000000000103e-05, 7.995799999999803e-05, 7.987500000000008e-05, 7.994499999999793e-05, 7.934700000000044e-05, 7.92640000000025e-05, 7.929099999999523e-05, 7.984700000000094e-05, 8.025000000000393e-05, 8.009699999999426e-05, 7.976399999999606e-05, 8.01389999999999e-05, 7.952800000000232e-05, 7.931899999999437e-05, 7.980600000000171e-05, 8.007000000000153e-05, 7.937499999999958e-05, 7.958399999999366e-05, 7.92919999999947e-05, 7.932000000000078e-05, 7.967999999999864e-05, 7.941599999999882e-05, 7.930500000000174e-05, 7.936100000000001e-05, 8.016699999999904e-05, 7.96389999999994e-05, 7.954200000000189e-05, 7.965299999999897e-05, 7.998599999999717e-05, 7.994500000000487e-05, 7.984800000000042e-05, 7.977699999999616e-05, 7.970800000000472e-05, 7.983300000000138e-05, 7.984700000000094e-05, 7.936100000000001e-05, 7.986100000000051e-05, 7.988899999999965e-05, 8.025000000000393e-05, 8.02640000000035e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.956" endtime="20201117 14:42:07.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.944" endtime="20201117 14:42:07.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.968" endtime="20201117 14:42:07.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.976" endtime="20201117 14:42:07.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.972" endtime="20201117 14:42:08.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.963" endtime="20201117 14:42:08.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.448" endtime="20201117 14:42:08.003"></status>
</kw>
<msg timestamp="20201117 14:42:08.003" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.025" endtime="20201117 14:42:08.047"></status>
</kw>
<msg timestamp="20201117 14:42:08.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.022" endtime="20201117 14:42:08.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.051" endtime="20201117 14:42:08.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.058" endtime="20201117 14:42:08.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.015" endtime="20201117 14:42:08.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.009" endtime="20201117 14:42:08.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.082" endtime="20201117 14:42:08.421"></status>
</kw>
<msg timestamp="20201117 14:42:08.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042585569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.079" endtime="20201117 14:42:08.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042585569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.430" endtime="20201117 14:42:08.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.449" endtime="20201117 14:42:08.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.072" endtime="20201117 14:42:08.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.067" endtime="20201117 14:42:08.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.469" level="INFO">${RESULT} = [{'time': 0.042665694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012500000000033e-05, 'source_diff': 8.012500000000033e-05}, {'time': 0.042757653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.459" endtime="20201117 14:42:08.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.502" level="INFO">${ACCURACY} = {'source_diff': [8.012500000000033e-05, 7.987500000000008e-05, 7.94719999999971e-05, 7.950000000000318e-05, 7.938800000000662e-05, 8.018099999999861e-05, 7.982000000000128e-05, 8.016600000000651e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:08.471" endtime="20201117 14:42:08.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.513" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.511" endtime="20201117 14:42:08.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.519" level="INFO">VALUE: [8.012500000000033e-05, 7.987500000000008e-05, 7.94719999999971e-05, 7.950000000000318e-05, 7.938800000000662e-05, 8.018099999999861e-05, 7.982000000000128e-05, 8.016600000000651e-05, 7.962499999999983e-05, 7.975000000000343e-05, 8.020799999999828e-05, 7.995799999999803e-05, 7.94169999999983e-05, 7.995799999999803e-05, 8.020799999999828e-05, 8.011100000000076e-05, 8.009800000000067e-05, 7.990299999999922e-05, 7.983400000000085e-05, 7.927799999999513e-05, 8.02369999999969e-05, 7.947200000000404e-05, 7.969399999999821e-05, 7.958300000000113e-05, 7.955499999999505e-05, 7.998600000000411e-05, 7.934700000000044e-05, 7.986100000000051e-05, 7.934700000000044e-05, 7.994500000000487e-05, 7.945799999999753e-05, 7.990199999999975e-05, 7.977800000000257e-05, 7.952700000000285e-05, 7.969399999999821e-05, 7.973599999999692e-05, 7.977800000000257e-05, 7.937499999999958e-05, 7.969399999999821e-05, 8.023599999999742e-05, 7.986100000000051e-05, 7.932000000000078e-05, 7.982000000000128e-05, 7.972300000000376e-05, 7.956900000000156e-05, 7.958300000000113e-05, 7.962499999999983e-05, 7.987500000000008e-05, 7.933299999999394e-05, 7.966699999999854e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.515" endtime="20201117 14:42:08.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.504" endtime="20201117 14:42:08.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.528" endtime="20201117 14:42:08.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.537" endtime="20201117 14:42:08.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.532" endtime="20201117 14:42:08.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.523" endtime="20201117 14:42:08.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.005" endtime="20201117 14:42:08.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.444" endtime="20201117 14:42:08.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.443" endtime="20201117 14:42:08.563"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.569" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.590" endtime="20201117 14:42:08.612"></status>
</kw>
<msg timestamp="20201117 14:42:08.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.587" endtime="20201117 14:42:08.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.615" endtime="20201117 14:42:08.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.622" endtime="20201117 14:42:08.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.580" endtime="20201117 14:42:08.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.574" endtime="20201117 14:42:08.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.645" endtime="20201117 14:42:08.985"></status>
</kw>
<msg timestamp="20201117 14:42:08.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046896111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.642" endtime="20201117 14:42:08.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046896111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.995" endtime="20201117 14:42:09.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.014" endtime="20201117 14:42:09.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.635" endtime="20201117 14:42:09.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.630" endtime="20201117 14:42:09.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.034" level="INFO">${RESULT} = [{'time': 0.046896111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.104199999999645e-05, 'source_diff': 8.104199999999645e-05}, {'time': 0.046995097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.025" endtime="20201117 14:42:09.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.064" level="INFO">${ACCURACY} = {'source_diff': [8.104199999999645e-05, 8.041599999999982e-05, 8.056900000000256e-05, 8.10970000000022e-05, 8.124999999999799e-05, 8.065299999999997e-05, 8.106899999999612e-05, 8.033300000000188e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:09.036" endtime="20201117 14:42:09.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.076" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.073" endtime="20201117 14:42:09.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.082" level="INFO">VALUE: [8.104199999999645e-05, 8.041599999999982e-05, 8.056900000000256e-05, 8.10970000000022e-05, 8.124999999999799e-05, 8.065299999999997e-05, 8.106899999999612e-05, 8.033300000000188e-05, 8.123600000000536e-05, 8.07090000000052e-05, 8.105600000000296e-05, 8.080600000000271e-05, 8.030500000000274e-05, 8.116600000000057e-05, 8.122199999999885e-05, 8.118099999999961e-05, 8.038900000000015e-05, 8.051399999999681e-05, 8.115300000000047e-05, 8.080599999999577e-05, 8.03469999999945e-05, 8.104199999999645e-05, 8.057000000000203e-05, 8.105599999999602e-05, 8.05840000000016e-05, 8.03049999999958e-05, 8.076399999999706e-05, 8.054099999999648e-05, 8.076399999999706e-05, 8.065299999999997e-05, 8.051399999999681e-05, 8.044500000000537e-05, 8.113899999999397e-05, 8.068099999999911e-05, 8.027799999999613e-05, 8.066699999999954e-05, 8.056900000000256e-05, 8.041599999999982e-05, 8.030500000000274e-05, 8.073599999999792e-05, 8.048599999999767e-05, 8.081899999999587e-05, 8.122199999999885e-05, 8.087500000000108e-05, 8.083300000000238e-05, 8.084800000000142e-05, 8.051400000000375e-05, 8.108399999999516e-05, 8.019499999999818e-05, 8.037500000000058e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.078" endtime="20201117 14:42:09.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.066" endtime="20201117 14:42:09.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.092" endtime="20201117 14:42:09.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.101" endtime="20201117 14:42:09.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.096" endtime="20201117 14:42:09.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.087" endtime="20201117 14:42:09.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.570" endtime="20201117 14:42:09.127"></status>
</kw>
<msg timestamp="20201117 14:42:09.127" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.149" endtime="20201117 14:42:09.171"></status>
</kw>
<msg timestamp="20201117 14:42:09.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.146" endtime="20201117 14:42:09.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.174" endtime="20201117 14:42:09.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.181" endtime="20201117 14:42:09.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.138" endtime="20201117 14:42:09.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.133" endtime="20201117 14:42:09.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.204" endtime="20201117 14:42:09.543"></status>
</kw>
<msg timestamp="20201117 14:42:09.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.201" endtime="20201117 14:42:09.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.553" endtime="20201117 14:42:09.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.572" endtime="20201117 14:42:09.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.194" endtime="20201117 14:42:09.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.189" endtime="20201117 14:42:09.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.591" level="INFO">${RESULT} = [{'time': 0.041518889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.066700000000648e-05, 'source_diff': 8.066700000000648e-05}, {'time': 0.041616861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.582" endtime="20201117 14:42:09.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.622" level="INFO">${ACCURACY} = {'source_diff': [8.066700000000648e-05, 8.126399999999756e-05, 8.068099999999911e-05, 8.043099999999886e-05, 8.080599999999577e-05, 8.112500000000133e-05, 8.083400000000185e-05, 8.079200000000314e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:09.593" endtime="20201117 14:42:09.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.633" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.631" endtime="20201117 14:42:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.639" level="INFO">VALUE: [8.066700000000648e-05, 8.126399999999756e-05, 8.068099999999911e-05, 8.043099999999886e-05, 8.080599999999577e-05, 8.112500000000133e-05, 8.083400000000185e-05, 8.079200000000314e-05, 8.068100000000605e-05, 8.120899999999875e-05, 8.080600000000271e-05, 8.029099999999623e-05, 8.06520000000005e-05, 8.09440000000064e-05, 8.118099999999961e-05, 8.069499999999868e-05, 8.030599999999527e-05, 8.086100000000151e-05, 8.070799999999878e-05, 8.087500000000108e-05, 8.07919999999962e-05, 8.070899999999825e-05, 8.106899999999612e-05, 8.10269999999974e-05, 8.055499999999605e-05, 8.061099999999433e-05, 8.049999999999724e-05, 8.095799999999903e-05, 8.036099999999408e-05, 8.048599999999767e-05, 8.032000000000178e-05, 8.112500000000133e-05, 8.036100000000101e-05, 8.105500000000349e-05, 8.065299999999997e-05, 8.052700000000385e-05, 8.106899999999612e-05, 8.120799999999928e-05, 8.102799999999688e-05, 8.11249999999944e-05, 8.122199999999885e-05, 8.051399999999681e-05, 8.098599999999817e-05, 8.09589999999985e-05, 8.08190000000028e-05, 8.047299999999757e-05, 8.033300000000188e-05, 8.058300000000213e-05, 8.075000000000443e-05, 8.076399999999706e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.635" endtime="20201117 14:42:09.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.624" endtime="20201117 14:42:09.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.648" endtime="20201117 14:42:09.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.657" endtime="20201117 14:42:09.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.652" endtime="20201117 14:42:09.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.644" endtime="20201117 14:42:09.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.129" endtime="20201117 14:42:09.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.566" endtime="20201117 14:42:09.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.564" endtime="20201117 14:42:09.683"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.688" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.710" endtime="20201117 14:42:09.733"></status>
</kw>
<msg timestamp="20201117 14:42:09.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.707" endtime="20201117 14:42:09.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.736" endtime="20201117 14:42:09.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.743" endtime="20201117 14:42:09.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.700" endtime="20201117 14:42:09.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.694" endtime="20201117 14:42:09.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.766" endtime="20201117 14:42:10.105"></status>
</kw>
<msg timestamp="20201117 14:42:10.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047121583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047203125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.763" endtime="20201117 14:42:10.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047121583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047203125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.115" endtime="20201117 14:42:10.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.135" endtime="20201117 14:42:10.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.756" endtime="20201117 14:42:10.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.751" endtime="20201117 14:42:10.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.153" level="INFO">${RESULT} = [{'time': 0.047203125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.154199999999695e-05, 'source_diff': 8.154199999999695e-05}, {'time': 0.047306153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.144" endtime="20201117 14:42:10.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.184" level="INFO">${ACCURACY} = {'source_diff': [8.154199999999695e-05, 8.213899999999497e-05, 8.152799999999738e-05, 8.174999999999849e-05, 8.140300000000072e-05, 8.151399999999781e-05, 8.222299999999932e-05, 8.16520000000015e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:10.155" endtime="20201117 14:42:10.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.195" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.192" endtime="20201117 14:42:10.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.201" level="INFO">VALUE: [8.154199999999695e-05, 8.213899999999497e-05, 8.152799999999738e-05, 8.174999999999849e-05, 8.140300000000072e-05, 8.151399999999781e-05, 8.222299999999932e-05, 8.16520000000015e-05, 8.205500000000449e-05, 8.156900000000356e-05, 8.152800000000432e-05, 8.220899999999975e-05, 8.161100000000227e-05, 8.143099999999986e-05, 8.182000000000328e-05, 8.129200000000364e-05, 8.219400000000071e-05, 8.215300000000147e-05, 8.156900000000356e-05, 8.140300000000072e-05, 8.140200000000125e-05, 8.143000000000039e-05, 8.129100000000417e-05, 8.211100000000277e-05, 8.133300000000288e-05, 8.172300000000576e-05, 8.120799999999928e-05, 8.212500000000234e-05, 8.1458999999999e-05, 8.211099999999583e-05, 8.206900000000406e-05, 8.218000000000114e-05, 8.151400000000475e-05, 8.143000000000039e-05, 8.187499999999515e-05, 8.180600000000371e-05, 8.170799999999978e-05, 8.163899999999447e-05, 8.14170000000003e-05, 8.180500000000424e-05, 8.197300000000601e-05, 8.174999999999849e-05, 8.143000000000039e-05, 8.225000000000593e-05, 8.131899999999637e-05, 8.183299999999644e-05, 8.154199999999695e-05, 8.13469999999955e-05, 8.145799999999953e-05, 8.188899999999472e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.197" endtime="20201117 14:42:10.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.186" endtime="20201117 14:42:10.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.210" endtime="20201117 14:42:10.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.218" endtime="20201117 14:42:10.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.214" endtime="20201117 14:42:10.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.205" endtime="20201117 14:42:10.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.690" endtime="20201117 14:42:10.244"></status>
</kw>
<msg timestamp="20201117 14:42:10.245" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.267" endtime="20201117 14:42:10.289"></status>
</kw>
<msg timestamp="20201117 14:42:10.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.263" endtime="20201117 14:42:10.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.292" endtime="20201117 14:42:10.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.298" endtime="20201117 14:42:10.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.256" endtime="20201117 14:42:10.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.250" endtime="20201117 14:42:10.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.321" endtime="20201117 14:42:10.624"></status>
</kw>
<msg timestamp="20201117 14:42:10.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041707125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.319" endtime="20201117 14:42:10.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041707125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.634" endtime="20201117 14:42:10.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.653" endtime="20201117 14:42:10.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.311" endtime="20201117 14:42:10.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.307" endtime="20201117 14:42:10.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.672" level="INFO">${RESULT} = [{'time': 0.041788903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.177800000000457e-05, 'source_diff': 8.177800000000457e-05}, {'time': 0.041890903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.663" endtime="20201117 14:42:10.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.705" level="INFO">${ACCURACY} = {'source_diff': [8.177800000000457e-05, 8.130600000000321e-05, 8.208300000000363e-05, 8.162500000000183e-05, 8.16390000000014e-05, 8.198599999999917e-05, 8.166599999999413e-05, 8.159699999999576e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:10.674" endtime="20201117 14:42:10.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.722" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.720" endtime="20201117 14:42:10.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.728" level="INFO">VALUE: [8.177800000000457e-05, 8.130600000000321e-05, 8.208300000000363e-05, 8.162500000000183e-05, 8.16390000000014e-05, 8.198599999999917e-05, 8.166599999999413e-05, 8.159699999999576e-05, 8.1764000000005e-05, 8.176399999999806e-05, 8.199999999999874e-05, 8.187500000000208e-05, 8.19589999999995e-05, 8.12919999999967e-05, 8.17369999999984e-05, 8.141600000000082e-05, 8.144499999999943e-05, 8.209699999999626e-05, 8.226399999999856e-05, 8.174999999999849e-05, 8.215300000000147e-05, 8.227799999999813e-05, 8.200000000000568e-05, 8.208299999999669e-05, 8.170899999999925e-05, 8.161100000000227e-05, 8.169499999999968e-05, 8.207000000000353e-05, 8.226399999999856e-05, 8.181899999999687e-05, 8.204200000000439e-05, 8.156999999999609e-05, 8.19170000000008e-05, 8.212500000000234e-05, 8.14170000000003e-05, 8.202799999999788e-05, 8.198599999999917e-05, 8.226299999999909e-05, 8.173700000000533e-05, 8.220899999999975e-05, 8.188900000000165e-05, 8.169400000000021e-05, 8.16390000000014e-05, 8.19719999999996e-05, 8.148600000000561e-05, 8.219500000000018e-05, 8.193100000000036e-05, 8.193100000000036e-05, 8.211100000000277e-05, 8.233299999999694e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.725" endtime="20201117 14:42:10.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.713" endtime="20201117 14:42:10.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.737" endtime="20201117 14:42:10.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.745" endtime="20201117 14:42:10.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.741" endtime="20201117 14:42:10.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.732" endtime="20201117 14:42:10.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.246" endtime="20201117 14:42:10.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.686" endtime="20201117 14:42:10.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.684" endtime="20201117 14:42:10.772"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.777" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.799" endtime="20201117 14:42:10.820"></status>
</kw>
<msg timestamp="20201117 14:42:10.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.795" endtime="20201117 14:42:10.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.824" endtime="20201117 14:42:10.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.830" endtime="20201117 14:42:10.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.788" endtime="20201117 14:42:10.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.782" endtime="20201117 14:42:10.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.854" endtime="20201117 14:42:11.194"></status>
</kw>
<msg timestamp="20201117 14:42:11.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046892069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.850" endtime="20201117 14:42:11.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046892069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.204" endtime="20201117 14:42:11.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.222" endtime="20201117 14:42:11.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.843" endtime="20201117 14:42:11.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.838" endtime="20201117 14:42:11.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.243" level="INFO">${RESULT} = [{'time': 0.046892069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.311100000000377e-05, 'source_diff': 8.311100000000377e-05}, {'time': 0.046992069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.234" endtime="20201117 14:42:11.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.274" level="INFO">${ACCURACY} = {'source_diff': [8.311100000000377e-05, 8.298600000000017e-05, 8.299999999999974e-05, 8.326399999999956e-05, 8.311099999999683e-05, 8.248600000000661e-05, 8.277799999999863e-05, 8.244400000000096e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:11.245" endtime="20201117 14:42:11.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.285" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.282" endtime="20201117 14:42:11.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.290" level="INFO">VALUE: [8.311100000000377e-05, 8.298600000000017e-05, 8.299999999999974e-05, 8.326399999999956e-05, 8.311099999999683e-05, 8.248600000000661e-05, 8.277799999999863e-05, 8.244400000000096e-05, 8.304200000000539e-05, 8.270900000000025e-05, 8.281999999999734e-05, 8.243000000000139e-05, 8.227799999999813e-05, 8.248599999999967e-05, 8.305499999999855e-05, 8.298600000000017e-05, 8.277799999999863e-05, 8.290300000000222e-05, 8.309699999999726e-05, 8.31669999999951e-05, 8.291699999999486e-05, 8.311100000000377e-05, 8.234799999999598e-05, 8.24170000000013e-05, 8.23469999999965e-05, 8.250000000000618e-05, 8.290199999999581e-05, 8.316700000000204e-05, 8.305599999999802e-05, 8.265300000000197e-05, 8.277799999999863e-05, 8.304199999999845e-05, 8.266700000000154e-05, 8.276399999999906e-05, 8.22919999999977e-05, 8.25970000000037e-05, 8.276399999999906e-05, 8.268000000000164e-05, 8.281899999999787e-05, 8.23190000000043e-05, 8.306899999999812e-05, 8.23469999999965e-05, 8.287500000000309e-05, 8.30840000000041e-05, 8.319499999999425e-05, 8.298600000000017e-05, 8.257000000000403e-05, 8.25970000000037e-05, 8.259699999999676e-05, 8.29720000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.287" endtime="20201117 14:42:11.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.275" endtime="20201117 14:42:11.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.299" endtime="20201117 14:42:11.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.307" endtime="20201117 14:42:11.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.303" endtime="20201117 14:42:11.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.295" endtime="20201117 14:42:11.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.778" endtime="20201117 14:42:11.333"></status>
</kw>
<msg timestamp="20201117 14:42:11.333" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.355" endtime="20201117 14:42:11.377"></status>
</kw>
<msg timestamp="20201117 14:42:11.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.352" endtime="20201117 14:42:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.381" endtime="20201117 14:42:11.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.387" endtime="20201117 14:42:11.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.345" endtime="20201117 14:42:11.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.339" endtime="20201117 14:42:11.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.411" endtime="20201117 14:42:11.750"></status>
</kw>
<msg timestamp="20201117 14:42:11.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041125681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.407" endtime="20201117 14:42:11.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041125681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.760" endtime="20201117 14:42:11.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.780" endtime="20201117 14:42:11.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.400" endtime="20201117 14:42:11.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.395" endtime="20201117 14:42:11.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.799" level="INFO">${RESULT} = [{'time': 0.041208139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.245800000000053e-05, 'source_diff': 8.245800000000053e-05}, {'time': 0.041309125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.790" endtime="20201117 14:42:11.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.830" level="INFO">${ACCURACY} = {'source_diff': [8.245800000000053e-05, 8.280600000000471e-05, 8.277799999999863e-05, 8.29720000000006e-05, 8.323600000000042e-05, 8.29170000000018e-05, 8.295800000000103e-05, 8.277699999999916e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:11.801" endtime="20201117 14:42:11.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.841" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.839" endtime="20201117 14:42:11.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.847" level="INFO">VALUE: [8.245800000000053e-05, 8.280600000000471e-05, 8.277799999999863e-05, 8.29720000000006e-05, 8.323600000000042e-05, 8.29170000000018e-05, 8.295800000000103e-05, 8.277699999999916e-05, 8.240300000000172e-05, 8.241599999999488e-05, 8.259699999999676e-05, 8.24170000000013e-05, 8.270800000000078e-05, 8.29170000000018e-05, 8.308300000000463e-05, 8.241600000000182e-05, 8.266600000000207e-05, 8.244500000000043e-05, 8.288900000000265e-05, 8.324999999999999e-05, 8.261099999999633e-05, 8.283299999999744e-05, 8.230500000000474e-05, 8.283299999999744e-05, 8.313899999999597e-05, 8.277799999999863e-05, 8.320800000000128e-05, 8.25840000000036e-05, 8.301399999999931e-05, 8.302799999999888e-05, 8.316599999999563e-05, 8.244400000000096e-05, 8.30970000000042e-05, 8.305499999999855e-05, 8.322200000000085e-05, 8.234700000000345e-05, 8.300000000000668e-05, 8.234800000000292e-05, 8.234700000000345e-05, 8.287499999999615e-05, 8.277799999999863e-05, 8.283399999999691e-05, 8.318000000000214e-05, 8.245800000000053e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.227799999999813e-05, 8.305599999999802e-05, 8.276399999999906e-05, 8.262500000000284e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.844" endtime="20201117 14:42:11.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.832" endtime="20201117 14:42:11.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.856" endtime="20201117 14:42:11.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.864" endtime="20201117 14:42:11.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.860" endtime="20201117 14:42:11.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.851" endtime="20201117 14:42:11.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.335" endtime="20201117 14:42:11.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.774" endtime="20201117 14:42:11.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.773" endtime="20201117 14:42:11.891"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.896" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.918" endtime="20201117 14:42:11.940"></status>
</kw>
<msg timestamp="20201117 14:42:11.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.915" endtime="20201117 14:42:11.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.944" endtime="20201117 14:42:11.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.950" endtime="20201117 14:42:11.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.907" endtime="20201117 14:42:11.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.901" endtime="20201117 14:42:11.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.975" endtime="20201117 14:42:12.316"></status>
</kw>
<msg timestamp="20201117 14:42:12.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047269653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047353056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.971" endtime="20201117 14:42:12.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047269653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047353056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.325" endtime="20201117 14:42:12.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.344" endtime="20201117 14:42:12.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.963" endtime="20201117 14:42:12.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.958" endtime="20201117 14:42:12.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.362" level="INFO">${RESULT} = [{'time': 0.047353056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.340299999999579e-05, 'source_diff': 8.340299999999579e-05}, {'time': 0.047451042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.353" endtime="20201117 14:42:12.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.393" level="INFO">${ACCURACY} = {'source_diff': [8.340299999999579e-05, 8.413899999999697e-05, 8.420900000000175e-05, 8.337499999999665e-05, 8.401400000000031e-05, 8.365299999999604e-05, 8.354199999999895e-05, 8.343000000000239e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:12.364" endtime="20201117 14:42:12.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.404" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.402" endtime="20201117 14:42:12.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.410" level="INFO">VALUE: [8.340299999999579e-05, 8.413899999999697e-05, 8.420900000000175e-05, 8.337499999999665e-05, 8.401400000000031e-05, 8.365299999999604e-05, 8.354199999999895e-05, 8.343000000000239e-05, 8.35970000000047e-05, 8.426400000000056e-05, 8.386099999999758e-05, 8.376400000000006e-05, 8.41669999999961e-05, 8.338900000000316e-05, 8.426300000000109e-05, 8.337500000000359e-05, 8.38049999999993e-05, 8.401400000000031e-05, 8.362500000000384e-05, 8.390299999999629e-05, 8.41249999999974e-05, 8.404199999999945e-05, 8.381999999999834e-05, 8.354099999999948e-05, 8.375000000000049e-05, 8.383400000000485e-05, 8.395799999999509e-05, 8.334700000000445e-05, 8.387500000000409e-05, 8.425000000000099e-05, 8.369500000000168e-05, 8.394500000000193e-05, 8.41249999999974e-05, 8.372300000000082e-05, 8.424999999999405e-05, 8.407000000000553e-05, 8.409799999999773e-05, 8.39590000000015e-05, 8.41799999999962e-05, 8.361100000000427e-05, 8.365299999999604e-05, 8.406899999999912e-05, 8.359699999999776e-05, 8.375000000000049e-05, 8.420800000000228e-05, 8.411100000000477e-05, 8.36249999999969e-05, 8.330599999999827e-05, 8.405599999999902e-05, 8.341600000000282e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.406" endtime="20201117 14:42:12.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.395" endtime="20201117 14:42:12.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.418" endtime="20201117 14:42:12.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.427" endtime="20201117 14:42:12.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.423" endtime="20201117 14:42:12.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.414" endtime="20201117 14:42:12.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.897" endtime="20201117 14:42:12.452"></status>
</kw>
<msg timestamp="20201117 14:42:12.453" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.475" endtime="20201117 14:42:12.496"></status>
</kw>
<msg timestamp="20201117 14:42:12.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.471" endtime="20201117 14:42:12.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.500" endtime="20201117 14:42:12.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.507" endtime="20201117 14:42:12.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.464" endtime="20201117 14:42:12.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.458" endtime="20201117 14:42:12.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.531" endtime="20201117 14:42:12.869"></status>
</kw>
<msg timestamp="20201117 14:42:12.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.527" endtime="20201117 14:42:12.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.879" endtime="20201117 14:42:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.898" endtime="20201117 14:42:12.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.520" endtime="20201117 14:42:12.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.515" endtime="20201117 14:42:12.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.917" level="INFO">${RESULT} = [{'time': 0.041345319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.358299999999819e-05, 'source_diff': 8.358299999999819e-05}, {'time': 0.041445347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.908" endtime="20201117 14:42:12.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.951" level="INFO">${ACCURACY} = {'source_diff': [8.358299999999819e-05, 8.391600000000332e-05, 8.412500000000434e-05, 8.338899999999622e-05, 8.406999999999859e-05, 8.337500000000359e-05, 8.406899999999912e-05, 8.352799999999938e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:12.919" endtime="20201117 14:42:12.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.962" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.959" endtime="20201117 14:42:12.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.967" level="INFO">VALUE: [8.358299999999819e-05, 8.391600000000332e-05, 8.412500000000434e-05, 8.338899999999622e-05, 8.406999999999859e-05, 8.337500000000359e-05, 8.406899999999912e-05, 8.352799999999938e-05, 8.426400000000056e-05, 8.362500000000384e-05, 8.41390000000039e-05, 8.337500000000359e-05, 8.405499999999955e-05, 8.368100000000211e-05, 8.338900000000316e-05, 8.422199999999491e-05, 8.416700000000304e-05, 8.415300000000348e-05, 8.398599999999423e-05, 8.35970000000047e-05, 8.348600000000067e-05, 8.338899999999622e-05, 8.344500000000143e-05, 8.39869999999937e-05, 8.355499999999905e-05, 8.373600000000092e-05, 8.356899999999862e-05, 8.405599999999902e-05, 8.386099999999758e-05, 8.366700000000254e-05, 8.336099999999708e-05, 8.419500000000218e-05, 8.375000000000049e-05, 8.359799999999723e-05, 8.341699999999536e-05, 8.390199999999681e-05, 8.394399999999552e-05, 8.337499999999665e-05, 8.337500000000359e-05, 8.3846999999998e-05, 8.35970000000047e-05, 8.345800000000153e-05, 8.420799999999534e-05, 8.416599999999663e-05, 8.366700000000254e-05, 8.359800000000417e-05, 8.381999999999834e-05, 8.391600000000332e-05, 8.376400000000006e-05, 8.33469999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.964" endtime="20201117 14:42:12.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.953" endtime="20201117 14:42:12.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.976" endtime="20201117 14:42:12.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.984" endtime="20201117 14:42:13.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.980" endtime="20201117 14:42:13.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.971" endtime="20201117 14:42:13.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.454" endtime="20201117 14:42:13.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.893" endtime="20201117 14:42:13.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.892" endtime="20201117 14:42:13.011"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.016" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.039" endtime="20201117 14:42:13.061"></status>
</kw>
<msg timestamp="20201117 14:42:13.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.035" endtime="20201117 14:42:13.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.065" endtime="20201117 14:42:13.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.071" endtime="20201117 14:42:13.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.027" endtime="20201117 14:42:13.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.022" endtime="20201117 14:42:13.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.095" endtime="20201117 14:42:13.436"></status>
</kw>
<msg timestamp="20201117 14:42:13.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047832333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047917347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.091" endtime="20201117 14:42:13.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047832333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047917347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.446" endtime="20201117 14:42:13.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.465" endtime="20201117 14:42:13.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.084" endtime="20201117 14:42:13.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.079" endtime="20201117 14:42:13.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.555" level="INFO">${RESULT} = [{'time': 0.047917347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.501400000000131e-05, 'source_diff': 8.501400000000131e-05}, {'time': 0.048014375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:13.546" endtime="20201117 14:42:13.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.586" level="INFO">${ACCURACY} = {'source_diff': [8.501400000000131e-05, 8.488899999999772e-05, 8.483299999999944e-05, 8.463899999999747e-05, 8.52920000000007e-05, 8.454199999999995e-05, 8.463899999999747e-05, 8.495899999999557e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:13.557" endtime="20201117 14:42:13.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.597" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.594" endtime="20201117 14:42:13.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.602" level="INFO">VALUE: [8.501400000000131e-05, 8.488899999999772e-05, 8.483299999999944e-05, 8.463899999999747e-05, 8.52920000000007e-05, 8.454199999999995e-05, 8.463899999999747e-05, 8.495899999999557e-05, 8.432000000000578e-05, 8.466600000000407e-05, 8.473599999999498e-05, 8.504200000000045e-05, 8.491600000000432e-05, 8.431899999999937e-05, 8.51669999999971e-05, 8.472200000000235e-05, 8.440299999999679e-05, 8.46249999999979e-05, 8.427800000000013e-05, 8.494399999999652e-05, 8.502800000000088e-05, 8.511099999999883e-05, 8.488899999999772e-05, 8.43469999999985e-05, 8.431899999999937e-05, 8.525000000000199e-05, 8.448599999999473e-05, 8.433400000000535e-05, 8.491699999999686e-05, 8.433399999999841e-05, 8.498600000000217e-05, 8.52920000000007e-05, 8.483299999999944e-05, 8.486099999999858e-05, 8.461099999999833e-05, 8.470800000000278e-05, 8.50129999999949e-05, 8.441699999999636e-05, 8.481899999999987e-05, 8.525000000000199e-05, 8.497199999999566e-05, 8.51390000000049e-05, 8.515199999999806e-05, 8.452800000000038e-05, 8.465199999999756e-05, 8.493000000000389e-05, 8.51249999999984e-05, 8.51249999999984e-05, 8.49720000000026e-05, 8.516700000000405e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.599" endtime="20201117 14:42:13.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.587" endtime="20201117 14:42:13.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.611" endtime="20201117 14:42:13.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.619" endtime="20201117 14:42:13.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.615" endtime="20201117 14:42:13.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.606" endtime="20201117 14:42:13.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.018" endtime="20201117 14:42:13.645"></status>
</kw>
<msg timestamp="20201117 14:42:13.646" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.669" endtime="20201117 14:42:13.691"></status>
</kw>
<msg timestamp="20201117 14:42:13.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.664" endtime="20201117 14:42:13.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.695" endtime="20201117 14:42:13.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.701" endtime="20201117 14:42:13.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.657" endtime="20201117 14:42:13.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.651" endtime="20201117 14:42:13.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.724" endtime="20201117 14:42:14.017"></status>
</kw>
<msg timestamp="20201117 14:42:14.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043230236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.721" endtime="20201117 14:42:14.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043230236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.021" endtime="20201117 14:42:14.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.030" endtime="20201117 14:42:14.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.714" endtime="20201117 14:42:14.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.709" endtime="20201117 14:42:14.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.038" level="INFO">${RESULT} = [{'time': 0.043314569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.433299999999894e-05, 'source_diff': 8.433299999999894e-05}, {'time': 0.043416583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.034" endtime="20201117 14:42:14.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.051" level="INFO">${ACCURACY} = {'source_diff': [8.433299999999894e-05, 8.466600000000407e-05, 8.454100000000048e-05, 8.429100000000023e-05, 8.456899999999962e-05, 8.476399999999412e-05, 8.518100000000361e-05, 8.433299999999894e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:14.039" endtime="20201117 14:42:14.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.057" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.056" endtime="20201117 14:42:14.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.059" level="INFO">VALUE: [8.433299999999894e-05, 8.466600000000407e-05, 8.454100000000048e-05, 8.429100000000023e-05, 8.456899999999962e-05, 8.476399999999412e-05, 8.518100000000361e-05, 8.433299999999894e-05, 8.465300000000398e-05, 8.493099999999643e-05, 8.459799999999823e-05, 8.49170000000038e-05, 8.515199999999806e-05, 8.43469999999985e-05, 8.487499999999815e-05, 8.47920000000002e-05, 8.495799999999609e-05, 8.51669999999971e-05, 8.427800000000013e-05, 8.501399999999437e-05, 8.518099999999668e-05, 8.486099999999858e-05, 8.472300000000182e-05, 8.470800000000278e-05, 8.498599999999523e-05, 8.483299999999944e-05, 8.525000000000199e-05, 8.518100000000361e-05, 8.461100000000527e-05, 8.454199999999995e-05, 8.504200000000045e-05, 8.454199999999995e-05, 8.491699999999686e-05, 8.504200000000045e-05, 8.441599999999688e-05, 8.486099999999858e-05, 8.477700000000116e-05, 8.466600000000407e-05, 8.462500000000484e-05, 8.445800000000253e-05, 8.430599999999927e-05, 8.461099999999833e-05, 8.44170000000033e-05, 8.43190000000063e-05, 8.505600000000002e-05, 8.470900000000225e-05, 8.46249999999979e-05, 8.437499999999765e-05, 8.466599999999713e-05, 8.511099999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.058" endtime="20201117 14:42:14.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.052" endtime="20201117 14:42:14.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.064" endtime="20201117 14:42:14.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.068" endtime="20201117 14:42:14.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.066" endtime="20201117 14:42:14.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.061" endtime="20201117 14:42:14.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.647" endtime="20201117 14:42:14.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.014" endtime="20201117 14:42:14.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.012" endtime="20201117 14:42:14.089"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.092" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.102" endtime="20201117 14:42:14.122"></status>
</kw>
<msg timestamp="20201117 14:42:14.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.100" endtime="20201117 14:42:14.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.123" endtime="20201117 14:42:14.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.126" endtime="20201117 14:42:14.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.097" endtime="20201117 14:42:14.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.094" endtime="20201117 14:42:14.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.138" endtime="20201117 14:42:14.472"></status>
</kw>
<msg timestamp="20201117 14:42:14.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027892139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027978125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.136" endtime="20201117 14:42:14.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027892139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027978125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.482" endtime="20201117 14:42:14.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.501" endtime="20201117 14:42:14.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.133" endtime="20201117 14:42:14.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.130" endtime="20201117 14:42:14.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.519" level="INFO">${RESULT} = [{'time': 0.027978125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.59859999999997e-05, 'source_diff': 8.59859999999997e-05}, {'time': 0.028084153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:14.510" endtime="20201117 14:42:14.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.550" level="INFO">${ACCURACY} = {'source_diff': [8.59859999999997e-05, 8.570899999999979e-05, 8.538900000000169e-05, 8.604199999999798e-05, 8.611099999999983e-05, 8.597300000000307e-05, 8.627800000000213e-05, 8.600000000000274e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:14.521" endtime="20201117 14:42:14.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.561" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.559" endtime="20201117 14:42:14.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.567" level="INFO">VALUE: [8.59859999999997e-05, 8.570899999999979e-05, 8.538900000000169e-05, 8.604199999999798e-05, 8.611099999999983e-05, 8.597300000000307e-05, 8.627800000000213e-05, 8.600000000000274e-05, 8.611099999999983e-05, 8.56669999999976e-05, 8.587499999999915e-05, 8.583299999999697e-05, 8.551399999999834e-05, 8.52920000000007e-05, 8.554200000000095e-05, 8.524999999999852e-05, 8.52920000000007e-05, 8.583399999999991e-05, 8.588900000000219e-05, 8.61799999999982e-05, 8.591699999999786e-05, 8.581900000000087e-05, 8.569400000000074e-05, 8.53059999999968e-05, 8.588899999999872e-05, 8.608400000000016e-05, 8.618099999999768e-05, 8.608400000000016e-05, 8.531999999999984e-05, 8.559699999999976e-05, 8.615199999999906e-05, 8.594400000000099e-05, 8.605499999999808e-05, 8.536099999999908e-05, 8.609700000000026e-05, 8.540299999999779e-05, 8.565299999999804e-05, 8.587500000000609e-05, 8.548700000000214e-05, 8.61799999999982e-05, 8.590300000000523e-05, 8.611099999999983e-05, 8.533299999999994e-05, 8.537499999999865e-05, 8.53050000000008e-05, 8.56249999999989e-05, 8.611099999999983e-05, 8.559699999999976e-05, 8.569499999999675e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.564" endtime="20201117 14:42:14.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.552" endtime="20201117 14:42:14.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.577" endtime="20201117 14:42:14.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.586" endtime="20201117 14:42:14.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.581" endtime="20201117 14:42:14.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.573" endtime="20201117 14:42:14.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.093" endtime="20201117 14:42:14.612"></status>
</kw>
<msg timestamp="20201117 14:42:14.612" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.634" endtime="20201117 14:42:14.656"></status>
</kw>
<msg timestamp="20201117 14:42:14.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.631" endtime="20201117 14:42:14.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.659" endtime="20201117 14:42:14.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.666" endtime="20201117 14:42:14.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.623" endtime="20201117 14:42:14.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.618" endtime="20201117 14:42:14.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.691" endtime="20201117 14:42:15.029"></status>
</kw>
<msg timestamp="20201117 14:42:15.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041654417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.687" endtime="20201117 14:42:15.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041654417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.039" endtime="20201117 14:42:15.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.058" endtime="20201117 14:42:15.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.678" endtime="20201117 14:42:15.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.674" endtime="20201117 14:42:15.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.075" level="INFO">${RESULT} = [{'time': 0.041654417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.572299999999589e-05, 'source_diff': 8.572299999999589e-05}, {'time': 0.041761431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:15.066" endtime="20201117 14:42:15.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.106" level="INFO">${ACCURACY} = {'source_diff': [8.572299999999589e-05, 8.59170000000048e-05, 8.602800000000188e-05, 8.616599999999863e-05, 8.590199999999881e-05, 8.552700000000191e-05, 8.568099999999718e-05, 8.586099999999958e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:15.077" endtime="20201117 14:42:15.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.118" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.115" endtime="20201117 14:42:15.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.123" level="INFO">VALUE: [8.572299999999589e-05, 8.59170000000048e-05, 8.602800000000188e-05, 8.616599999999863e-05, 8.590199999999881e-05, 8.552700000000191e-05, 8.568099999999718e-05, 8.586099999999958e-05, 8.57920000000012e-05, 8.570800000000378e-05, 8.580600000000077e-05, 8.619500000000418e-05, 8.608300000000069e-05, 8.538899999999822e-05, 8.586099999999958e-05, 8.615199999999906e-05, 8.61249999999994e-05, 8.59999999999958e-05, 8.577800000000163e-05, 8.572199999999641e-05, 8.611099999999983e-05, 8.598600000000317e-05, 8.533399999999941e-05, 8.61249999999994e-05, 8.557000000000009e-05, 8.59999999999958e-05, 8.533299999999994e-05, 8.598599999999623e-05, 8.533300000000688e-05, 8.609700000000026e-05, 8.601400000000231e-05, 8.559699999999976e-05, 8.573599999999598e-05, 8.550000000000224e-05, 8.56669999999976e-05, 8.579100000000173e-05, 8.602799999999494e-05, 8.52920000000007e-05, 8.559699999999976e-05, 8.52920000000007e-05, 8.615299999999854e-05, 8.59170000000048e-05, 8.541699999999736e-05, 8.573599999999598e-05, 8.530600000000027e-05, 8.52920000000007e-05, 8.569500000000368e-05, 8.608300000000069e-05, 8.601400000000231e-05, 8.594399999999752e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.120" endtime="20201117 14:42:15.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.108" endtime="20201117 14:42:15.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.133" endtime="20201117 14:42:15.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.141" endtime="20201117 14:42:15.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.137" endtime="20201117 14:42:15.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.128" endtime="20201117 14:42:15.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.614" endtime="20201117 14:42:15.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.091" endtime="20201117 14:42:15.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.090" endtime="20201117 14:42:15.168"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.173" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.195" endtime="20201117 14:42:15.217"></status>
</kw>
<msg timestamp="20201117 14:42:15.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.191" endtime="20201117 14:42:15.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.220" endtime="20201117 14:42:15.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.226" endtime="20201117 14:42:15.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.184" endtime="20201117 14:42:15.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.178" endtime="20201117 14:42:15.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.253" endtime="20201117 14:42:15.591"></status>
</kw>
<msg timestamp="20201117 14:42:15.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047046486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047133028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.247" endtime="20201117 14:42:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047046486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047133028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.601" endtime="20201117 14:42:15.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.620" endtime="20201117 14:42:15.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.239" endtime="20201117 14:42:15.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.235" endtime="20201117 14:42:15.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.638" level="INFO">${RESULT} = [{'time': 0.047133028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.654200000000195e-05, 'source_diff': 8.654200000000195e-05}, {'time': 0.047237028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:15.629" endtime="20201117 14:42:15.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.668" level="INFO">${ACCURACY} = {'source_diff': [8.654200000000195e-05, 8.659700000000076e-05, 8.626400000000256e-05, 8.636100000000008e-05, 8.66119999999998e-05, 8.659700000000076e-05, 8.691599999999938e-05, 8.661100000000033e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:15.640" endtime="20201117 14:42:15.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.679" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.677" endtime="20201117 14:42:15.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.686" level="INFO">VALUE: [8.654200000000195e-05, 8.659700000000076e-05, 8.626400000000256e-05, 8.636100000000008e-05, 8.66119999999998e-05, 8.659700000000076e-05, 8.691599999999938e-05, 8.661100000000033e-05, 8.668099999999818e-05, 8.669400000000521e-05, 8.631900000000137e-05, 8.722300000000432e-05, 8.66249999999999e-05, 8.713899999999997e-05, 8.713899999999997e-05, 8.70129999999969e-05, 8.644399999999802e-05, 8.640199999999931e-05, 8.66249999999999e-05, 8.651399999999587e-05, 8.687500000000015e-05, 8.633399999999347e-05, 8.707000000000159e-05, 8.632000000000084e-05, 8.663899999999947e-05, 8.636100000000008e-05, 8.709800000000073e-05, 8.706900000000212e-05, 8.676300000000359e-05, 8.640199999999931e-05, 8.650000000000324e-05, 8.697199999999766e-05, 8.659700000000076e-05, 8.719400000000571e-05, 8.648599999999673e-05, 8.666700000000555e-05, 8.6847000000001e-05, 8.690299999999929e-05, 8.690299999999929e-05, 8.668099999999818e-05, 8.677699999999622e-05, 8.722199999999791e-05, 8.636100000000008e-05, 8.71250000000004e-05, 8.697199999999766e-05, 8.715300000000648e-05, 8.707000000000159e-05, 8.688899999999972e-05, 8.652799999999544e-05, 8.718099999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.682" endtime="20201117 14:42:15.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.670" endtime="20201117 14:42:15.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.695" endtime="20201117 14:42:15.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.703" endtime="20201117 14:42:15.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.698" endtime="20201117 14:42:15.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.690" endtime="20201117 14:42:15.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.174" endtime="20201117 14:42:15.729"></status>
</kw>
<msg timestamp="20201117 14:42:15.729" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.751" endtime="20201117 14:42:15.774"></status>
</kw>
<msg timestamp="20201117 14:42:15.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.747" endtime="20201117 14:42:15.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.777" endtime="20201117 14:42:15.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.783" endtime="20201117 14:42:15.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.740" endtime="20201117 14:42:15.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.734" endtime="20201117 14:42:15.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.807" endtime="20201117 14:42:16.147"></status>
</kw>
<msg timestamp="20201117 14:42:16.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.804" endtime="20201117 14:42:16.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.157" endtime="20201117 14:42:16.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.176" endtime="20201117 14:42:16.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.796" endtime="20201117 14:42:16.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.792" endtime="20201117 14:42:16.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.194" level="INFO">${RESULT} = [{'time': 0.041568125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695799999999809e-05, 'source_diff': 8.695799999999809e-05}, {'time': 0.041664111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.185" endtime="20201117 14:42:16.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.225" level="INFO">${ACCURACY} = {'source_diff': [8.695799999999809e-05, 8.720799999999834e-05, 8.668099999999818e-05, 8.630600000000127e-05, 8.705600000000202e-05, 8.71250000000004e-05, 8.701300000000384e-05, 8.6944999999998e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:42:16.196" endtime="20201117 14:42:16.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.242" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.240" endtime="20201117 14:42:16.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.248" level="INFO">VALUE: [8.695799999999809e-05, 8.720799999999834e-05, 8.668099999999818e-05, 8.630600000000127e-05, 8.705600000000202e-05, 8.71250000000004e-05, 8.701300000000384e-05, 8.6944999999998e-05, 8.650000000000324e-05, 8.629100000000223e-05, 8.641599999999888e-05, 8.704099999999604e-05, 8.711100000000083e-05, 8.693099999999843e-05, 8.690299999999929e-05, 8.69720000000046e-05, 8.641699999999836e-05, 8.713799999999355e-05, 8.706900000000212e-05, 8.727700000000366e-05, 8.716600000000657e-05, 8.706900000000212e-05, 8.701399999999637e-05, 8.705600000000202e-05, 8.64999999999963e-05, 8.679199999999526e-05, 8.632000000000084e-05, 8.684800000000048e-05, 8.658400000000066e-05, 8.622300000000332e-05, 8.656900000000162e-05, 8.665299999999904e-05, 8.669400000000521e-05, 8.705499999999561e-05, 8.63050000000018e-05, 8.640300000000573e-05, 8.706900000000212e-05, 8.71799999999992e-05, 8.634799999999998e-05, 8.64170000000053e-05, 8.718099999999868e-05, 8.637499999999965e-05, 8.636199999999955e-05, 8.629099999999529e-05, 8.695800000000503e-05, 8.641600000000582e-05, 8.637499999999965e-05, 8.650000000000324e-05, 8.720800000000528e-05, 8.632000000000084e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.244" endtime="20201117 14:42:16.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.233" endtime="20201117 14:42:16.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.256" endtime="20201117 14:42:16.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.265" endtime="20201117 14:42:16.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.260" endtime="20201117 14:42:16.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.252" endtime="20201117 14:42:16.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.730" endtime="20201117 14:42:16.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.170" endtime="20201117 14:42:16.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.168" endtime="20201117 14:42:16.291"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.297" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.319" endtime="20201117 14:42:16.342"></status>
</kw>
<msg timestamp="20201117 14:42:16.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.316" endtime="20201117 14:42:16.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.346" endtime="20201117 14:42:16.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.352" endtime="20201117 14:42:16.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.308" endtime="20201117 14:42:16.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.302" endtime="20201117 14:42:16.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.376" endtime="20201117 14:42:16.716"></status>
</kw>
<msg timestamp="20201117 14:42:16.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048129639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048217236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.372" endtime="20201117 14:42:16.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048129639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048217236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.725" endtime="20201117 14:42:16.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.744" endtime="20201117 14:42:16.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.365" endtime="20201117 14:42:16.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.360" endtime="20201117 14:42:16.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.763" level="INFO">${RESULT} = [{'time': 0.048217236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.759699999999482e-05, 'source_diff': 8.759699999999482e-05}, {'time': 0.048317222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.754" endtime="20201117 14:42:16.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.793" level="INFO">${ACCURACY} = {'source_diff': [8.759699999999482e-05, 8.820799999999934e-05, 8.745799999999859e-05, 8.740299999999979e-05, 8.772199999999841e-05, 8.802800000000388e-05, 8.784700000000201e-05, 8.74999999999973e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:16.765" endtime="20201117 14:42:16.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.804" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.802" endtime="20201117 14:42:16.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.810" level="INFO">VALUE: [8.759699999999482e-05, 8.820799999999934e-05, 8.745799999999859e-05, 8.740299999999979e-05, 8.772199999999841e-05, 8.802800000000388e-05, 8.784700000000201e-05, 8.74999999999973e-05, 8.780599999999583e-05, 8.81250000000014e-05, 8.81120000000013e-05, 8.770800000000578e-05, 8.81659999999937e-05, 8.745799999999859e-05, 8.745799999999859e-05, 8.743099999999893e-05, 8.786100000000158e-05, 8.807000000000259e-05, 8.823699999999796e-05, 8.755600000000252e-05, 8.748599999999773e-05, 8.81250000000014e-05, 8.783300000000244e-05, 8.781900000000287e-05, 8.808300000000269e-05, 8.772199999999841e-05, 8.822199999999891e-05, 8.747299999999764e-05, 8.730600000000227e-05, 8.7944999999999e-05, 8.772200000000535e-05, 8.788900000000072e-05, 8.736100000000108e-05, 8.825000000000499e-05, 8.774999999999755e-05, 8.779099999999679e-05, 8.777800000000363e-05, 8.736100000000108e-05, 8.809700000000226e-05, 8.782000000000234e-05, 8.822299999999839e-05, 8.797199999999866e-05, 8.805600000000302e-05, 8.822199999999891e-05, 8.809700000000226e-05, 8.795799999999909e-05, 8.811100000000183e-05, 8.727799999999619e-05, 8.765300000000004e-05, 8.823599999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.807" endtime="20201117 14:42:16.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.795" endtime="20201117 14:42:16.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.819" endtime="20201117 14:42:16.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.827" endtime="20201117 14:42:16.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.823" endtime="20201117 14:42:16.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.814" endtime="20201117 14:42:16.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.298" endtime="20201117 14:42:16.853"></status>
</kw>
<msg timestamp="20201117 14:42:16.853" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.875" endtime="20201117 14:42:16.897"></status>
</kw>
<msg timestamp="20201117 14:42:16.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.872" endtime="20201117 14:42:16.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.901" endtime="20201117 14:42:16.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.907" endtime="20201117 14:42:16.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.865" endtime="20201117 14:42:16.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.859" endtime="20201117 14:42:16.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.931" endtime="20201117 14:42:17.271"></status>
</kw>
<msg timestamp="20201117 14:42:17.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041475569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041563528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.927" endtime="20201117 14:42:17.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041475569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041563528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.280" endtime="20201117 14:42:17.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.300" endtime="20201117 14:42:17.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.920" endtime="20201117 14:42:17.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.915" endtime="20201117 14:42:17.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.319" level="INFO">${RESULT} = [{'time': 0.041563528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.79590000000055e-05, 'source_diff': 8.79590000000055e-05}, {'time': 0.041668542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:17.310" endtime="20201117 14:42:17.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.350" level="INFO">${ACCURACY} = {'source_diff': [8.79590000000055e-05, 8.765300000000004e-05, 8.737500000000065e-05, 8.733300000000194e-05, 8.81250000000014e-05, 8.791600000000038e-05, 8.763900000000047e-05, 8.729100000000323e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:17.321" endtime="20201117 14:42:17.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.362" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.359" endtime="20201117 14:42:17.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.368" level="INFO">VALUE: [8.79590000000055e-05, 8.765300000000004e-05, 8.737500000000065e-05, 8.733300000000194e-05, 8.81250000000014e-05, 8.791600000000038e-05, 8.763900000000047e-05, 8.729100000000323e-05, 8.750000000000424e-05, 8.794399999999952e-05, 8.774999999999755e-05, 8.776399999999712e-05, 8.738900000000022e-05, 8.745799999999859e-05, 8.755599999999558e-05, 8.792999999999995e-05, 8.806900000000312e-05, 8.811100000000183e-05, 8.741699999999936e-05, 8.747199999999816e-05, 8.775000000000449e-05, 8.775000000000449e-05, 8.736100000000108e-05, 8.768099999999918e-05, 8.740200000000031e-05, 8.74999999999973e-05, 8.784700000000201e-05, 8.772200000000535e-05, 8.784700000000201e-05, 8.744399999999902e-05, 8.76250000000009e-05, 8.774999999999755e-05, 8.787500000000115e-05, 8.826300000000509e-05, 8.813900000000097e-05, 8.737500000000065e-05, 8.750000000000424e-05, 8.726399999999662e-05, 8.773599999999798e-05, 8.729100000000323e-05, 8.801399999999737e-05, 8.820799999999934e-05, 8.786099999999464e-05, 8.794399999999952e-05, 8.72920000000027e-05, 8.808399999999522e-05, 8.773600000000492e-05, 8.815300000000054e-05, 8.804100000000398e-05, 8.820799999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.364" endtime="20201117 14:42:17.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.352" endtime="20201117 14:42:17.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.377" endtime="20201117 14:42:17.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.386" endtime="20201117 14:42:17.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.381" endtime="20201117 14:42:17.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.372" endtime="20201117 14:42:17.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.855" endtime="20201117 14:42:17.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.294" endtime="20201117 14:42:17.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.292" endtime="20201117 14:42:17.408"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.411" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.421" endtime="20201117 14:42:17.440"></status>
</kw>
<msg timestamp="20201117 14:42:17.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.419" endtime="20201117 14:42:17.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.442" endtime="20201117 14:42:17.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.445" endtime="20201117 14:42:17.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.416" endtime="20201117 14:42:17.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.413" endtime="20201117 14:42:17.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.456" endtime="20201117 14:42:17.743"></status>
</kw>
<msg timestamp="20201117 14:42:17.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027133431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027222708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.454" endtime="20201117 14:42:17.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027133431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027222708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.747" endtime="20201117 14:42:17.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.755" endtime="20201117 14:42:17.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.451" endtime="20201117 14:42:17.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.448" endtime="20201117 14:42:17.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.764" level="INFO">${RESULT} = [{'time': 0.027222708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.927700000000219e-05, 'source_diff': 8.927700000000219e-05}, {'time': 0.027322694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:17.760" endtime="20201117 14:42:17.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.777" level="INFO">${ACCURACY} = {'source_diff': [8.927700000000219e-05, 8.906900000000065e-05, 8.888900000000172e-05, 8.875000000000202e-05, 8.84860000000022e-05, 8.887499999999868e-05, 8.88190000000004e-05, 8.844400000000002e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:17.765" endtime="20201117 14:42:17.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.783" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.781" endtime="20201117 14:42:17.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.785" level="INFO">VALUE: [8.927700000000219e-05, 8.906900000000065e-05, 8.888900000000172e-05, 8.875000000000202e-05, 8.84860000000022e-05, 8.887499999999868e-05, 8.88190000000004e-05, 8.844400000000002e-05, 8.891700000000086e-05, 8.841700000000036e-05, 8.861099999999886e-05, 8.84730000000021e-05, 8.841700000000036e-05, 8.920800000000034e-05, 8.833299999999947e-05, 8.897199999999966e-05, 8.891699999999739e-05, 8.847199999999916e-05, 8.858299999999972e-05, 8.847199999999916e-05, 8.861099999999886e-05, 8.841599999999741e-05, 8.893099999999696e-05, 8.831999999999937e-05, 8.919400000000077e-05, 8.830499999999686e-05, 8.88190000000004e-05, 8.898599999999923e-05, 8.838899999999775e-05, 8.834699999999904e-05, 8.895800000000009e-05, 8.838900000000122e-05, 8.829200000000023e-05, 8.923599999999948e-05, 8.869499999999975e-05, 8.844500000000297e-05, 8.838900000000122e-05, 8.923599999999948e-05, 8.915300000000154e-05, 8.902800000000141e-05, 8.875000000000202e-05, 8.919500000000025e-05, 8.86670000000006e-05, 8.89999999999988e-05, 8.905599999999708e-05, 8.923599999999948e-05, 8.887499999999521e-05, 8.88050000000043e-05, 8.924999999999905e-05, 8.906899999999718e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.784" endtime="20201117 14:42:17.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.778" endtime="20201117 14:42:17.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.789" endtime="20201117 14:42:17.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.793" endtime="20201117 14:42:17.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.791" endtime="20201117 14:42:17.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.787" endtime="20201117 14:42:17.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.411" endtime="20201117 14:42:17.814"></status>
</kw>
<msg timestamp="20201117 14:42:17.815" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.825" endtime="20201117 14:42:17.844"></status>
</kw>
<msg timestamp="20201117 14:42:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.823" endtime="20201117 14:42:17.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.845" endtime="20201117 14:42:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.849" endtime="20201117 14:42:17.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.820" endtime="20201117 14:42:17.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.817" endtime="20201117 14:42:17.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.860" endtime="20201117 14:42:18.192"></status>
</kw>
<msg timestamp="20201117 14:42:18.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.858" endtime="20201117 14:42:18.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.201" endtime="20201117 14:42:18.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.220" endtime="20201117 14:42:18.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.855" endtime="20201117 14:42:18.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.853" endtime="20201117 14:42:18.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.239" level="INFO">${RESULT} = [{'time': 0.024205931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.924999999999905e-05, 'source_diff': 8.924999999999905e-05}, {'time': 0.024302861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:18.230" endtime="20201117 14:42:18.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.270" level="INFO">${ACCURACY} = {'source_diff': [8.924999999999905e-05, 8.840299999999732e-05, 8.901400000000184e-05, 8.919400000000077e-05, 8.83059999999998e-05, 8.852800000000091e-05, 8.84730000000021e-05, 8.831999999999937e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:18.241" endtime="20201117 14:42:18.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.281" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.278" endtime="20201117 14:42:18.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.286" level="INFO">VALUE: [8.924999999999905e-05, 8.840299999999732e-05, 8.901400000000184e-05, 8.919400000000077e-05, 8.83059999999998e-05, 8.852800000000091e-05, 8.84730000000021e-05, 8.831999999999937e-05, 8.920899999999982e-05, 8.850000000000177e-05, 8.904100000000151e-05, 8.883299999999997e-05, 8.890299999999782e-05, 8.850000000000177e-05, 8.861099999999886e-05, 8.891700000000086e-05, 8.895800000000009e-05, 8.850000000000177e-05, 8.919500000000025e-05, 8.902799999999794e-05, 8.880499999999736e-05, 8.915300000000154e-05, 8.876399999999812e-05, 8.863900000000147e-05, 8.883299999999997e-05, 8.8638999999998e-05, 8.872200000000288e-05, 8.895800000000009e-05, 8.855600000000005e-05, 8.900000000000227e-05, 8.897199999999966e-05, 8.922199999999991e-05, 8.89999999999988e-05, 8.888900000000172e-05, 8.909699999999979e-05, 8.837499999999818e-05, 8.908300000000022e-05, 8.91670000000011e-05, 8.91389999999985e-05, 8.868100000000018e-05, 8.84449999999995e-05, 8.84860000000022e-05, 8.827800000000066e-05, 8.892999999999748e-05, 8.88190000000004e-05, 8.927799999999819e-05, 8.867999999999723e-05, 8.904199999999751e-05, 8.898599999999923e-05, 8.908300000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.283" endtime="20201117 14:42:18.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.272" endtime="20201117 14:42:18.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.295" endtime="20201117 14:42:18.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.304" endtime="20201117 14:42:18.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.299" endtime="20201117 14:42:18.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.290" endtime="20201117 14:42:18.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.815" endtime="20201117 14:42:18.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.409" endtime="20201117 14:42:18.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.409" endtime="20201117 14:42:18.330"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.335" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.358" endtime="20201117 14:42:18.380"></status>
</kw>
<msg timestamp="20201117 14:42:18.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.354" endtime="20201117 14:42:18.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.384" endtime="20201117 14:42:18.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.390" endtime="20201117 14:42:18.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.346" endtime="20201117 14:42:18.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.341" endtime="20201117 14:42:18.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.415" endtime="20201117 14:42:18.757"></status>
</kw>
<msg timestamp="20201117 14:42:18.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047617944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.412" endtime="20201117 14:42:18.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047617944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.767" endtime="20201117 14:42:18.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.786" endtime="20201117 14:42:18.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.404" endtime="20201117 14:42:18.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.399" endtime="20201117 14:42:18.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.804" level="INFO">${RESULT} = [{'time': 0.047707333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.938899999999528e-05, 'source_diff': 8.938899999999528e-05}, {'time': 0.047807333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:18.795" endtime="20201117 14:42:18.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.834" level="INFO">${ACCURACY} = {'source_diff': [8.938899999999528e-05, 8.993000000000195e-05, 8.988900000000272e-05, 8.970800000000084e-05, 8.9945000000001e-05, 8.982000000000434e-05, 9.006899999999818e-05, 8.968100000000118e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:18.806" endtime="20201117 14:42:18.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.845" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.843" endtime="20201117 14:42:18.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.851" level="INFO">VALUE: [8.938899999999528e-05, 8.993000000000195e-05, 8.988900000000272e-05, 8.970800000000084e-05, 8.9945000000001e-05, 8.982000000000434e-05, 9.006899999999818e-05, 8.968100000000118e-05, 8.941700000000136e-05, 8.961099999999639e-05, 8.973599999999998e-05, 9.006999999999765e-05, 8.998600000000023e-05, 9.01800000000022e-05, 9.008299999999775e-05, 8.986100000000358e-05, 9.01800000000022e-05, 8.970800000000084e-05, 8.9332999999997e-05, 9.013900000000297e-05, 9.002799999999894e-05, 8.94869999999992e-05, 8.94869999999992e-05, 9.008300000000469e-05, 9.011099999999689e-05, 8.944400000000102e-05, 9.015300000000254e-05, 8.995800000000109e-05, 9.016699999999517e-05, 8.963900000000247e-05, 8.997200000000066e-05, 8.96670000000016e-05, 8.979100000000573e-05, 9.004099999999904e-05, 8.937500000000265e-05, 8.948599999999973e-05, 8.934699999999657e-05, 9.015300000000254e-05, 8.987499999999621e-05, 8.97920000000052e-05, 8.980600000000477e-05, 8.984800000000348e-05, 9.005600000000502e-05, 8.997200000000066e-05, 8.943100000000093e-05, 9.01250000000034e-05, 8.940300000000179e-05, 8.951399999999887e-05, 9.01250000000034e-05, 8.990299999999535e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.848" endtime="20201117 14:42:18.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.836" endtime="20201117 14:42:18.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.860" endtime="20201117 14:42:18.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.868" endtime="20201117 14:42:18.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.864" endtime="20201117 14:42:18.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.855" endtime="20201117 14:42:18.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.337" endtime="20201117 14:42:18.894"></status>
</kw>
<msg timestamp="20201117 14:42:18.895" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.917" endtime="20201117 14:42:18.939"></status>
</kw>
<msg timestamp="20201117 14:42:18.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.913" endtime="20201117 14:42:18.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.943" endtime="20201117 14:42:18.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.949" endtime="20201117 14:42:18.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.906" endtime="20201117 14:42:18.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.900" endtime="20201117 14:42:18.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.973" endtime="20201117 14:42:19.311"></status>
</kw>
<msg timestamp="20201117 14:42:19.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041973583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.969" endtime="20201117 14:42:19.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041973583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.321" endtime="20201117 14:42:19.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.340" endtime="20201117 14:42:19.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.962" endtime="20201117 14:42:19.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.957" endtime="20201117 14:42:19.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.359" level="INFO">${RESULT} = [{'time': 0.041973583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.011100000000383e-05, 'source_diff': 9.011100000000383e-05}, {'time': 0.042076653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.350" endtime="20201117 14:42:19.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.390" level="INFO">${ACCURACY} = {'source_diff': [9.011100000000383e-05, 9.001399999999937e-05, 8.987499999999621e-05, 8.945800000000059e-05, 8.963900000000247e-05, 8.998600000000023e-05, 8.959699999999682e-05, 8.936199999999561e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:19.361" endtime="20201117 14:42:19.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.401" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.398" endtime="20201117 14:42:19.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.406" level="INFO">VALUE: [9.011100000000383e-05, 9.001399999999937e-05, 8.987499999999621e-05, 8.945800000000059e-05, 8.963900000000247e-05, 8.998600000000023e-05, 8.959699999999682e-05, 8.936199999999561e-05, 8.958299999999725e-05, 8.94999999999993e-05, 8.962499999999596e-05, 8.940199999999537e-05, 8.941600000000188e-05, 9.005599999999808e-05, 9.009700000000426e-05, 8.963899999999553e-05, 8.94450000000005e-05, 8.958399999999672e-05, 8.998600000000023e-05, 9.018100000000168e-05, 8.979199999999826e-05, 8.941600000000188e-05, 8.986099999999664e-05, 8.930499999999786e-05, 8.958299999999725e-05, 9.004199999999851e-05, 8.951399999999887e-05, 8.991700000000186e-05, 9.005600000000502e-05, 8.940300000000179e-05, 9.019500000000125e-05, 8.938900000000222e-05, 8.981899999999793e-05, 8.99999999999998e-05, 8.991600000000238e-05, 9.004200000000545e-05, 8.986099999999664e-05, 8.959699999999682e-05, 9.006999999999765e-05, 9.020900000000082e-05, 9.018100000000168e-05, 9.022300000000039e-05, 8.94450000000005e-05, 8.961099999999639e-05, 8.973599999999998e-05, 8.943000000000145e-05, 9.01670000000021e-05, 9.019400000000177e-05, 8.940300000000179e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.403" endtime="20201117 14:42:19.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.391" endtime="20201117 14:42:19.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.416" endtime="20201117 14:42:19.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.425" endtime="20201117 14:42:19.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.420" endtime="20201117 14:42:19.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.410" endtime="20201117 14:42:19.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.896" endtime="20201117 14:42:19.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.333" endtime="20201117 14:42:19.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.331" endtime="20201117 14:42:19.452"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.457" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.479" endtime="20201117 14:42:19.501"></status>
</kw>
<msg timestamp="20201117 14:42:19.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.476" endtime="20201117 14:42:19.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.505" endtime="20201117 14:42:19.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.511" endtime="20201117 14:42:19.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.468" endtime="20201117 14:42:19.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.463" endtime="20201117 14:42:19.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.535" endtime="20201117 14:42:19.878"></status>
</kw>
<msg timestamp="20201117 14:42:19.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047455, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:19.531" endtime="20201117 14:42:19.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047455, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:19.887" endtime="20201117 14:42:19.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.906" endtime="20201117 14:42:19.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.524" endtime="20201117 14:42:19.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.519" endtime="20201117 14:42:19.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.924" level="INFO">${RESULT} = [{'time': 0.047455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.088899999999678e-05, 'source_diff': 9.088899999999678e-05}, {'time': 0.047560014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:19.915" endtime="20201117 14:42:19.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.955" level="INFO">${ACCURACY} = {'source_diff': [9.088899999999678e-05, 9.113899999999703e-05, 9.080599999999883e-05, 9.075000000000055e-05, 9.109799999999779e-05, 9.036099999999714e-05, 9.119400000000277e-05, 9.037500000000365e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:19.926" endtime="20201117 14:42:19.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.966" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.964" endtime="20201117 14:42:19.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.972" level="INFO">VALUE: [9.088899999999678e-05, 9.113899999999703e-05, 9.080599999999883e-05, 9.075000000000055e-05, 9.109799999999779e-05, 9.036099999999714e-05, 9.119400000000277e-05, 9.037500000000365e-05, 9.036100000000408e-05, 9.113899999999703e-05, 9.036100000000408e-05, 9.10130000000009e-05, 9.0945000000002e-05, 9.076400000000012e-05, 9.098600000000123e-05, 9.116600000000363e-05, 9.11529999999966e-05, 9.108299999999875e-05, 9.047200000000116e-05, 9.123599999999454e-05, 9.036100000000408e-05, 9.061100000000433e-05, 9.123600000000148e-05, 9.070800000000184e-05, 9.104199999999951e-05, 9.056899999999868e-05, 9.038900000000322e-05, 9.093100000000243e-05, 9.058299999999825e-05, 9.038899999999628e-05, 9.042999999999551e-05, 9.026399999999962e-05, 9.081899999999893e-05, 9.061099999999739e-05, 9.065300000000304e-05, 9.088899999999678e-05, 9.11529999999966e-05, 9.079099999999979e-05, 9.051399999999987e-05, 9.098600000000123e-05, 9.095800000000209e-05, 9.095800000000209e-05, 9.12079999999954e-05, 9.093100000000243e-05, 9.10000000000008e-05, 9.061100000000433e-05, 9.11670000000031e-05, 9.112499999999746e-05, 9.063800000000399e-05, 9.038900000000322e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.969" endtime="20201117 14:42:19.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.957" endtime="20201117 14:42:19.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.982" endtime="20201117 14:42:19.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.990" endtime="20201117 14:42:20.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.986" endtime="20201117 14:42:20.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.977" endtime="20201117 14:42:20.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.459" endtime="20201117 14:42:20.016"></status>
</kw>
<msg timestamp="20201117 14:42:20.016" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.038" endtime="20201117 14:42:20.060"></status>
</kw>
<msg timestamp="20201117 14:42:20.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.035" endtime="20201117 14:42:20.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.063" endtime="20201117 14:42:20.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.070" endtime="20201117 14:42:20.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.027" endtime="20201117 14:42:20.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.022" endtime="20201117 14:42:20.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.093" endtime="20201117 14:42:20.433"></status>
</kw>
<msg timestamp="20201117 14:42:20.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.090" endtime="20201117 14:42:20.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041397583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.442" endtime="20201117 14:42:20.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.462" endtime="20201117 14:42:20.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.083" endtime="20201117 14:42:20.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.078" endtime="20201117 14:42:20.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.482" level="INFO">${RESULT} = [{'time': 0.041397583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.116600000000363e-05, 'source_diff': 9.116600000000363e-05}, {'time': 0.041508556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.473" endtime="20201117 14:42:20.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.513" level="INFO">${ACCURACY} = {'source_diff': [9.116600000000363e-05, 9.051399999999987e-05, 9.088900000000372e-05, 9.098600000000123e-05, 9.08329999999985e-05, 9.058299999999825e-05, 9.058299999999825e-05, 9.059699999999782e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:20.484" endtime="20201117 14:42:20.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.524" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.522" endtime="20201117 14:42:20.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.529" level="INFO">VALUE: [9.116600000000363e-05, 9.051399999999987e-05, 9.088900000000372e-05, 9.098600000000123e-05, 9.08329999999985e-05, 9.058299999999825e-05, 9.058299999999825e-05, 9.059699999999782e-05, 9.030599999999833e-05, 9.082000000000534e-05, 9.058299999999825e-05, 9.08199999999984e-05, 9.079199999999926e-05, 9.113900000000397e-05, 9.097199999999472e-05, 9.088900000000372e-05, 9.073600000000098e-05, 9.12079999999954e-05, 9.029199999999876e-05, 9.08329999999985e-05, 9.122199999999497e-05, 9.059800000000423e-05, 9.098600000000123e-05, 9.038899999999628e-05, 9.029100000000623e-05, 9.108299999999875e-05, 9.052699999999997e-05, 9.038900000000322e-05, 9.05000000000003e-05, 9.119400000000277e-05, 9.058299999999825e-05, 9.102799999999994e-05, 9.056999999999815e-05, 9.055499999999911e-05, 9.051399999999987e-05, 9.095900000000157e-05, 9.104100000000004e-05, 9.034699999999757e-05, 9.036100000000408e-05, 9.098600000000123e-05, 9.059699999999782e-05, 9.113900000000397e-05, 9.052799999999944e-05, 9.108399999999822e-05, 9.073700000000046e-05, 9.077799999999969e-05, 9.10000000000008e-05, 9.09859999999943e-05, 9.034699999999757e-05, 9.079099999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.526" endtime="20201117 14:42:20.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.515" endtime="20201117 14:42:20.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.539" endtime="20201117 14:42:20.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.547" endtime="20201117 14:42:20.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.543" endtime="20201117 14:42:20.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.534" endtime="20201117 14:42:20.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.018" endtime="20201117 14:42:20.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.455" endtime="20201117 14:42:20.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.453" endtime="20201117 14:42:20.574"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.579" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.601" endtime="20201117 14:42:20.624"></status>
</kw>
<msg timestamp="20201117 14:42:20.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.598" endtime="20201117 14:42:20.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.628" endtime="20201117 14:42:20.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.634" endtime="20201117 14:42:20.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.590" endtime="20201117 14:42:20.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.584" endtime="20201117 14:42:20.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.657" endtime="20201117 14:42:20.999"></status>
</kw>
<msg timestamp="20201117 14:42:21.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046967403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.654" endtime="20201117 14:42:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046967403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.009" endtime="20201117 14:42:21.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.028" endtime="20201117 14:42:21.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.647" endtime="20201117 14:42:21.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.642" endtime="20201117 14:42:21.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.046" level="INFO">${RESULT} = [{'time': 0.046967403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.183399999999897e-05, 'source_diff': 9.183399999999897e-05}, {'time': 0.047075431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.037" endtime="20201117 14:42:21.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.076" level="INFO">${ACCURACY} = {'source_diff': [9.183399999999897e-05, 9.130599999999933e-05, 9.208299999999975e-05, 9.19859999999953e-05, 9.184700000000601e-05, 9.20000000000018e-05, 9.225000000000205e-05, 9.154200000000001e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:42:21.048" endtime="20201117 14:42:21.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.087" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.085" endtime="20201117 14:42:21.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.094" level="INFO">VALUE: [9.183399999999897e-05, 9.130599999999933e-05, 9.208299999999975e-05, 9.19859999999953e-05, 9.184700000000601e-05, 9.20000000000018e-05, 9.225000000000205e-05, 9.154200000000001e-05, 9.20000000000018e-05, 9.145900000000207e-05, 9.140299999999685e-05, 9.218099999999674e-05, 9.192999999999701e-05, 9.172300000000189e-05, 9.145800000000259e-05, 9.145800000000259e-05, 9.137500000000465e-05, 9.131899999999943e-05, 9.167999999999676e-05, 9.166699999999667e-05, 9.182000000000634e-05, 9.136099999999814e-05, 9.190299999999735e-05, 9.186200000000505e-05, 9.201400000000137e-05, 9.154200000000001e-05, 9.154200000000001e-05, 9.201400000000137e-05, 9.145800000000259e-05, 9.19870000000017e-05, 9.169500000000275e-05, 9.204200000000051e-05, 9.225000000000205e-05, 9.155599999999958e-05, 9.208399999999922e-05, 9.213899999999803e-05, 9.138900000000422e-05, 9.18329999999995e-05, 9.212499999999846e-05, 9.193099999999649e-05, 9.137499999999771e-05, 9.143099999999599e-05, 9.1945000000003e-05, 9.16670000000036e-05, 9.133399999999847e-05, 9.222200000000291e-05, 9.133300000000594e-05, 9.175000000000155e-05, 9.195799999999615e-05, 9.125000000000105e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.090" endtime="20201117 14:42:21.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.078" endtime="20201117 14:42:21.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.103" endtime="20201117 14:42:21.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.111" endtime="20201117 14:42:21.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.107" endtime="20201117 14:42:21.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.098" endtime="20201117 14:42:21.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.580" endtime="20201117 14:42:21.137"></status>
</kw>
<msg timestamp="20201117 14:42:21.137" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.159" endtime="20201117 14:42:21.181"></status>
</kw>
<msg timestamp="20201117 14:42:21.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.155" endtime="20201117 14:42:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.184" endtime="20201117 14:42:21.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.191" endtime="20201117 14:42:21.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.148" endtime="20201117 14:42:21.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.142" endtime="20201117 14:42:21.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.214" endtime="20201117 14:42:21.554"></status>
</kw>
<msg timestamp="20201117 14:42:21.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.211" endtime="20201117 14:42:21.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.563" endtime="20201117 14:42:21.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.582" endtime="20201117 14:42:21.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.204" endtime="20201117 14:42:21.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.199" endtime="20201117 14:42:21.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.602" level="INFO">${RESULT} = [{'time': 0.041156944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.193000000000395e-05, 'source_diff': 9.193000000000395e-05}, {'time': 0.041266958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.592" endtime="20201117 14:42:21.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.632" level="INFO">${ACCURACY} = {'source_diff': [9.193000000000395e-05, 9.217999999999726e-05, 9.212499999999846e-05, 9.161099999999839e-05, 9.191700000000386e-05, 9.190299999999735e-05, 9.201400000000137e-05, 9.212499999999846e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:21.604" endtime="20201117 14:42:21.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.650" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.648" endtime="20201117 14:42:21.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.656" level="INFO">VALUE: [9.193000000000395e-05, 9.217999999999726e-05, 9.212499999999846e-05, 9.161099999999839e-05, 9.191700000000386e-05, 9.190299999999735e-05, 9.201400000000137e-05, 9.212499999999846e-05, 9.172300000000189e-05, 9.190199999999787e-05, 9.191700000000386e-05, 9.195799999999615e-05, 9.212499999999846e-05, 9.187499999999821e-05, 9.219400000000377e-05, 9.161099999999839e-05, 9.212499999999846e-05, 9.180599999999983e-05, 9.138900000000422e-05, 9.191599999999744e-05, 9.175000000000155e-05, 9.212499999999846e-05, 9.172200000000241e-05, 9.155599999999958e-05, 9.130599999999933e-05, 9.175000000000155e-05, 9.180500000000036e-05, 9.191699999999692e-05, 9.206900000000018e-05, 9.201400000000137e-05, 9.175000000000155e-05, 9.212499999999846e-05, 9.177699999999428e-05, 9.148600000000173e-05, 9.190300000000429e-05, 9.166600000000413e-05, 9.206999999999965e-05, 9.197200000000266e-05, 9.175000000000155e-05, 9.183400000000591e-05, 9.194499999999606e-05, 9.222300000000239e-05, 9.127700000000072e-05, 9.138899999999728e-05, 9.21659999999977e-05, 9.191599999999744e-05, 9.211099999999889e-05, 9.170800000000284e-05, 9.224999999999511e-05, 9.154200000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.653" endtime="20201117 14:42:21.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.641" endtime="20201117 14:42:21.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.665" endtime="20201117 14:42:21.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.673" endtime="20201117 14:42:21.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.669" endtime="20201117 14:42:21.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.660" endtime="20201117 14:42:21.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.138" endtime="20201117 14:42:21.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.577" endtime="20201117 14:42:21.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.575" endtime="20201117 14:42:21.700"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.705" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.727" endtime="20201117 14:42:21.749"></status>
</kw>
<msg timestamp="20201117 14:42:21.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.723" endtime="20201117 14:42:21.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.753" endtime="20201117 14:42:21.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.759" endtime="20201117 14:42:21.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.716" endtime="20201117 14:42:21.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.710" endtime="20201117 14:42:21.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.783" endtime="20201117 14:42:22.125"></status>
</kw>
<msg timestamp="20201117 14:42:22.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046839278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046931903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.779" endtime="20201117 14:42:22.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046839278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046931903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.135" endtime="20201117 14:42:22.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.154" endtime="20201117 14:42:22.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.772" endtime="20201117 14:42:22.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.767" endtime="20201117 14:42:22.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.172" level="INFO">${RESULT} = [{'time': 0.046931903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.262499999999896e-05, 'source_diff': 9.262499999999896e-05}, {'time': 0.047044861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:22.163" endtime="20201117 14:42:22.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.203" level="INFO">${ACCURACY} = {'source_diff': [9.262499999999896e-05, 9.312499999999946e-05, 9.230600000000033e-05, 9.272200000000341e-05, 9.3027999999995e-05, 9.286099999999964e-05, 9.270900000000332e-05, 9.237499999999871e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:42:22.174" endtime="20201117 14:42:22.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.214" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.212" endtime="20201117 14:42:22.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.219" level="INFO">VALUE: [9.262499999999896e-05, 9.312499999999946e-05, 9.230600000000033e-05, 9.272200000000341e-05, 9.3027999999995e-05, 9.286099999999964e-05, 9.270900000000332e-05, 9.237499999999871e-05, 9.2333e-05, 9.242999999999751e-05, 9.262499999999896e-05, 9.262499999999896e-05, 9.31529999999986e-05, 9.326400000000262e-05, 9.31529999999986e-05, 9.258399999999972e-05, 9.255600000000058e-05, 9.323599999999654e-05, 9.275000000000255e-05, 9.311099999999989e-05, 9.234699999999957e-05, 9.290299999999835e-05, 9.28330000000005e-05, 9.308400000000022e-05, 9.262499999999896e-05, 9.269500000000375e-05, 9.327800000000219e-05, 9.269400000000427e-05, 9.230600000000033e-05, 9.29870000000027e-05, 9.295799999999715e-05, 9.240199999999837e-05, 9.279100000000179e-05, 9.238900000000522e-05, 9.276400000000212e-05, 9.269499999999681e-05, 9.288899999999878e-05, 9.320900000000382e-05, 9.249999999999536e-05, 9.326300000000315e-05, 9.258399999999972e-05, 9.280500000000136e-05, 9.308299999999381e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.309700000000032e-05, 9.269499999999681e-05, 9.251399999999493e-05, 9.305500000000161e-05, 9.306899999999424e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.216" endtime="20201117 14:42:22.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.205" endtime="20201117 14:42:22.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.228" endtime="20201117 14:42:22.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.237" endtime="20201117 14:42:22.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.232" endtime="20201117 14:42:22.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.224" endtime="20201117 14:42:22.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.706" endtime="20201117 14:42:22.262"></status>
</kw>
<msg timestamp="20201117 14:42:22.263" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.285" endtime="20201117 14:42:22.307"></status>
</kw>
<msg timestamp="20201117 14:42:22.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.281" endtime="20201117 14:42:22.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.310" endtime="20201117 14:42:22.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.317" endtime="20201117 14:42:22.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.274" endtime="20201117 14:42:22.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.268" endtime="20201117 14:42:22.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.340" endtime="20201117 14:42:22.680"></status>
</kw>
<msg timestamp="20201117 14:42:22.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041247819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041340986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.337" endtime="20201117 14:42:22.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041247819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041340986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.690" endtime="20201117 14:42:22.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.709" endtime="20201117 14:42:22.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.330" endtime="20201117 14:42:22.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.325" endtime="20201117 14:42:22.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.729" level="INFO">${RESULT} = [{'time': 0.041340986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.316700000000511e-05, 'source_diff': 9.316700000000511e-05}, {'time': 0.041455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:22.719" endtime="20201117 14:42:22.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.759" level="INFO">${ACCURACY} = {'source_diff': [9.316700000000511e-05, 9.291699999999792e-05, 9.262499999999896e-05, 9.270900000000332e-05, 9.237499999999871e-05, 9.290299999999835e-05, 9.306900000000118e-05, 9.283399999999997e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:22.731" endtime="20201117 14:42:22.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.770" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.768" endtime="20201117 14:42:22.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.776" level="INFO">VALUE: [9.316700000000511e-05, 9.291699999999792e-05, 9.262499999999896e-05, 9.270900000000332e-05, 9.237499999999871e-05, 9.290299999999835e-05, 9.306900000000118e-05, 9.283399999999997e-05, 9.323600000000348e-05, 9.297200000000366e-05, 9.231900000000043e-05, 9.247199999999622e-05, 9.308300000000075e-05, 9.276400000000212e-05, 9.290299999999835e-05, 9.257000000000015e-05, 9.30000000000028e-05, 9.290199999999887e-05, 9.23879999999988e-05, 9.26659999999982e-05, 9.293000000000495e-05, 9.244399999999708e-05, 9.28330000000005e-05, 9.259699999999982e-05, 9.32079999999974e-05, 9.229200000000076e-05, 9.269500000000375e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.294400000000452e-05, 9.237499999999871e-05, 9.240299999999785e-05, 9.319399999999783e-05, 9.322200000000391e-05, 9.284700000000007e-05, 9.311100000000683e-05, 9.234699999999957e-05, 9.311099999999989e-05, 9.290299999999835e-05, 9.331999999999396e-05, 9.281900000000093e-05, 9.30000000000028e-05, 9.237499999999871e-05, 9.261099999999939e-05, 9.322199999999697e-05, 9.229199999999382e-05, 9.28200000000004e-05, 9.240299999999785e-05, 9.312499999999946e-05, 9.299999999999586e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.773" endtime="20201117 14:42:22.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.761" endtime="20201117 14:42:22.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.785" endtime="20201117 14:42:22.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.793" endtime="20201117 14:42:22.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.789" endtime="20201117 14:42:22.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.780" endtime="20201117 14:42:22.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.264" endtime="20201117 14:42:22.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.702" endtime="20201117 14:42:22.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.701" endtime="20201117 14:42:22.820"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.825" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.847" endtime="20201117 14:42:22.869"></status>
</kw>
<msg timestamp="20201117 14:42:22.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.844" endtime="20201117 14:42:22.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.873" endtime="20201117 14:42:22.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.879" endtime="20201117 14:42:22.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.836" endtime="20201117 14:42:22.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.830" endtime="20201117 14:42:22.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.903" endtime="20201117 14:42:23.245"></status>
</kw>
<msg timestamp="20201117 14:42:23.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047016361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.900" endtime="20201117 14:42:23.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047016361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.254" endtime="20201117 14:42:23.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.274" endtime="20201117 14:42:23.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.892" endtime="20201117 14:42:23.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.887" endtime="20201117 14:42:23.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.291" level="INFO">${RESULT} = [{'time': 0.047016361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.395799999999815e-05, 'source_diff': 9.395799999999815e-05}, {'time': 0.047123417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.282" endtime="20201117 14:42:23.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.322" level="INFO">${ACCURACY} = {'source_diff': [9.395799999999815e-05, 9.408400000000122e-05, 9.381999999999446e-05, 9.420899999999788e-05, 9.363899999999953e-05, 9.384700000000107e-05, 9.38059999999949e-05, 9.417999999999926e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:23.293" endtime="20201117 14:42:23.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.333" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.331" endtime="20201117 14:42:23.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.339" level="INFO">VALUE: [9.395799999999815e-05, 9.408400000000122e-05, 9.381999999999446e-05, 9.420899999999788e-05, 9.363899999999953e-05, 9.384700000000107e-05, 9.38059999999949e-05, 9.417999999999926e-05, 9.324999999999611e-05, 9.341599999999894e-05, 9.345800000000459e-05, 9.384699999999413e-05, 9.4027999999996e-05, 9.412500000000046e-05, 9.391699999999892e-05, 9.358400000000072e-05, 9.369400000000527e-05, 9.42079999999984e-05, 9.391599999999944e-05, 9.406899999999524e-05, 9.375000000000355e-05, 9.338899999999928e-05, 9.416699999999917e-05, 9.395899999999763e-05, 9.394400000000552e-05, 9.326399999999568e-05, 9.419499999999831e-05, 9.343099999999799e-05, 9.334700000000057e-05, 9.367999999999876e-05, 9.376400000000312e-05, 9.336100000000014e-05, 9.362499999999996e-05, 9.388899999999978e-05, 9.330600000000133e-05, 9.337499999999971e-05, 9.36529999999991e-05, 9.358400000000072e-05, 9.405500000000261e-05, 9.358300000000125e-05, 9.379100000000279e-05, 9.397200000000466e-05, 9.423600000000448e-05, 9.387500000000021e-05, 9.359700000000082e-05, 9.334700000000057e-05, 9.334700000000057e-05, 9.336199999999961e-05, 9.393099999999849e-05, 9.412500000000046e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.336" endtime="20201117 14:42:23.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.324" endtime="20201117 14:42:23.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.348" endtime="20201117 14:42:23.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.356" endtime="20201117 14:42:23.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.351" endtime="20201117 14:42:23.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.343" endtime="20201117 14:42:23.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.826" endtime="20201117 14:42:23.382"></status>
</kw>
<msg timestamp="20201117 14:42:23.382" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.404" endtime="20201117 14:42:23.427"></status>
</kw>
<msg timestamp="20201117 14:42:23.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.400" endtime="20201117 14:42:23.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.430" endtime="20201117 14:42:23.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.437" endtime="20201117 14:42:23.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.393" endtime="20201117 14:42:23.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.387" endtime="20201117 14:42:23.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.461" endtime="20201117 14:42:23.800"></status>
</kw>
<msg timestamp="20201117 14:42:23.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041400111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041493514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.458" endtime="20201117 14:42:23.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041400111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041493514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.810" endtime="20201117 14:42:23.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.829" endtime="20201117 14:42:23.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.450" endtime="20201117 14:42:23.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.446" endtime="20201117 14:42:23.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.848" level="INFO">${RESULT} = [{'time': 0.041493514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340299999999885e-05, 'source_diff': 9.340299999999885e-05}, {'time': 0.041608556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.839" endtime="20201117 14:42:23.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.879" level="INFO">${ACCURACY} = {'source_diff': [9.340299999999885e-05, 9.387500000000021e-05, 9.376400000000312e-05, 9.327800000000219e-05, 9.411200000000036e-05, 9.38330000000015e-05, 9.42079999999984e-05, 9.34859999999968e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:42:23.850" endtime="20201117 14:42:23.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.890" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.888" endtime="20201117 14:42:23.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.896" level="INFO">VALUE: [9.340299999999885e-05, 9.387500000000021e-05, 9.376400000000312e-05, 9.327800000000219e-05, 9.411200000000036e-05, 9.38330000000015e-05, 9.42079999999984e-05, 9.34859999999968e-05, 9.425000000000405e-05, 9.358300000000125e-05, 9.327799999999525e-05, 9.32079999999974e-05, 9.329199999999482e-05, 9.391700000000586e-05, 9.347300000000364e-05, 9.34450000000045e-05, 9.331900000000143e-05, 9.375000000000355e-05, 9.341599999999894e-05, 9.329199999999482e-05, 9.397199999999772e-05, 9.336100000000014e-05, 9.380600000000183e-05, 9.373599999999704e-05, 9.355499999999517e-05, 9.345799999999765e-05, 9.354100000000254e-05, 9.387500000000021e-05, 9.36659999999992e-05, 9.35000000000033e-05, 9.337499999999971e-05, 9.358300000000125e-05, 9.393099999999849e-05, 9.361100000000039e-05, 9.349999999999636e-05, 9.384700000000107e-05, 9.425000000000405e-05, 9.342999999999851e-05, 9.392999999999901e-05, 9.327800000000219e-05, 9.37079999999979e-05, 9.3333000000001e-05, 9.39859999999973e-05, 9.372200000000441e-05, 9.423600000000448e-05, 9.377799999999575e-05, 9.375000000000355e-05, 9.347200000000416e-05, 9.391600000000638e-05, 9.361100000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.892" endtime="20201117 14:42:23.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.881" endtime="20201117 14:42:23.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.904" endtime="20201117 14:42:23.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.913" endtime="20201117 14:42:23.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.908" endtime="20201117 14:42:23.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.900" endtime="20201117 14:42:23.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.383" endtime="20201117 14:42:23.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.822" endtime="20201117 14:42:23.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.821" endtime="20201117 14:42:23.939"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.945" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.967" endtime="20201117 14:42:23.987"></status>
</kw>
<msg timestamp="20201117 14:42:23.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.963" endtime="20201117 14:42:23.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.989" endtime="20201117 14:42:23.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.992" endtime="20201117 14:42:23.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.956" endtime="20201117 14:42:23.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.950" endtime="20201117 14:42:23.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.003" endtime="20201117 14:42:24.291"></status>
</kw>
<msg timestamp="20201117 14:42:24.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047776083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.001" endtime="20201117 14:42:24.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047776083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.295" endtime="20201117 14:42:24.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.304" endtime="20201117 14:42:24.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.998" endtime="20201117 14:42:24.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.996" endtime="20201117 14:42:24.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.312" level="INFO">${RESULT} = [{'time': 0.047776083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431899999999549e-05, 'source_diff': 9.431899999999549e-05}, {'time': 0.047886097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.308" endtime="20201117 14:42:24.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.325" level="INFO">${ACCURACY} = {'source_diff': [9.431899999999549e-05, 9.51530000000006e-05, 9.51530000000006e-05, 9.46530000000001e-05, 9.481999999999546e-05, 9.497199999999872e-05, 9.463900000000053e-05, 9.523699999999802e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:42:24.313" endtime="20201117 14:42:24.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.331" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.330" endtime="20201117 14:42:24.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.333" level="INFO">VALUE: [9.431899999999549e-05, 9.51530000000006e-05, 9.51530000000006e-05, 9.46530000000001e-05, 9.481999999999546e-05, 9.497199999999872e-05, 9.463900000000053e-05, 9.523699999999802e-05, 9.512499999999452e-05, 9.462500000000096e-05, 9.486100000000164e-05, 9.454100000000354e-05, 9.51530000000006e-05, 9.483400000000197e-05, 9.447200000000516e-05, 9.520899999999888e-05, 9.524999999999811e-05, 9.504200000000351e-05, 9.488900000000078e-05, 9.452700000000397e-05, 9.504199999999657e-05, 9.495799999999915e-05, 9.430500000000286e-05, 9.419399999999883e-05, 9.480600000000283e-05, 9.447199999999822e-05, 9.51530000000006e-05, 9.480499999999642e-05, 9.458400000000172e-05, 9.467999999999976e-05, 9.456900000000268e-05, 9.48330000000025e-05, 9.509700000000232e-05, 9.477800000000369e-05, 9.444399999999908e-05, 9.486100000000164e-05, 9.462500000000096e-05, 9.512500000000146e-05, 9.459800000000129e-05, 9.451400000000387e-05, 9.484700000000207e-05, 9.458300000000225e-05, 9.51530000000006e-05, 9.438900000000028e-05, 9.45000000000043e-05, 9.490300000000035e-05, 9.448600000000473e-05, 9.511100000000189e-05, 9.430600000000233e-05, 9.427800000000319e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.332" endtime="20201117 14:42:24.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.326" endtime="20201117 14:42:24.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.337" endtime="20201117 14:42:24.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.341" endtime="20201117 14:42:24.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.339" endtime="20201117 14:42:24.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.335" endtime="20201117 14:42:24.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.946" endtime="20201117 14:42:24.363"></status>
</kw>
<msg timestamp="20201117 14:42:24.363" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.374" endtime="20201117 14:42:24.393"></status>
</kw>
<msg timestamp="20201117 14:42:24.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.372" endtime="20201117 14:42:24.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.395" endtime="20201117 14:42:24.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.398" endtime="20201117 14:42:24.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.369" endtime="20201117 14:42:24.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.366" endtime="20201117 14:42:24.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.409" endtime="20201117 14:42:24.717"></status>
</kw>
<msg timestamp="20201117 14:42:24.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.407" endtime="20201117 14:42:24.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.727" endtime="20201117 14:42:24.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.745" endtime="20201117 14:42:24.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.404" endtime="20201117 14:42:24.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.402" endtime="20201117 14:42:24.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.765" level="INFO">${RESULT} = [{'time': 0.024820778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.525000000000158e-05, 'source_diff': 9.525000000000158e-05}, {'time': 0.024929764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.756" endtime="20201117 14:42:24.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.795" level="INFO">${ACCURACY} = {'source_diff': [9.525000000000158e-05, 9.434700000000157e-05, 9.483400000000197e-05, 9.4333999999998e-05, 9.502800000000047e-05, 9.431999999999843e-05, 9.426300000000068e-05, 9.442999999999951e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:42:24.767" endtime="20201117 14:42:24.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.806" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.804" endtime="20201117 14:42:24.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.812" level="INFO">VALUE: [9.525000000000158e-05, 9.434700000000157e-05, 9.483400000000197e-05, 9.4333999999998e-05, 9.502800000000047e-05, 9.431999999999843e-05, 9.426300000000068e-05, 9.442999999999951e-05, 9.479100000000032e-05, 9.480499999999989e-05, 9.437500000000071e-05, 9.447199999999822e-05, 9.509700000000232e-05, 9.450000000000083e-05, 9.445799999999865e-05, 9.44859999999978e-05, 9.429099999999982e-05, 9.508299999999928e-05, 9.48469999999986e-05, 9.45270000000005e-05, 9.487500000000121e-05, 9.520899999999888e-05, 9.509700000000232e-05, 9.470900000000185e-05, 9.502800000000047e-05, 9.455499999999964e-05, 9.51530000000006e-05, 9.508299999999928e-05, 9.488900000000078e-05, 9.474999999999761e-05, 9.455599999999911e-05, 9.506899999999971e-05, 9.444500000000203e-05, 9.502699999999753e-05, 9.504100000000057e-05, 9.440299999999985e-05, 9.491699999999992e-05, 9.431899999999896e-05, 9.511099999999842e-05, 9.498600000000176e-05, 9.490300000000035e-05, 9.502800000000047e-05, 9.522199999999897e-05, 9.465200000000062e-05, 9.513899999999756e-05, 9.494499999999906e-05, 9.433400000000147e-05, 9.513900000000103e-05, 9.480499999999989e-05, 9.465199999999716e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.808" endtime="20201117 14:42:24.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.797" endtime="20201117 14:42:24.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.820" endtime="20201117 14:42:24.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.830" endtime="20201117 14:42:24.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.825" endtime="20201117 14:42:24.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.816" endtime="20201117 14:42:24.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.364" endtime="20201117 14:42:24.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.942" endtime="20201117 14:42:24.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.940" endtime="20201117 14:42:24.856"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.861" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.883" endtime="20201117 14:42:24.906"></status>
</kw>
<msg timestamp="20201117 14:42:24.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.880" endtime="20201117 14:42:24.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.909" endtime="20201117 14:42:24.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.916" endtime="20201117 14:42:24.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.873" endtime="20201117 14:42:24.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.867" endtime="20201117 14:42:24.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.940" endtime="20201117 14:42:25.281"></status>
</kw>
<msg timestamp="20201117 14:42:25.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.936" endtime="20201117 14:42:25.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.291" endtime="20201117 14:42:25.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.310" endtime="20201117 14:42:25.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.929" endtime="20201117 14:42:25.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.924" endtime="20201117 14:42:25.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.328" level="INFO">${RESULT} = [{'time': 0.047317847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597199999999972e-05, 'source_diff': 9.597199999999972e-05}, {'time': 0.047423903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.318" endtime="20201117 14:42:25.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.358" level="INFO">${ACCURACY} = {'source_diff': [9.597199999999972e-05, 9.619500000000031e-05, 9.543099999999999e-05, 9.529199999999682e-05, 9.533399999999553e-05, 9.540300000000085e-05, 9.60000000000058e-05, 9.533299999999606e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:25.330" endtime="20201117 14:42:25.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.370" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.367" endtime="20201117 14:42:25.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.375" level="INFO">VALUE: [9.597199999999972e-05, 9.619500000000031e-05, 9.543099999999999e-05, 9.529199999999682e-05, 9.533399999999553e-05, 9.540300000000085e-05, 9.60000000000058e-05, 9.533299999999606e-05, 9.611099999999595e-05, 9.529099999999735e-05, 9.57079999999999e-05, 9.6027999999998e-05, 9.602800000000494e-05, 9.59859999999993e-05, 9.554199999999707e-05, 9.527799999999725e-05, 9.572300000000589e-05, 9.544400000000008e-05, 9.590200000000187e-05, 9.558300000000325e-05, 9.569400000000033e-05, 9.57079999999999e-05, 9.601399999999843e-05, 9.562500000000196e-05, 9.599999999999886e-05, 9.605500000000461e-05, 9.544499999999956e-05, 9.538900000000128e-05, 9.604200000000451e-05, 9.534700000000257e-05, 9.588899999999484e-05, 9.622199999999997e-05, 9.562500000000196e-05, 9.580499999999742e-05, 9.549999999999836e-05, 9.541600000000094e-05, 9.570899999999938e-05, 9.570899999999938e-05, 9.609700000000332e-05, 9.58330000000035e-05, 9.618000000000126e-05, 9.545799999999965e-05, 9.601399999999843e-05, 9.604199999999757e-05, 9.529200000000376e-05, 9.534800000000204e-05, 9.573600000000598e-05, 9.526399999999768e-05, 9.624999999999911e-05, 9.541600000000094e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.372" endtime="20201117 14:42:25.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.360" endtime="20201117 14:42:25.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.385" endtime="20201117 14:42:25.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.393" endtime="20201117 14:42:25.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.389" endtime="20201117 14:42:25.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.380" endtime="20201117 14:42:25.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.863" endtime="20201117 14:42:25.419"></status>
</kw>
<msg timestamp="20201117 14:42:25.419" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.441" endtime="20201117 14:42:25.464"></status>
</kw>
<msg timestamp="20201117 14:42:25.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.438" endtime="20201117 14:42:25.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.467" endtime="20201117 14:42:25.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.473" endtime="20201117 14:42:25.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.430" endtime="20201117 14:42:25.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.425" endtime="20201117 14:42:25.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.497" endtime="20201117 14:42:25.837"></status>
</kw>
<msg timestamp="20201117 14:42:25.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041126847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.494" endtime="20201117 14:42:25.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041126847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.847" endtime="20201117 14:42:25.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.866" endtime="20201117 14:42:25.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.486" endtime="20201117 14:42:25.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.482" endtime="20201117 14:42:25.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.885" level="INFO">${RESULT} = [{'time': 0.041222181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.533399999999553e-05, 'source_diff': 9.533399999999553e-05}, {'time': 0.041329208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.876" endtime="20201117 14:42:25.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.916" level="INFO">${ACCURACY} = {'source_diff': [9.533399999999553e-05, 9.563900000000153e-05, 9.60000000000058e-05, 9.623599999999954e-05, 9.541700000000042e-05, 9.562499999999502e-05, 9.576400000000512e-05, 9.554200000000401e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:25.887" endtime="20201117 14:42:25.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.927" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.924" endtime="20201117 14:42:25.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.932" level="INFO">VALUE: [9.533399999999553e-05, 9.563900000000153e-05, 9.60000000000058e-05, 9.623599999999954e-05, 9.541700000000042e-05, 9.562499999999502e-05, 9.576400000000512e-05, 9.554200000000401e-05, 9.561100000000239e-05, 9.537499999999477e-05, 9.590200000000187e-05, 9.541600000000094e-05, 9.56660000000012e-05, 9.531899999999649e-05, 9.619500000000031e-05, 9.60000000000058e-05, 9.551400000000487e-05, 9.559799999999535e-05, 9.593100000000049e-05, 9.60000000000058e-05, 9.584699999999613e-05, 9.531899999999649e-05, 9.619400000000083e-05, 9.618000000000126e-05, 9.543000000000051e-05, 9.526400000000462e-05, 9.569400000000033e-05, 9.588900000000178e-05, 9.601400000000537e-05, 9.593000000000101e-05, 9.58200000000034e-05, 9.559700000000282e-05, 9.579100000000479e-05, 9.583299999999656e-05, 9.62080000000004e-05, 9.554199999999707e-05, 9.604199999999757e-05, 9.613899999999509e-05, 9.527799999999725e-05, 9.619400000000083e-05, 9.608400000000322e-05, 9.591700000000092e-05, 9.537500000000171e-05, 9.55279999999975e-05, 9.58609999999957e-05, 9.558299999999631e-05, 9.561099999999545e-05, 9.551399999999793e-05, 9.541700000000042e-05, 9.607000000000365e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.929" endtime="20201117 14:42:25.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.917" endtime="20201117 14:42:25.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.942" endtime="20201117 14:42:25.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.950" endtime="20201117 14:42:25.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.946" endtime="20201117 14:42:25.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.937" endtime="20201117 14:42:25.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.421" endtime="20201117 14:42:25.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.859" endtime="20201117 14:42:25.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.857" endtime="20201117 14:42:25.977"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.982" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.004" endtime="20201117 14:42:26.027"></status>
</kw>
<msg timestamp="20201117 14:42:26.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.000" endtime="20201117 14:42:26.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.030" endtime="20201117 14:42:26.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.037" endtime="20201117 14:42:26.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.993" endtime="20201117 14:42:26.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.987" endtime="20201117 14:42:26.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.061" endtime="20201117 14:42:26.404"></status>
</kw>
<msg timestamp="20201117 14:42:26.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047230472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.057" endtime="20201117 14:42:26.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047230472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.414" endtime="20201117 14:42:26.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.433" endtime="20201117 14:42:26.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.050" endtime="20201117 14:42:26.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.045" endtime="20201117 14:42:26.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.450" level="INFO">${RESULT} = [{'time': 0.047230472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.71660000000027e-05, 'source_diff': 9.71660000000027e-05}, {'time': 0.047342458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:26.441" endtime="20201117 14:42:26.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.481" level="INFO">${ACCURACY} = {'source_diff': [9.71660000000027e-05, 9.692999999999508e-05, 9.663900000000253e-05, 9.680499999999842e-05, 9.723600000000054e-05, 9.674999999999961e-05, 9.687500000000321e-05, 9.659800000000329e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:26.452" endtime="20201117 14:42:26.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.492" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.490" endtime="20201117 14:42:26.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.498" level="INFO">VALUE: [9.71660000000027e-05, 9.692999999999508e-05, 9.663900000000253e-05, 9.680499999999842e-05, 9.723600000000054e-05, 9.674999999999961e-05, 9.687500000000321e-05, 9.659800000000329e-05, 9.68059999999979e-05, 9.69860000000003e-05, 9.666700000000167e-05, 9.661100000000339e-05, 9.708299999999781e-05, 9.693000000000201e-05, 9.704200000000551e-05, 9.69860000000003e-05, 9.652800000000544e-05, 9.68059999999979e-05, 9.705600000000508e-05, 9.691700000000192e-05, 9.702699999999953e-05, 9.648600000000673e-05, 9.640300000000185e-05, 9.641700000000142e-05, 9.630499999999792e-05, 9.652800000000544e-05, 9.707000000000465e-05, 9.693100000000149e-05, 9.629199999999782e-05, 9.7027999999999e-05, 9.695800000000115e-05, 9.686199999999617e-05, 9.697200000000072e-05, 9.70409999999991e-05, 9.641600000000194e-05, 9.705599999999814e-05, 9.697200000000072e-05, 9.71809999999948e-05, 9.726399999999968e-05, 9.722200000000097e-05, 9.637500000000271e-05, 9.655499999999817e-05, 9.719400000000183e-05, 9.683299999999756e-05, 9.681899999999799e-05, 9.669400000000133e-05, 9.699999999999986e-05, 9.693000000000201e-05, 9.68059999999979e-05, 9.690300000000235e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.494" endtime="20201117 14:42:26.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.483" endtime="20201117 14:42:26.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.507" endtime="20201117 14:42:26.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.516" endtime="20201117 14:42:26.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.511" endtime="20201117 14:42:26.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.503" endtime="20201117 14:42:26.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.983" endtime="20201117 14:42:26.541"></status>
</kw>
<msg timestamp="20201117 14:42:26.541" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.563" endtime="20201117 14:42:26.587"></status>
</kw>
<msg timestamp="20201117 14:42:26.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.560" endtime="20201117 14:42:26.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.590" endtime="20201117 14:42:26.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.596" endtime="20201117 14:42:26.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.553" endtime="20201117 14:42:26.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.547" endtime="20201117 14:42:26.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.620" endtime="20201117 14:42:26.958"></status>
</kw>
<msg timestamp="20201117 14:42:26.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041112083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.616" endtime="20201117 14:42:26.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041112083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.968" endtime="20201117 14:42:26.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.987" endtime="20201117 14:42:26.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.609" endtime="20201117 14:42:26.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.604" endtime="20201117 14:42:26.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.006" level="INFO">${RESULT} = [{'time': 0.041208403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.631999999999696e-05, 'source_diff': 9.631999999999696e-05}, {'time': 0.041316417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:26.997" endtime="20201117 14:42:27.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.037" level="INFO">${ACCURACY} = {'source_diff': [9.631999999999696e-05, 9.726399999999968e-05, 9.666699999999473e-05, 9.698599999999336e-05, 9.697200000000072e-05, 9.645799999999372e-05, 9.658299999999731e-05, 9.699999999999986e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:27.008" endtime="20201117 14:42:27.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.056" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.054" endtime="20201117 14:42:27.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.062" level="INFO">VALUE: [9.631999999999696e-05, 9.726399999999968e-05, 9.666699999999473e-05, 9.698599999999336e-05, 9.697200000000072e-05, 9.645799999999372e-05, 9.658299999999731e-05, 9.699999999999986e-05, 9.643100000000099e-05, 9.725000000000011e-05, 9.68609999999967e-05, 9.719499999999437e-05, 9.699999999999986e-05, 9.652699999999903e-05, 9.679099999999885e-05, 9.640200000000237e-05, 9.644400000000108e-05, 9.705499999999867e-05, 9.684700000000407e-05, 9.659799999999635e-05, 9.684699999999713e-05, 9.669500000000081e-05, 9.643100000000099e-05, 9.706899999999824e-05, 9.647200000000022e-05, 9.68609999999967e-05, 9.676399999999918e-05, 9.658299999999731e-05, 9.662500000000296e-05, 9.698699999999977e-05, 9.654199999999807e-05, 9.702800000000594e-05, 9.643100000000099e-05, 9.712499999999652e-05, 9.649999999999936e-05, 9.662499999999602e-05, 9.723600000000054e-05, 9.695800000000115e-05, 9.672200000000047e-05, 9.656999999999721e-05, 9.666699999999473e-05, 9.6415999999995e-05, 9.649999999999936e-05, 9.6415999999995e-05, 9.716700000000217e-05, 9.638900000000228e-05, 9.715200000000312e-05, 9.673600000000004e-05, 9.641700000000142e-05, 9.71809999999948e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.059" endtime="20201117 14:42:27.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.047" endtime="20201117 14:42:27.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.071" endtime="20201117 14:42:27.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.079" endtime="20201117 14:42:27.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.075" endtime="20201117 14:42:27.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.066" endtime="20201117 14:42:27.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.543" endtime="20201117 14:42:27.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.979" endtime="20201117 14:42:27.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.978" endtime="20201117 14:42:27.105"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.111" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.132" endtime="20201117 14:42:27.155"></status>
</kw>
<msg timestamp="20201117 14:42:27.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.129" endtime="20201117 14:42:27.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.158" endtime="20201117 14:42:27.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.165" endtime="20201117 14:42:27.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.122" endtime="20201117 14:42:27.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.116" endtime="20201117 14:42:27.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.188" endtime="20201117 14:42:27.530"></status>
</kw>
<msg timestamp="20201117 14:42:27.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046976861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047074639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.185" endtime="20201117 14:42:27.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046976861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047074639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.540" endtime="20201117 14:42:27.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.559" endtime="20201117 14:42:27.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.178" endtime="20201117 14:42:27.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.173" endtime="20201117 14:42:27.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.578" level="INFO">${RESULT} = [{'time': 0.047074639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777799999999975e-05, 'source_diff': 9.777799999999975e-05}, {'time': 0.047192694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.568" endtime="20201117 14:42:27.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.608" level="INFO">${ACCURACY} = {'source_diff': [9.777799999999975e-05, 9.73609999999972e-05, 9.776399999999325e-05, 9.745900000000113e-05, 9.801400000000043e-05, 9.825000000000111e-05, 9.809699999999838e-05, 9.755599999999864e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:27.580" endtime="20201117 14:42:27.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.619" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.617" endtime="20201117 14:42:27.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.625" level="INFO">VALUE: [9.777799999999975e-05, 9.73609999999972e-05, 9.776399999999325e-05, 9.745900000000113e-05, 9.801400000000043e-05, 9.825000000000111e-05, 9.809699999999838e-05, 9.755599999999864e-05, 9.773600000000104e-05, 9.794499999999512e-05, 9.776400000000018e-05, 9.747299999999376e-05, 9.783299999999856e-05, 9.779199999999932e-05, 9.787500000000421e-05, 9.751399999999993e-05, 9.800000000000086e-05, 9.768000000000276e-05, 9.768100000000224e-05, 9.745800000000165e-05, 9.74860000000008e-05, 9.801400000000043e-05, 9.779199999999932e-05, 9.736100000000414e-05, 9.737499999999677e-05, 9.780499999999942e-05, 9.820799999999547e-05, 9.815299999999666e-05, 9.822199999999504e-05, 9.741699999999548e-05, 9.815299999999666e-05, 9.819499999999537e-05, 9.831899999999949e-05, 9.762499999999702e-05, 9.79730000000012e-05, 9.777799999999975e-05, 9.812500000000446e-05, 9.726399999999968e-05, 9.755599999999864e-05, 9.744399999999515e-05, 9.762499999999702e-05, 9.73479999999971e-05, 9.79860000000013e-05, 9.783399999999803e-05, 9.823600000000154e-05, 9.80410000000001e-05, 9.81660000000037e-05, 9.741600000000294e-05, 9.79860000000013e-05, 9.813899999999709e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.622" endtime="20201117 14:42:27.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.610" endtime="20201117 14:42:27.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.634" endtime="20201117 14:42:27.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.642" endtime="20201117 14:42:27.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.638" endtime="20201117 14:42:27.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.629" endtime="20201117 14:42:27.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.112" endtime="20201117 14:42:27.668"></status>
</kw>
<msg timestamp="20201117 14:42:27.668" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.691" endtime="20201117 14:42:27.714"></status>
</kw>
<msg timestamp="20201117 14:42:27.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.688" endtime="20201117 14:42:27.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.717" endtime="20201117 14:42:27.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.724" endtime="20201117 14:42:27.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.680" endtime="20201117 14:42:27.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.674" endtime="20201117 14:42:27.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.748" endtime="20201117 14:42:28.059"></status>
</kw>
<msg timestamp="20201117 14:42:28.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.744" endtime="20201117 14:42:28.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.063" endtime="20201117 14:42:28.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.072" endtime="20201117 14:42:28.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.737" endtime="20201117 14:42:28.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.732" endtime="20201117 14:42:28.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.081" level="INFO">${RESULT} = [{'time': 0.042567722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.795800000000215e-05, 'source_diff': 9.795800000000215e-05}, {'time': 0.042686694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.077" endtime="20201117 14:42:28.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.095" level="INFO">${ACCURACY} = {'source_diff': [9.795800000000215e-05, 9.809699999999838e-05, 9.738900000000328e-05, 9.759699999999788e-05, 9.747200000000122e-05, 9.779199999999932e-05, 9.816700000000317e-05, 9.8028e-05, 9.72779999...</msg>
<status status="PASS" starttime="20201117 14:42:28.082" endtime="20201117 14:42:28.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.100" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.099" endtime="20201117 14:42:28.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.103" level="INFO">VALUE: [9.795800000000215e-05, 9.809699999999838e-05, 9.738900000000328e-05, 9.759699999999788e-05, 9.747200000000122e-05, 9.779199999999932e-05, 9.816700000000317e-05, 9.8028e-05, 9.727799999999925e-05, 9.779199999999932e-05, 9.794400000000258e-05, 9.804199999999957e-05, 9.801400000000043e-05, 9.80410000000001e-05, 9.751399999999993e-05, 9.793000000000301e-05, 9.734699999999763e-05, 9.755599999999864e-05, 9.78200000000054e-05, 9.73609999999972e-05, 9.826300000000121e-05, 9.772200000000147e-05, 9.79159999999965e-05, 9.776400000000018e-05, 9.815299999999666e-05, 9.763900000000353e-05, 9.755499999999917e-05, 9.804199999999957e-05, 9.761100000000439e-05, 9.729199999999882e-05, 9.754200000000601e-05, 9.787499999999727e-05, 9.824999999999418e-05, 9.773600000000104e-05, 9.747199999999429e-05, 9.759700000000482e-05, 9.763899999999659e-05, 9.82080000000024e-05, 9.790299999999641e-05, 9.824999999999418e-05, 9.808399999999828e-05, 9.752700000000003e-05, 9.779199999999932e-05, 9.775000000000061e-05, 9.777799999999975e-05, 9.761100000000439e-05, 9.750000000000036e-05, 9.738900000000328e-05, 9.8028e-05, 9.768100000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.101" endtime="20201117 14:42:28.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.096" endtime="20201117 14:42:28.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.107" endtime="20201117 14:42:28.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.111" endtime="20201117 14:42:28.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.109" endtime="20201117 14:42:28.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.105" endtime="20201117 14:42:28.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.670" endtime="20201117 14:42:28.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.108" endtime="20201117 14:42:28.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.106" endtime="20201117 14:42:28.136"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.141" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.163" endtime="20201117 14:42:28.186"></status>
</kw>
<msg timestamp="20201117 14:42:28.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.160" endtime="20201117 14:42:28.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.190" endtime="20201117 14:42:28.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.196" endtime="20201117 14:42:28.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.153" endtime="20201117 14:42:28.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.147" endtime="20201117 14:42:28.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.220" endtime="20201117 14:42:28.563"></status>
</kw>
<msg timestamp="20201117 14:42:28.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046151792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046250167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.217" endtime="20201117 14:42:28.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046151792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046250167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.573" endtime="20201117 14:42:28.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.591" endtime="20201117 14:42:28.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.209" endtime="20201117 14:42:28.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.204" endtime="20201117 14:42:28.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.609" level="INFO">${RESULT} = [{'time': 0.046250167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.837500000000471e-05, 'source_diff': 9.837500000000471e-05}, {'time': 0.046362181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.600" endtime="20201117 14:42:28.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.640" level="INFO">${ACCURACY} = {'source_diff': [9.837500000000471e-05, 9.863900000000453e-05, 9.904200000000057e-05, 9.920799999999647e-05, 9.915199999999819e-05, 9.854200000000007e-05, 9.841699999999648e-05, 9.883299999999956e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:28.611" endtime="20201117 14:42:28.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.651" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.649" endtime="20201117 14:42:28.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.656" level="INFO">VALUE: [9.837500000000471e-05, 9.863900000000453e-05, 9.904200000000057e-05, 9.920799999999647e-05, 9.915199999999819e-05, 9.854200000000007e-05, 9.841699999999648e-05, 9.883299999999956e-05, 9.91939999999969e-05, 9.88059999999999e-05, 9.908299999999981e-05, 9.877800000000075e-05, 9.891699999999698e-05, 9.915199999999819e-05, 9.833299999999906e-05, 9.873600000000204e-05, 9.829199999999982e-05, 9.876400000000118e-05, 9.826400000000068e-05, 9.88609999999987e-05, 9.905500000000067e-05, 9.891700000000392e-05, 9.911199999999842e-05, 9.850000000000136e-05, 9.893099999999655e-05, 9.91939999999969e-05, 9.904200000000057e-05, 9.87359999999951e-05, 9.91530000000046e-05, 9.861099999999845e-05, 9.905600000000014e-05, 9.909699999999938e-05, 9.915299999999766e-05, 9.826400000000068e-05, 9.890299999999741e-05, 9.861099999999845e-05, 9.911099999999895e-05, 9.872200000000247e-05, 9.901400000000143e-05, 9.88059999999999e-05, 9.84860000000018e-05, 9.916700000000417e-05, 9.843100000000299e-05, 9.890199999999794e-05, 9.895800000000315e-05, 9.880499999999348e-05, 9.911099999999895e-05, 9.894400000000358e-05, 9.866699999999673e-05, 9.927800000000125e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.653" endtime="20201117 14:42:28.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.642" endtime="20201117 14:42:28.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.665" endtime="20201117 14:42:28.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.674" endtime="20201117 14:42:28.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.669" endtime="20201117 14:42:28.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.661" endtime="20201117 14:42:28.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.143" endtime="20201117 14:42:28.699"></status>
</kw>
<msg timestamp="20201117 14:42:28.700" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.722" endtime="20201117 14:42:28.745"></status>
</kw>
<msg timestamp="20201117 14:42:28.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.719" endtime="20201117 14:42:28.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.749" endtime="20201117 14:42:28.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.755" endtime="20201117 14:42:28.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.711" endtime="20201117 14:42:28.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.705" endtime="20201117 14:42:28.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.779" endtime="20201117 14:42:29.119"></status>
</kw>
<msg timestamp="20201117 14:42:29.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.776" endtime="20201117 14:42:29.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.128" endtime="20201117 14:42:29.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.147" endtime="20201117 14:42:29.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.769" endtime="20201117 14:42:29.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.764" endtime="20201117 14:42:29.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.166" level="INFO">${RESULT} = [{'time': 0.042346792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.901400000000143e-05, 'source_diff': 9.901400000000143e-05}, {'time': 0.042461806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.157" endtime="20201117 14:42:29.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.197" level="INFO">${ACCURACY} = {'source_diff': [9.901400000000143e-05, 9.891699999999698e-05, 9.927800000000125e-05, 9.90410000000011e-05, 9.837499999999777e-05, 9.925000000000211e-05, 9.905500000000067e-05, 9.875000000000161e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:29.169" endtime="20201117 14:42:29.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.208" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.206" endtime="20201117 14:42:29.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.214" level="INFO">VALUE: [9.901400000000143e-05, 9.891699999999698e-05, 9.927800000000125e-05, 9.90410000000011e-05, 9.837499999999777e-05, 9.925000000000211e-05, 9.905500000000067e-05, 9.875000000000161e-05, 9.83059999999994e-05, 9.884699999999913e-05, 9.857000000000615e-05, 9.893099999999655e-05, 9.91939999999969e-05, 9.876399999999425e-05, 9.840199999999744e-05, 9.895899999999569e-05, 9.845799999999572e-05, 9.840299999999691e-05, 9.875000000000161e-05, 9.912500000000546e-05, 9.912500000000546e-05, 9.85280000000005e-05, 9.916699999999723e-05, 9.916599999999776e-05, 9.925000000000211e-05, 9.847200000000222e-05, 9.883299999999956e-05, 9.862499999999802e-05, 9.876400000000118e-05, 9.844500000000256e-05, 9.870900000000238e-05, 9.841699999999648e-05, 9.838899999999734e-05, 9.873600000000204e-05, 9.891600000000444e-05, 9.831900000000643e-05, 9.89860000000023e-05, 9.829199999999982e-05, 9.854200000000007e-05, 9.919500000000331e-05, 9.920900000000288e-05, 9.88059999999999e-05, 9.834699999999863e-05, 9.894500000000306e-05, 9.922200000000297e-05, 9.852700000000103e-05, 9.912500000000546e-05, 9.831999999999896e-05, 9.891700000000392e-05, 9.904199999999364e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.210" endtime="20201117 14:42:29.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.199" endtime="20201117 14:42:29.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.222" endtime="20201117 14:42:29.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.231" endtime="20201117 14:42:29.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.226" endtime="20201117 14:42:29.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.218" endtime="20201117 14:42:29.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.701" endtime="20201117 14:42:29.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.139" endtime="20201117 14:42:29.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.137" endtime="20201117 14:42:29.257"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.263" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.285" endtime="20201117 14:42:29.308"></status>
</kw>
<msg timestamp="20201117 14:42:29.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.281" endtime="20201117 14:42:29.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.312" endtime="20201117 14:42:29.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.318" endtime="20201117 14:42:29.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.274" endtime="20201117 14:42:29.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.268" endtime="20201117 14:42:29.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.342" endtime="20201117 14:42:29.684"></status>
</kw>
<msg timestamp="20201117 14:42:29.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047711903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047812125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.339" endtime="20201117 14:42:29.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047711903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047812125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.694" endtime="20201117 14:42:29.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.713" endtime="20201117 14:42:29.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.331" endtime="20201117 14:42:29.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.326" endtime="20201117 14:42:29.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.730" level="INFO">${RESULT} = [{'time': 0.047812125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010022199999999704, 'source_diff': 0.00010022199999999704}, {'time': 0.047923125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:29.721" endtime="20201117 14:42:29.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.762" level="INFO">${ACCURACY} = {'source_diff': [0.00010022199999999704, 9.984700000000013e-05, 9.999999999999593e-05, 9.937499999999877e-05, 9.956900000000074e-05, 9.931999999999996e-05, 9.937499999999877e-05, 9.970799999999697e-05...</msg>
<status status="PASS" starttime="20201117 14:42:29.732" endtime="20201117 14:42:29.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.773" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.771" endtime="20201117 14:42:29.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.779" level="INFO">VALUE: [0.00010022199999999704, 9.984700000000013e-05, 9.999999999999593e-05, 9.937499999999877e-05, 9.956900000000074e-05, 9.931999999999996e-05, 9.937499999999877e-05, 9.970799999999697e-05, 9.95280000000015e-05, 9.95410000000016e-05, 9.956900000000074e-05, 0.00010020799999999747, 9.93609999999992e-05, 9.984700000000013e-05, 0.00010004200000000157, 9.93060000000004e-05, 9.967999999999783e-05, 9.99159999999985e-05, 0.00010008300000000081, 0.00010018000000000526, 9.96939999999974e-05, 9.995799999999722e-05, 9.937499999999877e-05, 0.00010005600000000114, 9.97359999999961e-05, 9.977800000000175e-05, 9.931900000000049e-05, 0.00010002699999999559, 9.988900000000578e-05, 9.95280000000015e-05, 9.979200000000132e-05, 9.999999999999593e-05, 9.922199999999604e-05, 9.945799999999672e-05, 9.999999999999593e-05, 0.00010002799999999507, 9.994399999999765e-05, 9.945799999999672e-05, 9.983300000000056e-05, 0.00010013899999999909, 9.962499999999902e-05, 9.977800000000175e-05, 9.994400000000458e-05, 9.954200000000107e-05, 9.945900000000313e-05, 9.993099999999755e-05, 9.955500000000117e-05, 0.00010002699999999559, 9.97080000000039e-05, 9.93609999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.776" endtime="20201117 14:42:29.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.763" endtime="20201117 14:42:29.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.788" endtime="20201117 14:42:29.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.796" endtime="20201117 14:42:29.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.792" endtime="20201117 14:42:29.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.783" endtime="20201117 14:42:29.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.264" endtime="20201117 14:42:29.822"></status>
</kw>
<msg timestamp="20201117 14:42:29.823" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.845" endtime="20201117 14:42:29.868"></status>
</kw>
<msg timestamp="20201117 14:42:29.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.842" endtime="20201117 14:42:29.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.871" endtime="20201117 14:42:29.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.878" endtime="20201117 14:42:29.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.834" endtime="20201117 14:42:29.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.828" endtime="20201117 14:42:29.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.901" endtime="20201117 14:42:30.240"></status>
</kw>
<msg timestamp="20201117 14:42:30.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04207975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:29.898" endtime="20201117 14:42:30.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04207975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:30.250" endtime="20201117 14:42:30.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.268" endtime="20201117 14:42:30.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.891" endtime="20201117 14:42:30.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.886" endtime="20201117 14:42:30.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.288" level="INFO">${RESULT} = [{'time': 0.042179917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010016699999999823, 'source_diff': 0.00010016699999999823}, {'time': 0.042293931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:30.279" endtime="20201117 14:42:30.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.318" level="INFO">${ACCURACY} = {'source_diff': [0.00010016699999999823, 9.976400000000218e-05, 9.940299999999791e-05, 0.00010011099999999995, 9.962499999999902e-05, 0.00010006900000000124, 0.00010016699999999823, 9.988900000000578e...</msg>
<status status="PASS" starttime="20201117 14:42:30.290" endtime="20201117 14:42:30.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.329" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.327" endtime="20201117 14:42:30.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.335" level="INFO">VALUE: [0.00010016699999999823, 9.976400000000218e-05, 9.940299999999791e-05, 0.00010011099999999995, 9.962499999999902e-05, 0.00010006900000000124, 0.00010016699999999823, 9.988900000000578e-05, 0.00010013899999999909, 0.0001001809999999978, 0.00010008299999999387, 9.991699999999798e-05, 9.952799999999457e-05, 9.934699999999963e-05, 0.00010008300000000081, 9.958300000000031e-05, 0.000100028000000002, 0.00010027800000000225, 0.0001001530000000056, 0.00010029199999999489, 9.93479999999991e-05, 0.00010020900000000388, 9.962499999999902e-05, 9.990199999999894e-05, 9.931899999999355e-05, 0.00010011099999999995, 0.00010009799999999985, 9.966699999999773e-05, 9.979200000000132e-05, 0.00010001400000000243, 9.974999999999568e-05, 9.957000000000021e-05, 9.988899999999884e-05, 0.00010009700000000038, 9.975000000000261e-05, 9.988899999999884e-05, 0.00010011099999999995, 9.998599999999636e-05, 9.949999999999543e-05, 9.938899999999834e-05, 9.936100000000614e-05, 9.944500000000356e-05, 9.941700000000442e-05, 9.961099999999945e-05, 9.979100000000185e-05, 9.96939999999974e-05, 9.931900000000049e-05, 9.995799999999722e-05, 0.00010011200000000636, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.332" endtime="20201117 14:42:30.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.320" endtime="20201117 14:42:30.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.344" endtime="20201117 14:42:30.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.353" endtime="20201117 14:42:30.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.348" endtime="20201117 14:42:30.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.339" endtime="20201117 14:42:30.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.824" endtime="20201117 14:42:30.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.260" endtime="20201117 14:42:30.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.258" endtime="20201117 14:42:30.379"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.385" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.407" endtime="20201117 14:42:30.429"></status>
</kw>
<msg timestamp="20201117 14:42:30.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.403" endtime="20201117 14:42:30.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.433" endtime="20201117 14:42:30.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.439" endtime="20201117 14:42:30.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.396" endtime="20201117 14:42:30.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.390" endtime="20201117 14:42:30.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.463" endtime="20201117 14:42:30.806"></status>
</kw>
<msg timestamp="20201117 14:42:30.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047275806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047376722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.459" endtime="20201117 14:42:30.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047275806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047376722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.816" endtime="20201117 14:42:30.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.834" endtime="20201117 14:42:30.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.452" endtime="20201117 14:42:30.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.447" endtime="20201117 14:42:30.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.852" level="INFO">${RESULT} = [{'time': 0.047376722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010091600000000644, 'source_diff': 0.00010091600000000644}, {'time': 0.047490736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:30.843" endtime="20201117 14:42:30.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.882" level="INFO">${ACCURACY} = {'source_diff': [0.00010091600000000644, 0.00010077799999999582, 0.00010079200000000232, 0.00010125000000000411, 0.0001010559999999952, 0.00010108400000000128, 0.00010079200000000232, 0.00010090299999...</msg>
<status status="PASS" starttime="20201117 14:42:30.854" endtime="20201117 14:42:30.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.893" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.891" endtime="20201117 14:42:30.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.899" level="INFO">VALUE: [0.00010091600000000644, 0.00010077799999999582, 0.00010079200000000232, 0.00010125000000000411, 0.0001010559999999952, 0.00010108400000000128, 0.00010079200000000232, 0.00010090299999999941, 0.00010116599999999976, 0.00010097199999999779, 0.00010094399999999865, 0.0001011809999999988, 0.00010127800000000325, 0.00010079199999999539, 0.00010075000000000361, 0.00010058400000000078, 0.00010113800000000062, 0.00010030500000000192, 0.00010109700000000138, 0.00010051400000000293, 0.00010033300000000106, 0.00010093099999999855, 0.00010105600000000214, 0.00010041699999999848, 0.0001010559999999952, 0.0001005280000000025, 0.00010120899999999794, 0.00010054199999999514, 0.0001011939999999989, 0.00010095799999999822, 0.00010033300000000106, 0.00010125000000000411, 0.00010034699999999369, 0.00010027800000000225, 0.00010087500000000027, 0.00010063800000000012, 0.00010084700000000113, 0.00010123700000000402, 0.00010061100000000045, 0.00010065199999999969, 0.00010095799999999822, 0.00010041699999999848, 0.0001011809999999988, 0.0001008610000000007, 0.00010120899999999794, 0.00010066599999999926, 0.00010100000000000386, 0.00010075000000000361, 0.00010051400000000293, 0.00010123600000000454]</msg>
<status status="PASS" starttime="20201117 14:42:30.896" endtime="20201117 14:42:30.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.884" endtime="20201117 14:42:30.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.908" endtime="20201117 14:42:30.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.917" endtime="20201117 14:42:30.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.912" endtime="20201117 14:42:30.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.904" endtime="20201117 14:42:30.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.386" endtime="20201117 14:42:30.943"></status>
</kw>
<msg timestamp="20201117 14:42:30.943" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.965" endtime="20201117 14:42:30.988"></status>
</kw>
<msg timestamp="20201117 14:42:30.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.961" endtime="20201117 14:42:30.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.991" endtime="20201117 14:42:30.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.998" endtime="20201117 14:42:31.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.954" endtime="20201117 14:42:31.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.948" endtime="20201117 14:42:31.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.021" endtime="20201117 14:42:31.361"></status>
</kw>
<msg timestamp="20201117 14:42:31.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041662083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041762611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.018" endtime="20201117 14:42:31.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041662083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041762611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.369" endtime="20201117 14:42:31.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.377" endtime="20201117 14:42:31.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.011" endtime="20201117 14:42:31.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.006" endtime="20201117 14:42:31.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.386" level="INFO">${RESULT} = [{'time': 0.041762611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010052799999999557, 'source_diff': 0.00010052799999999557}, {'time': 0.041881639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:31.382" endtime="20201117 14:42:31.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.399" level="INFO">${ACCURACY} = {'source_diff': [0.00010052799999999557, 0.00010037499999999977, 0.00010033300000000106, 0.00010032000000000096, 0.00010087500000000027, 0.00010052700000000303, 0.00010079099999999591, 0.0001010279999...</msg>
<status status="PASS" starttime="20201117 14:42:31.387" endtime="20201117 14:42:31.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.405" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.403" endtime="20201117 14:42:31.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.407" level="INFO">VALUE: [0.00010052799999999557, 0.00010037499999999977, 0.00010033300000000106, 0.00010032000000000096, 0.00010087500000000027, 0.00010052700000000303, 0.00010079099999999591, 0.00010102799999999607, 0.00010095800000000515, 0.0001012359999999976, 0.00010100000000000386, 0.00010041699999999848, 0.00010095800000000515, 0.00010051400000000293, 0.00010052799999999557, 0.00010115299999999966, 0.0001010689999999953, 0.00010098599999999736, 0.00010100000000000386, 0.00010094399999999865, 0.00010049999999999643, 0.00010043099999999805, 0.00010066699999999873, 0.00010088800000000037, 0.00010079200000000232, 0.00010080500000000242, 0.00010074999999999668, 0.00010038900000000628, 0.00010108300000000181, 0.00010115299999999966, 0.000101028000000003, 0.0001012359999999976, 0.00010112500000000052, 0.00010090199999999994, 0.00010073600000000404, 0.00010038799999999987, 0.000100513999999996, 0.00010029100000000235, 0.00010048599999999686, 0.00010061100000000045, 0.00010111099999999401, 0.00010062500000000002, 0.0001006809999999983, 0.0001010139999999965, 0.00010068100000000524, 0.00010091699999999898, 0.00010111100000000095, 0.00010126400000000368, 0.00010058300000000131, 0.00010063899999999959]</msg>
<status status="PASS" starttime="20201117 14:42:31.406" endtime="20201117 14:42:31.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.400" endtime="20201117 14:42:31.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.412" endtime="20201117 14:42:31.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.416" endtime="20201117 14:42:31.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.414" endtime="20201117 14:42:31.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.409" endtime="20201117 14:42:31.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.944" endtime="20201117 14:42:31.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.382" endtime="20201117 14:42:31.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.380" endtime="20201117 14:42:31.437"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.440" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.450" endtime="20201117 14:42:31.470"></status>
</kw>
<msg timestamp="20201117 14:42:31.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.448" endtime="20201117 14:42:31.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.471" endtime="20201117 14:42:31.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.474" endtime="20201117 14:42:31.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.445" endtime="20201117 14:42:31.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.442" endtime="20201117 14:42:31.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.485" endtime="20201117 14:42:31.772"></status>
</kw>
<msg timestamp="20201117 14:42:31.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026868042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026969264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.484" endtime="20201117 14:42:31.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026868042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026969264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.782" endtime="20201117 14:42:31.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.800" endtime="20201117 14:42:31.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.480" endtime="20201117 14:42:31.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.478" endtime="20201117 14:42:31.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.818" level="INFO">${RESULT} = [{'time': 0.026969264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010122199999999804, 'source_diff': 0.00010122199999999804}, {'time': 0.027085306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:31.809" endtime="20201117 14:42:31.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.849" level="INFO">${ACCURACY} = {'source_diff': [0.00010122199999999804, 0.00010223700000000155, 0.00010181899999999952, 0.00010184699999999866, 0.00010187500000000127, 0.00010138800000000087, 0.0001013610000000012, 0.00010193000000...</msg>
<status status="PASS" starttime="20201117 14:42:31.820" endtime="20201117 14:42:31.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.860" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.858" endtime="20201117 14:42:31.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.866" level="INFO">VALUE: [0.00010122199999999804, 0.00010223700000000155, 0.00010181899999999952, 0.00010184699999999866, 0.00010187500000000127, 0.00010138800000000087, 0.0001013610000000012, 0.00010193000000000008, 0.00010176400000000071, 0.00010129199999999935, 0.00010206999999999924, 0.00010176400000000071, 0.00010147200000000176, 0.00010183300000000256, 0.00010215300000000066, 0.00010204100000000063, 0.00010166699999999973, 0.00010159700000000188, 0.00010209700000000238, 0.00010172300000000148, 0.00010208299999999934, 0.00010211100000000195, 0.00010179199999999985, 0.00010136099999999773, 0.00010126400000000021, 0.0001015549999999997, 0.00010133300000000206, 0.00010176400000000071, 0.00010222199999999904, 0.00010173600000000158, 0.00010220799999999947, 0.00010184700000000213, 0.00010130599999999892, 0.00010193000000000008, 0.00010165200000000069, 0.00010167999999999983, 0.00010142999999999958, 0.00010144400000000262, 0.00010150000000000436, 0.00010165300000000016, 0.00010133300000000206, 0.00010176399999999725, 0.00010179100000000385, 0.00010170899999999844, 0.00010156900000000274, 0.00010215200000000119, 0.00010144499999999862, 0.00010166600000000026, 0.00010131899999999555, 0.00010170799999999897]</msg>
<status status="PASS" starttime="20201117 14:42:31.863" endtime="20201117 14:42:31.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.851" endtime="20201117 14:42:31.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.875" endtime="20201117 14:42:31.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.884" endtime="20201117 14:42:31.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.879" endtime="20201117 14:42:31.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.871" endtime="20201117 14:42:31.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.441" endtime="20201117 14:42:31.909"></status>
</kw>
<msg timestamp="20201117 14:42:31.910" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.932" endtime="20201117 14:42:31.954"></status>
</kw>
<msg timestamp="20201117 14:42:31.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.928" endtime="20201117 14:42:31.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.958" endtime="20201117 14:42:31.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.964" endtime="20201117 14:42:31.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.921" endtime="20201117 14:42:31.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.915" endtime="20201117 14:42:31.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.988" endtime="20201117 14:42:32.328"></status>
</kw>
<msg timestamp="20201117 14:42:32.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041352306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.985" endtime="20201117 14:42:32.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041352306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.338" endtime="20201117 14:42:32.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.356" endtime="20201117 14:42:32.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.977" endtime="20201117 14:42:32.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.973" endtime="20201117 14:42:32.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.375" level="INFO">${RESULT} = [{'time': 0.041453764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010145799999999872, 'source_diff': 0.00010145799999999872}, {'time': 0.041564778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:32.366" endtime="20201117 14:42:32.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.406" level="INFO">${ACCURACY} = {'source_diff': [0.00010145799999999872, 0.00010158399999999485, 0.00010222299999999851, 0.00010154199999999614, 0.00010170799999999897, 0.00010166600000000026, 0.00010202699999999759, 0.0001016390000...</msg>
<status status="PASS" starttime="20201117 14:42:32.377" endtime="20201117 14:42:32.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.424" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.421" endtime="20201117 14:42:32.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.429" level="INFO">VALUE: [0.00010145799999999872, 0.00010158399999999485, 0.00010222299999999851, 0.00010154199999999614, 0.00010170799999999897, 0.00010166600000000026, 0.00010202699999999759, 0.00010163900000000059, 0.00010133300000000206, 0.0001013610000000012, 0.00010137500000000077, 0.00010223600000000554, 0.0001018480000000016, 0.00010149999999999743, 0.00010174999999999768, 0.00010149999999999743, 0.00010155600000000264, 0.00010173600000000504, 0.00010170799999999897, 0.00010213900000000109, 0.00010176399999999725, 0.00010149999999999743, 0.00010176300000000471, 0.00010158400000000178, 0.00010130500000000292, 0.00010204099999999716, 0.000102028000000004, 0.00010183300000000256, 0.00010181899999999605, 0.00010220899999999894, 0.00010148599999999786, 0.00010222200000000597, 0.00010172300000000495, 0.00010180599999999596, 0.00010187500000000127, 0.00010158299999999537, 0.00010227800000000425, 0.00010159699999999494, 0.00010166699999999973, 0.00010211100000000195, 0.0001017359999999981, 0.00010190300000000041, 0.0001019160000000005, 0.0001013610000000012, 0.00010202700000000453, 0.00010219499999999937, 0.00010159700000000188, 0.00010193099999999955, 0.00010194399999999965, 0.00010173600000000504]</msg>
<status status="PASS" starttime="20201117 14:42:32.426" endtime="20201117 14:42:32.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.414" endtime="20201117 14:42:32.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.438" endtime="20201117 14:42:32.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.446" endtime="20201117 14:42:32.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.442" endtime="20201117 14:42:32.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.433" endtime="20201117 14:42:32.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.911" endtime="20201117 14:42:32.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.439" endtime="20201117 14:42:32.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.438" endtime="20201117 14:42:32.473"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.478" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.500" endtime="20201117 14:42:32.524"></status>
</kw>
<msg timestamp="20201117 14:42:32.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.497" endtime="20201117 14:42:32.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.527" endtime="20201117 14:42:32.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.534" endtime="20201117 14:42:32.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.489" endtime="20201117 14:42:32.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.483" endtime="20201117 14:42:32.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.557" endtime="20201117 14:42:32.901"></status>
</kw>
<msg timestamp="20201117 14:42:32.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047111667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.554" endtime="20201117 14:42:32.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047111667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.911" endtime="20201117 14:42:32.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.929" endtime="20201117 14:42:32.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.547" endtime="20201117 14:42:32.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.542" endtime="20201117 14:42:32.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.948" level="INFO">${RESULT} = [{'time': 0.047214847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010317999999999439, 'source_diff': 0.00010317999999999439}, {'time': 0.047332847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:32.939" endtime="20201117 14:42:32.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.978" level="INFO">${ACCURACY} = {'source_diff': [0.00010317999999999439, 0.0001027359999999991, 0.00010277799999999782, 0.0001028889999999949, 0.00010297199999999979, 0.00010274999999999868, 0.00010308400000000328, 0.000102430000000...</msg>
<status status="PASS" starttime="20201117 14:42:32.950" endtime="20201117 14:42:32.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.989" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.987" endtime="20201117 14:42:32.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.994" level="INFO">VALUE: [0.00010317999999999439, 0.0001027359999999991, 0.00010277799999999782, 0.0001028889999999949, 0.00010297199999999979, 0.00010274999999999868, 0.00010308400000000328, 0.00010243000000000058, 0.0001031940000000009, 0.00010261200000000192, 0.0001026940000000004, 0.00010262500000000202, 0.00010312500000000252, 0.00010281999999999653, 0.00010266700000000073, 0.00010295899999999969, 0.00010312499999999558, 0.00010254199999999714, 0.00010237500000000177, 0.00010309699999999644, 0.00010265200000000169, 0.00010280599999999696, 0.000102416000000001, 0.00010234699999999569, 0.00010326399999999875, 0.00010279200000000432, 0.00010291700000000098, 0.0001025559999999967, 0.00010281899999999705, 0.00010305499999999773, 0.0001023610000000022, 0.00010279099999999791, 0.00010259700000000288, 0.0001027359999999991, 0.0001028610000000027, 0.00010291700000000098, 0.0001025559999999967, 0.00010274999999999868, 0.00010262500000000202, 0.00010244400000000015, 0.00010233299999999612, 0.0001029160000000015, 0.00010291700000000098, 0.00010304199999999764, 0.00010286099999999576, 0.00010244499999999962, 0.00010294500000000012, 0.00010299999999999893, 0.00010322200000000004, 0.00010301299999999902]</msg>
<status status="PASS" starttime="20201117 14:42:32.991" endtime="20201117 14:42:32.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.980" endtime="20201117 14:42:32.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.003" endtime="20201117 14:42:33.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.012" endtime="20201117 14:42:33.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.007" endtime="20201117 14:42:33.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.999" endtime="20201117 14:42:33.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.479" endtime="20201117 14:42:33.037"></status>
</kw>
<msg timestamp="20201117 14:42:33.038" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.060" endtime="20201117 14:42:33.083"></status>
</kw>
<msg timestamp="20201117 14:42:33.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.057" endtime="20201117 14:42:33.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.086" endtime="20201117 14:42:33.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.093" endtime="20201117 14:42:33.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.049" endtime="20201117 14:42:33.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.043" endtime="20201117 14:42:33.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.116" endtime="20201117 14:42:33.458"></status>
</kw>
<msg timestamp="20201117 14:42:33.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041796056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.113" endtime="20201117 14:42:33.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041796056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.467" endtime="20201117 14:42:33.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.486" endtime="20201117 14:42:33.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.106" endtime="20201117 14:42:33.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.101" endtime="20201117 14:42:33.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.506" level="INFO">${RESULT} = [{'time': 0.041796056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001023339999999956, 'source_diff': 0.0001023339999999956}, {'time': 0.041911069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.497" endtime="20201117 14:42:33.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.536" level="INFO">${ACCURACY} = {'source_diff': [0.0001023339999999956, 0.00010244400000000015, 0.00010308399999999635, 0.00010308400000000328, 0.00010248700000000527, 0.00010259700000000288, 0.00010320800000000047, 0.00010313900000...</msg>
<status status="PASS" starttime="20201117 14:42:33.508" endtime="20201117 14:42:33.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.547" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.544" endtime="20201117 14:42:33.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.552" level="INFO">VALUE: [0.0001023339999999956, 0.00010244400000000015, 0.00010308399999999635, 0.00010308400000000328, 0.00010248700000000527, 0.00010259700000000288, 0.00010320800000000047, 0.00010313900000000209, 0.00010275000000000561, 0.00010272199999999954, 0.00010299999999999893, 0.00010245900000000613, 0.00010279199999999739, 0.00010318000000000133, 0.00010233400000000253, 0.00010237500000000177, 0.00010265200000000169, 0.00010247199999999929, 0.00010290300000000141, 0.00010241699999999354, 0.00010312499999999558, 0.00010238900000000134, 0.00010222199999999904, 0.0001031810000000008, 0.00010261100000000245, 0.00010274999999999868, 0.00010244400000000015, 0.00010237499999999483, 0.00010234699999999569, 0.00010243100000000005, 0.00010313900000000209, 0.0001030559999999972, 0.00010245899999999919, 0.00010233400000000253, 0.00010304099999999816, 0.00010237500000000177, 0.00010270799999999997, 0.00010266699999999379, 0.00010327799999999832, 0.00010280599999999696, 0.00010326399999999875, 0.00010309700000000338, 0.0001026940000000004, 0.0001025410000000046, 0.00010261099999999551, 0.00010261100000000245, 0.00010326399999999875, 0.00010294400000000065, 0.00010232000000000296, 0.00010311099999999601]</msg>
<status status="PASS" starttime="20201117 14:42:33.549" endtime="20201117 14:42:33.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.537" endtime="20201117 14:42:33.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.561" endtime="20201117 14:42:33.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.569" endtime="20201117 14:42:33.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.565" endtime="20201117 14:42:33.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.556" endtime="20201117 14:42:33.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.039" endtime="20201117 14:42:33.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.475" endtime="20201117 14:42:33.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.474" endtime="20201117 14:42:33.596"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.601" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.623" endtime="20201117 14:42:33.646"></status>
</kw>
<msg timestamp="20201117 14:42:33.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.619" endtime="20201117 14:42:33.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.650" endtime="20201117 14:42:33.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.657" endtime="20201117 14:42:33.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.612" endtime="20201117 14:42:33.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.606" endtime="20201117 14:42:33.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.681" endtime="20201117 14:42:34.022"></status>
</kw>
<msg timestamp="20201117 14:42:34.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046698917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046802972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.678" endtime="20201117 14:42:34.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046698917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046802972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.032" endtime="20201117 14:42:34.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.051" endtime="20201117 14:42:34.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.670" endtime="20201117 14:42:34.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.665" endtime="20201117 14:42:34.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.069" level="INFO">${RESULT} = [{'time': 0.046802972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010405499999999873, 'source_diff': 0.00010405499999999873}, {'time': 0.046915958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:34.060" endtime="20201117 14:42:34.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.099" level="INFO">${ACCURACY} = {'source_diff': [0.00010405499999999873, 0.00010349999999999943, 0.0001038610000000037, 0.00010344400000000115, 0.00010327799999999832, 0.00010341700000000148, 0.00010399999999999993, 0.00010341600000...</msg>
<status status="PASS" starttime="20201117 14:42:34.071" endtime="20201117 14:42:34.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.110" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.108" endtime="20201117 14:42:34.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.116" level="INFO">VALUE: [0.00010405499999999873, 0.00010349999999999943, 0.0001038610000000037, 0.00010344400000000115, 0.00010327799999999832, 0.00010341700000000148, 0.00010399999999999993, 0.000103416000000002, 0.00010418000000000233, 0.00010354099999999866, 0.00010391599999999557, 0.00010395900000000069, 0.00010377799999999882, 0.00010358400000000378, 0.00010369500000000087, 0.00010381999999999753, 0.0001040139999999995, 0.00010358399999999685, 0.0001036940000000014, 0.00010372200000000054, 0.00010413900000000309, 0.00010402799999999907, 0.00010334700000000363, 0.00010344500000000062, 0.00010377799999999882, 0.00010387499999999633, 0.00010369500000000087, 0.00010362500000000302, 0.0001038889999999959, 0.00010363900000000259, 0.00010352799999999857, 0.00010344400000000115, 0.00010369399999999446, 0.00010377800000000575, 0.00010379199999999839, 0.00010388900000000284, 0.00010363900000000259, 0.00010359699999999694, 0.00010383299999999762, 0.00010366700000000173, 0.00010365300000000216, 0.00010404199999999864, 0.00010369399999999446, 0.00010376399999999925, 0.00010377799999999882, 0.00010379199999999839, 0.00010359800000000335, 0.00010416599999999582, 0.00010345799999999378, 0.00010338900000000234]</msg>
<status status="PASS" starttime="20201117 14:42:34.113" endtime="20201117 14:42:34.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.101" endtime="20201117 14:42:34.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.124" endtime="20201117 14:42:34.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.133" endtime="20201117 14:42:34.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.128" endtime="20201117 14:42:34.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.120" endtime="20201117 14:42:34.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.602" endtime="20201117 14:42:34.158"></status>
</kw>
<msg timestamp="20201117 14:42:34.159" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.181" endtime="20201117 14:42:34.204"></status>
</kw>
<msg timestamp="20201117 14:42:34.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.177" endtime="20201117 14:42:34.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.208" endtime="20201117 14:42:34.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.215" endtime="20201117 14:42:34.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.170" endtime="20201117 14:42:34.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.164" endtime="20201117 14:42:34.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.238" endtime="20201117 14:42:34.587"></status>
</kw>
<msg timestamp="20201117 14:42:34.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.235" endtime="20201117 14:42:34.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.596" endtime="20201117 14:42:34.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.615" endtime="20201117 14:42:34.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.228" endtime="20201117 14:42:34.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.223" endtime="20201117 14:42:34.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.634" level="INFO">${RESULT} = [{'time': 0.041483736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010394400000000165, 'source_diff': 0.00010394400000000165}, {'time': 0.041599722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:34.625" endtime="20201117 14:42:34.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.664" level="INFO">${ACCURACY} = {'source_diff': [0.00010394400000000165, 0.00010404099999999916, 0.0001042219999999941, 0.0001040139999999995, 0.00010377799999999882, 0.00010408299999999787, 0.00010331999999999703, 0.000103833999999...</msg>
<status status="PASS" starttime="20201117 14:42:34.636" endtime="20201117 14:42:34.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.677" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.674" endtime="20201117 14:42:34.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.683" level="INFO">VALUE: [0.00010394400000000165, 0.00010404099999999916, 0.0001042219999999941, 0.0001040139999999995, 0.00010377799999999882, 0.00010408299999999787, 0.00010331999999999703, 0.0001038339999999971, 0.00010411199999999649, 0.00010390200000000294, 0.00010379199999999839, 0.00010416700000000223, 0.00010409699999999744, 0.00010379199999999839, 0.00010354199999999814, 0.00010427799999999932, 0.00010338799999999593, 0.00010329099999999841, 0.00010333299999999712, 0.00010352699999999909, 0.00010416600000000276, 0.00010383299999999762, 0.00010333300000000406, 0.00010341700000000148, 0.00010349999999999943, 0.00010391699999999504, 0.00010417999999999539, 0.00010323699999999908, 0.00010347299999999976, 0.00010362500000000302, 0.00010409699999999744, 0.00010359699999999694, 0.00010398600000000036, 0.00010362499999999608, 0.00010361100000000345, 0.00010379200000000532, 0.00010365199999999575, 0.0001033339999999966, 0.0001036940000000014, 0.00010409700000000438, 0.00010329099999999841, 0.00010363899999999565, 0.00010402799999999907, 0.0001038610000000037, 0.00010381899999999805, 0.00010409699999999744, 0.000103513999999999, 0.00010366699999999479, 0.00010415199999999625, 0.00010355500000000517]</msg>
<status status="PASS" starttime="20201117 14:42:34.679" endtime="20201117 14:42:34.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.666" endtime="20201117 14:42:34.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.693" endtime="20201117 14:42:34.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.702" endtime="20201117 14:42:34.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.697" endtime="20201117 14:42:34.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.687" endtime="20201117 14:42:34.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.160" endtime="20201117 14:42:34.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.598" endtime="20201117 14:42:34.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.597" endtime="20201117 14:42:34.729"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.734" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.757" endtime="20201117 14:42:34.780"></status>
</kw>
<msg timestamp="20201117 14:42:34.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.753" endtime="20201117 14:42:34.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.783" endtime="20201117 14:42:34.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.789" endtime="20201117 14:42:34.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.746" endtime="20201117 14:42:34.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.739" endtime="20201117 14:42:34.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.813" endtime="20201117 14:42:35.133"></status>
</kw>
<msg timestamp="20201117 14:42:35.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047844583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047949611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.810" endtime="20201117 14:42:35.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047844583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047949611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.142" endtime="20201117 14:42:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.161" endtime="20201117 14:42:35.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.803" endtime="20201117 14:42:35.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.798" endtime="20201117 14:42:35.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.178" level="INFO">${RESULT} = [{'time': 0.047949611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010502800000000007, 'source_diff': 0.00010502800000000007}, {'time': 0.048068708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.169" endtime="20201117 14:42:35.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.208" level="INFO">${ACCURACY} = {'source_diff': [0.00010502800000000007, 0.00010477700000000034, 0.00010493099999999561, 0.00010469500000000187, 0.00010461099999999751, 0.00010445800000000172, 0.00010516700000000323, 0.0001045969999...</msg>
<status status="PASS" starttime="20201117 14:42:35.180" endtime="20201117 14:42:35.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.220" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.217" endtime="20201117 14:42:35.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.225" level="INFO">VALUE: [0.00010502800000000007, 0.00010477700000000034, 0.00010493099999999561, 0.00010469500000000187, 0.00010461099999999751, 0.00010445800000000172, 0.00010516700000000323, 0.00010459699999999794, 0.00010434699999999769, 0.00010525000000000118, 0.00010513900000000409, 0.00010512499999999758, 0.00010519499999999543, 0.00010490300000000341, 0.00010438900000000334, 0.00010500000000000093, 0.00010487499999999733, 0.00010483299999999862, 0.00010479199999999939, 0.00010462499999999708, 0.00010495800000000222, 0.0001045559999999987, 0.00010482000000000546, 0.0001045559999999987, 0.0001043480000000041, 0.00010445799999999478, 0.00010479099999999991, 0.00010494399999999571, 0.00010498600000000136, 0.00010480499999999948, 0.00010429199999999889, 0.00010458400000000478, 0.00010495900000000169, 0.00010502800000000007, 0.00010502800000000007, 0.00010436099999999726, 0.00010473599999999417, 0.00010518000000000333, 0.00010498600000000136, 0.00010480499999999948, 0.00010476400000000025, 0.00010443100000000205, 0.00010425000000000018, 0.00010520799999999553, 0.00010458399999999785, 0.00010500000000000093, 0.00010437499999999683, 0.00010459700000000488, 0.00010436099999999726, 0.00010509699999999844]</msg>
<status status="PASS" starttime="20201117 14:42:35.222" endtime="20201117 14:42:35.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.210" endtime="20201117 14:42:35.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.234" endtime="20201117 14:42:35.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.242" endtime="20201117 14:42:35.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.238" endtime="20201117 14:42:35.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.229" endtime="20201117 14:42:35.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.735" endtime="20201117 14:42:35.268"></status>
</kw>
<msg timestamp="20201117 14:42:35.269" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.291" endtime="20201117 14:42:35.314"></status>
</kw>
<msg timestamp="20201117 14:42:35.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.287" endtime="20201117 14:42:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.317" endtime="20201117 14:42:35.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.324" endtime="20201117 14:42:35.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.280" endtime="20201117 14:42:35.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.274" endtime="20201117 14:42:35.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.347" endtime="20201117 14:42:35.686"></status>
</kw>
<msg timestamp="20201117 14:42:35.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041304111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.344" endtime="20201117 14:42:35.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041304111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.696" endtime="20201117 14:42:35.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.714" endtime="20201117 14:42:35.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.337" endtime="20201117 14:42:35.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.332" endtime="20201117 14:42:35.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.733" level="INFO">${RESULT} = [{'time': 0.041304111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010508299999999887, 'source_diff': 0.00010508299999999887}, {'time': 0.041424125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.725" endtime="20201117 14:42:35.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.763" level="INFO">${ACCURACY} = {'source_diff': [0.00010508299999999887, 0.00010487499999999733, 0.00010524999999999424, 0.0001051940000000029, 0.0001045559999999987, 0.00010502800000000007, 0.00010430599999999846, 0.000104901999999...</msg>
<status status="PASS" starttime="20201117 14:42:35.735" endtime="20201117 14:42:35.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.774" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.772" endtime="20201117 14:42:35.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.780" level="INFO">VALUE: [0.00010508299999999887, 0.00010487499999999733, 0.00010524999999999424, 0.0001051940000000029, 0.0001045559999999987, 0.00010502800000000007, 0.00010430599999999846, 0.000104901999999997, 0.00010481899999999905, 0.00010448600000000086, 0.00010444399999999521, 0.0001046810000000023, 0.00010476400000000025, 0.00010463900000000359, 0.00010526400000000075, 0.00010456900000000574, 0.00010497200000000179, 0.00010495800000000222, 0.00010487500000000427, 0.00010462499999999708, 0.00010430599999999846, 0.00010506999999999878, 0.00010438900000000334, 0.00010443099999999511, 0.00010473599999999417, 0.00010515199999999725, 0.00010475000000000068, 0.00010516700000000323, 0.00010476400000000025, 0.00010486099999999776, 0.00010437499999999683, 0.0001052219999999951, 0.00010477799999999982, 0.0001045559999999987, 0.00010476400000000025, 0.00010506999999999878, 0.00010497200000000179, 0.00010497200000000179, 0.00010459700000000488, 0.00010502700000000059, 0.0001051940000000029, 0.00010447200000000129, 0.00010462499999999708, 0.00010468099999999536, 0.00010488900000000384, 0.00010437499999999683, 0.00010517999999999639, 0.0001044019999999965, 0.000104514, 0.00010494399999999571]</msg>
<status status="PASS" starttime="20201117 14:42:35.777" endtime="20201117 14:42:35.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.765" endtime="20201117 14:42:35.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.790" endtime="20201117 14:42:35.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.798" endtime="20201117 14:42:35.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.794" endtime="20201117 14:42:35.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.785" endtime="20201117 14:42:35.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.270" endtime="20201117 14:42:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.731" endtime="20201117 14:42:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.729" endtime="20201117 14:42:35.825"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.830" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.852" endtime="20201117 14:42:35.875"></status>
</kw>
<msg timestamp="20201117 14:42:35.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.848" endtime="20201117 14:42:35.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.878" endtime="20201117 14:42:35.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.884" endtime="20201117 14:42:35.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.841" endtime="20201117 14:42:35.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.835" endtime="20201117 14:42:35.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.908" endtime="20201117 14:42:36.250"></status>
</kw>
<msg timestamp="20201117 14:42:36.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047040792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.905" endtime="20201117 14:42:36.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047040792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.259" endtime="20201117 14:42:36.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.278" endtime="20201117 14:42:36.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.897" endtime="20201117 14:42:36.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.893" endtime="20201117 14:42:36.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.295" level="INFO">${RESULT} = [{'time': 0.047040792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010623599999999567, 'source_diff': 0.00010623599999999567}, {'time': 0.047157764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.287" endtime="20201117 14:42:36.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.326" level="INFO">${ACCURACY} = {'source_diff': [0.00010623599999999567, 0.00010611099999999901, 0.00010537499999999783, 0.00010558399999999885, 0.000105416000000004, 0.00010604200000000064, 0.00010577800000000082, 0.000106028000000...</msg>
<status status="PASS" starttime="20201117 14:42:36.298" endtime="20201117 14:42:36.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.337" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.335" endtime="20201117 14:42:36.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.343" level="INFO">VALUE: [0.00010623599999999567, 0.00010611099999999901, 0.00010537499999999783, 0.00010558399999999885, 0.000105416000000004, 0.00010604200000000064, 0.00010577800000000082, 0.00010602800000000107, 0.00010583299999999962, 0.00010611099999999901, 0.00010604200000000064, 0.0001057219999999956, 0.00010584699999999919, 0.00010580599999999996, 0.00010566600000000426, 0.00010554100000000066, 0.00010594399999999671, 0.00010620799999999653, 0.00010612499999999858, 0.00010554200000000014, 0.00010537500000000477, 0.00010629200000000089, 0.00010566700000000373, 0.0001053339999999986, 0.00010554100000000066, 0.00010531899999999955, 0.00010559699999999894, 0.00010561099999999851, 0.00010541699999999654, 0.00010584699999999919, 0.00010591699999999704, 0.0001057360000000021, 0.00010620800000000347, 0.00010536099999999826, 0.00010605500000000073, 0.00010584699999999919, 0.00010580599999999996, 0.00010541599999999707, 0.00010622200000000304, 0.00010580599999999996, 0.00010619499999999643, 0.00010534699999999869, 0.00010580599999999996, 0.00010604100000000116, 0.00010583299999999962, 0.00010601399999999456, 0.00010611099999999901, 0.00010540300000000391, 0.00010584699999999919, 0.0001062360000000026]</msg>
<status status="PASS" starttime="20201117 14:42:36.339" endtime="20201117 14:42:36.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.328" endtime="20201117 14:42:36.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.352" endtime="20201117 14:42:36.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.361" endtime="20201117 14:42:36.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.356" endtime="20201117 14:42:36.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.348" endtime="20201117 14:42:36.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.831" endtime="20201117 14:42:36.386"></status>
</kw>
<msg timestamp="20201117 14:42:36.387" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.408" endtime="20201117 14:42:36.432"></status>
</kw>
<msg timestamp="20201117 14:42:36.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.405" endtime="20201117 14:42:36.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.435" endtime="20201117 14:42:36.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.441" endtime="20201117 14:42:36.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.398" endtime="20201117 14:42:36.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.392" endtime="20201117 14:42:36.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.465" endtime="20201117 14:42:36.804"></status>
</kw>
<msg timestamp="20201117 14:42:36.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041356444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.462" endtime="20201117 14:42:36.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041356444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.814" endtime="20201117 14:42:36.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.832" endtime="20201117 14:42:36.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.454" endtime="20201117 14:42:36.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.449" endtime="20201117 14:42:36.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.851" level="INFO">${RESULT} = [{'time': 0.041356444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010547200000000229, 'source_diff': 0.00010547200000000229}, {'time': 0.041471444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.842" endtime="20201117 14:42:36.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.881" level="INFO">${ACCURACY} = {'source_diff': [0.00010547200000000229, 0.0001061940000000039, 0.00010613899999999815, 0.00010626399999999481, 0.00010569399999999646, 0.00010591699999999704, 0.00010613900000000509, 0.00010605600000...</msg>
<status status="PASS" starttime="20201117 14:42:36.853" endtime="20201117 14:42:36.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.893" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.890" endtime="20201117 14:42:36.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.898" level="INFO">VALUE: [0.00010547200000000229, 0.0001061940000000039, 0.00010613899999999815, 0.00010626399999999481, 0.00010569399999999646, 0.00010591699999999704, 0.00010613900000000509, 0.0001060560000000002, 0.00010584799999999867, 0.00010604100000000116, 0.00010612500000000552, 0.00010531899999999955, 0.000105514000000001, 0.00010559699999999894, 0.0001061940000000039, 0.00010611099999999901, 0.0001055559999999997, 0.00010541700000000348, 0.00010619500000000337, 0.00010561099999999851, 0.00010604099999999422, 0.00010598600000000236, 0.00010561099999999851, 0.00010616699999999729, 0.00010548600000000186, 0.00010569500000000287, 0.00010618099999999686, 0.00010527800000000032, 0.00010622300000000251, 0.00010591599999999757, 0.00010572200000000254, 0.00010625000000000218, 0.00010620800000000347, 0.0001062360000000026, 0.0001060140000000015, 0.00010598600000000236, 0.00010552800000000057, 0.00010580599999999996, 0.00010534799999999817, 0.0001055689999999998, 0.00010591599999999757, 0.00010533299999999912, 0.00010538900000000434, 0.00010591700000000398, 0.0001053339999999986, 0.0001055559999999997, 0.00010591699999999704, 0.00010593100000000355, 0.00010577800000000082, 0.0001062360000000026]</msg>
<status status="PASS" starttime="20201117 14:42:36.895" endtime="20201117 14:42:36.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.884" endtime="20201117 14:42:36.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.907" endtime="20201117 14:42:36.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.916" endtime="20201117 14:42:36.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.911" endtime="20201117 14:42:36.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.903" endtime="20201117 14:42:36.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.388" endtime="20201117 14:42:36.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.827" endtime="20201117 14:42:36.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.825" endtime="20201117 14:42:36.942"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.948" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.970" endtime="20201117 14:42:36.993"></status>
</kw>
<msg timestamp="20201117 14:42:36.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.966" endtime="20201117 14:42:36.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.997" endtime="20201117 14:42:37.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.003" endtime="20201117 14:42:37.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.959" endtime="20201117 14:42:37.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.953" endtime="20201117 14:42:37.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.028" endtime="20201117 14:42:37.372"></status>
</kw>
<msg timestamp="20201117 14:42:37.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047486722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.024" endtime="20201117 14:42:37.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047486722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.381" endtime="20201117 14:42:37.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.399" endtime="20201117 14:42:37.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.017" endtime="20201117 14:42:37.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.012" endtime="20201117 14:42:37.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.424" level="INFO">${RESULT} = [{'time': 0.047593167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010644499999999668, 'source_diff': 0.00010644499999999668}, {'time': 0.04771125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:37.415" endtime="20201117 14:42:37.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.454" level="INFO">${ACCURACY} = {'source_diff': [0.00010644499999999668, 0.00010733299999999418, 0.00010687499999999933, 0.00010684700000000019, 0.00010649999999999549, 0.00010694399999999771, 0.00010675000000000268, 0.0001070000000...</msg>
<status status="PASS" starttime="20201117 14:42:37.426" endtime="20201117 14:42:37.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.465" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.463" endtime="20201117 14:42:37.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.471" level="INFO">VALUE: [0.00010644499999999668, 0.00010733299999999418, 0.00010687499999999933, 0.00010684700000000019, 0.00010649999999999549, 0.00010694399999999771, 0.00010675000000000268, 0.00010700000000000293, 0.00010691699999999804, 0.00010700000000000293, 0.00010697300000000326, 0.00010649999999999549, 0.00010692999999999814, 0.00010642999999999764, 0.00010727799999999538, 0.00010701399999999556, 0.0001066940000000044, 0.00010633300000000012, 0.00010669500000000387, 0.00010652799999999463, 0.00010634699999999969, 0.00010661099999999951, 0.00010676300000000277, 0.00010719399999999796, 0.00010645799999999678, 0.00010717999999999839, 0.00010688799999999943, 0.00010641699999999754, 0.00010712499999999958, 0.00010654200000000114, 0.00010636099999999926, 0.00010712499999999958, 0.00010684700000000019, 0.00010659699999999994, 0.00010674999999999574, 0.00010659699999999994, 0.00010630600000000046, 0.0001072360000000036, 0.00010686199999999924, 0.00010694499999999718, 0.00010683300000000062, 0.00010636099999999926, 0.00010633300000000012, 0.00010681900000000105, 0.00010632000000000003, 0.00010663899999999865, 0.00010713899999999915, 0.00010698600000000336, 0.00010712499999999958, 0.0001065690000000008]</msg>
<status status="PASS" starttime="20201117 14:42:37.468" endtime="20201117 14:42:37.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.456" endtime="20201117 14:42:37.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.480" endtime="20201117 14:42:37.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.488" endtime="20201117 14:42:37.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.484" endtime="20201117 14:42:37.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.475" endtime="20201117 14:42:37.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.949" endtime="20201117 14:42:37.514"></status>
</kw>
<msg timestamp="20201117 14:42:37.514" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.536" endtime="20201117 14:42:37.559"></status>
</kw>
<msg timestamp="20201117 14:42:37.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.532" endtime="20201117 14:42:37.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.562" endtime="20201117 14:42:37.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.568" endtime="20201117 14:42:37.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.525" endtime="20201117 14:42:37.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.519" endtime="20201117 14:42:37.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.592" endtime="20201117 14:42:37.932"></status>
</kw>
<msg timestamp="20201117 14:42:37.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041591486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.589" endtime="20201117 14:42:37.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041591486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.941" endtime="20201117 14:42:37.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.960" endtime="20201117 14:42:37.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.581" endtime="20201117 14:42:37.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.577" endtime="20201117 14:42:37.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.979" level="INFO">${RESULT} = [{'time': 0.041591486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010677799999999488, 'source_diff': 0.00010677799999999488}, {'time': 0.041709569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.970" endtime="20201117 14:42:37.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.009" level="INFO">${ACCURACY} = {'source_diff': [0.00010677799999999488, 0.00010636099999999926, 0.0001068889999999989, 0.00010711100000000001, 0.000106514000000002, 0.00010634799999999917, 0.0001065690000000008, 0.00010694399999999...</msg>
<status status="PASS" starttime="20201117 14:42:37.981" endtime="20201117 14:42:38.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.021" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.018" endtime="20201117 14:42:38.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.027" level="INFO">VALUE: [0.00010677799999999488, 0.00010636099999999926, 0.0001068889999999989, 0.00010711100000000001, 0.000106514000000002, 0.00010634799999999917, 0.0001065690000000008, 0.00010694399999999771, 0.00010699999999999599, 0.00010644399999999721, 0.00010650000000000243, 0.00010697199999999685, 0.00010654200000000114, 0.0001066940000000044, 0.00010630600000000046, 0.00010661199999999899, 0.00010693000000000508, 0.0001068889999999989, 0.00010694399999999771, 0.00010702800000000207, 0.0001068889999999989, 0.0001063889999999984, 0.00010679200000000139, 0.0001071810000000048, 0.00010673700000000258, 0.0001065690000000008, 0.00010711100000000001, 0.00010658300000000037, 0.00010684700000000019, 0.00010690300000000541, 0.00010691699999999804, 0.00010644500000000362, 0.00010697299999999632, 0.000107208999999997, 0.00010662499999999908, 0.00010726399999999581, 0.00010692999999999814, 0.00010719399999999796, 0.0001066810000000043, 0.00010658300000000037, 0.0001070140000000025, 0.00010715299999999872, 0.00010695899999999675, 0.00010649999999999549, 0.00010713899999999915, 0.00010655500000000123, 0.00010652800000000157, 0.0001070690000000013, 0.00010631900000000055, 0.0001068889999999989]</msg>
<status status="PASS" starttime="20201117 14:42:38.023" endtime="20201117 14:42:38.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.011" endtime="20201117 14:42:38.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.036" endtime="20201117 14:42:38.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.045" endtime="20201117 14:42:38.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.040" endtime="20201117 14:42:38.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.031" endtime="20201117 14:42:38.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.515" endtime="20201117 14:42:38.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.945" endtime="20201117 14:42:38.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.943" endtime="20201117 14:42:38.072"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.077" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.099" endtime="20201117 14:42:38.123"></status>
</kw>
<msg timestamp="20201117 14:42:38.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.095" endtime="20201117 14:42:38.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.126" endtime="20201117 14:42:38.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.132" endtime="20201117 14:42:38.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.088" endtime="20201117 14:42:38.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.082" endtime="20201117 14:42:38.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.157" endtime="20201117 14:42:38.470"></status>
</kw>
<msg timestamp="20201117 14:42:38.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047210597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047318458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.154" endtime="20201117 14:42:38.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047210597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047318458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.475" endtime="20201117 14:42:38.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.483" endtime="20201117 14:42:38.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.146" endtime="20201117 14:42:38.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.141" endtime="20201117 14:42:38.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.491" level="INFO">${RESULT} = [{'time': 0.047318458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010786100000000076, 'source_diff': 0.00010786100000000076}, {'time': 0.047447417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:38.487" endtime="20201117 14:42:38.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.504" level="INFO">${ACCURACY} = {'source_diff': [0.00010786100000000076, 0.00010787500000000033, 0.00010741599999999907, 0.00010737499999999983, 0.0001076940000000054, 0.00010730500000000198, 0.00010824999999999724, 0.00010793099999...</msg>
<status status="PASS" starttime="20201117 14:42:38.492" endtime="20201117 14:42:38.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.510" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.509" endtime="20201117 14:42:38.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.512" level="INFO">VALUE: [0.00010786100000000076, 0.00010787500000000033, 0.00010741599999999907, 0.00010737499999999983, 0.0001076940000000054, 0.00010730500000000198, 0.00010824999999999724, 0.00010793099999999861, 0.00010729200000000189, 0.00010727800000000232, 0.00010819500000000537, 0.0001074019999999995, 0.00010786100000000076, 0.00010730500000000198, 0.00010795800000000522, 0.00010766700000000573, 0.00010786100000000076, 0.0001078889999999999, 0.00010787500000000033, 0.00010758400000000085, 0.0001077219999999976, 0.00010787500000000033, 0.00010747199999999735, 0.00010766699999999879, 0.00010747199999999735, 0.00010779200000000239, 0.00010752799999999563, 0.00010787500000000033, 0.00010779200000000239, 0.00010795799999999828, 0.00010759800000000042, 0.00010758300000000137, 0.00010809700000000144, 0.00010813900000000015, 0.00010799999999999699, 0.0001076810000000053, 0.00010801399999999656, 0.0001077219999999976, 0.00010767999999999889, 0.00010758400000000085, 0.00010826400000000375, 0.00010729100000000241, 0.00010817999999999939, 0.00010812499999999364, 0.00010772300000000401, 0.00010780600000000196, 0.00010822299999999757, 0.00010815299999999972, 0.00010748599999999692, 0.0001075690000000018]</msg>
<status status="PASS" starttime="20201117 14:42:38.511" endtime="20201117 14:42:38.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.505" endtime="20201117 14:42:38.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.516" endtime="20201117 14:42:38.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.520" endtime="20201117 14:42:38.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.518" endtime="20201117 14:42:38.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.514" endtime="20201117 14:42:38.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.078" endtime="20201117 14:42:38.542"></status>
</kw>
<msg timestamp="20201117 14:42:38.542" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.552" endtime="20201117 14:42:38.572"></status>
</kw>
<msg timestamp="20201117 14:42:38.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.550" endtime="20201117 14:42:38.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.574" endtime="20201117 14:42:38.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.577" endtime="20201117 14:42:38.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.547" endtime="20201117 14:42:38.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.544" endtime="20201117 14:42:38.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.588" endtime="20201117 14:42:38.898"></status>
</kw>
<msg timestamp="20201117 14:42:38.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024492722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.586" endtime="20201117 14:42:38.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024492722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.907" endtime="20201117 14:42:38.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.925" endtime="20201117 14:42:38.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.583" endtime="20201117 14:42:38.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.581" endtime="20201117 14:42:38.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.944" level="INFO">${RESULT} = [{'time': 0.024492722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010826400000000028, 'source_diff': 0.00010826400000000028}, {'time': 0.024616806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:38.936" endtime="20201117 14:42:38.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.974" level="INFO">${ACCURACY} = {'source_diff': [0.00010826400000000028, 0.00010797300000000079, 0.00010740299999999897, 0.00010741700000000201, 0.00010791700000000251, 0.00010768099999999836, 0.00010772299999999707, 0.0001073330000...</msg>
<status status="PASS" starttime="20201117 14:42:38.946" endtime="20201117 14:42:38.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.985" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.983" endtime="20201117 14:42:38.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.991" level="INFO">VALUE: [0.00010826400000000028, 0.00010797300000000079, 0.00010740299999999897, 0.00010741700000000201, 0.00010791700000000251, 0.00010768099999999836, 0.00010772299999999707, 0.00010733300000000112, 0.00010740200000000297, 0.00010784700000000119, 0.00010815299999999972, 0.00010731899999999808, 0.00010737499999999983, 0.00010734700000000069, 0.00010823599999999767, 0.00010749999999999996, 0.0001074019999999995, 0.00010805499999999926, 0.00010777699999999987, 0.0001080560000000022, 0.00010756899999999833, 0.00010762500000000008, 0.00010826400000000028, 0.00010809700000000144, 0.00010779199999999892, 0.00010800000000000046, 0.00010809700000000144, 0.0001074019999999995, 0.00010748600000000039, 0.000108208000000002, 0.0001077500000000002, 0.00010719399999999796, 0.00010749999999999996, 0.00010820900000000147, 0.00010795900000000122, 0.00010751300000000005, 0.00010777700000000334, 0.00010791599999999957, 0.00010794399999999871, 0.00010729199999999842, 0.0001077080000000015, 0.00010786100000000076, 0.0001073889999999994, 0.00010815299999999972, 0.00010809800000000092, 0.00010795800000000175, 0.00010779099999999944, 0.00010827799999999985, 0.00010816699999999929, 0.00010794399999999871]</msg>
<status status="PASS" starttime="20201117 14:42:38.988" endtime="20201117 14:42:38.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.976" endtime="20201117 14:42:38.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.999" endtime="20201117 14:42:39.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.008" endtime="20201117 14:42:39.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.004" endtime="20201117 14:42:39.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.995" endtime="20201117 14:42:39.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.542" endtime="20201117 14:42:39.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.074" endtime="20201117 14:42:39.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.073" endtime="20201117 14:42:39.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.735" endtime="20201117 14:42:39.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.046" endtime="20201117 14:42:39.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.042" endtime="20201117 14:42:39.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.039" endtime="20201117 14:42:39.072"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:49.599" endtime="20201117 14:42:39.073" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.094" endtime="20201117 14:42:39.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.090" endtime="20201117 14:42:39.117"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.154" endtime="20201117 14:42:39.173"></status>
</kw>
<msg timestamp="20201117 14:42:39.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.147" endtime="20201117 14:42:39.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.176" endtime="20201117 14:42:39.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.187" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:42:39.183" endtime="20201117 14:42:39.188"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:39.140" endtime="20201117 14:42:39.190"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:39.134" endtime="20201117 14:42:39.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.131" endtime="20201117 14:42:39.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:42:39.200" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:42:39.198" endtime="20201117 14:42:39.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.194" endtime="20201117 14:42:39.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.129" endtime="20201117 14:42:39.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.127" endtime="20201117 14:42:39.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.204" endtime="20201117 14:42:39.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.123" endtime="20201117 14:42:39.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.119" endtime="20201117 14:42:39.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.087" endtime="20201117 14:42:39.211"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.219" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.241" endtime="20201117 14:42:39.260"></status>
</kw>
<msg timestamp="20201117 14:42:39.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.238" endtime="20201117 14:42:39.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.263" endtime="20201117 14:42:39.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.270" endtime="20201117 14:42:39.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.230" endtime="20201117 14:42:39.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.225" endtime="20201117 14:42:39.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.294" endtime="20201117 14:42:39.657"></status>
</kw>
<msg timestamp="20201117 14:42:39.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140686208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.291" endtime="20201117 14:42:39.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140686208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.666" endtime="20201117 14:42:39.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.685" endtime="20201117 14:42:39.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.283" endtime="20201117 14:42:39.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.279" endtime="20201117 14:42:39.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.703" level="INFO">${RESULT} = [{'time': 0.140713736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.140747736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:39.694" endtime="20201117 14:42:39.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.736" level="INFO">${ACCURACY} = {'source_diff': [2.7527999999998887e-05, 2.7722000000007796e-05, 2.8000000000000247e-05, 2.7277999999991698e-05, 2.794500000000144e-05, 2.7110999999996332e-05, 2.7514000000006256e-05, 2.72639999999990...</msg>
<status status="PASS" starttime="20201117 14:42:39.705" endtime="20201117 14:42:39.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.747" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.744" endtime="20201117 14:42:39.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.752" level="INFO">VALUE: [2.7527999999998887e-05, 2.7722000000007796e-05, 2.8000000000000247e-05, 2.7277999999991698e-05, 2.794500000000144e-05, 2.7110999999996332e-05, 2.7514000000006256e-05, 2.7263999999999067e-05, 2.7958999999994072e-05, 2.7110999999996332e-05, 2.798599999997986e-05, 2.7597999999989797e-05, 2.7526999999999413e-05, 2.7805999999991338e-05, 2.7166999999994612e-05, 2.7902999999995792e-05, 2.7166999999994612e-05, 2.755500000001243e-05, 2.7388999999988783e-05, 2.7332999999990504e-05, 2.787500000001053e-05, 2.7138999999981595e-05, 2.7472000000000607e-05, 2.790199999999632e-05, 2.7944000000001967e-05, 2.7026999999985035e-05, 2.7860999999990144e-05, 2.7722000000007796e-05, 2.7458000000007976e-05, 2.702799999998451e-05, 2.7374999999996152e-05, 2.7458000000007976e-05, 2.787500000001053e-05, 2.71939999999804e-05, 2.7527999999998887e-05, 2.7638999999995972e-05, 2.7068999999990684e-05, 2.7222000000021174e-05, 2.7028000000012264e-05, 2.7431000000022188e-05, 2.7306000000004715e-05, 2.7042000000004895e-05, 2.7278000000019453e-05, 2.7332999999990504e-05, 2.768100000000162e-05, 2.797199999998723e-05, 2.762500000000334e-05, 2.7820000000011724e-05, 2.708399999998279e-05, 2.7638999999995972e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.749" endtime="20201117 14:42:39.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.737" endtime="20201117 14:42:39.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.761" endtime="20201117 14:42:39.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.769" endtime="20201117 14:42:39.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.765" endtime="20201117 14:42:39.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.756" endtime="20201117 14:42:39.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.221" endtime="20201117 14:42:39.795"></status>
</kw>
<msg timestamp="20201117 14:42:39.796" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.817" endtime="20201117 14:42:39.836"></status>
</kw>
<msg timestamp="20201117 14:42:39.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.814" endtime="20201117 14:42:39.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.839" endtime="20201117 14:42:39.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.847" endtime="20201117 14:42:39.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.807" endtime="20201117 14:42:39.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.801" endtime="20201117 14:42:39.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.870" endtime="20201117 14:42:40.223"></status>
</kw>
<msg timestamp="20201117 14:42:40.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041392403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.867" endtime="20201117 14:42:40.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041392403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.232" endtime="20201117 14:42:40.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.251" endtime="20201117 14:42:40.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.860" endtime="20201117 14:42:40.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.855" endtime="20201117 14:42:40.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.269" level="INFO">${RESULT} = [{'time': 0.041392403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7056000000004465e-05, 'source_diff': 2.7056000000004465e-05}, {'time': 0.041424375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.260" endtime="20201117 14:42:40.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.301" level="INFO">${ACCURACY} = {'source_diff': [2.7056000000004465e-05, 2.7222000000000357e-05, 2.7776999999999663e-05, 2.7013999999998817e-05, 2.711100000000327e-05, 2.7819999999997846e-05, 2.7041999999997957e-05, 2.71950000000006...</msg>
<status status="PASS" starttime="20201117 14:42:40.271" endtime="20201117 14:42:40.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.313" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.310" endtime="20201117 14:42:40.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.318" level="INFO">VALUE: [2.7056000000004465e-05, 2.7222000000000357e-05, 2.7776999999999663e-05, 2.7013999999998817e-05, 2.711100000000327e-05, 2.7819999999997846e-05, 2.7041999999997957e-05, 2.719500000000069e-05, 2.7027999999998387e-05, 2.793100000000187e-05, 2.765300000000248e-05, 2.786100000000402e-05, 2.766599999999564e-05, 2.7930000000002397e-05, 2.7694999999994252e-05, 2.762500000000334e-05, 2.76379999999965e-05, 2.736100000000352e-05, 2.7222000000000357e-05, 2.7082999999997193e-05, 2.7540999999998983e-05, 2.788900000000316e-05, 2.7818999999998373e-05, 2.7013999999998817e-05, 2.7542000000005395e-05, 2.7249999999999497e-05, 2.7736000000000427e-05, 2.7916999999995362e-05, 2.7582999999997693e-05, 2.74170000000018e-05, 2.7832999999997943e-05, 2.731900000000481e-05, 2.766700000000205e-05, 2.7291999999998207e-05, 2.712500000000284e-05, 2.7542000000005395e-05, 2.7541999999998457e-05, 2.788900000000316e-05, 2.7638999999995972e-05, 2.7736000000000427e-05, 2.7180000000001647e-05, 2.7596999999997263e-05, 2.766700000000205e-05, 2.740300000000223e-05, 2.7848000000003925e-05, 2.7541999999998457e-05, 2.72369999999994e-05, 2.8027999999999387e-05, 2.793100000000187e-05, 2.7776999999999663e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.315" endtime="20201117 14:42:40.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.303" endtime="20201117 14:42:40.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.327" endtime="20201117 14:42:40.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.335" endtime="20201117 14:42:40.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.331" endtime="20201117 14:42:40.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.322" endtime="20201117 14:42:40.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.797" endtime="20201117 14:42:40.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.216" endtime="20201117 14:42:40.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.215" endtime="20201117 14:42:40.362"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.367" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.390" endtime="20201117 14:42:40.410"></status>
</kw>
<msg timestamp="20201117 14:42:40.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.387" endtime="20201117 14:42:40.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.413" endtime="20201117 14:42:40.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.420" endtime="20201117 14:42:40.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.379" endtime="20201117 14:42:40.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.373" endtime="20201117 14:42:40.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.443" endtime="20201117 14:42:40.796"></status>
</kw>
<msg timestamp="20201117 14:42:40.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048130708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048157819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.440" endtime="20201117 14:42:40.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048130708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048157819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.805" endtime="20201117 14:42:40.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.824" endtime="20201117 14:42:40.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.433" endtime="20201117 14:42:40.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.428" endtime="20201117 14:42:40.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.842" level="INFO">${RESULT} = [{'time': 0.048157819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7110999999996332e-05, 'source_diff': 2.7110999999996332e-05}, {'time': 0.048196819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.833" endtime="20201117 14:42:40.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.874" level="INFO">${ACCURACY} = {'source_diff': [2.7110999999996332e-05, 2.734700000000395e-05, 2.7290999999998733e-05, 2.7277999999998637e-05, 2.7208000000000787e-05, 2.7776999999999663e-05, 2.7569999999997596e-05, 2.77779999999991...</msg>
<status status="PASS" starttime="20201117 14:42:40.844" endtime="20201117 14:42:40.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.886" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.883" endtime="20201117 14:42:40.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.891" level="INFO">VALUE: [2.7110999999996332e-05, 2.734700000000395e-05, 2.7290999999998733e-05, 2.7277999999998637e-05, 2.7208000000000787e-05, 2.7776999999999663e-05, 2.7569999999997596e-05, 2.7777999999999137e-05, 2.7277999999998637e-05, 2.7832999999997943e-05, 2.7319999999997346e-05, 2.7402999999995292e-05, 2.7291999999998207e-05, 2.7610999999996833e-05, 2.7819000000005312e-05, 2.7110999999996332e-05, 2.7235999999999927e-05, 2.769399999999478e-05, 2.7860999999997083e-05, 2.7763999999999567e-05, 2.7444999999994002e-05, 2.743100000000137e-05, 2.7569999999997596e-05, 2.718100000000112e-05, 2.794500000000144e-05, 2.7124999999995902e-05, 2.793100000000187e-05, 2.7069999999997096e-05, 2.7264000000006006e-05, 2.7596999999997263e-05, 2.7276999999999163e-05, 2.7861999999996556e-05, 2.7916000000002827e-05, 2.706900000000456e-05, 2.7194000000001217e-05, 2.7499999999999747e-05, 2.6999999999999247e-05, 2.70970000000037e-05, 2.7874999999996652e-05, 2.7082999999997193e-05, 2.706900000000456e-05, 2.738900000000266e-05, 2.7292000000005145e-05, 2.7249999999999497e-05, 2.7235999999999927e-05, 2.7249999999999497e-05, 2.7263999999999067e-05, 2.766700000000205e-05, 2.7957999999994598e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.888" endtime="20201117 14:42:40.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.876" endtime="20201117 14:42:40.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.900" endtime="20201117 14:42:40.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.909" endtime="20201117 14:42:40.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.904" endtime="20201117 14:42:40.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.895" endtime="20201117 14:42:40.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.369" endtime="20201117 14:42:40.935"></status>
</kw>
<msg timestamp="20201117 14:42:40.936" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.957" endtime="20201117 14:42:40.976"></status>
</kw>
<msg timestamp="20201117 14:42:40.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.954" endtime="20201117 14:42:40.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.979" endtime="20201117 14:42:40.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.986" endtime="20201117 14:42:40.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.947" endtime="20201117 14:42:40.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.941" endtime="20201117 14:42:40.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.010" endtime="20201117 14:42:41.363"></status>
</kw>
<msg timestamp="20201117 14:42:41.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.006" endtime="20201117 14:42:41.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.373" endtime="20201117 14:42:41.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.392" endtime="20201117 14:42:41.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.999" endtime="20201117 14:42:41.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.994" endtime="20201117 14:42:41.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.409" level="INFO">${RESULT} = [{'time': 0.041703458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.765199999999607e-05, 'source_diff': 2.765199999999607e-05}, {'time': 0.041734458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.400" endtime="20201117 14:42:41.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.441" level="INFO">${ACCURACY} = {'source_diff': [2.765199999999607e-05, 2.7055000000004992e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7194000000001217e-05, 2.738900000000266e-05, 2.7694000000001717e-05, 2.737499999999615...</msg>
<status status="PASS" starttime="20201117 14:42:41.411" endtime="20201117 14:42:41.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.455" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.450" endtime="20201117 14:42:41.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.461" level="INFO">VALUE: [2.765199999999607e-05, 2.7055000000004992e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7194000000001217e-05, 2.738900000000266e-05, 2.7694000000001717e-05, 2.7374999999996152e-05, 2.7041999999997957e-05, 2.7541999999998457e-05, 2.736100000000352e-05, 2.7194000000001217e-05, 2.7278000000005576e-05, 2.7291999999998207e-05, 2.7513999999999317e-05, 2.7082999999997193e-05, 2.763900000000291e-05, 2.7527999999998887e-05, 2.7319999999997346e-05, 2.7513999999999317e-05, 2.7027999999998387e-05, 2.7847999999996986e-05, 2.7055999999997526e-05, 2.7055999999997526e-05, 2.7305999999997776e-05, 2.7070000000004035e-05, 2.765300000000248e-05, 2.7040999999998483e-05, 2.7472000000000607e-05, 2.7777999999999137e-05, 2.7472000000000607e-05, 2.761100000000377e-05, 2.7416000000002327e-05, 2.713900000000241e-05, 2.794399999999503e-05, 2.7736000000000427e-05, 2.7958000000001537e-05, 2.7958000000001537e-05, 2.7652999999995542e-05, 2.7930999999994932e-05, 2.711100000000327e-05, 2.7249999999999497e-05, 2.7986000000000677e-05, 2.7805999999998277e-05, 2.712500000000284e-05, 2.7110999999996332e-05, 2.736100000000352e-05, 2.790300000000273e-05, 2.7610999999996833e-05, 2.74170000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.457" endtime="20201117 14:42:41.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.443" endtime="20201117 14:42:41.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.470" endtime="20201117 14:42:41.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.479" endtime="20201117 14:42:41.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.474" endtime="20201117 14:42:41.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.466" endtime="20201117 14:42:41.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.937" endtime="20201117 14:42:41.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.365" endtime="20201117 14:42:41.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.363" endtime="20201117 14:42:41.505"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.511" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.533" endtime="20201117 14:42:41.552"></status>
</kw>
<msg timestamp="20201117 14:42:41.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.529" endtime="20201117 14:42:41.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.555" endtime="20201117 14:42:41.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.561" endtime="20201117 14:42:41.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.522" endtime="20201117 14:42:41.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.516" endtime="20201117 14:42:41.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.585" endtime="20201117 14:42:41.936"></status>
</kw>
<msg timestamp="20201117 14:42:41.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047304875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047332319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.582" endtime="20201117 14:42:41.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047304875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047332319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.945" endtime="20201117 14:42:41.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.964" endtime="20201117 14:42:41.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.574" endtime="20201117 14:42:41.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.570" endtime="20201117 14:42:41.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.982" level="INFO">${RESULT} = [{'time': 0.047332319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.744399999999453e-05, 'source_diff': 2.744399999999453e-05}, {'time': 0.047373319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.973" endtime="20201117 14:42:41.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.002" level="INFO">${ACCURACY} = {'source_diff': [2.744399999999453e-05, 2.7276999999999163e-05, 2.7736000000000427e-05, 2.7972000000001107e-05, 2.7776999999999663e-05, 2.7722000000000857e-05, 2.7054999999998053e-05, 2.74580000000010...</msg>
<status status="PASS" starttime="20201117 14:42:41.984" endtime="20201117 14:42:42.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.008" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.006" endtime="20201117 14:42:42.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.011" level="INFO">VALUE: [2.744399999999453e-05, 2.7276999999999163e-05, 2.7736000000000427e-05, 2.7972000000001107e-05, 2.7776999999999663e-05, 2.7722000000000857e-05, 2.7054999999998053e-05, 2.7458000000001037e-05, 2.7680000000002147e-05, 2.7902999999995792e-05, 2.7277999999998637e-05, 2.769399999999478e-05, 2.6985999999999677e-05, 2.762500000000334e-05, 2.7749999999999997e-05, 2.7084000000003605e-05, 2.7736000000000427e-05, 2.7250000000006436e-05, 2.7208000000000787e-05, 2.7555999999998027e-05, 2.795900000000101e-05, 2.7346999999997013e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.738900000000266e-05, 2.7472000000000607e-05, 2.722299999999983e-05, 2.7499999999999747e-05, 2.7040999999998483e-05, 2.7346999999997013e-05, 2.7805999999998277e-05, 2.7138999999995472e-05, 2.7944000000001967e-05, 2.7207999999993848e-05, 2.794399999999503e-05, 2.7805000000005742e-05, 2.794399999999503e-05, 2.794399999999503e-05, 2.738900000000266e-05, 2.7596999999997263e-05, 2.6985999999999677e-05, 2.7096999999996763e-05, 2.744399999999453e-05, 2.711100000000327e-05, 2.7957999999994598e-05, 2.7556000000004965e-05, 2.743100000000137e-05, 2.7736000000000427e-05, 2.765300000000248e-05, 2.7320000000004285e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.009" endtime="20201117 14:42:42.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.003" endtime="20201117 14:42:42.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.015" endtime="20201117 14:42:42.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.020" endtime="20201117 14:42:42.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.017" endtime="20201117 14:42:42.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.013" endtime="20201117 14:42:42.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.512" endtime="20201117 14:42:42.041"></status>
</kw>
<msg timestamp="20201117 14:42:42.041" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.051" endtime="20201117 14:42:42.066"></status>
</kw>
<msg timestamp="20201117 14:42:42.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.050" endtime="20201117 14:42:42.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.068" endtime="20201117 14:42:42.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.071" endtime="20201117 14:42:42.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.046" endtime="20201117 14:42:42.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.044" endtime="20201117 14:42:42.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.082" endtime="20201117 14:42:42.408"></status>
</kw>
<msg timestamp="20201117 14:42:42.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.080" endtime="20201117 14:42:42.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.417" endtime="20201117 14:42:42.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.436" endtime="20201117 14:42:42.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.077" endtime="20201117 14:42:42.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.075" endtime="20201117 14:42:42.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.454" level="INFO">${RESULT} = [{'time': 0.024323069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7901999999999788e-05, 'source_diff': 2.7901999999999788e-05}, {'time': 0.024363069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:42.445" endtime="20201117 14:42:42.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.485" level="INFO">${ACCURACY} = {'source_diff': [2.7901999999999788e-05, 2.7722000000000857e-05, 2.7833000000001412e-05, 2.7290999999998733e-05, 2.7165999999998608e-05, 2.7318999999997873e-05, 2.7513999999999317e-05, 2.7500000000003...</msg>
<status status="PASS" starttime="20201117 14:42:42.456" endtime="20201117 14:42:42.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.503" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.500" endtime="20201117 14:42:42.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.508" level="INFO">VALUE: [2.7901999999999788e-05, 2.7722000000000857e-05, 2.7833000000001412e-05, 2.7290999999998733e-05, 2.7165999999998608e-05, 2.7318999999997873e-05, 2.7513999999999317e-05, 2.7500000000003216e-05, 2.7541999999998457e-05, 2.7472000000000607e-05, 2.7541999999998457e-05, 2.7777999999999137e-05, 2.7500000000003216e-05, 2.7791999999998707e-05, 2.7443999999997998e-05, 2.7194000000001217e-05, 2.7347000000000482e-05, 2.7235999999999927e-05, 2.715300000000198e-05, 2.7846999999997513e-05, 2.7084000000000136e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.7320000000000816e-05, 2.74309999999979e-05, 2.7306000000001246e-05, 2.7334000000000386e-05, 2.8013000000000343e-05, 2.748699999999965e-05, 2.7570000000001066e-05, 2.7499999999999747e-05, 2.7361000000000052e-05, 2.7527999999998887e-05, 2.7708000000001287e-05, 2.7194000000001217e-05, 2.7486000000000177e-05, 2.7861000000000552e-05, 2.7806000000001746e-05, 2.7749999999999997e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.7305000000001772e-05, 2.7110999999999802e-05, 2.7278000000002106e-05, 2.7888999999999692e-05, 2.7138999999998942e-05, 2.7944000000001967e-05, 2.8000000000000247e-05, 2.7486000000000177e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.505" endtime="20201117 14:42:42.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.493" endtime="20201117 14:42:42.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.517" endtime="20201117 14:42:42.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.525" endtime="20201117 14:42:42.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.521" endtime="20201117 14:42:42.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.512" endtime="20201117 14:42:42.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.042" endtime="20201117 14:42:42.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.508" endtime="20201117 14:42:42.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.506" endtime="20201117 14:42:42.554"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.559" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.581" endtime="20201117 14:42:42.599"></status>
</kw>
<msg timestamp="20201117 14:42:42.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.577" endtime="20201117 14:42:42.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.603" endtime="20201117 14:42:42.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.609" endtime="20201117 14:42:42.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.570" endtime="20201117 14:42:42.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.564" endtime="20201117 14:42:42.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.633" endtime="20201117 14:42:42.985"></status>
</kw>
<msg timestamp="20201117 14:42:42.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047418764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047446236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.629" endtime="20201117 14:42:42.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047418764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047446236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.994" endtime="20201117 14:42:43.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.013" endtime="20201117 14:42:43.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.622" endtime="20201117 14:42:43.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.617" endtime="20201117 14:42:43.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.032" level="INFO">${RESULT} = [{'time': 0.047446236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7472000000000607e-05, 'source_diff': 2.7472000000000607e-05}, {'time': 0.04748225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:43.023" endtime="20201117 14:42:43.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.063" level="INFO">${ACCURACY} = {'source_diff': [2.7472000000000607e-05, 2.7707999999994348e-05, 2.7068999999997623e-05, 2.744500000000094e-05, 2.7527999999998887e-05, 2.7805999999998277e-05, 2.743100000000137e-05, 2.712500000000284...</msg>
<status status="PASS" starttime="20201117 14:42:43.034" endtime="20201117 14:42:43.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.074" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.072" endtime="20201117 14:42:43.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.079" level="INFO">VALUE: [2.7472000000000607e-05, 2.7707999999994348e-05, 2.7068999999997623e-05, 2.744500000000094e-05, 2.7527999999998887e-05, 2.7805999999998277e-05, 2.743100000000137e-05, 2.712500000000284e-05, 2.7680999999994682e-05, 2.7556000000004965e-05, 2.719500000000069e-05, 2.7541999999998457e-05, 2.7806000000005215e-05, 2.7819999999997846e-05, 2.790300000000273e-05, 2.7235999999999927e-05, 2.7861999999996556e-05, 2.7249999999999497e-05, 2.7457999999994098e-05, 2.7235999999999927e-05, 2.7026999999998913e-05, 2.7194000000001217e-05, 2.7458000000001037e-05, 2.786100000000402e-05, 2.7402000000002757e-05, 2.7736000000000427e-05, 2.7542000000005395e-05, 2.790300000000273e-05, 2.7069999999997096e-05, 2.708300000000413e-05, 2.7777999999999137e-05, 2.7374999999996152e-05, 2.7138999999995472e-05, 2.7458000000001037e-05, 2.788900000000316e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.787500000000359e-05, 2.7597999999996736e-05, 2.784700000000445e-05, 2.7777999999999137e-05, 2.7319999999997346e-05, 2.7902999999995792e-05, 2.7013999999998817e-05, 2.792999999999546e-05, 2.7222000000000357e-05, 2.7736000000000427e-05, 2.712500000000284e-05, 2.747300000000008e-05, 2.719500000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.076" endtime="20201117 14:42:43.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.065" endtime="20201117 14:42:43.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.088" endtime="20201117 14:42:43.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.098" endtime="20201117 14:42:43.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.092" endtime="20201117 14:42:43.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.084" endtime="20201117 14:42:43.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.560" endtime="20201117 14:42:43.124"></status>
</kw>
<msg timestamp="20201117 14:42:43.124" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.146" endtime="20201117 14:42:43.165"></status>
</kw>
<msg timestamp="20201117 14:42:43.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.143" endtime="20201117 14:42:43.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.168" endtime="20201117 14:42:43.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.175" endtime="20201117 14:42:43.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.136" endtime="20201117 14:42:43.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.130" endtime="20201117 14:42:43.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.200" endtime="20201117 14:42:43.540"></status>
</kw>
<msg timestamp="20201117 14:42:43.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041355153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041382764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.197" endtime="20201117 14:42:43.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041355153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041382764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.549" endtime="20201117 14:42:43.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.569" endtime="20201117 14:42:43.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.189" endtime="20201117 14:42:43.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.184" endtime="20201117 14:42:43.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.587" level="INFO">${RESULT} = [{'time': 0.041382764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.761100000000377e-05, 'source_diff': 2.761100000000377e-05}, {'time': 0.041413764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.578" endtime="20201117 14:42:43.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.618" level="INFO">${ACCURACY} = {'source_diff': [2.761100000000377e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.7888999999996222e-05, 2.7110999999996332e-05, 2.769500000000119e-05, 2.7152999999995042e-05, 2.8000000000000247...</msg>
<status status="PASS" starttime="20201117 14:42:43.589" endtime="20201117 14:42:43.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.629" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.627" endtime="20201117 14:42:43.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.634" level="INFO">VALUE: [2.761100000000377e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.7888999999996222e-05, 2.7110999999996332e-05, 2.769500000000119e-05, 2.7152999999995042e-05, 2.8000000000000247e-05, 2.7070000000004035e-05, 2.7070000000004035e-05, 2.7320000000004285e-05, 2.7458000000001037e-05, 2.790300000000273e-05, 2.792999999999546e-05, 2.788799999999675e-05, 2.76379999999965e-05, 2.7624999999996402e-05, 2.756900000000506e-05, 2.7818999999998373e-05, 2.794399999999503e-05, 2.7554999999998553e-05, 2.7722000000000857e-05, 2.7527999999998887e-05, 2.7777999999999137e-05, 2.7666000000002577e-05, 2.7041999999997957e-05, 2.7694000000001717e-05, 2.7360999999996582e-05, 2.734700000000395e-05, 2.743100000000137e-05, 2.8027999999999387e-05, 2.75970000000042e-05, 2.766700000000205e-05, 2.765300000000248e-05, 2.7916999999995362e-05, 2.786100000000402e-05, 2.7054999999998053e-05, 2.7834000000004355e-05, 2.769500000000119e-05, 2.718100000000112e-05, 2.7486000000000177e-05, 2.786100000000402e-05, 2.720900000000026e-05, 2.713900000000241e-05, 2.7235999999999927e-05, 2.7430000000001897e-05, 2.7499999999999747e-05, 2.7194000000001217e-05, 2.7360999999996582e-05, 2.7290999999998733e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.631" endtime="20201117 14:42:43.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.620" endtime="20201117 14:42:43.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.643" endtime="20201117 14:42:43.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.651" endtime="20201117 14:42:43.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.647" endtime="20201117 14:42:43.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.639" endtime="20201117 14:42:43.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.126" endtime="20201117 14:42:43.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.556" endtime="20201117 14:42:43.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.554" endtime="20201117 14:42:43.678"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.683" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.709" endtime="20201117 14:42:43.727"></status>
</kw>
<msg timestamp="20201117 14:42:43.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.706" endtime="20201117 14:42:43.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.731" endtime="20201117 14:42:43.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.737" endtime="20201117 14:42:43.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.698" endtime="20201117 14:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.688" endtime="20201117 14:42:43.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.762" endtime="20201117 14:42:44.102"></status>
</kw>
<msg timestamp="20201117 14:42:44.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050858861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.758" endtime="20201117 14:42:44.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050858861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.111" endtime="20201117 14:42:44.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.130" endtime="20201117 14:42:44.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.751" endtime="20201117 14:42:44.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.745" endtime="20201117 14:42:44.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.148" level="INFO">${RESULT} = [{'time': 0.050885958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.70970000000037e-05, 'source_diff': 2.70970000000037e-05}, {'time': 0.050925972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:44.139" endtime="20201117 14:42:44.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.179" level="INFO">${ACCURACY} = {'source_diff': [2.70970000000037e-05, 2.7540999999998983e-05, 2.7777999999999137e-05, 2.786100000000402e-05, 2.7596999999997263e-05, 2.734700000000395e-05, 2.7082999999997193e-05, 2.7193999999994278e...</msg>
<status status="PASS" starttime="20201117 14:42:44.150" endtime="20201117 14:42:44.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.190" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.188" endtime="20201117 14:42:44.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.196" level="INFO">VALUE: [2.70970000000037e-05, 2.7540999999998983e-05, 2.7777999999999137e-05, 2.786100000000402e-05, 2.7596999999997263e-05, 2.734700000000395e-05, 2.7082999999997193e-05, 2.7193999999994278e-05, 2.7499999999999747e-05, 2.718100000000112e-05, 2.7554999999998553e-05, 2.7277999999998637e-05, 2.7305999999997776e-05, 2.7624999999996402e-05, 2.7916999999995362e-05, 2.736100000000352e-05, 2.765300000000248e-05, 2.744500000000094e-05, 2.7319999999997346e-05, 2.7041999999997957e-05, 2.747300000000008e-05, 2.7860999999997083e-05, 2.7972000000001107e-05, 2.7332999999997443e-05, 2.7112000000002745e-05, 2.7277999999998637e-05, 2.7568999999998123e-05, 2.7694000000001717e-05, 2.7277999999998637e-05, 2.7166000000002077e-05, 2.7276999999999163e-05, 2.7902000000003258e-05, 2.7388999999995722e-05, 2.7402999999995292e-05, 2.7277999999998637e-05, 2.7027999999998387e-05, 2.7082999999997193e-05, 2.7556000000004965e-05, 2.756900000000506e-05, 2.7513999999999317e-05, 2.7736000000000427e-05, 2.7277999999998637e-05, 2.743100000000137e-05, 2.7110999999996332e-05, 2.7652999999995542e-05, 2.770900000000076e-05, 2.7110999999996332e-05, 2.7888999999996222e-05, 2.7860999999997083e-05, 2.7860999999997083e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.192" endtime="20201117 14:42:44.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.181" endtime="20201117 14:42:44.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.205" endtime="20201117 14:42:44.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.214" endtime="20201117 14:42:44.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.209" endtime="20201117 14:42:44.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.200" endtime="20201117 14:42:44.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.685" endtime="20201117 14:42:44.240"></status>
</kw>
<msg timestamp="20201117 14:42:44.240" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.262" endtime="20201117 14:42:44.281"></status>
</kw>
<msg timestamp="20201117 14:42:44.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.259" endtime="20201117 14:42:44.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.284" endtime="20201117 14:42:44.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.291" endtime="20201117 14:42:44.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.252" endtime="20201117 14:42:44.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.246" endtime="20201117 14:42:44.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.317" endtime="20201117 14:42:44.656"></status>
</kw>
<msg timestamp="20201117 14:42:44.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.313" endtime="20201117 14:42:44.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.665" endtime="20201117 14:42:44.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.684" endtime="20201117 14:42:44.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.304" endtime="20201117 14:42:44.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.299" endtime="20201117 14:42:44.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.702" level="INFO">${RESULT} = [{'time': 0.041579333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7680000000002147e-05, 'source_diff': 2.7680000000002147e-05}, {'time': 0.041615347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:44.693" endtime="20201117 14:42:44.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.733" level="INFO">${ACCURACY} = {'source_diff': [2.7680000000002147e-05, 2.7486000000000177e-05, 2.794399999999503e-05, 2.7694000000001717e-05, 2.7306000000004715e-05, 2.7277999999998637e-05, 2.7166999999994612e-05, 2.75969999999972...</msg>
<status status="PASS" starttime="20201117 14:42:44.704" endtime="20201117 14:42:44.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.744" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.742" endtime="20201117 14:42:44.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.750" level="INFO">VALUE: [2.7680000000002147e-05, 2.7486000000000177e-05, 2.794399999999503e-05, 2.7694000000001717e-05, 2.7306000000004715e-05, 2.7277999999998637e-05, 2.7166999999994612e-05, 2.7596999999997263e-05, 2.7388999999995722e-05, 2.7652999999995542e-05, 2.7194000000001217e-05, 2.7582999999997693e-05, 2.7583999999997166e-05, 2.7944999999994502e-05, 2.7874999999996652e-05, 2.738900000000266e-05, 2.794500000000144e-05, 2.7596999999997263e-05, 2.74170000000018e-05, 2.7778000000006076e-05, 2.7819999999997846e-05, 2.7360999999996582e-05, 2.7082999999997193e-05, 2.7540999999998983e-05, 2.762500000000334e-05, 2.7874999999996652e-05, 2.786100000000402e-05, 2.7138000000002938e-05, 2.7568999999998123e-05, 2.7708000000001287e-05, 2.7444000000001467e-05, 2.788900000000316e-05, 2.7096999999996763e-05, 2.7694000000001717e-05, 2.7318999999997873e-05, 2.7527999999998887e-05, 2.7042000000004895e-05, 2.740300000000223e-05, 2.7818999999998373e-05, 2.7124999999995902e-05, 2.7499999999999747e-05, 2.6985999999999677e-05, 2.7235999999999927e-05, 2.8000000000000247e-05, 2.7042000000004895e-05, 2.7902999999995792e-05, 2.7235999999999927e-05, 2.711100000000327e-05, 2.747300000000008e-05, 2.769500000000119e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.747" endtime="20201117 14:42:44.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.735" endtime="20201117 14:42:44.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.759" endtime="20201117 14:42:44.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.767" endtime="20201117 14:42:44.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.763" endtime="20201117 14:42:44.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.754" endtime="20201117 14:42:44.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.242" endtime="20201117 14:42:44.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.681" endtime="20201117 14:42:44.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.679" endtime="20201117 14:42:44.794"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.799" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.821" endtime="20201117 14:42:44.840"></status>
</kw>
<msg timestamp="20201117 14:42:44.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.818" endtime="20201117 14:42:44.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.843" endtime="20201117 14:42:44.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.850" endtime="20201117 14:42:44.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.811" endtime="20201117 14:42:44.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.804" endtime="20201117 14:42:44.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.875" endtime="20201117 14:42:45.213"></status>
</kw>
<msg timestamp="20201117 14:42:45.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047902014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047929736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.870" endtime="20201117 14:42:45.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047902014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047929736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.223" endtime="20201117 14:42:45.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.243" endtime="20201117 14:42:45.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.863" endtime="20201117 14:42:45.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.858" endtime="20201117 14:42:45.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.261" level="INFO">${RESULT} = [{'time': 0.047929736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7722000000000857e-05, 'source_diff': 2.7722000000000857e-05}, {'time': 0.047966736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:45.252" endtime="20201117 14:42:45.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.293" level="INFO">${ACCURACY} = {'source_diff': [2.7722000000000857e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7958000000001537e-05, 2.7319999999997346e-05, 2.7959000000001...</msg>
<status status="PASS" starttime="20201117 14:42:45.263" endtime="20201117 14:42:45.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.304" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.302" endtime="20201117 14:42:45.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.309" level="INFO">VALUE: [2.7722000000000857e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7958000000001537e-05, 2.7319999999997346e-05, 2.795900000000101e-05, 2.8013999999999817e-05, 2.7555999999998027e-05, 2.7360999999996582e-05, 2.794500000000144e-05, 2.7070000000004035e-05, 2.7930999999994932e-05, 2.7486000000000177e-05, 2.7791999999998707e-05, 2.747300000000008e-05, 2.748699999999965e-05, 2.7944000000001967e-05, 2.7166000000002077e-05, 2.7526999999999413e-05, 2.7222000000000357e-05, 2.7026999999998913e-05, 2.7166000000002077e-05, 2.7110999999996332e-05, 2.7110999999996332e-05, 2.7194000000001217e-05, 2.763900000000291e-05, 2.7110999999996332e-05, 2.7444000000001467e-05, 2.7819000000005312e-05, 2.7444000000001467e-05, 2.7499999999999747e-05, 2.790300000000273e-05, 2.7791999999998707e-05, 2.7541999999998457e-05, 2.7027999999998387e-05, 2.7944000000001967e-05, 2.7333999999996916e-05, 2.719500000000069e-05, 2.7513999999999317e-05, 2.7249999999999497e-05, 2.7806000000005215e-05, 2.734700000000395e-05, 2.7820000000004785e-05, 2.736100000000352e-05, 2.7444999999994002e-05, 2.7292000000005145e-05, 2.7499999999999747e-05, 2.7347999999996486e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.306" endtime="20201117 14:42:45.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.295" endtime="20201117 14:42:45.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.318" endtime="20201117 14:42:45.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.327" endtime="20201117 14:42:45.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.322" endtime="20201117 14:42:45.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.314" endtime="20201117 14:42:45.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.800" endtime="20201117 14:42:45.353"></status>
</kw>
<msg timestamp="20201117 14:42:45.353" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.375" endtime="20201117 14:42:45.394"></status>
</kw>
<msg timestamp="20201117 14:42:45.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.372" endtime="20201117 14:42:45.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.397" endtime="20201117 14:42:45.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.404" endtime="20201117 14:42:45.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.365" endtime="20201117 14:42:45.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.359" endtime="20201117 14:42:45.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.427" endtime="20201117 14:42:45.750"></status>
</kw>
<msg timestamp="20201117 14:42:45.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.424" endtime="20201117 14:42:45.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.759" endtime="20201117 14:42:45.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.778" endtime="20201117 14:42:45.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.417" endtime="20201117 14:42:45.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.412" endtime="20201117 14:42:45.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.796" level="INFO">${RESULT} = [{'time': 0.041347292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.762500000000334e-05, 'source_diff': 2.762500000000334e-05}, {'time': 0.041384347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.787" endtime="20201117 14:42:45.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.827" level="INFO">${ACCURACY} = {'source_diff': [2.762500000000334e-05, 2.7499999999999747e-05, 2.7792000000005646e-05, 2.7027999999998387e-05, 2.7028000000005326e-05, 2.7333999999996916e-05, 2.788799999999675e-05, 2.798700000000015...</msg>
<status status="PASS" starttime="20201117 14:42:45.798" endtime="20201117 14:42:45.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.838" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.836" endtime="20201117 14:42:45.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.843" level="INFO">VALUE: [2.762500000000334e-05, 2.7499999999999747e-05, 2.7792000000005646e-05, 2.7027999999998387e-05, 2.7028000000005326e-05, 2.7333999999996916e-05, 2.788799999999675e-05, 2.798700000000015e-05, 2.7861999999996556e-05, 2.7027999999998387e-05, 2.7068999999997623e-05, 2.715199999999557e-05, 2.790199999999632e-05, 2.7332999999997443e-05, 2.7235999999999927e-05, 2.70970000000037e-05, 2.7486000000000177e-05, 2.7805999999998277e-05, 2.7749999999999997e-05, 2.7068999999997623e-05, 2.7957999999994598e-05, 2.7264000000006006e-05, 2.7499999999999747e-05, 2.7624999999996402e-05, 2.7319999999997346e-05, 2.7166999999994612e-05, 2.7902999999995792e-05, 2.7930999999994932e-05, 2.7069999999997096e-05, 2.7249999999999497e-05, 2.740300000000223e-05, 2.737500000000309e-05, 2.7472000000000607e-05, 2.7277999999998637e-05, 2.7041999999997957e-05, 2.7805999999998277e-05, 2.72369999999994e-05, 2.7208000000000787e-05, 2.769500000000119e-05, 2.7612000000003245e-05, 2.7444999999994002e-05, 2.7041999999997957e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.711100000000327e-05, 2.7874999999996652e-05, 2.713900000000241e-05, 2.7554999999998553e-05, 2.712500000000284e-05, 2.75970000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.840" endtime="20201117 14:42:45.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.829" endtime="20201117 14:42:45.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.853" endtime="20201117 14:42:45.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.861" endtime="20201117 14:42:45.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.857" endtime="20201117 14:42:45.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.848" endtime="20201117 14:42:45.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.355" endtime="20201117 14:42:45.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.796" endtime="20201117 14:42:45.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.794" endtime="20201117 14:42:45.888"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.893" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.915" endtime="20201117 14:42:45.934"></status>
</kw>
<msg timestamp="20201117 14:42:45.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.912" endtime="20201117 14:42:45.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.938" endtime="20201117 14:42:45.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.944" endtime="20201117 14:42:45.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.904" endtime="20201117 14:42:45.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.899" endtime="20201117 14:42:45.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.968" endtime="20201117 14:42:46.312"></status>
</kw>
<msg timestamp="20201117 14:42:46.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047113667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047141375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.964" endtime="20201117 14:42:46.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047113667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047141375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.322" endtime="20201117 14:42:46.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.341" endtime="20201117 14:42:46.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.957" endtime="20201117 14:42:46.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.952" endtime="20201117 14:42:46.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.359" level="INFO">${RESULT} = [{'time': 0.047141375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.047171361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:46.349" endtime="20201117 14:42:46.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.389" level="INFO">${ACCURACY} = {'source_diff': [2.7708000000001287e-05, 2.7930000000002397e-05, 2.741599999999539e-05, 2.7846999999997513e-05, 2.7444000000001467e-05, 2.7000000000006186e-05, 2.7555999999998027e-05, 2.72359999999999...</msg>
<status status="PASS" starttime="20201117 14:42:46.361" endtime="20201117 14:42:46.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.400" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.398" endtime="20201117 14:42:46.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.407" level="INFO">VALUE: [2.7708000000001287e-05, 2.7930000000002397e-05, 2.741599999999539e-05, 2.7846999999997513e-05, 2.7444000000001467e-05, 2.7000000000006186e-05, 2.7555999999998027e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.7777999999999137e-05, 2.7486000000000177e-05, 2.722299999999983e-05, 2.766700000000205e-05, 2.7610999999996833e-05, 2.7820000000004785e-05, 2.7137999999996e-05, 2.737500000000309e-05, 2.7680000000002147e-05, 2.713900000000241e-05, 2.722299999999983e-05, 2.7666000000002577e-05, 2.787500000000359e-05, 2.762500000000334e-05, 2.706900000000456e-05, 2.708300000000413e-05, 2.7068999999997623e-05, 2.7958000000001537e-05, 2.712500000000284e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.794399999999503e-05, 2.7846999999997513e-05, 2.7610999999996833e-05, 2.7472000000000607e-05, 2.7304999999998303e-05, 2.6999999999999247e-05, 2.786100000000402e-05, 2.716700000000155e-05, 2.7070000000004035e-05, 2.7027999999998387e-05, 2.708300000000413e-05, 2.736100000000352e-05, 2.711100000000327e-05, 2.7694999999994252e-05, 2.7888999999996222e-05, 2.7333999999996916e-05, 2.763900000000291e-05, 2.7347999999996486e-05, 2.7055999999997526e-05, 2.748699999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.403" endtime="20201117 14:42:46.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.391" endtime="20201117 14:42:46.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.416" endtime="20201117 14:42:46.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.424" endtime="20201117 14:42:46.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.419" endtime="20201117 14:42:46.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.411" endtime="20201117 14:42:46.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.895" endtime="20201117 14:42:46.449"></status>
</kw>
<msg timestamp="20201117 14:42:46.450" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.472" endtime="20201117 14:42:46.490"></status>
</kw>
<msg timestamp="20201117 14:42:46.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.469" endtime="20201117 14:42:46.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.494" endtime="20201117 14:42:46.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.500" endtime="20201117 14:42:46.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.461" endtime="20201117 14:42:46.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.456" endtime="20201117 14:42:46.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.524" endtime="20201117 14:42:46.865"></status>
</kw>
<msg timestamp="20201117 14:42:46.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04141575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:46.520" endtime="20201117 14:42:46.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04141575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:46.874" endtime="20201117 14:42:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.893" endtime="20201117 14:42:46.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.513" endtime="20201117 14:42:46.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.509" endtime="20201117 14:42:46.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.913" level="INFO">${RESULT} = [{'time': 0.04141575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.041456764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:46.903" endtime="20201117 14:42:46.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.943" level="INFO">${ACCURACY} = {'source_diff': [2.7486000000000177e-05, 2.765300000000248e-05, 2.765300000000248e-05, 2.70970000000037e-05, 2.791599999999589e-05, 2.7068999999997623e-05, 2.7486000000000177e-05, 2.7986000000000677e-...</msg>
<status status="PASS" starttime="20201117 14:42:46.915" endtime="20201117 14:42:46.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.955" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.953" endtime="20201117 14:42:46.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.961" level="INFO">VALUE: [2.7486000000000177e-05, 2.765300000000248e-05, 2.765300000000248e-05, 2.70970000000037e-05, 2.791599999999589e-05, 2.7068999999997623e-05, 2.7486000000000177e-05, 2.7986000000000677e-05, 2.766700000000205e-05, 2.7430999999994432e-05, 2.7736000000000427e-05, 2.770900000000076e-05, 2.737500000000309e-05, 2.7832999999997943e-05, 2.7083999999996666e-05, 2.7638000000003438e-05, 2.7818999999998373e-05, 2.7193999999994278e-05, 2.7026999999998913e-05, 2.740300000000223e-05, 2.7722000000000857e-05, 2.791599999999589e-05, 2.7596999999997263e-05, 2.7263999999999067e-05, 2.7708000000001287e-05, 2.74170000000018e-05, 2.8013999999999817e-05, 2.7902999999995792e-05, 2.7819000000005312e-05, 2.715300000000198e-05, 2.790300000000273e-05, 2.7278000000005576e-05, 2.715300000000198e-05, 2.737500000000309e-05, 2.7736000000000427e-05, 2.7235999999999927e-05, 2.7707999999994348e-05, 2.7805000000005742e-05, 2.7874999999996652e-05, 2.7834000000004355e-05, 2.7776999999999663e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.769500000000119e-05, 2.7222000000000357e-05, 2.794500000000144e-05, 2.783300000000488e-05, 2.7290999999998733e-05, 2.7832999999997943e-05, 2.7388999999995722e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.958" endtime="20201117 14:42:46.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.946" endtime="20201117 14:42:46.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.970" endtime="20201117 14:42:46.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.978" endtime="20201117 14:42:47.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.974" endtime="20201117 14:42:47.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.965" endtime="20201117 14:42:47.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.451" endtime="20201117 14:42:47.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.891" endtime="20201117 14:42:47.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.889" endtime="20201117 14:42:47.005"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.010" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.032" endtime="20201117 14:42:47.051"></status>
</kw>
<msg timestamp="20201117 14:42:47.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.029" endtime="20201117 14:42:47.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.054" endtime="20201117 14:42:47.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.061" endtime="20201117 14:42:47.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.021" endtime="20201117 14:42:47.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.015" endtime="20201117 14:42:47.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.084" endtime="20201117 14:42:47.426"></status>
</kw>
<msg timestamp="20201117 14:42:47.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047259542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047287333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.081" endtime="20201117 14:42:47.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047259542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047287333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.436" endtime="20201117 14:42:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.455" endtime="20201117 14:42:47.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.074" endtime="20201117 14:42:47.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.069" endtime="20201117 14:42:47.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.473" level="INFO">${RESULT} = [{'time': 0.047287333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7790999999999233e-05, 'source_diff': 2.7790999999999233e-05}, {'time': 0.047329333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:47.464" endtime="20201117 14:42:47.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.504" level="INFO">${ACCURACY} = {'source_diff': [2.7790999999999233e-05, 2.7444000000001467e-05, 2.6999999999999247e-05, 2.7026999999998913e-05, 2.7278000000005576e-05, 2.7486000000000177e-05, 2.7082999999997193e-05, 2.7249999999999...</msg>
<status status="PASS" starttime="20201117 14:42:47.476" endtime="20201117 14:42:47.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.516" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.513" endtime="20201117 14:42:47.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.521" level="INFO">VALUE: [2.7790999999999233e-05, 2.7444000000001467e-05, 2.6999999999999247e-05, 2.7026999999998913e-05, 2.7278000000005576e-05, 2.7486000000000177e-05, 2.7082999999997193e-05, 2.7249999999999497e-05, 2.7736000000000427e-05, 2.7486000000000177e-05, 2.7736000000000427e-05, 2.7582999999997693e-05, 2.7805999999998277e-05, 2.7694000000001717e-05, 2.713900000000241e-05, 2.7527999999998887e-05, 2.715300000000198e-05, 2.7513999999999317e-05, 2.7084000000003605e-05, 2.7694999999994252e-05, 2.7819999999997846e-05, 2.7777999999999137e-05, 2.7805999999998277e-05, 2.794500000000144e-05, 2.8000000000000247e-05, 2.737500000000309e-05, 2.7348000000003425e-05, 2.7152999999995042e-05, 2.8042000000005896e-05, 2.7555000000005492e-05, 2.7860999999997083e-05, 2.7137999999996e-05, 2.7458000000001037e-05, 2.713900000000241e-05, 2.7249999999999497e-05, 2.7290999999998733e-05, 2.7208000000000787e-05, 2.7458000000001037e-05, 2.738900000000266e-05, 2.7318999999997873e-05, 2.765300000000248e-05, 2.7444000000001467e-05, 2.7055000000004992e-05, 2.740300000000223e-05, 2.7582999999997693e-05, 2.765300000000248e-05, 2.7819000000005312e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.793100000000187e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.518" endtime="20201117 14:42:47.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.506" endtime="20201117 14:42:47.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.530" endtime="20201117 14:42:47.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.538" endtime="20201117 14:42:47.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.534" endtime="20201117 14:42:47.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.525" endtime="20201117 14:42:47.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.011" endtime="20201117 14:42:47.564"></status>
</kw>
<msg timestamp="20201117 14:42:47.564" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.586" endtime="20201117 14:42:47.605"></status>
</kw>
<msg timestamp="20201117 14:42:47.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.583" endtime="20201117 14:42:47.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.608" endtime="20201117 14:42:47.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.614" endtime="20201117 14:42:47.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.576" endtime="20201117 14:42:47.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.570" endtime="20201117 14:42:47.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.638" endtime="20201117 14:42:47.977"></status>
</kw>
<msg timestamp="20201117 14:42:47.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.635" endtime="20201117 14:42:47.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.987" endtime="20201117 14:42:48.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.013" endtime="20201117 14:42:48.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.627" endtime="20201117 14:42:48.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.623" endtime="20201117 14:42:48.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.032" level="INFO">${RESULT} = [{'time': 0.041276917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7250000000006436e-05, 'source_diff': 2.7250000000006436e-05}, {'time': 0.041315917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:48.023" endtime="20201117 14:42:48.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.063" level="INFO">${ACCURACY} = {'source_diff': [2.7250000000006436e-05, 2.8000000000000247e-05, 2.7027999999998387e-05, 2.722299999999983e-05, 2.7763999999999567e-05, 2.7444999999994002e-05, 2.787500000000359e-05, 2.711200000000274...</msg>
<status status="PASS" starttime="20201117 14:42:48.034" endtime="20201117 14:42:48.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.074" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.072" endtime="20201117 14:42:48.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.079" level="INFO">VALUE: [2.7250000000006436e-05, 2.8000000000000247e-05, 2.7027999999998387e-05, 2.722299999999983e-05, 2.7763999999999567e-05, 2.7444999999994002e-05, 2.787500000000359e-05, 2.7112000000002745e-05, 2.7582999999997693e-05, 2.7958000000001537e-05, 2.7416000000002327e-05, 2.7818999999998373e-05, 2.787500000000359e-05, 2.731900000000481e-05, 2.7638999999995972e-05, 2.7054999999998053e-05, 2.7749999999999997e-05, 2.7291999999998207e-05, 2.79170000000023e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7110999999996332e-05, 2.7027999999998387e-05, 2.7486000000000177e-05, 2.737500000000309e-05, 2.786100000000402e-05, 2.7318999999997873e-05, 2.7874999999996652e-05, 2.7110999999996332e-05, 2.7360999999996582e-05, 2.7098000000003175e-05, 2.7736000000000427e-05, 2.7486000000000177e-05, 2.7749999999999997e-05, 2.790300000000273e-05, 2.765300000000248e-05, 2.7069999999997096e-05, 2.7069999999997096e-05, 2.7013999999998817e-05, 2.7208000000000787e-05, 2.7874999999996652e-05, 2.7972000000001107e-05, 2.7193999999994278e-05, 2.767999999999521e-05, 2.712500000000284e-05, 2.784700000000445e-05, 2.7096999999996763e-05, 2.762500000000334e-05, 2.7736000000000427e-05, 2.711100000000327e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.076" endtime="20201117 14:42:48.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.065" endtime="20201117 14:42:48.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.088" endtime="20201117 14:42:48.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.097" endtime="20201117 14:42:48.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.092" endtime="20201117 14:42:48.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.084" endtime="20201117 14:42:48.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.566" endtime="20201117 14:42:48.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.007" endtime="20201117 14:42:48.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.006" endtime="20201117 14:42:48.123"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.128" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.150" endtime="20201117 14:42:48.170"></status>
</kw>
<msg timestamp="20201117 14:42:48.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.147" endtime="20201117 14:42:48.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.174" endtime="20201117 14:42:48.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.180" endtime="20201117 14:42:48.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.140" endtime="20201117 14:42:48.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.134" endtime="20201117 14:42:48.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.204" endtime="20201117 14:42:48.549"></status>
</kw>
<msg timestamp="20201117 14:42:48.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047489306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.201" endtime="20201117 14:42:48.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047489306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.558" endtime="20201117 14:42:48.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.577" endtime="20201117 14:42:48.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.194" endtime="20201117 14:42:48.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.188" endtime="20201117 14:42:48.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.595" level="INFO">${RESULT} = [{'time': 0.047489306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7070000000004035e-05, 'source_diff': 2.7070000000004035e-05}, {'time': 0.047529333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:48.586" endtime="20201117 14:42:48.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.626" level="INFO">${ACCURACY} = {'source_diff': [2.7070000000004035e-05, 2.7972000000001107e-05, 2.7110999999996332e-05, 2.7986000000000677e-05, 2.7526999999999413e-05, 2.7249999999999497e-05, 2.7680000000002147e-05, 2.7818999999998...</msg>
<status status="PASS" starttime="20201117 14:42:48.597" endtime="20201117 14:42:48.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.637" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.635" endtime="20201117 14:42:48.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.642" level="INFO">VALUE: [2.7070000000004035e-05, 2.7972000000001107e-05, 2.7110999999996332e-05, 2.7986000000000677e-05, 2.7526999999999413e-05, 2.7249999999999497e-05, 2.7680000000002147e-05, 2.7818999999998373e-05, 2.7041999999997957e-05, 2.7235999999999927e-05, 2.7027999999998387e-05, 2.7944999999994502e-05, 2.7486000000000177e-05, 2.767999999999521e-05, 2.7582999999997693e-05, 2.790300000000273e-05, 2.715300000000198e-05, 2.7388999999995722e-05, 2.7444000000001467e-05, 2.744500000000094e-05, 2.7722000000000857e-05, 2.7249999999999497e-05, 2.7235999999999927e-05, 2.74170000000018e-05, 2.7820000000004785e-05, 2.711100000000327e-05, 2.7666999999995112e-05, 2.722299999999983e-05, 2.7319999999997346e-05, 2.7805000000005742e-05, 2.790300000000273e-05, 2.7277999999998637e-05, 2.711100000000327e-05, 2.7666000000002577e-05, 2.7235999999999927e-05, 2.8000000000000247e-05, 2.6999999999999247e-05, 2.7736000000000427e-05, 2.762500000000334e-05, 2.787500000000359e-05, 2.7763999999999567e-05, 2.765300000000248e-05, 2.7235999999999927e-05, 2.7068999999997623e-05, 2.733300000000438e-05, 2.7249999999999497e-05, 2.7804999999998803e-05, 2.7068999999997623e-05, 2.7832999999997943e-05, 2.712500000000284e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.639" endtime="20201117 14:42:48.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.628" endtime="20201117 14:42:48.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.651" endtime="20201117 14:42:48.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.660" endtime="20201117 14:42:48.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.655" endtime="20201117 14:42:48.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.647" endtime="20201117 14:42:48.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.130" endtime="20201117 14:42:48.685"></status>
</kw>
<msg timestamp="20201117 14:42:48.686" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.707" endtime="20201117 14:42:48.727"></status>
</kw>
<msg timestamp="20201117 14:42:48.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.704" endtime="20201117 14:42:48.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.730" endtime="20201117 14:42:48.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.737" endtime="20201117 14:42:48.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.697" endtime="20201117 14:42:48.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.691" endtime="20201117 14:42:48.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.761" endtime="20201117 14:42:49.048"></status>
</kw>
<msg timestamp="20201117 14:42:49.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.758" endtime="20201117 14:42:49.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.052" endtime="20201117 14:42:49.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.061" endtime="20201117 14:42:49.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.750" endtime="20201117 14:42:49.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.746" endtime="20201117 14:42:49.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.070" level="INFO">${RESULT} = [{'time': 0.041488486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7041999999997957e-05, 'source_diff': 2.7041999999997957e-05}, {'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:49.066" endtime="20201117 14:42:49.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.083" level="INFO">${ACCURACY} = {'source_diff': [2.7041999999997957e-05, 2.738900000000266e-05, 2.7444000000001467e-05, 2.7068999999997623e-05, 2.769399999999478e-05, 2.7527999999998887e-05, 2.7806000000005215e-05, 2.763900000000291...</msg>
<status status="PASS" starttime="20201117 14:42:49.071" endtime="20201117 14:42:49.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.089" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.087" endtime="20201117 14:42:49.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.091" level="INFO">VALUE: [2.7041999999997957e-05, 2.738900000000266e-05, 2.7444000000001467e-05, 2.7068999999997623e-05, 2.769399999999478e-05, 2.7527999999998887e-05, 2.7806000000005215e-05, 2.763900000000291e-05, 2.7070000000004035e-05, 2.7874999999996652e-05, 2.7263999999999067e-05, 2.7333999999996916e-05, 2.743100000000137e-05, 2.7306000000004715e-05, 2.7819999999997846e-05, 2.7736000000000427e-05, 2.7070000000004035e-05, 2.765300000000248e-05, 2.7833999999997416e-05, 2.737500000000309e-05, 2.7847999999996986e-05, 2.748700000000659e-05, 2.7722000000000857e-05, 2.7249999999999497e-05, 2.7444000000001467e-05, 2.7957999999994598e-05, 2.7194000000001217e-05, 2.7736000000000427e-05, 2.7249999999999497e-05, 2.7596999999997263e-05, 2.7318999999997873e-05, 2.7193999999994278e-05, 2.7527999999998887e-05, 2.7554999999998553e-05, 2.7707999999994348e-05, 2.7444000000001467e-05, 2.7708000000001287e-05, 2.7541999999998457e-05, 2.7278000000005576e-05, 2.70970000000037e-05, 2.7540999999998983e-05, 2.7360999999996582e-05, 2.6972000000000107e-05, 2.718100000000112e-05, 2.70970000000037e-05, 2.7320000000004285e-05, 2.7348000000003425e-05, 2.7319999999997346e-05, 2.772300000000033e-05, 2.7402999999995292e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.090" endtime="20201117 14:42:49.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.084" endtime="20201117 14:42:49.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.095" endtime="20201117 14:42:49.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.099" endtime="20201117 14:42:49.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.097" endtime="20201117 14:42:49.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.093" endtime="20201117 14:42:49.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.687" endtime="20201117 14:42:49.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.126" endtime="20201117 14:42:49.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.124" endtime="20201117 14:42:49.121"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.124" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.134" endtime="20201117 14:42:49.150"></status>
</kw>
<msg timestamp="20201117 14:42:49.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.133" endtime="20201117 14:42:49.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.152" endtime="20201117 14:42:49.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.155" endtime="20201117 14:42:49.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.129" endtime="20201117 14:42:49.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.126" endtime="20201117 14:42:49.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.166" endtime="20201117 14:42:49.504"></status>
</kw>
<msg timestamp="20201117 14:42:49.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027754139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.164" endtime="20201117 14:42:49.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027754139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.514" endtime="20201117 14:42:49.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.533" endtime="20201117 14:42:49.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.161" endtime="20201117 14:42:49.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.159" endtime="20201117 14:42:49.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.551" level="INFO">${RESULT} = [{'time': 0.027782014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.027818014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:49.542" endtime="20201117 14:42:49.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.582" level="INFO">${ACCURACY} = {'source_diff': [2.7875000000000122e-05, 2.768099999999815e-05, 2.7124999999999372e-05, 2.769500000000119e-05, 2.7041999999997957e-05, 2.7820000000001316e-05, 2.7486000000000177e-05, 2.744499999999747...</msg>
<status status="PASS" starttime="20201117 14:42:49.553" endtime="20201117 14:42:49.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.593" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.591" endtime="20201117 14:42:49.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.598" level="INFO">VALUE: [2.7875000000000122e-05, 2.768099999999815e-05, 2.7124999999999372e-05, 2.769500000000119e-05, 2.7041999999997957e-05, 2.7820000000001316e-05, 2.7486000000000177e-05, 2.744499999999747e-05, 2.7611000000000302e-05, 2.794500000000144e-05, 2.7915999999999358e-05, 2.7540999999998983e-05, 2.7902999999999262e-05, 2.7070000000000566e-05, 2.740299999999876e-05, 2.7972000000001107e-05, 2.7736000000000427e-05, 2.7694000000001717e-05, 2.7526999999999413e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.7749999999999997e-05, 2.7208000000000787e-05, 2.7486000000000177e-05, 2.7736000000000427e-05, 2.7568999999998123e-05, 2.7124999999999372e-05, 2.7527999999998887e-05, 2.74170000000018e-05, 2.7888999999999692e-05, 2.7861000000000552e-05, 2.7070000000000566e-05, 2.74170000000018e-05, 2.7320000000000816e-05, 2.7334000000000386e-05, 2.7278000000002106e-05, 2.7777999999999137e-05, 2.7277999999998637e-05, 2.7320000000000816e-05, 2.722299999999983e-05, 2.7624999999999872e-05, 2.72369999999994e-05, 2.7235999999999927e-05, 2.768099999999815e-05, 2.7083000000000662e-05, 2.7249999999999497e-05, 2.7929999999998928e-05, 2.7708000000001287e-05, 2.7026999999998913e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.595" endtime="20201117 14:42:49.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.584" endtime="20201117 14:42:49.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.607" endtime="20201117 14:42:49.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.616" endtime="20201117 14:42:49.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.611" endtime="20201117 14:42:49.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.603" endtime="20201117 14:42:49.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.124" endtime="20201117 14:42:49.642"></status>
</kw>
<msg timestamp="20201117 14:42:49.642" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.664" endtime="20201117 14:42:49.684"></status>
</kw>
<msg timestamp="20201117 14:42:49.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.661" endtime="20201117 14:42:49.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.688" endtime="20201117 14:42:49.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.694" endtime="20201117 14:42:49.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.654" endtime="20201117 14:42:49.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.648" endtime="20201117 14:42:49.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.717" endtime="20201117 14:42:50.056"></status>
</kw>
<msg timestamp="20201117 14:42:50.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041882514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.714" endtime="20201117 14:42:50.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041882514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.066" endtime="20201117 14:42:50.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.085" endtime="20201117 14:42:50.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.707" endtime="20201117 14:42:50.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.702" endtime="20201117 14:42:50.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.104" level="INFO">${RESULT} = [{'time': 0.041910528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8013999999999817e-05, 'source_diff': 2.8013999999999817e-05}, {'time': 0.041947472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:50.095" endtime="20201117 14:42:50.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.135" level="INFO">${ACCURACY} = {'source_diff': [2.8013999999999817e-05, 2.7027999999998387e-05, 2.7068999999997623e-05, 2.7472000000000607e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.7334000000003855e-05, 2.7305999999997...</msg>
<status status="PASS" starttime="20201117 14:42:50.106" endtime="20201117 14:42:50.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.146" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.144" endtime="20201117 14:42:50.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.152" level="INFO">VALUE: [2.8013999999999817e-05, 2.7027999999998387e-05, 2.7068999999997623e-05, 2.7472000000000607e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.7334000000003855e-05, 2.7305999999997776e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.766700000000205e-05, 2.783300000000488e-05, 2.745900000000051e-05, 2.7277999999998637e-05, 2.7110999999996332e-05, 2.795900000000101e-05, 2.7319999999997346e-05, 2.7374999999996152e-05, 2.74170000000018e-05, 2.7736000000000427e-05, 2.7527999999998887e-05, 2.7416000000002327e-05, 2.7736000000000427e-05, 2.7194999999993752e-05, 2.7290999999998733e-05, 2.7749999999999997e-05, 2.7068999999997623e-05, 2.706900000000456e-05, 2.7568999999998123e-05, 2.7444000000001467e-05, 2.7568999999998123e-05, 2.7944000000001967e-05, 2.7763999999999567e-05, 2.7110999999996332e-05, 2.7694000000001717e-05, 2.713900000000241e-05, 2.7513999999999317e-05, 2.7805999999998277e-05, 2.7527999999998887e-05, 2.7986000000000677e-05, 2.7860999999997083e-05, 2.765300000000248e-05, 2.737500000000309e-05, 2.7556000000004965e-05, 2.7888999999996222e-05, 2.7222000000000357e-05, 2.7416999999994862e-05, 2.7527999999998887e-05, 2.7555999999998027e-05, 2.786100000000402e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.148" endtime="20201117 14:42:50.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.137" endtime="20201117 14:42:50.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.161" endtime="20201117 14:42:50.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.169" endtime="20201117 14:42:50.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.165" endtime="20201117 14:42:50.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.157" endtime="20201117 14:42:50.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.644" endtime="20201117 14:42:50.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.122" endtime="20201117 14:42:50.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.121" endtime="20201117 14:42:50.196"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.201" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.223" endtime="20201117 14:42:50.243"></status>
</kw>
<msg timestamp="20201117 14:42:50.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.220" endtime="20201117 14:42:50.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.246" endtime="20201117 14:42:50.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.252" endtime="20201117 14:42:50.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.212" endtime="20201117 14:42:50.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.206" endtime="20201117 14:42:50.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.276" endtime="20201117 14:42:50.620"></status>
</kw>
<msg timestamp="20201117 14:42:50.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047212819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047241569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.272" endtime="20201117 14:42:50.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047212819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047241569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.630" endtime="20201117 14:42:50.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.649" endtime="20201117 14:42:50.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.265" endtime="20201117 14:42:50.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.260" endtime="20201117 14:42:50.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.667" level="INFO">${RESULT} = [{'time': 0.047241569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8749999999994058e-05, 'source_diff': 2.8749999999994058e-05}, {'time': 0.047285569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:50.657" endtime="20201117 14:42:50.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.697" level="INFO">${ACCURACY} = {'source_diff': [2.8749999999994058e-05, 2.8818999999999373e-05, 2.8944000000002967e-05, 2.8152999999996042e-05, 2.8318999999998873e-05, 2.8096999999997763e-05, 2.89579999999956e-05, 2.848600000000117...</msg>
<status status="PASS" starttime="20201117 14:42:50.669" endtime="20201117 14:42:50.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.708" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.706" endtime="20201117 14:42:50.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.715" level="INFO">VALUE: [2.8749999999994058e-05, 2.8818999999999373e-05, 2.8944000000002967e-05, 2.8152999999996042e-05, 2.8318999999998873e-05, 2.8096999999997763e-05, 2.89579999999956e-05, 2.8486000000001177e-05, 2.8054999999999053e-05, 2.8527999999999887e-05, 2.8444000000002467e-05, 2.894399999999603e-05, 2.8319000000005812e-05, 2.8985999999994738e-05, 2.8180999999995182e-05, 2.844500000000194e-05, 2.84170000000028e-05, 2.838900000000366e-05, 2.8735999999994488e-05, 2.8236000000000927e-05, 2.8124999999996902e-05, 2.869500000000219e-05, 2.8027999999999387e-05, 2.8541999999999457e-05, 2.8847999999997986e-05, 2.894500000000244e-05, 2.8597999999997736e-05, 2.8958000000002537e-05, 2.822300000000083e-05, 2.8874999999997653e-05, 2.813900000000341e-05, 2.8972000000002107e-05, 2.836100000000452e-05, 2.8763000000001093e-05, 2.8332999999998443e-05, 2.8610999999997833e-05, 2.8444000000002467e-05, 2.8110999999997333e-05, 2.8332999999998443e-05, 2.892999999999646e-05, 2.8860999999998083e-05, 2.8236000000000927e-05, 2.8027999999999387e-05, 2.8846999999998513e-05, 2.8930999999995932e-05, 2.8110999999997333e-05, 2.8486000000001177e-05, 2.8318999999998873e-05, 2.8208000000001787e-05, 2.861100000000477e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.711" endtime="20201117 14:42:50.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.699" endtime="20201117 14:42:50.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.723" endtime="20201117 14:42:50.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.732" endtime="20201117 14:42:50.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.727" endtime="20201117 14:42:50.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.719" endtime="20201117 14:42:50.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.203" endtime="20201117 14:42:50.757"></status>
</kw>
<msg timestamp="20201117 14:42:50.758" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.780" endtime="20201117 14:42:50.798"></status>
</kw>
<msg timestamp="20201117 14:42:50.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.776" endtime="20201117 14:42:50.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.802" endtime="20201117 14:42:50.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.808" endtime="20201117 14:42:50.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.769" endtime="20201117 14:42:50.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.763" endtime="20201117 14:42:50.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.832" endtime="20201117 14:42:51.173"></status>
</kw>
<msg timestamp="20201117 14:42:51.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041377806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.828" endtime="20201117 14:42:51.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041377806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.182" endtime="20201117 14:42:51.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.201" endtime="20201117 14:42:51.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.821" endtime="20201117 14:42:51.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.816" endtime="20201117 14:42:51.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.220" level="INFO">${RESULT} = [{'time': 0.041405958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.815199999999657e-05, 'source_diff': 2.815199999999657e-05}, {'time': 0.041438917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.211" endtime="20201117 14:42:51.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.252" level="INFO">${ACCURACY} = {'source_diff': [2.815199999999657e-05, 2.822300000000083e-05, 2.8374999999997152e-05, 2.8805999999999277e-05, 2.8346999999998013e-05, 2.8319999999998346e-05, 2.8235999999993988e-05, 2.852700000000041...</msg>
<status status="PASS" starttime="20201117 14:42:51.223" endtime="20201117 14:42:51.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.263" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.261" endtime="20201117 14:42:51.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.269" level="INFO">VALUE: [2.815199999999657e-05, 2.822300000000083e-05, 2.8374999999997152e-05, 2.8805999999999277e-05, 2.8346999999998013e-05, 2.8319999999998346e-05, 2.8235999999993988e-05, 2.8527000000000413e-05, 2.8694000000002717e-05, 2.8304999999999303e-05, 2.8458000000002037e-05, 2.812500000000384e-05, 2.815199999999657e-05, 2.8124999999996902e-05, 2.8124999999996902e-05, 2.8264000000000067e-05, 2.8472000000001607e-05, 2.8874999999997653e-05, 2.8485999999994238e-05, 2.8805999999999277e-05, 2.8985999999994738e-05, 2.8818999999999373e-05, 2.8944000000002967e-05, 2.812500000000384e-05, 2.8319999999998346e-05, 2.843100000000237e-05, 2.8348000000004425e-05, 2.8236000000000927e-05, 2.843100000000237e-05, 2.8736000000001427e-05, 2.816700000000255e-05, 2.890300000000373e-05, 2.844500000000194e-05, 2.8277999999999637e-05, 2.848700000000065e-05, 2.8764000000000567e-05, 2.897300000000158e-05, 2.8582999999998693e-05, 2.886100000000502e-05, 2.8860999999998083e-05, 2.887500000000459e-05, 2.815199999999657e-05, 2.8610999999997833e-05, 2.8514000000000317e-05, 2.887500000000459e-05, 2.869500000000219e-05, 2.8541999999999457e-05, 2.8486000000001177e-05, 2.8402999999996292e-05, 2.8722000000001857e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.266" endtime="20201117 14:42:51.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.254" endtime="20201117 14:42:51.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.278" endtime="20201117 14:42:51.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.286" endtime="20201117 14:42:51.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.282" endtime="20201117 14:42:51.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.273" endtime="20201117 14:42:51.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.759" endtime="20201117 14:42:51.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.199" endtime="20201117 14:42:51.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.197" endtime="20201117 14:42:51.312"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.318" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.340" endtime="20201117 14:42:51.359"></status>
</kw>
<msg timestamp="20201117 14:42:51.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.336" endtime="20201117 14:42:51.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.362" endtime="20201117 14:42:51.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.368" endtime="20201117 14:42:51.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.329" endtime="20201117 14:42:51.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.323" endtime="20201117 14:42:51.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.392" endtime="20201117 14:42:51.732"></status>
</kw>
<msg timestamp="20201117 14:42:51.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047432986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047462597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.389" endtime="20201117 14:42:51.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047432986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047462597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.742" endtime="20201117 14:42:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.761" endtime="20201117 14:42:51.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.381" endtime="20201117 14:42:51.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.376" endtime="20201117 14:42:51.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.779" level="INFO">${RESULT} = [{'time': 0.047462597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9610999999998833e-05, 'source_diff': 2.9610999999998833e-05}, {'time': 0.047503597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:51.770" endtime="20201117 14:42:51.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.810" level="INFO">${ACCURACY} = {'source_diff': [2.9610999999998833e-05, 2.913900000000441e-05, 2.9652999999997542e-05, 2.966700000000405e-05, 2.9292000000000207e-05, 2.961100000000577e-05, 2.9736000000002427e-05, 2.9749999999995058...</msg>
<status status="PASS" starttime="20201117 14:42:51.781" endtime="20201117 14:42:51.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.821" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.819" endtime="20201117 14:42:51.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.827" level="INFO">VALUE: [2.9610999999998833e-05, 2.913900000000441e-05, 2.9652999999997542e-05, 2.966700000000405e-05, 2.9292000000000207e-05, 2.961100000000577e-05, 2.9736000000002427e-05, 2.9749999999995058e-05, 2.9486000000002177e-05, 2.9069999999999097e-05, 2.9916999999997362e-05, 2.9597999999998736e-05, 2.9736000000002427e-05, 2.994500000000344e-05, 2.9250000000001497e-05, 2.969500000000319e-05, 2.9278000000000637e-05, 2.9528000000000887e-05, 2.9444999999996002e-05, 2.9750000000001997e-05, 2.9778000000001137e-05, 2.970900000000276e-05, 2.9611999999998306e-05, 2.9014000000000817e-05, 2.9819000000000373e-05, 2.942999999999696e-05, 2.9068999999999623e-05, 2.9124999999997903e-05, 2.9096999999998763e-05, 2.9736000000002427e-05, 2.9846999999999513e-05, 2.947199999999567e-05, 2.9860999999999083e-05, 2.9735999999995488e-05, 2.99579999999966e-05, 2.938900000000466e-05, 2.9082999999999193e-05, 3.0000000000002247e-05, 2.994500000000344e-05, 2.9236000000001927e-05, 2.9278000000000637e-05, 2.9888999999998223e-05, 2.9430999999996432e-05, 2.9083999999998666e-05, 2.938900000000466e-05, 2.9472000000002607e-05, 2.919500000000269e-05, 2.99170000000043e-05, 2.9847999999998986e-05, 2.966700000000405e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.824" endtime="20201117 14:42:51.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.812" endtime="20201117 14:42:51.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.836" endtime="20201117 14:42:51.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.844" endtime="20201117 14:42:51.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.840" endtime="20201117 14:42:51.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.831" endtime="20201117 14:42:51.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.319" endtime="20201117 14:42:51.870"></status>
</kw>
<msg timestamp="20201117 14:42:51.870" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.892" endtime="20201117 14:42:51.912"></status>
</kw>
<msg timestamp="20201117 14:42:51.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.889" endtime="20201117 14:42:51.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.915" endtime="20201117 14:42:51.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.921" endtime="20201117 14:42:51.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.881" endtime="20201117 14:42:51.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.876" endtime="20201117 14:42:51.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.945" endtime="20201117 14:42:52.284"></status>
</kw>
<msg timestamp="20201117 14:42:52.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.942" endtime="20201117 14:42:52.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.293" endtime="20201117 14:42:52.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.313" endtime="20201117 14:42:52.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.934" endtime="20201117 14:42:52.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.930" endtime="20201117 14:42:52.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.332" level="INFO">${RESULT} = [{'time': 0.041529278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.937500000000509e-05, 'source_diff': 2.937500000000509e-05}, {'time': 0.041565306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.323" endtime="20201117 14:42:52.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.363" level="INFO">${ACCURACY} = {'source_diff': [2.937500000000509e-05, 3.0014000000001817e-05, 2.9152999999997042e-05, 3.0041000000001483e-05, 2.9985999999995738e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.91119999999978...</msg>
<status status="PASS" starttime="20201117 14:42:52.334" endtime="20201117 14:42:52.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.374" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.372" endtime="20201117 14:42:52.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.380" level="INFO">VALUE: [2.937500000000509e-05, 3.0014000000001817e-05, 2.9152999999997042e-05, 3.0041000000001483e-05, 2.9985999999995738e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.9111999999997806e-05, 2.9764000000001567e-05, 2.9152999999997042e-05, 2.9582999999999693e-05, 2.9749999999995058e-05, 2.9346999999999013e-05, 2.9582999999999693e-05, 2.9305000000000303e-05, 2.9860999999999083e-05, 2.9346999999999013e-05, 2.9430000000003897e-05, 2.9916999999997362e-05, 2.9832999999999943e-05, 2.9014000000000817e-05, 2.9318999999999873e-05, 2.997300000000258e-05, 2.9860999999999083e-05, 2.9528000000000887e-05, 2.9000000000001247e-05, 2.9972000000003107e-05, 2.9499999999994808e-05, 2.9569999999999597e-05, 2.9055999999999527e-05, 2.9041999999999957e-05, 2.9874999999998653e-05, 2.9792000000000707e-05, 2.9097999999998236e-05, 2.9208999999995322e-05, 2.9041000000000483e-05, 2.9514000000001317e-05, 2.9832999999999943e-05, 2.9388999999997723e-05, 2.9332999999999443e-05, 2.94579999999961e-05, 2.9416000000004328e-05, 2.9832999999999943e-05, 2.942999999999696e-05, 2.911100000000527e-05, 2.9138999999997472e-05, 2.8958000000002537e-05, 2.991599999999789e-05, 2.969399999999678e-05, 2.9610999999998833e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.377" endtime="20201117 14:42:52.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.365" endtime="20201117 14:42:52.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.389" endtime="20201117 14:42:52.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.397" endtime="20201117 14:42:52.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.393" endtime="20201117 14:42:52.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.384" endtime="20201117 14:42:52.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.872" endtime="20201117 14:42:52.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.315" endtime="20201117 14:42:52.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.313" endtime="20201117 14:42:52.421"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.423" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.433" endtime="20201117 14:42:52.449"></status>
</kw>
<msg timestamp="20201117 14:42:52.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.432" endtime="20201117 14:42:52.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.451" endtime="20201117 14:42:52.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.454" endtime="20201117 14:42:52.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.428" endtime="20201117 14:42:52.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.426" endtime="20201117 14:42:52.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.465" endtime="20201117 14:42:52.798"></status>
</kw>
<msg timestamp="20201117 14:42:52.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028270347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028300583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.464" endtime="20201117 14:42:52.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028270347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028300583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.808" endtime="20201117 14:42:52.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.827" endtime="20201117 14:42:52.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.460" endtime="20201117 14:42:52.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.458" endtime="20201117 14:42:52.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.844" level="INFO">${RESULT} = [{'time': 0.028300583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0235999999999458e-05, 'source_diff': 3.0235999999999458e-05}, {'time': 0.028333583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:52.835" endtime="20201117 14:42:52.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.875" level="INFO">${ACCURACY} = {'source_diff': [3.0235999999999458e-05, 3.0318999999997404e-05, 3.088900000000269e-05, 3.0138999999998473e-05, 3.0125000000002372e-05, 3.087499999999965e-05, 3.0096999999999763e-05, 3.008300000000019...</msg>
<status status="PASS" starttime="20201117 14:42:52.846" endtime="20201117 14:42:52.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.886" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.884" endtime="20201117 14:42:52.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.892" level="INFO">VALUE: [3.0235999999999458e-05, 3.0318999999997404e-05, 3.088900000000269e-05, 3.0138999999998473e-05, 3.0125000000002372e-05, 3.087499999999965e-05, 3.0096999999999763e-05, 3.0083000000000193e-05, 3.0305000000001303e-05, 3.083300000000094e-05, 3.0306000000000777e-05, 3.054199999999799e-05, 3.090299999999879e-05, 3.072200000000039e-05, 3.063899999999897e-05, 3.069500000000072e-05, 3.094500000000097e-05, 3.0485999999999708e-05, 3.0264000000002067e-05, 3.095800000000107e-05, 3.0444000000000998e-05, 3.0444999999997002e-05, 3.07370000000029e-05, 3.0235999999999458e-05, 3.023699999999893e-05, 3.0000000000002247e-05, 3.094399999999803e-05, 3.074999999999953e-05, 3.0319000000000873e-05, 3.0444000000000998e-05, 3.0096999999999763e-05, 3.090199999999932e-05, 3.0333000000000443e-05, 3.0278000000001637e-05, 3.052799999999842e-05, 3.068100000000115e-05, 3.054200000000146e-05, 3.061099999999983e-05, 3.0750000000003e-05, 3.044500000000047e-05, 3.0042000000000957e-05, 3.0431000000000902e-05, 3.0166999999997612e-05, 3.09449999999975e-05, 3.0472000000000138e-05, 3.0110999999999333e-05, 3.0070000000000097e-05, 3.0264000000002067e-05, 3.063899999999897e-05, 3.0320000000000347e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.889" endtime="20201117 14:42:52.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.877" endtime="20201117 14:42:52.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.901" endtime="20201117 14:42:52.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.909" endtime="20201117 14:42:52.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.905" endtime="20201117 14:42:52.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.896" endtime="20201117 14:42:52.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.424" endtime="20201117 14:42:52.935"></status>
</kw>
<msg timestamp="20201117 14:42:52.935" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.957" endtime="20201117 14:42:52.977"></status>
</kw>
<msg timestamp="20201117 14:42:52.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.954" endtime="20201117 14:42:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.980" endtime="20201117 14:42:52.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.992" endtime="20201117 14:42:52.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.946" endtime="20201117 14:42:52.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.940" endtime="20201117 14:42:53.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.016" endtime="20201117 14:42:53.357"></status>
</kw>
<msg timestamp="20201117 14:42:53.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.013" endtime="20201117 14:42:53.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.366" endtime="20201117 14:42:53.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.386" endtime="20201117 14:42:53.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.006" endtime="20201117 14:42:53.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.001" endtime="20201117 14:42:53.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.405" level="INFO">${RESULT} = [{'time': 0.041752319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.041791319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.396" endtime="20201117 14:42:53.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.436" level="INFO">${ACCURACY} = {'source_diff': [3.061099999999983e-05, 3.0486000000003177e-05, 3.022199999999642e-05, 3.086100000000008e-05, 3.092999999999846e-05, 3.019399999999728e-05, 3.091599999999889e-05, 3.065300000000548e-05...</msg>
<status status="PASS" starttime="20201117 14:42:53.407" endtime="20201117 14:42:53.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.447" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.445" endtime="20201117 14:42:53.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.453" level="INFO">VALUE: [3.061099999999983e-05, 3.0486000000003177e-05, 3.022199999999642e-05, 3.086100000000008e-05, 3.092999999999846e-05, 3.019399999999728e-05, 3.091599999999889e-05, 3.065300000000548e-05, 3.0374999999999153e-05, 3.065299999999854e-05, 3.0110999999999333e-05, 3.098599999999674e-05, 3.0472000000003607e-05, 3.0083000000000193e-05, 3.065300000000548e-05, 3.0444999999997002e-05, 3.0290999999994794e-05, 3.0166999999997612e-05, 3.05700000000006e-05, 3.0096999999999763e-05, 3.088899999999922e-05, 3.0513999999995378e-05, 3.073600000000343e-05, 3.0472999999996142e-05, 3.0347999999999486e-05, 3.0320000000000347e-05, 3.0306000000000777e-05, 3.052800000000189e-05, 3.0291000000001733e-05, 3.072199999999692e-05, 3.09300000000054e-05, 3.091599999999889e-05, 3.072200000000386e-05, 3.0818999999994434e-05, 3.0333000000000443e-05, 3.084700000000051e-05, 3.094399999999803e-05, 3.080600000000128e-05, 3.0250000000002497e-05, 3.04579999999971e-05, 3.068099999999768e-05, 3.0458000000004037e-05, 3.0056000000000527e-05, 3.081900000000137e-05, 3.069400000000472e-05, 3.0292000000001207e-05, 3.0763000000003093e-05, 3.101400000000282e-05, 3.0320000000000347e-05, 3.100000000000325e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.449" endtime="20201117 14:42:53.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.438" endtime="20201117 14:42:53.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.461" endtime="20201117 14:42:53.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.470" endtime="20201117 14:42:53.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.465" endtime="20201117 14:42:53.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.457" endtime="20201117 14:42:53.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.936" endtime="20201117 14:42:53.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.422" endtime="20201117 14:42:53.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.421" endtime="20201117 14:42:53.497"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.502" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.526" endtime="20201117 14:42:53.546"></status>
</kw>
<msg timestamp="20201117 14:42:53.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.522" endtime="20201117 14:42:53.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.549" endtime="20201117 14:42:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.555" endtime="20201117 14:42:53.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.515" endtime="20201117 14:42:53.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.508" endtime="20201117 14:42:53.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.579" endtime="20201117 14:42:53.921"></status>
</kw>
<msg timestamp="20201117 14:42:53.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049618653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049649778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.575" endtime="20201117 14:42:53.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049618653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049649778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.931" endtime="20201117 14:42:53.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.950" endtime="20201117 14:42:53.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.568" endtime="20201117 14:42:53.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.564" endtime="20201117 14:42:53.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.967" level="INFO">${RESULT} = [{'time': 0.049649778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.11249999999999e-05, 'source_diff': 3.11249999999999e-05}, {'time': 0.049695778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:53.958" endtime="20201117 14:42:53.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.998" level="INFO">${ACCURACY} = {'source_diff': [3.11249999999999e-05, 3.102800000000239e-05, 3.186100000000108e-05, 3.1362000000000056e-05, 3.173599999999749e-05, 3.195900000000501e-05, 3.122299999999689e-05, 3.181900000000237e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:53.969" endtime="20201117 14:42:53.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.009" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.007" endtime="20201117 14:42:54.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.015" level="INFO">VALUE: [3.11249999999999e-05, 3.102800000000239e-05, 3.186100000000108e-05, 3.1362000000000056e-05, 3.173599999999749e-05, 3.195900000000501e-05, 3.122299999999689e-05, 3.181900000000237e-05, 3.190299999999979e-05, 3.12370000000034e-05, 3.104100000000248e-05, 3.16250000000004e-05, 3.18050000000028e-05, 3.151400000000332e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.201399999999688e-05, 3.12779999999957e-05, 3.163899999999997e-05, 3.150000000000375e-05, 3.194399999999903e-05, 3.154200000000246e-05, 3.177800000000314e-05, 3.101399999999588e-05, 3.122199999999742e-05, 3.131900000000187e-05, 3.176399999999663e-05, 3.123599999999699e-05, 3.138899999999972e-05, 3.124999999999656e-05, 3.109700000000076e-05, 3.104200000000196e-05, 3.1444999999998e-05, 3.165299999999954e-05, 3.124999999999656e-05, 3.18050000000028e-05, 3.136100000000058e-05, 3.163899999999997e-05, 3.134700000000101e-05, 3.1526999999996475e-05, 3.1026999999995974e-05, 3.11249999999999e-05, 3.184700000000151e-05, 3.1527000000003413e-05, 3.11249999999999e-05, 3.147199999999767e-05, 3.127800000000264e-05, 3.156900000000212e-05, 3.194399999999903e-05, 3.170799999999835e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.012" endtime="20201117 14:42:54.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.000" endtime="20201117 14:42:54.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.024" endtime="20201117 14:42:54.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.032" endtime="20201117 14:42:54.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.028" endtime="20201117 14:42:54.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.019" endtime="20201117 14:42:54.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.504" endtime="20201117 14:42:54.058"></status>
</kw>
<msg timestamp="20201117 14:42:54.059" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.081" endtime="20201117 14:42:54.100"></status>
</kw>
<msg timestamp="20201117 14:42:54.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.077" endtime="20201117 14:42:54.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.104" endtime="20201117 14:42:54.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.110" endtime="20201117 14:42:54.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.070" endtime="20201117 14:42:54.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.064" endtime="20201117 14:42:54.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.134" endtime="20201117 14:42:54.473"></status>
</kw>
<msg timestamp="20201117 14:42:54.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042254847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.130" endtime="20201117 14:42:54.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042254847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.483" endtime="20201117 14:42:54.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.502" endtime="20201117 14:42:54.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.123" endtime="20201117 14:42:54.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.118" endtime="20201117 14:42:54.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.521" level="INFO">${RESULT} = [{'time': 0.042254847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.122199999999742e-05, 'source_diff': 3.122199999999742e-05}, {'time': 0.042299861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.512" endtime="20201117 14:42:54.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.554" level="INFO">${ACCURACY} = {'source_diff': [3.122199999999742e-05, 3.136100000000058e-05, 3.131999999999441e-05, 3.165299999999954e-05, 3.199999999999731e-05, 3.117999999999871e-05, 3.132000000000135e-05, 3.14579999999981e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:54.523" endtime="20201117 14:42:54.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.566" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.563" endtime="20201117 14:42:54.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.571" level="INFO">VALUE: [3.122199999999742e-05, 3.136100000000058e-05, 3.131999999999441e-05, 3.165299999999954e-05, 3.199999999999731e-05, 3.117999999999871e-05, 3.132000000000135e-05, 3.14579999999981e-05, 3.142999999999896e-05, 3.16250000000004e-05, 3.123599999999699e-05, 3.1290999999995794e-05, 3.165299999999954e-05, 3.19579999999986e-05, 3.134700000000101e-05, 3.172199999999792e-05, 3.12779999999957e-05, 3.183300000000194e-05, 3.174999999999706e-05, 3.156900000000212e-05, 3.111100000000033e-05, 3.144399999999853e-05, 3.198599999999774e-05, 3.194399999999903e-05, 3.11249999999999e-05, 3.166700000000605e-05, 3.116599999999914e-05, 3.111100000000033e-05, 3.188900000000022e-05, 3.19449999999985e-05, 3.127800000000264e-05, 3.158400000000117e-05, 3.124999999999656e-05, 3.197199999999817e-05, 3.1444999999998e-05, 3.152800000000289e-05, 3.108300000000119e-05, 3.187500000000065e-05, 3.1026999999995974e-05, 3.177800000000314e-05, 3.165299999999954e-05, 3.1082999999994254e-05, 3.134700000000101e-05, 3.136100000000058e-05, 3.165300000000648e-05, 3.119399999999828e-05, 3.123599999999699e-05, 3.152799999999595e-05, 3.19579999999986e-05, 3.123599999999699e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.568" endtime="20201117 14:42:54.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.556" endtime="20201117 14:42:54.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.581" endtime="20201117 14:42:54.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.589" endtime="20201117 14:42:54.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.585" endtime="20201117 14:42:54.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.576" endtime="20201117 14:42:54.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.060" endtime="20201117 14:42:54.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.499" endtime="20201117 14:42:54.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.498" endtime="20201117 14:42:54.616"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.621" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.643" endtime="20201117 14:42:54.662"></status>
</kw>
<msg timestamp="20201117 14:42:54.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.640" endtime="20201117 14:42:54.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.666" endtime="20201117 14:42:54.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.672" endtime="20201117 14:42:54.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.632" endtime="20201117 14:42:54.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.627" endtime="20201117 14:42:54.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.695" endtime="20201117 14:42:55.041"></status>
</kw>
<msg timestamp="20201117 14:42:55.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047219292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047251569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.692" endtime="20201117 14:42:55.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047219292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047251569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.050" endtime="20201117 14:42:55.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.069" endtime="20201117 14:42:55.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.685" endtime="20201117 14:42:55.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.680" endtime="20201117 14:42:55.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.087" level="INFO">${RESULT} = [{'time': 0.047251569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2276999999997225e-05, 'source_diff': 3.2276999999997225e-05}, {'time': 0.047289583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:55.078" endtime="20201117 14:42:55.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.118" level="INFO">${ACCURACY} = {'source_diff': [3.2276999999997225e-05, 3.219400000000622e-05, 3.272199999999892e-05, 3.2318999999995934e-05, 3.265300000000054e-05, 3.236100000000158e-05, 3.269399999999978e-05, 3.294400000000003e-0...</msg>
<status status="PASS" starttime="20201117 14:42:55.089" endtime="20201117 14:42:55.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.129" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.127" endtime="20201117 14:42:55.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.134" level="INFO">VALUE: [3.2276999999997225e-05, 3.219400000000622e-05, 3.272199999999892e-05, 3.2318999999995934e-05, 3.265300000000054e-05, 3.236100000000158e-05, 3.269399999999978e-05, 3.294400000000003e-05, 3.233300000000244e-05, 3.231900000000287e-05, 3.252799999999695e-05, 3.243099999999943e-05, 3.256900000000312e-05, 3.233399999999498e-05, 3.199999999999731e-05, 3.230599999999584e-05, 3.211100000000133e-05, 3.29449999999995e-05, 3.290300000000079e-05, 3.268099999999968e-05, 3.229200000000321e-05, 3.2540999999997045e-05, 3.230600000000278e-05, 3.274999999999806e-05, 3.216600000000014e-05, 3.251399999999738e-05, 3.2790999999997295e-05, 3.293000000000046e-05, 3.240199999999388e-05, 3.2624999999994464e-05, 3.298599999999874e-05, 3.274999999999806e-05, 3.273599999999849e-05, 3.216699999999961e-05, 3.269399999999978e-05, 3.2568999999996184e-05, 3.229199999999627e-05, 3.269399999999978e-05, 3.216600000000014e-05, 3.291700000000036e-05, 3.279199999999677e-05, 3.273599999999849e-05, 3.291700000000036e-05, 3.291700000000036e-05, 3.226399999999713e-05, 3.220899999999832e-05, 3.22779999999967e-05, 3.226400000000407e-05, 3.245899999999857e-05, 3.26250000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.131" endtime="20201117 14:42:55.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.120" endtime="20201117 14:42:55.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.144" endtime="20201117 14:42:55.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.153" endtime="20201117 14:42:55.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.148" endtime="20201117 14:42:55.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.139" endtime="20201117 14:42:55.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.623" endtime="20201117 14:42:55.178"></status>
</kw>
<msg timestamp="20201117 14:42:55.179" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.201" endtime="20201117 14:42:55.221"></status>
</kw>
<msg timestamp="20201117 14:42:55.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.198" endtime="20201117 14:42:55.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.224" endtime="20201117 14:42:55.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.230" endtime="20201117 14:42:55.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.190" endtime="20201117 14:42:55.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.184" endtime="20201117 14:42:55.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.254" endtime="20201117 14:42:55.594"></status>
</kw>
<msg timestamp="20201117 14:42:55.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041634333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041666792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.251" endtime="20201117 14:42:55.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041634333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041666792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.604" endtime="20201117 14:42:55.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.622" endtime="20201117 14:42:55.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.243" endtime="20201117 14:42:55.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.239" endtime="20201117 14:42:55.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.642" level="INFO">${RESULT} = [{'time': 0.041666792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.245899999999857e-05, 'source_diff': 3.245899999999857e-05}, {'time': 0.041712792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.633" endtime="20201117 14:42:55.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.672" level="INFO">${ACCURACY} = {'source_diff': [3.245899999999857e-05, 3.290300000000079e-05, 3.215300000000004e-05, 3.297199999999917e-05, 3.286200000000156e-05, 3.2112000000000807e-05, 3.270799999999935e-05, 3.290200000000132e-05...</msg>
<status status="PASS" starttime="20201117 14:42:55.644" endtime="20201117 14:42:55.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.684" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.682" endtime="20201117 14:42:55.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.690" level="INFO">VALUE: [3.245899999999857e-05, 3.290300000000079e-05, 3.215300000000004e-05, 3.297199999999917e-05, 3.286200000000156e-05, 3.2112000000000807e-05, 3.270799999999935e-05, 3.290200000000132e-05, 3.216600000000014e-05, 3.28050000000038e-05, 3.206900000000262e-05, 3.2276999999997225e-05, 3.222199999999842e-05, 3.254199999999652e-05, 3.290300000000079e-05, 3.25700000000026e-05, 3.22779999999967e-05, 3.234700000000201e-05, 3.247199999999867e-05, 3.273600000000543e-05, 3.2444999999999e-05, 3.290200000000132e-05, 3.216600000000014e-05, 3.290300000000079e-05, 3.22779999999967e-05, 3.270899999999882e-05, 3.226399999999713e-05, 3.263900000000097e-05, 3.265300000000054e-05, 3.25700000000026e-05, 3.291700000000036e-05, 3.265300000000054e-05, 3.21250000000009e-05, 3.286200000000156e-05, 3.21250000000009e-05, 3.2763000000005094e-05, 3.294400000000003e-05, 3.215200000000057e-05, 3.194399999999903e-05, 3.215300000000004e-05, 3.231999999999541e-05, 3.206900000000262e-05, 3.22779999999967e-05, 3.293099999999993e-05, 3.201400000000382e-05, 3.268000000000021e-05, 3.274999999999806e-05, 3.2124999999993964e-05, 3.273599999999849e-05, 3.211100000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.687" endtime="20201117 14:42:55.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.675" endtime="20201117 14:42:55.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.699" endtime="20201117 14:42:55.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.707" endtime="20201117 14:42:55.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.703" endtime="20201117 14:42:55.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.694" endtime="20201117 14:42:55.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.180" endtime="20201117 14:42:55.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.619" endtime="20201117 14:42:55.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.617" endtime="20201117 14:42:55.734"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.739" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.759" endtime="20201117 14:42:55.776"></status>
</kw>
<msg timestamp="20201117 14:42:55.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.757" endtime="20201117 14:42:55.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.778" endtime="20201117 14:42:55.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.781" endtime="20201117 14:42:55.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.750" endtime="20201117 14:42:55.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.744" endtime="20201117 14:42:55.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.792" endtime="20201117 14:42:56.121"></status>
</kw>
<msg timestamp="20201117 14:42:56.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044621097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.790" endtime="20201117 14:42:56.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044621097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.130" endtime="20201117 14:42:56.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.149" endtime="20201117 14:42:56.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.787" endtime="20201117 14:42:56.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.785" endtime="20201117 14:42:56.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.168" level="INFO">${RESULT} = [{'time': 0.044654236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.313900000000147e-05, 'source_diff': 3.313900000000147e-05}, {'time': 0.04469725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:56.158" endtime="20201117 14:42:56.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.198" level="INFO">${ACCURACY} = {'source_diff': [3.313900000000147e-05, 3.32779999999977e-05, 3.379199999999777e-05, 3.390300000000179e-05, 3.387500000000265e-05, 3.31250000000019e-05, 3.306900000000362e-05, 3.351399999999838e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:42:56.170" endtime="20201117 14:42:56.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.210" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.207" endtime="20201117 14:42:56.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.215" level="INFO">VALUE: [3.313900000000147e-05, 3.32779999999977e-05, 3.379199999999777e-05, 3.390300000000179e-05, 3.387500000000265e-05, 3.31250000000019e-05, 3.306900000000362e-05, 3.351399999999838e-05, 3.301399999999788e-05, 3.390300000000179e-05, 3.302799999999745e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.366700000000111e-05, 3.388900000000222e-05, 3.348599999999924e-05, 3.354199999999752e-05, 3.382000000000385e-05, 3.366700000000111e-05, 3.383400000000342e-05, 3.3291000000004733e-05, 3.369400000000078e-05, 3.311100000000233e-05, 3.394400000000103e-05, 3.397200000000017e-05, 3.399999999999931e-05, 3.3554999999997615e-05, 3.3041000000004483e-05, 3.323599999999899e-05, 3.3888999999995284e-05, 3.316600000000114e-05, 3.323599999999899e-05, 3.39580000000006e-05, 3.308400000000267e-05, 3.3166999999993674e-05, 3.331900000000387e-05, 3.398599999999974e-05, 3.373599999999949e-05, 3.311100000000233e-05, 3.32779999999977e-05, 3.369500000000025e-05, 3.376399999999863e-05, 3.33050000000043e-05, 3.329200000000421e-05, 3.337500000000215e-05, 3.397299999999964e-05, 3.341700000000086e-05, 3.383300000000394e-05, 3.370800000000035e-05, 3.398599999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.212" endtime="20201117 14:42:56.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.200" endtime="20201117 14:42:56.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.224" endtime="20201117 14:42:56.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.233" endtime="20201117 14:42:56.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.228" endtime="20201117 14:42:56.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.220" endtime="20201117 14:42:56.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.740" endtime="20201117 14:42:56.258"></status>
</kw>
<msg timestamp="20201117 14:42:56.259" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.280" endtime="20201117 14:42:56.300"></status>
</kw>
<msg timestamp="20201117 14:42:56.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.277" endtime="20201117 14:42:56.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.304" endtime="20201117 14:42:56.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.310" endtime="20201117 14:42:56.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.270" endtime="20201117 14:42:56.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.264" endtime="20201117 14:42:56.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.333" endtime="20201117 14:42:56.674"></status>
</kw>
<msg timestamp="20201117 14:42:56.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041502125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.330" endtime="20201117 14:42:56.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041502125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.683" endtime="20201117 14:42:56.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.703" endtime="20201117 14:42:56.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.323" endtime="20201117 14:42:56.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.318" endtime="20201117 14:42:56.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.722" level="INFO">${RESULT} = [{'time': 0.041502125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.352799999999795e-05, 'source_diff': 3.352799999999795e-05}, {'time': 0.041542125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.713" endtime="20201117 14:42:56.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.753" level="INFO">${ACCURACY} = {'source_diff': [3.352799999999795e-05, 3.376399999999863e-05, 3.344400000000053e-05, 3.39580000000006e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.370899999999982e-05, 3.376399999999863e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:56.724" endtime="20201117 14:42:56.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.764" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.762" endtime="20201117 14:42:56.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.769" level="INFO">VALUE: [3.352799999999795e-05, 3.376399999999863e-05, 3.344400000000053e-05, 3.39580000000006e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.370899999999982e-05, 3.376399999999863e-05, 3.373599999999949e-05, 3.299999999999831e-05, 3.332000000000335e-05, 3.330599999999684e-05, 3.308400000000267e-05, 3.322299999999889e-05, 3.3291000000004733e-05, 3.3624999999995464e-05, 3.3818999999997434e-05, 3.373599999999949e-05, 3.34580000000001e-05, 3.366600000000164e-05, 3.3804999999997865e-05, 3.320799999999985e-05, 3.366700000000111e-05, 3.390300000000179e-05, 3.399999999999931e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.309700000000276e-05, 3.379199999999777e-05, 3.329199999999727e-05, 3.349999999999881e-05, 3.390300000000179e-05, 3.39450000000005e-05, 3.383400000000342e-05, 3.355600000000403e-05, 3.3526999999998475e-05, 3.398599999999974e-05, 3.347199999999967e-05, 3.30700000000031e-05, 3.366700000000111e-05, 3.361100000000283e-05, 3.3541000000004983e-05, 3.306900000000362e-05, 3.3832999999997004e-05, 3.383300000000394e-05, 3.323599999999899e-05, 3.3860999999996144e-05, 3.3068999999996684e-05, 3.318000000000071e-05, 3.3110999999995394e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.766" endtime="20201117 14:42:56.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.755" endtime="20201117 14:42:56.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.778" endtime="20201117 14:42:56.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.787" endtime="20201117 14:42:56.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.782" endtime="20201117 14:42:56.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.774" endtime="20201117 14:42:56.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.260" endtime="20201117 14:42:56.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.736" endtime="20201117 14:42:56.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.735" endtime="20201117 14:42:56.813"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.818" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.840" endtime="20201117 14:42:56.859"></status>
</kw>
<msg timestamp="20201117 14:42:56.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.837" endtime="20201117 14:42:56.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.863" endtime="20201117 14:42:56.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.869" endtime="20201117 14:42:56.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.829" endtime="20201117 14:42:56.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.824" endtime="20201117 14:42:56.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.893" endtime="20201117 14:42:57.239"></status>
</kw>
<msg timestamp="20201117 14:42:57.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047043875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.889" endtime="20201117 14:42:57.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047043875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.248" endtime="20201117 14:42:57.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.267" endtime="20201117 14:42:57.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.882" endtime="20201117 14:42:57.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.877" endtime="20201117 14:42:57.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.285" level="INFO">${RESULT} = [{'time': 0.047043875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.402799999999845e-05, 'source_diff': 3.402799999999845e-05}, {'time': 0.047085875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.276" endtime="20201117 14:42:57.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.316" level="INFO">${ACCURACY} = {'source_diff': [3.402799999999845e-05, 3.452799999999895e-05, 3.404200000000496e-05, 3.406999999999716e-05, 3.4138999999995534e-05, 3.486100000000408e-05, 3.476399999999963e-05, 3.47779999999992e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:57.287" endtime="20201117 14:42:57.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.327" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.325" endtime="20201117 14:42:57.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.332" level="INFO">VALUE: [3.402799999999845e-05, 3.452799999999895e-05, 3.404200000000496e-05, 3.406999999999716e-05, 3.4138999999995534e-05, 3.486100000000408e-05, 3.476399999999963e-05, 3.47779999999992e-05, 3.475000000000006e-05, 3.422299999999989e-05, 3.484799999999705e-05, 3.424999999999956e-05, 3.4082999999997254e-05, 3.413900000000247e-05, 3.4763000000000155e-05, 3.488900000000322e-05, 3.4096999999996824e-05, 3.4860999999997144e-05, 3.402799999999845e-05, 3.476400000000657e-05, 3.4110999999996394e-05, 3.429199999999827e-05, 3.452799999999895e-05, 3.449999999999981e-05, 3.463900000000297e-05, 3.438900000000272e-05, 3.476399999999963e-05, 3.468100000000168e-05, 3.411100000000333e-05, 3.452800000000589e-05, 3.4860999999997144e-05, 3.461100000000383e-05, 3.448600000000024e-05, 3.404199999999802e-05, 3.4596999999997324e-05, 3.4026999999998975e-05, 3.456999999999766e-05, 3.418100000000118e-05, 3.404200000000496e-05, 3.455600000000503e-05, 3.416600000000214e-05, 3.438900000000272e-05, 3.494400000000203e-05, 3.443000000000196e-05, 3.484700000000451e-05, 3.438900000000272e-05, 3.4096999999996824e-05, 3.4902999999995854e-05, 3.490300000000279e-05, 3.4832999999998004e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.329" endtime="20201117 14:42:57.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.318" endtime="20201117 14:42:57.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.341" endtime="20201117 14:42:57.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.350" endtime="20201117 14:42:57.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.345" endtime="20201117 14:42:57.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.337" endtime="20201117 14:42:57.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.820" endtime="20201117 14:42:57.375"></status>
</kw>
<msg timestamp="20201117 14:42:57.376" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.398" endtime="20201117 14:42:57.417"></status>
</kw>
<msg timestamp="20201117 14:42:57.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.394" endtime="20201117 14:42:57.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.421" endtime="20201117 14:42:57.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.427" endtime="20201117 14:42:57.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.387" endtime="20201117 14:42:57.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.381" endtime="20201117 14:42:57.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.452" endtime="20201117 14:42:57.792"></status>
</kw>
<msg timestamp="20201117 14:42:57.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04178775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041822611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:57.448" endtime="20201117 14:42:57.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04178775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041822611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:57.801" endtime="20201117 14:42:57.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.820" endtime="20201117 14:42:57.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.441" endtime="20201117 14:42:57.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.436" endtime="20201117 14:42:57.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.839" level="INFO">${RESULT} = [{'time': 0.041822611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486100000000408e-05, 'source_diff': 3.486100000000408e-05}, {'time': 0.041863611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.830" endtime="20201117 14:42:57.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.870" level="INFO">${ACCURACY} = {'source_diff': [3.486100000000408e-05, 3.47779999999992e-05, 3.4582999999997754e-05, 3.4166999999994674e-05, 3.4902999999995854e-05, 3.434700000000401e-05, 3.4124999999995964e-05, 3.433399999999698e-...</msg>
<status status="PASS" starttime="20201117 14:42:57.841" endtime="20201117 14:42:57.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.881" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.879" endtime="20201117 14:42:57.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.887" level="INFO">VALUE: [3.486100000000408e-05, 3.47779999999992e-05, 3.4582999999997754e-05, 3.4166999999994674e-05, 3.4902999999995854e-05, 3.434700000000401e-05, 3.4124999999995964e-05, 3.433399999999698e-05, 3.4666999999995174e-05, 3.437500000000315e-05, 3.404199999999802e-05, 3.500000000000031e-05, 3.4763000000000155e-05, 3.4860999999997144e-05, 3.42779999999987e-05, 3.473699999999996e-05, 3.4790999999999295e-05, 3.495799999999466e-05, 3.408300000000419e-05, 3.420800000000085e-05, 3.4360999999996644e-05, 3.461100000000383e-05, 3.418000000000171e-05, 3.440200000000282e-05, 3.444400000000153e-05, 3.449999999999981e-05, 3.484700000000451e-05, 3.404200000000496e-05, 3.431900000000487e-05, 3.424999999999956e-05, 3.448600000000024e-05, 3.4374999999996214e-05, 3.4138999999995534e-05, 3.411100000000333e-05, 3.443100000000143e-05, 3.447300000000014e-05, 3.4445000000001e-05, 3.448600000000024e-05, 3.398699999999921e-05, 3.4944999999994564e-05, 3.420800000000085e-05, 3.491700000000236e-05, 3.461200000000331e-05, 3.4445000000001e-05, 3.451399999999938e-05, 3.415199999999563e-05, 3.4568999999998185e-05, 3.4124999999995964e-05, 3.473599999999355e-05, 3.498600000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.883" endtime="20201117 14:42:57.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.872" endtime="20201117 14:42:57.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.896" endtime="20201117 14:42:57.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.904" endtime="20201117 14:42:57.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.900" endtime="20201117 14:42:57.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.891" endtime="20201117 14:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.377" endtime="20201117 14:42:57.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.816" endtime="20201117 14:42:57.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.814" endtime="20201117 14:42:57.931"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.936" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.959" endtime="20201117 14:42:57.980"></status>
</kw>
<msg timestamp="20201117 14:42:57.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.955" endtime="20201117 14:42:57.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.983" endtime="20201117 14:42:57.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.990" endtime="20201117 14:42:57.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.947" endtime="20201117 14:42:57.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.941" endtime="20201117 14:42:57.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.013" endtime="20201117 14:42:58.354"></status>
</kw>
<msg timestamp="20201117 14:42:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048076736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048112625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.010" endtime="20201117 14:42:58.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048076736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048112625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.364" endtime="20201117 14:42:58.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.383" endtime="20201117 14:42:58.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.003" endtime="20201117 14:42:58.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.998" endtime="20201117 14:42:58.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.400" level="INFO">${RESULT} = [{'time': 0.048112625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5888999999997284e-05, 'source_diff': 3.5888999999997284e-05}, {'time': 0.048154569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:58.391" endtime="20201117 14:42:58.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.431" level="INFO">${ACCURACY} = {'source_diff': [3.5888999999997284e-05, 3.5763000000001155e-05, 3.590199999999738e-05, 3.599999999999437e-05, 3.519400000000228e-05, 3.5568999999999185e-05, 3.5388999999996784e-05, 3.5388999999996784...</msg>
<status status="PASS" starttime="20201117 14:42:58.402" endtime="20201117 14:42:58.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.442" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.440" endtime="20201117 14:42:58.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.448" level="INFO">VALUE: [3.5888999999997284e-05, 3.5763000000001155e-05, 3.590199999999738e-05, 3.599999999999437e-05, 3.519400000000228e-05, 3.5568999999999185e-05, 3.5388999999996784e-05, 3.5388999999996784e-05, 3.552799999999995e-05, 3.5332999999998504e-05, 3.552799999999995e-05, 3.536100000000458e-05, 3.591700000000336e-05, 3.573599999999455e-05, 3.5610999999997894e-05, 3.552799999999995e-05, 3.5430999999995494e-05, 3.505599999999859e-05, 3.5624999999997464e-05, 3.5638999999997034e-05, 3.519500000000175e-05, 3.565199999999713e-05, 3.5110999999997394e-05, 3.554199999999952e-05, 3.516700000000261e-05, 3.600000000000131e-05, 3.515300000000304e-05, 3.5068999999998685e-05, 3.5791000000000295e-05, 3.5554999999999615e-05, 3.569400000000278e-05, 3.515199999999663e-05, 3.570800000000235e-05, 3.5666999999996174e-05, 3.575000000000106e-05, 3.550000000000081e-05, 3.59580000000026e-05, 3.592999999999652e-05, 3.5082999999998254e-05, 3.523599999999405e-05, 3.597200000000217e-05, 3.547200000000167e-05, 3.5444999999995064e-05, 3.530600000000578e-05, 3.595900000000207e-05, 3.52779999999997e-05, 3.5652999999996604e-05, 3.506999999999816e-05, 3.5763000000001155e-05, 3.586199999999762e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.445" endtime="20201117 14:42:58.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.433" endtime="20201117 14:42:58.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.457" endtime="20201117 14:42:58.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.465" endtime="20201117 14:42:58.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.461" endtime="20201117 14:42:58.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.452" endtime="20201117 14:42:58.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.938" endtime="20201117 14:42:58.491"></status>
</kw>
<msg timestamp="20201117 14:42:58.491" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.520" endtime="20201117 14:42:58.539"></status>
</kw>
<msg timestamp="20201117 14:42:58.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.517" endtime="20201117 14:42:58.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.543" endtime="20201117 14:42:58.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.549" endtime="20201117 14:42:58.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.510" endtime="20201117 14:42:58.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.504" endtime="20201117 14:42:58.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.572" endtime="20201117 14:42:58.914"></status>
</kw>
<msg timestamp="20201117 14:42:58.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048419514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.569" endtime="20201117 14:42:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048419514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.923" endtime="20201117 14:42:58.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.942" endtime="20201117 14:42:58.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.562" endtime="20201117 14:42:58.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.557" endtime="20201117 14:42:58.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.962" level="INFO">${RESULT} = [{'time': 0.048419514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.581999999999891e-05, 'source_diff': 3.581999999999891e-05}, {'time': 0.048467528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.952" endtime="20201117 14:42:58.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.992" level="INFO">${ACCURACY} = {'source_diff': [3.581999999999891e-05, 3.572200000000192e-05, 3.523599999999405e-05, 3.572300000000139e-05, 3.5445000000002e-05, 3.50979999999973e-05, 3.533400000000492e-05, 3.586199999999762e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:42:58.964" endtime="20201117 14:42:58.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.004" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.001" endtime="20201117 14:42:59.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.009" level="INFO">VALUE: [3.581999999999891e-05, 3.572200000000192e-05, 3.523599999999405e-05, 3.572300000000139e-05, 3.5445000000002e-05, 3.50979999999973e-05, 3.533400000000492e-05, 3.586199999999762e-05, 3.5624999999997464e-05, 3.544399999999559e-05, 3.592999999999652e-05, 3.523600000000099e-05, 3.569400000000278e-05, 3.575000000000106e-05, 3.5568999999999185e-05, 3.518100000000218e-05, 3.5568999999999185e-05, 3.5152999999996104e-05, 3.554199999999952e-05, 3.501399999999988e-05, 3.515300000000304e-05, 3.597200000000217e-05, 3.572199999999498e-05, 3.505599999999859e-05, 3.579199999999977e-05, 3.547200000000167e-05, 3.5360999999997644e-05, 3.5638999999997034e-05, 3.5166999999995674e-05, 3.554199999999952e-05, 3.529199999999927e-05, 3.531999999999841e-05, 3.548700000000071e-05, 3.576399999999369e-05, 3.548700000000071e-05, 3.525000000000056e-05, 3.5026999999999975e-05, 3.523600000000099e-05, 3.5874999999997714e-05, 3.5832999999999005e-05, 3.548600000000124e-05, 3.601400000000088e-05, 3.538900000000372e-05, 3.552799999999995e-05, 3.569400000000278e-05, 3.5069000000005623e-05, 3.566700000000311e-05, 3.583399999999848e-05, 3.504199999999902e-05, 3.580599999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.006" endtime="20201117 14:42:59.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.994" endtime="20201117 14:42:59.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.018" endtime="20201117 14:42:59.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.027" endtime="20201117 14:42:59.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.023" endtime="20201117 14:42:59.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.013" endtime="20201117 14:42:59.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.493" endtime="20201117 14:42:59.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.934" endtime="20201117 14:42:59.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.932" endtime="20201117 14:42:59.054"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.059" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.081" endtime="20201117 14:42:59.100"></status>
</kw>
<msg timestamp="20201117 14:42:59.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.078" endtime="20201117 14:42:59.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.101" endtime="20201117 14:42:59.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.104" endtime="20201117 14:42:59.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.070" endtime="20201117 14:42:59.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.065" endtime="20201117 14:42:59.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.115" endtime="20201117 14:42:59.404"></status>
</kw>
<msg timestamp="20201117 14:42:59.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047671458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.114" endtime="20201117 14:42:59.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047671458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.408" endtime="20201117 14:42:59.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.417" endtime="20201117 14:42:59.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.110" endtime="20201117 14:42:59.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.108" endtime="20201117 14:42:59.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.425" level="INFO">${RESULT} = [{'time': 0.047707597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6138999999997534e-05, 'source_diff': 3.6138999999997534e-05}, {'time': 0.047757597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:59.421" endtime="20201117 14:42:59.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.482" level="INFO">${ACCURACY} = {'source_diff': [3.6138999999997534e-05, 3.62780000000007e-05, 3.6402999999997354e-05, 3.626400000000113e-05, 3.665300000000454e-05, 3.676399999999469e-05, 3.6610999999998894e-05, 3.6888999999998284e-...</msg>
<status status="PASS" starttime="20201117 14:42:59.426" endtime="20201117 14:42:59.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.487" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.486" endtime="20201117 14:42:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.490" level="INFO">VALUE: [3.6138999999997534e-05, 3.62780000000007e-05, 3.6402999999997354e-05, 3.626400000000113e-05, 3.665300000000454e-05, 3.676399999999469e-05, 3.6610999999998894e-05, 3.6888999999998284e-05, 3.656999999999966e-05, 3.608399999999873e-05, 3.673700000000196e-05, 3.666700000000411e-05, 3.658400000000617e-05, 3.645900000000257e-05, 3.6763000000002155e-05, 3.654200000000052e-05, 3.618000000000371e-05, 3.65979999999988e-05, 3.6236999999994524e-05, 3.6318999999999935e-05, 3.699999999999537e-05, 3.6041000000000545e-05, 3.644399999999659e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.601400000000088e-05, 3.6610999999998894e-05, 3.64580000000031e-05, 3.6596999999999325e-05, 3.629200000000027e-05, 3.6583000000006693e-05, 3.673600000000249e-05, 3.615200000000457e-05, 3.656999999999966e-05, 3.69450000000035e-05, 3.611100000000533e-05, 3.6458999999995634e-05, 3.626400000000113e-05, 3.681999999999991e-05, 3.676400000000163e-05, 3.673600000000249e-05, 3.700000000000231e-05, 3.633399999999898e-05, 3.669399999999684e-05, 3.6444999999996064e-05, 3.6055000000000115e-05, 3.625000000000156e-05, 3.6082999999999255e-05, 3.615200000000457e-05, 3.673599999999555e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.488" endtime="20201117 14:42:59.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.483" endtime="20201117 14:42:59.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.494" endtime="20201117 14:42:59.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.498" endtime="20201117 14:42:59.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.496" endtime="20201117 14:42:59.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.492" endtime="20201117 14:42:59.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.060" endtime="20201117 14:42:59.523"></status>
</kw>
<msg timestamp="20201117 14:42:59.523" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.546" endtime="20201117 14:42:59.566"></status>
</kw>
<msg timestamp="20201117 14:42:59.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.542" endtime="20201117 14:42:59.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.569" endtime="20201117 14:42:59.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.576" endtime="20201117 14:42:59.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.535" endtime="20201117 14:42:59.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.529" endtime="20201117 14:42:59.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.599" endtime="20201117 14:42:59.938"></status>
</kw>
<msg timestamp="20201117 14:42:59.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042514028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.596" endtime="20201117 14:42:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042514028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.947" endtime="20201117 14:42:59.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.966" endtime="20201117 14:42:59.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.589" endtime="20201117 14:42:59.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.584" endtime="20201117 14:42:59.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.984" level="INFO">${RESULT} = [{'time': 0.042550833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6805000000000865e-05, 'source_diff': 3.6805000000000865e-05}, {'time': 0.042594833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:59.975" endtime="20201117 14:42:59.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.015" level="INFO">${ACCURACY} = {'source_diff': [3.6805000000000865e-05, 3.6082999999999255e-05, 3.6138999999997534e-05, 3.6582999999999755e-05, 3.602800000000045e-05, 3.6374999999998214e-05, 3.6152999999997104e-05, 3.60829999999992...</msg>
<status status="PASS" starttime="20201117 14:42:59.986" endtime="20201117 14:43:00.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.026" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.024" endtime="20201117 14:43:00.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.032" level="INFO">VALUE: [3.6805000000000865e-05, 3.6082999999999255e-05, 3.6138999999997534e-05, 3.6582999999999755e-05, 3.602800000000045e-05, 3.6374999999998214e-05, 3.6152999999997104e-05, 3.6082999999999255e-05, 3.6430999999996494e-05, 3.6374999999998214e-05, 3.650000000000181e-05, 3.6874999999998714e-05, 3.69450000000035e-05, 3.6110999999998394e-05, 3.6860999999999144e-05, 3.622200000000242e-05, 3.6194999999995814e-05, 3.670900000000282e-05, 3.688900000000522e-05, 3.670799999999641e-05, 3.681999999999991e-05, 3.631999999999941e-05, 3.670799999999641e-05, 3.688799999999881e-05, 3.615199999999763e-05, 3.64859999999953e-05, 3.6082999999999255e-05, 3.688900000000522e-05, 3.6860999999999144e-05, 3.619400000000328e-05, 3.6569000000000185e-05, 3.6374999999998214e-05, 3.670799999999641e-05, 3.665300000000454e-05, 3.6652999999997604e-05, 3.6610999999998894e-05, 3.691700000000436e-05, 3.702800000000145e-05, 3.654199999999358e-05, 3.6916999999997424e-05, 3.69859999999958e-05, 3.6944999999996564e-05, 3.645900000000257e-05, 3.700000000000231e-05, 3.6541000000001045e-05, 3.6152999999997104e-05, 3.601400000000088e-05, 3.700000000000231e-05, 3.694399999999709e-05, 3.700000000000231e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.029" endtime="20201117 14:43:00.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.017" endtime="20201117 14:43:00.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.041" endtime="20201117 14:43:00.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.050" endtime="20201117 14:43:00.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.045" endtime="20201117 14:43:00.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.037" endtime="20201117 14:43:00.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.525" endtime="20201117 14:43:00.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.057" endtime="20201117 14:43:00.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.055" endtime="20201117 14:43:00.076"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.081" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.103" endtime="20201117 14:43:00.125"></status>
</kw>
<msg timestamp="20201117 14:43:00.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.100" endtime="20201117 14:43:00.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.128" endtime="20201117 14:43:00.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.134" endtime="20201117 14:43:00.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.093" endtime="20201117 14:43:00.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.087" endtime="20201117 14:43:00.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.158" endtime="20201117 14:43:00.497"></status>
</kw>
<msg timestamp="20201117 14:43:00.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048550917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048588125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.155" endtime="20201117 14:43:00.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048550917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048588125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.507" endtime="20201117 14:43:00.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.526" endtime="20201117 14:43:00.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.147" endtime="20201117 14:43:00.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.143" endtime="20201117 14:43:00.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.544" level="INFO">${RESULT} = [{'time': 0.048588125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.720800000000385e-05, 'source_diff': 3.720800000000385e-05}, {'time': 0.048634139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.534" endtime="20201117 14:43:00.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.574" level="INFO">${ACCURACY} = {'source_diff': [3.720800000000385e-05, 3.748600000000324e-05, 3.7930999999997994e-05, 3.783400000000048e-05, 3.7861000000000145e-05, 3.780600000000134e-05, 3.783400000000048e-05, 3.723600000000299e-0...</msg>
<status status="PASS" starttime="20201117 14:43:00.546" endtime="20201117 14:43:00.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.586" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.583" endtime="20201117 14:43:00.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.592" level="INFO">VALUE: [3.720800000000385e-05, 3.748600000000324e-05, 3.7930999999997994e-05, 3.783400000000048e-05, 3.7861000000000145e-05, 3.780600000000134e-05, 3.783400000000048e-05, 3.723600000000299e-05, 3.799999999999637e-05, 3.741599999999845e-05, 3.786199999999962e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.7569000000001185e-05, 3.7360999999999644e-05, 3.76659999999987e-05, 3.7847000000000575e-05, 3.795799999999766e-05, 3.7319000000000935e-05, 3.7402999999998354e-05, 3.770799999999741e-05, 3.744400000000453e-05, 3.773600000000349e-05, 3.798600000000374e-05, 3.770799999999741e-05, 3.7652999999998604e-05, 3.7832999999994066e-05, 3.740199999999888e-05, 3.751400000000238e-05, 3.780600000000134e-05, 3.782000000000091e-05, 3.7874999999999714e-05, 3.7888999999999284e-05, 3.770799999999741e-05, 3.7444999999997064e-05, 3.7638999999999034e-05, 3.7083000000000255e-05, 3.752800000000195e-05, 3.7083000000000255e-05, 3.791599999999895e-05, 3.791599999999895e-05, 3.723599999999605e-05, 3.7874999999999714e-05, 3.769399999999784e-05, 3.750000000000281e-05, 3.755600000000109e-05, 3.769400000000478e-05, 3.743100000000443e-05, 3.7597000000000325e-05, 3.729200000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.588" endtime="20201117 14:43:00.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.576" endtime="20201117 14:43:00.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.601" endtime="20201117 14:43:00.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.609" endtime="20201117 14:43:00.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.605" endtime="20201117 14:43:00.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.596" endtime="20201117 14:43:00.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.083" endtime="20201117 14:43:00.635"></status>
</kw>
<msg timestamp="20201117 14:43:00.635" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.657" endtime="20201117 14:43:00.676"></status>
</kw>
<msg timestamp="20201117 14:43:00.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.653" endtime="20201117 14:43:00.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.680" endtime="20201117 14:43:00.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.686" endtime="20201117 14:43:00.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.646" endtime="20201117 14:43:00.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.640" endtime="20201117 14:43:00.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.712" endtime="20201117 14:43:01.054"></status>
</kw>
<msg timestamp="20201117 14:43:01.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041233986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041271444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.709" endtime="20201117 14:43:01.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041233986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041271444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.064" endtime="20201117 14:43:01.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.083" endtime="20201117 14:43:01.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.699" endtime="20201117 14:43:01.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.695" endtime="20201117 14:43:01.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.101" level="INFO">${RESULT} = [{'time': 0.041271444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.745799999999716e-05, 'source_diff': 3.745799999999716e-05}, {'time': 0.041319514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.092" endtime="20201117 14:43:01.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.132" level="INFO">${ACCURACY} = {'source_diff': [3.745799999999716e-05, 3.726400000000213e-05, 3.7582999999993816e-05, 3.7776999999995786e-05, 3.765199999999913e-05, 3.7874999999999714e-05, 3.748600000000324e-05, 3.776400000000263e-...</msg>
<status status="PASS" starttime="20201117 14:43:01.103" endtime="20201117 14:43:01.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.144" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.141" endtime="20201117 14:43:01.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.149" level="INFO">VALUE: [3.745799999999716e-05, 3.726400000000213e-05, 3.7582999999993816e-05, 3.7776999999995786e-05, 3.765199999999913e-05, 3.7874999999999714e-05, 3.748600000000324e-05, 3.776400000000263e-05, 3.788900000000622e-05, 3.723600000000299e-05, 3.741700000000486e-05, 3.757000000000066e-05, 3.7694999999997314e-05, 3.729200000000127e-05, 3.729200000000127e-05, 3.7374999999999214e-05, 3.726400000000213e-05, 3.7930999999997994e-05, 3.7902999999998854e-05, 3.725000000000256e-05, 3.795900000000407e-05, 3.7694999999997314e-05, 3.71250000000059e-05, 3.7902999999998854e-05, 3.726399999999519e-05, 3.7819000000001435e-05, 3.7333000000000505e-05, 3.7861000000000145e-05, 3.7624999999999464e-05, 3.7110999999999394e-05, 3.791599999999895e-05, 3.719399999999734e-05, 3.77780000000022e-05, 3.749999999999587e-05, 3.7652999999998604e-05, 3.74859999999963e-05, 3.7152999999998104e-05, 3.769399999999784e-05, 3.7666999999998174e-05, 3.7958999999997134e-05, 3.757000000000066e-05, 3.750000000000281e-05, 3.7444999999997064e-05, 3.719500000000375e-05, 3.7944999999997564e-05, 3.7430999999997494e-05, 3.772200000000392e-05, 3.732000000000041e-05, 3.768100000000468e-05, 3.7027000000001975e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.146" endtime="20201117 14:43:01.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.135" endtime="20201117 14:43:01.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.158" endtime="20201117 14:43:01.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.167" endtime="20201117 14:43:01.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.162" endtime="20201117 14:43:01.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.154" endtime="20201117 14:43:01.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.636" endtime="20201117 14:43:01.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.079" endtime="20201117 14:43:01.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.077" endtime="20201117 14:43:01.193"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.198" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.220" endtime="20201117 14:43:01.240"></status>
</kw>
<msg timestamp="20201117 14:43:01.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.217" endtime="20201117 14:43:01.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.243" endtime="20201117 14:43:01.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.250" endtime="20201117 14:43:01.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.210" endtime="20201117 14:43:01.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.204" endtime="20201117 14:43:01.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.275" endtime="20201117 14:43:01.615"></status>
</kw>
<msg timestamp="20201117 14:43:01.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047088944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047127806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.270" endtime="20201117 14:43:01.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047088944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047127806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.624" endtime="20201117 14:43:01.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.644" endtime="20201117 14:43:01.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.263" endtime="20201117 14:43:01.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.258" endtime="20201117 14:43:01.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.662" level="INFO">${RESULT} = [{'time': 0.047127806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.886200000000062e-05, 'source_diff': 3.886200000000062e-05}, {'time': 0.047173736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.653" endtime="20201117 14:43:01.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.695" level="INFO">${ACCURACY} = {'source_diff': [3.886200000000062e-05, 3.8333000000001505e-05, 3.901399999999694e-05, 3.8180999999998244e-05, 3.879199999999583e-05, 3.898600000000474e-05, 3.8902999999999854e-05, 3.852800000000295e-...</msg>
<status status="PASS" starttime="20201117 14:43:01.664" endtime="20201117 14:43:01.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.706" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.704" endtime="20201117 14:43:01.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.711" level="INFO">VALUE: [3.886200000000062e-05, 3.8333000000001505e-05, 3.901399999999694e-05, 3.8180999999998244e-05, 3.879199999999583e-05, 3.898600000000474e-05, 3.8902999999999854e-05, 3.852800000000295e-05, 3.824999999999662e-05, 3.8096999999993886e-05, 3.866700000000611e-05, 3.8875000000000715e-05, 3.852799999999601e-05, 3.8152999999999104e-05, 3.8375000000000214e-05, 3.808399999999379e-05, 3.886200000000062e-05, 3.8875000000000715e-05, 3.8111000000000395e-05, 3.8512999999996966e-05, 3.8861000000001145e-05, 3.867999999999927e-05, 3.8124999999999964e-05, 3.872199999999798e-05, 3.84859999999973e-05, 3.876399999999669e-05, 3.8832999999995066e-05, 3.819399999999834e-05, 3.8166999999998674e-05, 3.894399999999909e-05, 3.873599999999755e-05, 3.854199999999558e-05, 3.879199999999583e-05, 3.8680999999998744e-05, 3.829199999999533e-05, 3.8194999999997814e-05, 3.8124999999999964e-05, 3.824999999999662e-05, 3.8875000000000715e-05, 3.8124999999999964e-05, 3.895799999999866e-05, 3.8388999999999784e-05, 3.820799999999791e-05, 3.8555000000002615e-05, 3.817999999999877e-05, 3.8333000000001505e-05, 3.904199999999608e-05, 3.8652999999999604e-05, 3.841600000000639e-05, 3.804200000000202e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.708" endtime="20201117 14:43:01.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.697" endtime="20201117 14:43:01.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.720" endtime="20201117 14:43:01.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.729" endtime="20201117 14:43:01.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.724" endtime="20201117 14:43:01.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.716" endtime="20201117 14:43:01.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.200" endtime="20201117 14:43:01.754"></status>
</kw>
<msg timestamp="20201117 14:43:01.755" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.778" endtime="20201117 14:43:01.797"></status>
</kw>
<msg timestamp="20201117 14:43:01.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.774" endtime="20201117 14:43:01.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.800" endtime="20201117 14:43:01.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.807" endtime="20201117 14:43:01.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.766" endtime="20201117 14:43:01.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.760" endtime="20201117 14:43:01.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.830" endtime="20201117 14:43:02.183"></status>
</kw>
<msg timestamp="20201117 14:43:02.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042740819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042779556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.827" endtime="20201117 14:43:02.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042740819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042779556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.192" endtime="20201117 14:43:02.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.212" endtime="20201117 14:43:02.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.820" endtime="20201117 14:43:02.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.815" endtime="20201117 14:43:02.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.230" level="INFO">${RESULT} = [{'time': 0.042779556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.873700000000396e-05, 'source_diff': 3.873700000000396e-05}, {'time': 0.042824569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.221" endtime="20201117 14:43:02.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.261" level="INFO">${ACCURACY} = {'source_diff': [3.873700000000396e-05, 3.8569000000002185e-05, 3.840199999999988e-05, 3.897199999999823e-05, 3.832000000000141e-05, 3.8597000000001325e-05, 3.8652999999999604e-05, 3.840300000000629e-...</msg>
<status status="PASS" starttime="20201117 14:43:02.232" endtime="20201117 14:43:02.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.272" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.270" endtime="20201117 14:43:02.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.278" level="INFO">VALUE: [3.873700000000396e-05, 3.8569000000002185e-05, 3.840199999999988e-05, 3.897199999999823e-05, 3.832000000000141e-05, 3.8597000000001325e-05, 3.8652999999999604e-05, 3.840300000000629e-05, 3.873600000000449e-05, 3.8402999999999354e-05, 3.8069000000001685e-05, 3.8902999999999854e-05, 3.825000000000356e-05, 3.8861000000001145e-05, 3.8889000000000284e-05, 3.8902999999999854e-05, 3.876399999999669e-05, 3.8124999999999964e-05, 3.882000000000191e-05, 3.8152999999999104e-05, 3.88059999999954e-05, 3.873599999999755e-05, 3.8402999999999354e-05, 3.8610999999993956e-05, 3.824999999999662e-05, 3.8541000000003045e-05, 3.8555000000002615e-05, 3.823599999999705e-05, 3.8304999999995426e-05, 3.815199999999963e-05, 3.8916999999999424e-05, 3.801400000000288e-05, 3.84580000000051e-05, 3.804199999999508e-05, 3.8166999999998674e-05, 3.849999999999687e-05, 3.8625000000000465e-05, 3.82780000000027e-05, 3.8875000000000715e-05, 3.849999999999687e-05, 3.801400000000288e-05, 3.8916999999999424e-05, 3.8819000000002435e-05, 3.8402999999999354e-05, 3.8708999999997884e-05, 3.8944999999998564e-05, 3.826399999999619e-05, 3.82780000000027e-05, 3.891599999999995e-05, 3.8069000000001685e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.274" endtime="20201117 14:43:02.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.263" endtime="20201117 14:43:02.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.286" endtime="20201117 14:43:02.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.295" endtime="20201117 14:43:02.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.290" endtime="20201117 14:43:02.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.282" endtime="20201117 14:43:02.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.756" endtime="20201117 14:43:02.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.196" endtime="20201117 14:43:02.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.194" endtime="20201117 14:43:02.321"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.327" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.348" endtime="20201117 14:43:02.369"></status>
</kw>
<msg timestamp="20201117 14:43:02.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.345" endtime="20201117 14:43:02.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.372" endtime="20201117 14:43:02.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.379" endtime="20201117 14:43:02.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.338" endtime="20201117 14:43:02.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.332" endtime="20201117 14:43:02.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.403" endtime="20201117 14:43:02.742"></status>
</kw>
<msg timestamp="20201117 14:43:02.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047584764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047624542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.400" endtime="20201117 14:43:02.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047584764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047624542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.747" endtime="20201117 14:43:02.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.755" endtime="20201117 14:43:02.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.392" endtime="20201117 14:43:02.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.387" endtime="20201117 14:43:02.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.764" level="INFO">${RESULT} = [{'time': 0.047624542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.977799999999726e-05, 'source_diff': 3.977799999999726e-05}, {'time': 0.047675528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.760" endtime="20201117 14:43:02.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.778" level="INFO">${ACCURACY} = {'source_diff': [3.977799999999726e-05, 3.979200000000377e-05, 3.907000000000216e-05, 3.952799999999701e-05, 3.98059999999964e-05, 3.9653000000000604e-05, 3.973599999999855e-05, 3.994400000000009e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:02.765" endtime="20201117 14:43:02.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.783" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.782" endtime="20201117 14:43:02.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.785" level="INFO">VALUE: [3.977799999999726e-05, 3.979200000000377e-05, 3.907000000000216e-05, 3.952799999999701e-05, 3.98059999999964e-05, 3.9653000000000604e-05, 3.973599999999855e-05, 3.994400000000009e-05, 3.936199999999418e-05, 3.982000000000291e-05, 3.9583000000002755e-05, 3.9139000000000534e-05, 3.94859999999983e-05, 3.966599999999376e-05, 3.915200000000063e-05, 3.945799999999916e-05, 3.902799999999651e-05, 3.924999999999762e-05, 3.9083000000002255e-05, 3.972199999999898e-05, 3.94859999999983e-05, 3.904199999999608e-05, 3.934800000000155e-05, 3.973599999999855e-05, 3.9597000000002325e-05, 3.981999999999597e-05, 3.9361000000001645e-05, 3.904199999999608e-05, 3.922199999999848e-05, 3.9917000000000424e-05, 3.915200000000063e-05, 3.9708999999998884e-05, 3.904200000000302e-05, 3.98059999999964e-05, 3.970800000000635e-05, 3.9875000000001715e-05, 3.926399999999719e-05, 3.9790999999997356e-05, 3.919399999999934e-05, 3.990200000000138e-05, 3.977799999999726e-05, 3.994400000000009e-05, 3.9833000000003005e-05, 3.999999999999837e-05, 3.9667000000000174e-05, 3.9319000000002935e-05, 3.9917000000000424e-05, 3.997200000000617e-05, 3.9097000000001825e-05, 3.977799999999726e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.784" endtime="20201117 14:43:02.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.778" endtime="20201117 14:43:02.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.789" endtime="20201117 14:43:02.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.794" endtime="20201117 14:43:02.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.791" endtime="20201117 14:43:02.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.787" endtime="20201117 14:43:02.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.328" endtime="20201117 14:43:02.815"></status>
</kw>
<msg timestamp="20201117 14:43:02.815" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.826" endtime="20201117 14:43:02.842"></status>
</kw>
<msg timestamp="20201117 14:43:02.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.824" endtime="20201117 14:43:02.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.845" endtime="20201117 14:43:02.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.852" endtime="20201117 14:43:02.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.820" endtime="20201117 14:43:02.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.818" endtime="20201117 14:43:02.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.876" endtime="20201117 14:43:03.216"></status>
</kw>
<msg timestamp="20201117 14:43:03.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.873" endtime="20201117 14:43:03.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.225" endtime="20201117 14:43:03.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.244" endtime="20201117 14:43:03.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.865" endtime="20201117 14:43:03.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.860" endtime="20201117 14:43:03.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.263" level="INFO">${RESULT} = [{'time': 0.024772583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9277000000000756e-05, 'source_diff': 3.9277000000000756e-05}, {'time': 0.024815597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:03.254" endtime="20201117 14:43:03.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.294" level="INFO">${ACCURACY} = {'source_diff': [3.9277000000000756e-05, 3.94859999999983e-05, 3.92919999999998e-05, 3.92919999999998e-05, 3.9389000000000784e-05, 3.923600000000152e-05, 3.94859999999983e-05, 3.9833000000003005e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:03.265" endtime="20201117 14:43:03.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.305" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.303" endtime="20201117 14:43:03.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.311" level="INFO">VALUE: [3.9277000000000756e-05, 3.94859999999983e-05, 3.92919999999998e-05, 3.92919999999998e-05, 3.9389000000000784e-05, 3.923600000000152e-05, 3.94859999999983e-05, 3.9833000000003005e-05, 3.972200000000245e-05, 3.954200000000005e-05, 3.9888999999997815e-05, 3.947199999999873e-05, 3.931999999999894e-05, 3.9944999999999564e-05, 3.950000000000134e-05, 3.932000000000241e-05, 3.980599999999987e-05, 3.9263000000001186e-05, 3.9582999999999285e-05, 3.9360999999998175e-05, 3.970799999999941e-05, 3.99859999999988e-05, 3.9332999999999035e-05, 3.9110999999997925e-05, 3.997199999999923e-05, 3.926400000000066e-05, 3.995799999999966e-05, 3.948600000000177e-05, 3.9805000000000396e-05, 3.993000000000052e-05, 3.919399999999934e-05, 3.974999999999812e-05, 3.980599999999987e-05, 3.958400000000223e-05, 3.9375000000001215e-05, 3.9125000000000965e-05, 3.908399999999826e-05, 3.973599999999855e-05, 3.90980000000013e-05, 3.9222999999997954e-05, 3.9223000000001423e-05, 3.9860999999998675e-05, 3.9209000000001853e-05, 3.9541000000000576e-05, 3.9055000000003115e-05, 3.9818999999999966e-05, 3.999999999999837e-05, 3.9153000000000104e-05, 3.9068999999999215e-05, 3.9110999999997925e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.308" endtime="20201117 14:43:03.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.296" endtime="20201117 14:43:03.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.320" endtime="20201117 14:43:03.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.328" endtime="20201117 14:43:03.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.324" endtime="20201117 14:43:03.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.315" endtime="20201117 14:43:03.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.816" endtime="20201117 14:43:03.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.324" endtime="20201117 14:43:03.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.322" endtime="20201117 14:43:03.355"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.360" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.383" endtime="20201117 14:43:03.403"></status>
</kw>
<msg timestamp="20201117 14:43:03.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.379" endtime="20201117 14:43:03.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.406" endtime="20201117 14:43:03.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.412" endtime="20201117 14:43:03.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.371" endtime="20201117 14:43:03.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.365" endtime="20201117 14:43:03.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.436" endtime="20201117 14:43:03.777"></status>
</kw>
<msg timestamp="20201117 14:43:03.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047957569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047998375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.433" endtime="20201117 14:43:03.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047957569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047998375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.786" endtime="20201117 14:43:03.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.805" endtime="20201117 14:43:03.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.425" endtime="20201117 14:43:03.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.421" endtime="20201117 14:43:03.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.825" level="INFO">${RESULT} = [{'time': 0.047998375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.080600000000434e-05, 'source_diff': 4.080600000000434e-05}, {'time': 0.048050389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.815" endtime="20201117 14:43:03.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.859" level="INFO">${ACCURACY} = {'source_diff': [4.080600000000434e-05, 4.0153000000001104e-05, 4.0667000000001174e-05, 4.0597000000003325e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.0445000000000064e-05, 4.00980000000023...</msg>
<status status="PASS" starttime="20201117 14:43:03.827" endtime="20201117 14:43:03.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.870" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.867" endtime="20201117 14:43:03.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.875" level="INFO">VALUE: [4.080600000000434e-05, 4.0153000000001104e-05, 4.0667000000001174e-05, 4.0597000000003325e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.0445000000000064e-05, 4.00980000000023e-05, 4.0945000000000564e-05, 4.083399999999654e-05, 4.002800000000445e-05, 4.0888999999995346e-05, 4.023599999999905e-05, 4.08059999999974e-05, 4.0276999999998286e-05, 4.0375000000002215e-05, 4.0055000000004115e-05, 4.072199999999998e-05, 4.00980000000023e-05, 4.0403000000001354e-05, 4.047199999999973e-05, 4.001399999999794e-05, 4.023599999999905e-05, 4.0431000000000494e-05, 4.0861000000003145e-05, 4.022199999999948e-05, 4.0945000000000564e-05, 4.0445000000000064e-05, 4.023599999999905e-05, 4.082000000000391e-05, 4.0445000000000064e-05, 4.0888999999995346e-05, 4.0639000000002035e-05, 4.024999999999862e-05, 4.005600000000359e-05, 4.024999999999862e-05, 4.091600000000195e-05, 4.023599999999905e-05, 4.0291000000004795e-05, 4.0319000000003935e-05, 4.0375000000002215e-05, 4.0318999999996996e-05, 4.0583000000003755e-05, 4.0291000000004795e-05, 4.044399999999365e-05, 4.0111000000002395e-05, 4.0889000000002285e-05, 4.025000000000556e-05, 4.0319000000003935e-05, 4.0403000000001354e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.872" endtime="20201117 14:43:03.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.860" endtime="20201117 14:43:03.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.884" endtime="20201117 14:43:03.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.893" endtime="20201117 14:43:03.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.888" endtime="20201117 14:43:03.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.880" endtime="20201117 14:43:03.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.361" endtime="20201117 14:43:03.927"></status>
</kw>
<msg timestamp="20201117 14:43:03.928" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.950" endtime="20201117 14:43:03.970"></status>
</kw>
<msg timestamp="20201117 14:43:03.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.946" endtime="20201117 14:43:03.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.973" endtime="20201117 14:43:03.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.979" endtime="20201117 14:43:03.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.939" endtime="20201117 14:43:03.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.933" endtime="20201117 14:43:03.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.003" endtime="20201117 14:43:04.344"></status>
</kw>
<msg timestamp="20201117 14:43:04.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050706111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050747056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.000" endtime="20201117 14:43:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050706111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050747056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.354" endtime="20201117 14:43:04.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.373" endtime="20201117 14:43:04.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.993" endtime="20201117 14:43:04.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.988" endtime="20201117 14:43:04.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.390" level="INFO">${RESULT} = [{'time': 0.050747056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0945000000000564e-05, 'source_diff': 4.0945000000000564e-05}, {'time': 0.050802069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:04.381" endtime="20201117 14:43:04.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.423" level="INFO">${ACCURACY} = {'source_diff': [4.0945000000000564e-05, 4.023599999999905e-05, 4.0819000000004435e-05, 4.0124999999995026e-05, 4.0597000000003325e-05, 4.0846999999996636e-05, 4.0304999999997426e-05, 4.06249999999955...</msg>
<status status="PASS" starttime="20201117 14:43:04.393" endtime="20201117 14:43:04.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.434" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.432" endtime="20201117 14:43:04.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.439" level="INFO">VALUE: [4.0945000000000564e-05, 4.023599999999905e-05, 4.0819000000004435e-05, 4.0124999999995026e-05, 4.0597000000003325e-05, 4.0846999999996636e-05, 4.0304999999997426e-05, 4.0624999999995526e-05, 4.04859999999993e-05, 4.004199999999708e-05, 4.094400000000109e-05, 4.0818999999997496e-05, 4.0653000000001605e-05, 4.08059999999974e-05, 4.0445000000000064e-05, 4.023599999999905e-05, 4.052799999999801e-05, 4.0667000000001174e-05, 4.057000000000366e-05, 4.081999999999697e-05, 4.059799999999586e-05, 4.0931000000000994e-05, 4.099999999999937e-05, 4.0472999999999204e-05, 4.0403000000001354e-05, 4.093000000000152e-05, 4.015200000000163e-05, 4.0125000000001965e-05, 4.0069000000003685e-05, 4.0319000000003935e-05, 4.0291000000004795e-05, 4.052800000000495e-05, 4.0361000000002645e-05, 4.0681000000000744e-05, 4.0361000000002645e-05, 4.0818999999997496e-05, 4.0181000000000244e-05, 4.0903000000001855e-05, 4.045800000000016e-05, 4.077799999999826e-05, 4.0889000000002285e-05, 4.054200000000452e-05, 4.0568999999997246e-05, 4.0708999999999884e-05, 4.0194999999999814e-05, 4.03059999999969e-05, 4.0236999999998524e-05, 4.0181000000000244e-05, 4.0540999999998106e-05, 4.090200000000238e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.436" endtime="20201117 14:43:04.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.425" endtime="20201117 14:43:04.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.449" endtime="20201117 14:43:04.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.457" endtime="20201117 14:43:04.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.453" endtime="20201117 14:43:04.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.444" endtime="20201117 14:43:04.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.929" endtime="20201117 14:43:04.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.357" endtime="20201117 14:43:04.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.356" endtime="20201117 14:43:04.484"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.489" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.511" endtime="20201117 14:43:04.531"></status>
</kw>
<msg timestamp="20201117 14:43:04.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.508" endtime="20201117 14:43:04.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.534" endtime="20201117 14:43:04.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.541" endtime="20201117 14:43:04.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.500" endtime="20201117 14:43:04.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.495" endtime="20201117 14:43:04.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.564" endtime="20201117 14:43:04.917"></status>
</kw>
<msg timestamp="20201117 14:43:04.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04747925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047520431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:04.561" endtime="20201117 14:43:04.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04747925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047520431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:04.927" endtime="20201117 14:43:04.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.946" endtime="20201117 14:43:04.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.554" endtime="20201117 14:43:04.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.549" endtime="20201117 14:43:04.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.964" level="INFO">${RESULT} = [{'time': 0.047520431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1181000000001244e-05, 'source_diff': 4.1181000000001244e-05}, {'time': 0.047575403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:04.954" endtime="20201117 14:43:04.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.996" level="INFO">${ACCURACY} = {'source_diff': [4.1181000000001244e-05, 4.127799999999876e-05, 4.1402999999995416e-05, 4.154199999999858e-05, 4.126399999999919e-05, 4.182000000000491e-05, 4.1847000000004575e-05, 4.124999999999962e-...</msg>
<status status="PASS" starttime="20201117 14:43:04.966" endtime="20201117 14:43:04.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.007" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.005" endtime="20201117 14:43:05.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.013" level="INFO">VALUE: [4.1181000000001244e-05, 4.127799999999876e-05, 4.1402999999995416e-05, 4.154199999999858e-05, 4.126399999999919e-05, 4.182000000000491e-05, 4.1847000000004575e-05, 4.124999999999962e-05, 4.1568999999998246e-05, 4.140199999999594e-05, 4.1124999999996026e-05, 4.126400000000613e-05, 4.1111000000003395e-05, 4.143000000000202e-05, 4.123600000000005e-05, 4.1195000000000814e-05, 4.1610999999996956e-05, 4.123600000000005e-05, 4.1069000000004685e-05, 4.154199999999858e-05, 4.172200000000098e-05, 4.1931000000001994e-05, 4.1596999999997386e-05, 4.149999999999987e-05, 4.183399999999754e-05, 4.14860000000003e-05, 4.1110999999996456e-05, 4.1889000000003285e-05, 4.133399999999704e-05, 4.138799999999637e-05, 4.184800000000405e-05, 4.1652999999995666e-05, 4.116599999999526e-05, 4.145799999999422e-05, 4.165200000000313e-05, 4.142999999999508e-05, 4.1818999999998496e-05, 4.1639000000003035e-05, 4.1152999999995166e-05, 4.105599999999765e-05, 4.1638999999996096e-05, 4.1860999999997206e-05, 4.179200000000577e-05, 4.145800000000116e-05, 4.1832999999998066e-05, 4.201399999999994e-05, 4.1403000000002355e-05, 4.1667000000002175e-05, 4.1695000000001314e-05, 4.134799999999661e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.010" endtime="20201117 14:43:05.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.998" endtime="20201117 14:43:05.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.022" endtime="20201117 14:43:05.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.031" endtime="20201117 14:43:05.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.026" endtime="20201117 14:43:05.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.018" endtime="20201117 14:43:05.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.491" endtime="20201117 14:43:05.057"></status>
</kw>
<msg timestamp="20201117 14:43:05.057" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.079" endtime="20201117 14:43:05.099"></status>
</kw>
<msg timestamp="20201117 14:43:05.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.076" endtime="20201117 14:43:05.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.102" endtime="20201117 14:43:05.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.109" endtime="20201117 14:43:05.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.068" endtime="20201117 14:43:05.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.062" endtime="20201117 14:43:05.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.132" endtime="20201117 14:43:05.484"></status>
</kw>
<msg timestamp="20201117 14:43:05.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.129" endtime="20201117 14:43:05.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.494" endtime="20201117 14:43:05.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.513" endtime="20201117 14:43:05.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.122" endtime="20201117 14:43:05.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.117" endtime="20201117 14:43:05.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.531" level="INFO">${RESULT} = [{'time': 0.041542306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1959000000001134e-05, 'source_diff': 4.1959000000001134e-05}, {'time': 0.041590306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:05.521" endtime="20201117 14:43:05.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.563" level="INFO">${ACCURACY} = {'source_diff': [4.1959000000001134e-05, 4.136200000000312e-05, 4.1653000000002605e-05, 4.1262999999999717e-05, 4.1818999999998496e-05, 4.1638999999996096e-05, 4.1832999999998066e-05, 4.19170000000024...</msg>
<status status="PASS" starttime="20201117 14:43:05.533" endtime="20201117 14:43:05.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.575" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.572" endtime="20201117 14:43:05.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.580" level="INFO">VALUE: [4.1959000000001134e-05, 4.136200000000312e-05, 4.1653000000002605e-05, 4.1262999999999717e-05, 4.1818999999998496e-05, 4.1638999999996096e-05, 4.1832999999998066e-05, 4.1917000000002425e-05, 4.1860999999997206e-05, 4.1860999999997206e-05, 4.1068999999997746e-05, 4.1111000000003395e-05, 4.172200000000098e-05, 4.176399999999969e-05, 4.104199999999808e-05, 4.1082999999997316e-05, 4.1125000000002965e-05, 4.13059999999979e-05, 4.177799999999926e-05, 4.1194999999993875e-05, 4.1125000000002965e-05, 4.1222999999999954e-05, 4.104199999999808e-05, 4.149999999999987e-05, 4.1903000000002855e-05, 4.1846999999997636e-05, 4.1554999999998676e-05, 4.113799999999612e-05, 4.1819000000005435e-05, 4.126399999999919e-05, 4.144400000000159e-05, 4.194400000000209e-05, 4.1860999999997206e-05, 4.152799999999901e-05, 4.200000000000037e-05, 4.152799999999901e-05, 4.101399999999894e-05, 4.122200000000048e-05, 4.1597000000004325e-05, 4.1431000000001494e-05, 4.155599999999815e-05, 4.1709000000000884e-05, 4.198599999999386e-05, 4.1931000000001994e-05, 4.1804999999998926e-05, 4.151399999999944e-05, 4.107000000000416e-05, 4.1832999999998066e-05, 4.1625000000003465e-05, 4.19860000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.577" endtime="20201117 14:43:05.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.565" endtime="20201117 14:43:05.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.589" endtime="20201117 14:43:05.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.597" endtime="20201117 14:43:05.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.593" endtime="20201117 14:43:05.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.585" endtime="20201117 14:43:05.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.058" endtime="20201117 14:43:05.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.487" endtime="20201117 14:43:05.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.485" endtime="20201117 14:43:05.624"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.629" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.651" endtime="20201117 14:43:05.671"></status>
</kw>
<msg timestamp="20201117 14:43:05.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.648" endtime="20201117 14:43:05.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.674" endtime="20201117 14:43:05.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.681" endtime="20201117 14:43:05.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.641" endtime="20201117 14:43:05.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.635" endtime="20201117 14:43:05.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.704" endtime="20201117 14:43:06.057"></status>
</kw>
<msg timestamp="20201117 14:43:06.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047175306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.701" endtime="20201117 14:43:06.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047175306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047218042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.067" endtime="20201117 14:43:06.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.084" endtime="20201117 14:43:06.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.694" endtime="20201117 14:43:06.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.689" endtime="20201117 14:43:06.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.092" level="INFO">${RESULT} = [{'time': 0.047218042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273600000000155e-05, 'source_diff': 4.273600000000155e-05}, {'time': 0.047265056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.088" endtime="20201117 14:43:06.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.108" level="INFO">${ACCURACY} = {'source_diff': [4.273600000000155e-05, 4.2459000000001634e-05, 4.2832999999999066e-05, 4.202799999999951e-05, 4.216599999999626e-05, 4.292999999999658e-05, 4.2332999999998566e-05, 4.269400000000284e-...</msg>
<status status="PASS" starttime="20201117 14:43:06.093" endtime="20201117 14:43:06.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.113" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.112" endtime="20201117 14:43:06.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.116" level="INFO">VALUE: [4.273600000000155e-05, 4.2459000000001634e-05, 4.2832999999999066e-05, 4.202799999999951e-05, 4.216599999999626e-05, 4.292999999999658e-05, 4.2332999999998566e-05, 4.269400000000284e-05, 4.2304999999999426e-05, 4.293000000000352e-05, 4.2304999999999426e-05, 4.294400000000309e-05, 4.293000000000352e-05, 4.245800000000216e-05, 4.2111000000004395e-05, 4.208400000000473e-05, 4.2667000000003175e-05, 4.276400000000069e-05, 4.227799999999976e-05, 4.2181000000002244e-05, 4.252800000000001e-05, 4.2195000000001814e-05, 4.2945000000002564e-05, 4.2223000000000954e-05, 4.2110999999997456e-05, 4.2473000000001204e-05, 4.2040999999999606e-05, 4.293000000000352e-05, 4.24860000000013e-05, 4.2138999999996596e-05, 4.2068999999998746e-05, 4.269400000000284e-05, 4.2096999999997886e-05, 4.272200000000198e-05, 4.250000000000087e-05, 4.227799999999976e-05, 4.202799999999951e-05, 4.2332999999998566e-05, 4.2847000000005575e-05, 4.2082999999998316e-05, 4.2347000000005075e-05, 4.2139000000003535e-05, 4.2930999999996056e-05, 4.2903000000003855e-05, 4.2860999999998206e-05, 4.250000000000087e-05, 4.227799999999976e-05, 4.2860999999998206e-05, 4.220800000000191e-05, 4.225000000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.114" endtime="20201117 14:43:06.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.108" endtime="20201117 14:43:06.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.120" endtime="20201117 14:43:06.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.124" endtime="20201117 14:43:06.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.122" endtime="20201117 14:43:06.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.117" endtime="20201117 14:43:06.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.631" endtime="20201117 14:43:06.145"></status>
</kw>
<msg timestamp="20201117 14:43:06.145" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.155" endtime="20201117 14:43:06.172"></status>
</kw>
<msg timestamp="20201117 14:43:06.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.154" endtime="20201117 14:43:06.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.174" endtime="20201117 14:43:06.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.177" endtime="20201117 14:43:06.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.150" endtime="20201117 14:43:06.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.148" endtime="20201117 14:43:06.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.188" endtime="20201117 14:43:06.473"></status>
</kw>
<msg timestamp="20201117 14:43:06.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.186" endtime="20201117 14:43:06.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.477" endtime="20201117 14:43:06.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.486" endtime="20201117 14:43:06.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.183" endtime="20201117 14:43:06.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.180" endtime="20201117 14:43:06.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.494" level="INFO">${RESULT} = [{'time': 0.024408639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276400000000069e-05, 'source_diff': 4.276400000000069e-05}, {'time': 0.024453625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.490" endtime="20201117 14:43:06.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.509" level="INFO">${ACCURACY} = {'source_diff': [4.276400000000069e-05, 4.23059999999989e-05, 4.2804999999999926e-05, 4.2139000000000065e-05, 4.2875000000001245e-05, 4.2416999999999455e-05, 4.277700000000079e-05, 4.24860000000013e-0...</msg>
<status status="PASS" starttime="20201117 14:43:06.495" endtime="20201117 14:43:06.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.514" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.513" endtime="20201117 14:43:06.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.517" level="INFO">VALUE: [4.276400000000069e-05, 4.23059999999989e-05, 4.2804999999999926e-05, 4.2139000000000065e-05, 4.2875000000001245e-05, 4.2416999999999455e-05, 4.277700000000079e-05, 4.24860000000013e-05, 4.2583000000002286e-05, 4.301400000000094e-05, 4.274999999999765e-05, 4.2236999999997055e-05, 4.2124999999997026e-05, 4.2332999999998566e-05, 4.265200000000066e-05, 4.238800000000084e-05, 4.255599999999915e-05, 4.2639000000000565e-05, 4.270799999999894e-05, 4.279199999999983e-05, 4.227799999999976e-05, 4.2832999999999066e-05, 4.2554999999999676e-05, 4.2583000000002286e-05, 4.2430999999999025e-05, 4.2860999999998206e-05, 4.225000000000062e-05, 4.2916999999999955e-05, 4.226400000000019e-05, 4.255599999999915e-05, 4.247200000000173e-05, 4.277800000000026e-05, 4.282000000000244e-05, 4.204199999999908e-05, 4.2277000000000287e-05, 4.2737000000001024e-05, 4.2804999999999926e-05, 4.2068999999998746e-05, 4.298599999999833e-05, 4.223600000000105e-05, 4.219399999999887e-05, 4.2569000000002716e-05, 4.252800000000001e-05, 4.269400000000284e-05, 4.254199999999958e-05, 4.300000000000137e-05, 4.2680999999999275e-05, 4.2083000000001786e-05, 4.2861000000001676e-05, 4.2624999999997526e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.515" endtime="20201117 14:43:06.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.510" endtime="20201117 14:43:06.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.521" endtime="20201117 14:43:06.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.525" endtime="20201117 14:43:06.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.523" endtime="20201117 14:43:06.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.519" endtime="20201117 14:43:06.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.146" endtime="20201117 14:43:06.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.627" endtime="20201117 14:43:06.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.625" endtime="20201117 14:43:06.546"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.549" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.559" endtime="20201117 14:43:06.576"></status>
</kw>
<msg timestamp="20201117 14:43:06.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.557" endtime="20201117 14:43:06.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.577" endtime="20201117 14:43:06.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.580" endtime="20201117 14:43:06.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.554" endtime="20201117 14:43:06.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.551" endtime="20201117 14:43:06.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.598" endtime="20201117 14:43:06.938"></status>
</kw>
<msg timestamp="20201117 14:43:06.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026874833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026918097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.595" endtime="20201117 14:43:06.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026874833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026918097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.948" endtime="20201117 14:43:06.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.967" endtime="20201117 14:43:06.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.587" endtime="20201117 14:43:06.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.584" endtime="20201117 14:43:06.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.985" level="INFO">${RESULT} = [{'time': 0.026918097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.326399999999772e-05, 'source_diff': 4.326399999999772e-05}, {'time': 0.026969125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.976" endtime="20201117 14:43:06.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.017" level="INFO">${ACCURACY} = {'source_diff': [4.326399999999772e-05, 4.3346999999999136e-05, 4.3596999999999386e-05, 4.3917000000000955e-05, 4.34860000000023e-05, 4.3681000000000275e-05, 4.3681000000000275e-05, 4.381999999999997e...</msg>
<status status="PASS" starttime="20201117 14:43:06.987" endtime="20201117 14:43:07.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.029" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.026" endtime="20201117 14:43:07.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.034" level="INFO">VALUE: [4.326399999999772e-05, 4.3346999999999136e-05, 4.3596999999999386e-05, 4.3917000000000955e-05, 4.34860000000023e-05, 4.3681000000000275e-05, 4.3681000000000275e-05, 4.381999999999997e-05, 4.3209000000002384e-05, 4.373600000000255e-05, 4.322199999999901e-05, 4.359799999999886e-05, 4.395800000000019e-05, 4.327800000000076e-05, 4.3694999999999845e-05, 4.366599999999776e-05, 4.316600000000073e-05, 4.329099999999739e-05, 4.341600000000098e-05, 4.3097000000002356e-05, 4.344400000000012e-05, 4.3846999999999636e-05, 4.323600000000205e-05, 4.3096999999998886e-05, 4.304200000000008e-05, 4.3582999999999816e-05, 4.374999999999865e-05, 4.323599999999858e-05, 4.3125000000001495e-05, 4.3167000000000205e-05, 4.3417000000000455e-05, 4.3889000000001815e-05, 4.332000000000294e-05, 4.3222999999998485e-05, 4.3111000000001926e-05, 4.3874999999998776e-05, 4.3722999999998985e-05, 4.3611000000002426e-05, 4.3361000000002176e-05, 4.29860000000018e-05, 4.390199999999844e-05, 4.3068999999999746e-05, 4.3846999999999636e-05, 4.3819000000000496e-05, 4.3972999999999235e-05, 4.39999999999989e-05, 4.3332999999999566e-05, 4.3874999999998776e-05, 4.3110999999998456e-05, 4.3652999999997666e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.031" endtime="20201117 14:43:07.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.019" endtime="20201117 14:43:07.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.043" endtime="20201117 14:43:07.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.051" endtime="20201117 14:43:07.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.047" endtime="20201117 14:43:07.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.038" endtime="20201117 14:43:07.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.549" endtime="20201117 14:43:07.077"></status>
</kw>
<msg timestamp="20201117 14:43:07.077" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.099" endtime="20201117 14:43:07.119"></status>
</kw>
<msg timestamp="20201117 14:43:07.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.096" endtime="20201117 14:43:07.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.122" endtime="20201117 14:43:07.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.129" endtime="20201117 14:43:07.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.088" endtime="20201117 14:43:07.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.083" endtime="20201117 14:43:07.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.153" endtime="20201117 14:43:07.492"></status>
</kw>
<msg timestamp="20201117 14:43:07.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.149" endtime="20201117 14:43:07.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.501" endtime="20201117 14:43:07.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.520" endtime="20201117 14:43:07.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.142" endtime="20201117 14:43:07.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.137" endtime="20201117 14:43:07.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.538" level="INFO">${RESULT} = [{'time': 0.041433806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.377799999999432e-05, 'source_diff': 4.377799999999432e-05}, {'time': 0.041482764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.529" endtime="20201117 14:43:07.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.569" level="INFO">${ACCURACY} = {'source_diff': [4.377799999999432e-05, 4.38060000000004e-05, 4.370799999999647e-05, 4.375000000000212e-05, 4.3152999999997166e-05, 4.3360999999998706e-05, 4.3610999999998956e-05, 4.301400000000094e-0...</msg>
<status status="PASS" starttime="20201117 14:43:07.540" endtime="20201117 14:43:07.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.582" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.578" endtime="20201117 14:43:07.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.587" level="INFO">VALUE: [4.377799999999432e-05, 4.38060000000004e-05, 4.370799999999647e-05, 4.375000000000212e-05, 4.3152999999997166e-05, 4.3360999999998706e-05, 4.3610999999998956e-05, 4.301400000000094e-05, 4.3111000000005395e-05, 4.3153000000004105e-05, 4.306999999999922e-05, 4.3458999999995696e-05, 4.305599999999965e-05, 4.3737000000002024e-05, 4.3833000000000066e-05, 4.379100000000136e-05, 4.3819000000000496e-05, 4.370800000000341e-05, 4.349999999999493e-05, 4.302800000000051e-05, 4.3819000000000496e-05, 4.377800000000126e-05, 4.3610999999998956e-05, 4.3389000000004785e-05, 4.3874999999998776e-05, 4.372200000000298e-05, 4.329200000000033e-05, 4.33059999999999e-05, 4.3889000000005285e-05, 4.350000000000187e-05, 4.306999999999922e-05, 4.3444999999996126e-05, 4.398599999999586e-05, 4.351400000000144e-05, 4.3402999999997416e-05, 4.38060000000004e-05, 4.343000000000402e-05, 4.3874999999998776e-05, 4.377699999999485e-05, 4.344399999999665e-05, 4.323599999999511e-05, 4.3666999999997236e-05, 4.3305000000000426e-05, 4.3082999999999316e-05, 4.345800000000316e-05, 4.3068999999999746e-05, 4.3819000000000496e-05, 4.36939999999969e-05, 4.345800000000316e-05, 4.380599999999346e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.584" endtime="20201117 14:43:07.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.571" endtime="20201117 14:43:07.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.596" endtime="20201117 14:43:07.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.605" endtime="20201117 14:43:07.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.600" endtime="20201117 14:43:07.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.592" endtime="20201117 14:43:07.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.079" endtime="20201117 14:43:07.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.547" endtime="20201117 14:43:07.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.547" endtime="20201117 14:43:07.631"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.636" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.659" endtime="20201117 14:43:07.679"></status>
</kw>
<msg timestamp="20201117 14:43:07.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.656" endtime="20201117 14:43:07.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.682" endtime="20201117 14:43:07.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.689" endtime="20201117 14:43:07.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.647" endtime="20201117 14:43:07.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.642" endtime="20201117 14:43:07.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.712" endtime="20201117 14:43:08.052"></status>
</kw>
<msg timestamp="20201117 14:43:08.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047936083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047980764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.709" endtime="20201117 14:43:08.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047936083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047980764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.061" endtime="20201117 14:43:08.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.080" endtime="20201117 14:43:08.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.702" endtime="20201117 14:43:08.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.697" endtime="20201117 14:43:08.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.098" level="INFO">${RESULT} = [{'time': 0.047980764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4681000000004745e-05, 'source_diff': 4.4681000000004745e-05}, {'time': 0.048038778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:08.089" endtime="20201117 14:43:08.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.131" level="INFO">${ACCURACY} = {'source_diff': [4.4681000000004745e-05, 4.4916999999998486e-05, 4.4013999999995e-05, 4.477699999999585e-05, 4.4638999999999096e-05, 4.402800000000151e-05, 4.4833000000001066e-05, 4.4987000000003274e-...</msg>
<status status="PASS" starttime="20201117 14:43:08.100" endtime="20201117 14:43:08.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.142" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.140" endtime="20201117 14:43:08.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.149" level="INFO">VALUE: [4.4681000000004745e-05, 4.4916999999998486e-05, 4.4013999999995e-05, 4.477699999999585e-05, 4.4638999999999096e-05, 4.402800000000151e-05, 4.4833000000001066e-05, 4.4987000000003274e-05, 4.494399999999815e-05, 4.4874999999999776e-05, 4.4597000000000386e-05, 4.470800000000441e-05, 4.4125000000005965e-05, 4.477800000000226e-05, 4.420799999999697e-05, 4.476400000000269e-05, 4.452799999999507e-05, 4.452800000000201e-05, 4.4430999999997556e-05, 4.4861000000000206e-05, 4.4861000000000206e-05, 4.426400000000219e-05, 4.404200000000108e-05, 4.4958999999997196e-05, 4.431999999999353e-05, 4.423599999999611e-05, 4.4194999999996876e-05, 4.4653000000005605e-05, 4.4847000000000636e-05, 4.434799999999961e-05, 4.497200000000423e-05, 4.429099999999492e-05, 4.479100000000236e-05, 4.4347000000000136e-05, 4.45139999999955e-05, 4.4333000000000566e-05, 4.494399999999815e-05, 4.495800000000466e-05, 4.470799999999747e-05, 4.4624999999999526e-05, 4.472199999999704e-05, 4.472200000000398e-05, 4.483400000000054e-05, 4.427800000000176e-05, 4.473600000000355e-05, 4.4709000000003885e-05, 4.4597000000000386e-05, 4.4110999999999456e-05, 4.4666999999998236e-05, 4.482000000000097e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.146" endtime="20201117 14:43:08.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.133" endtime="20201117 14:43:08.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.158" endtime="20201117 14:43:08.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.166" endtime="20201117 14:43:08.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.162" endtime="20201117 14:43:08.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.153" endtime="20201117 14:43:08.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.638" endtime="20201117 14:43:08.192"></status>
</kw>
<msg timestamp="20201117 14:43:08.193" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.215" endtime="20201117 14:43:08.236"></status>
</kw>
<msg timestamp="20201117 14:43:08.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.211" endtime="20201117 14:43:08.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.239" endtime="20201117 14:43:08.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.246" endtime="20201117 14:43:08.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.204" endtime="20201117 14:43:08.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.198" endtime="20201117 14:43:08.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.269" endtime="20201117 14:43:08.610"></status>
</kw>
<msg timestamp="20201117 14:43:08.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042110611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:08.266" endtime="20201117 14:43:08.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042110611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:08.620" endtime="20201117 14:43:08.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.639" endtime="20201117 14:43:08.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.259" endtime="20201117 14:43:08.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.254" endtime="20201117 14:43:08.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.657" level="INFO">${RESULT} = [{'time': 0.042110611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4110999999999456e-05, 'source_diff': 4.4110999999999456e-05}, {'time': 0.042163611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:08.648" endtime="20201117 14:43:08.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.688" level="INFO">${ACCURACY} = {'source_diff': [4.4110999999999456e-05, 4.406899999999381e-05, 4.419400000000434e-05, 4.445799999999722e-05, 4.429200000000133e-05, 4.498599999999686e-05, 4.500000000000337e-05, 4.4902999999998916e-0...</msg>
<status status="PASS" starttime="20201117 14:43:08.659" endtime="20201117 14:43:08.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.699" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.697" endtime="20201117 14:43:08.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.705" level="INFO">VALUE: [4.4110999999999456e-05, 4.406899999999381e-05, 4.419400000000434e-05, 4.445799999999722e-05, 4.429200000000133e-05, 4.498599999999686e-05, 4.500000000000337e-05, 4.4902999999998916e-05, 4.427799999999482e-05, 4.429200000000133e-05, 4.4195000000003815e-05, 4.444400000000459e-05, 4.495799999999772e-05, 4.404100000000161e-05, 4.4069000000000746e-05, 4.4569000000001247e-05, 4.494399999999815e-05, 4.429100000000186e-05, 4.495799999999772e-05, 4.4931000000004995e-05, 4.4555000000001677e-05, 4.476400000000269e-05, 4.4597000000000386e-05, 4.479200000000183e-05, 4.427800000000176e-05, 4.472200000000398e-05, 4.4597000000000386e-05, 4.431999999999353e-05, 4.4167000000004675e-05, 4.4694999999997376e-05, 4.4459000000003635e-05, 4.4166999999997736e-05, 4.43060000000009e-05, 4.4847000000000636e-05, 4.477799999999532e-05, 4.4555000000001677e-05, 4.420800000000391e-05, 4.425000000000262e-05, 4.477700000000279e-05, 4.423599999999611e-05, 4.456899999999431e-05, 4.423600000000305e-05, 4.445799999999722e-05, 4.4111000000006395e-05, 4.450000000000287e-05, 4.4902999999998916e-05, 4.4110999999999456e-05, 4.426400000000219e-05, 4.4096999999999886e-05, 4.4708999999996946e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.702" endtime="20201117 14:43:08.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.690" endtime="20201117 14:43:08.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.716" endtime="20201117 14:43:08.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.724" endtime="20201117 14:43:08.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.720" endtime="20201117 14:43:08.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.710" endtime="20201117 14:43:08.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.194" endtime="20201117 14:43:08.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.634" endtime="20201117 14:43:08.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.632" endtime="20201117 14:43:08.751"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.756" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.778" endtime="20201117 14:43:08.798"></status>
</kw>
<msg timestamp="20201117 14:43:08.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.774" endtime="20201117 14:43:08.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.802" endtime="20201117 14:43:08.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.808" endtime="20201117 14:43:08.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.767" endtime="20201117 14:43:08.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.761" endtime="20201117 14:43:08.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.832" endtime="20201117 14:43:09.172"></status>
</kw>
<msg timestamp="20201117 14:43:09.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047406444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.828" endtime="20201117 14:43:09.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047406444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.182" endtime="20201117 14:43:09.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.201" endtime="20201117 14:43:09.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.821" endtime="20201117 14:43:09.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.816" endtime="20201117 14:43:09.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.218" level="INFO">${RESULT} = [{'time': 0.047452056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.561200000000043e-05, 'source_diff': 4.561200000000043e-05}, {'time': 0.047511056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.209" endtime="20201117 14:43:09.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.249" level="INFO">${ACCURACY} = {'source_diff': [4.561200000000043e-05, 4.507000000000122e-05, 4.5459000000004635e-05, 4.594399999999915e-05, 4.548599999999736e-05, 4.575000000000412e-05, 4.548599999999736e-05, 4.519400000000534e-05...</msg>
<status status="PASS" starttime="20201117 14:43:09.220" endtime="20201117 14:43:09.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.261" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.258" endtime="20201117 14:43:09.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.266" level="INFO">VALUE: [4.561200000000043e-05, 4.507000000000122e-05, 4.5459000000004635e-05, 4.594399999999915e-05, 4.548599999999736e-05, 4.575000000000412e-05, 4.548599999999736e-05, 4.519400000000534e-05, 4.5125000000000026e-05, 4.5361000000000706e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.554199999999564e-05, 4.523599999999711e-05, 4.527799999999582e-05, 4.5444999999998126e-05, 4.5152999999999166e-05, 4.5958999999998196e-05, 4.5013999999996e-05, 4.527800000000276e-05, 4.5402999999999416e-05, 4.5959000000005135e-05, 4.5347000000001136e-05, 4.56939999999989e-05, 4.573600000000455e-05, 4.547199999999779e-05, 4.599999999999743e-05, 4.516599999999926e-05, 4.605600000000265e-05, 4.569400000000584e-05, 4.5833000000002067e-05, 4.5681000000005745e-05, 4.529200000000233e-05, 4.527800000000276e-05, 4.502799999999557e-05, 4.5611000000000956e-05, 4.520800000000491e-05, 4.582000000000197e-05, 4.559800000000086e-05, 4.584800000000111e-05, 4.5416999999998986e-05, 4.5444999999998126e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.507000000000122e-05, 4.516599999999926e-05, 4.5625000000000526e-05, 4.51939999999984e-05, 4.502800000000251e-05, 4.573599999999761e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.263" endtime="20201117 14:43:09.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.251" endtime="20201117 14:43:09.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.281" endtime="20201117 14:43:09.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.291" endtime="20201117 14:43:09.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.285" endtime="20201117 14:43:09.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.277" endtime="20201117 14:43:09.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.757" endtime="20201117 14:43:09.317"></status>
</kw>
<msg timestamp="20201117 14:43:09.317" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.339" endtime="20201117 14:43:09.359"></status>
</kw>
<msg timestamp="20201117 14:43:09.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.336" endtime="20201117 14:43:09.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.362" endtime="20201117 14:43:09.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.369" endtime="20201117 14:43:09.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.328" endtime="20201117 14:43:09.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.323" endtime="20201117 14:43:09.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.392" endtime="20201117 14:43:09.731"></status>
</kw>
<msg timestamp="20201117 14:43:09.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041481806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.389" endtime="20201117 14:43:09.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041481806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.741" endtime="20201117 14:43:09.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.760" endtime="20201117 14:43:09.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.382" endtime="20201117 14:43:09.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.377" endtime="20201117 14:43:09.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.778" level="INFO">${RESULT} = [{'time': 0.041481806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5388999999999846e-05, 'source_diff': 4.5388999999999846e-05}, {'time': 0.041530736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:09.769" endtime="20201117 14:43:09.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.809" level="INFO">${ACCURACY} = {'source_diff': [4.5388999999999846e-05, 4.5069000000001747e-05, 4.527799999999582e-05, 4.523599999999711e-05, 4.595799999999872e-05, 4.552799999999607e-05, 4.505600000000165e-05, 4.53060000000019e-05...</msg>
<status status="PASS" starttime="20201117 14:43:09.780" endtime="20201117 14:43:09.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.820" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.818" endtime="20201117 14:43:09.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.825" level="INFO">VALUE: [4.5388999999999846e-05, 4.5069000000001747e-05, 4.527799999999582e-05, 4.523599999999711e-05, 4.595799999999872e-05, 4.552799999999607e-05, 4.505600000000165e-05, 4.53060000000019e-05, 4.573600000000455e-05, 4.534800000000061e-05, 4.550000000000387e-05, 4.549999999999693e-05, 4.58190000000025e-05, 4.554100000000311e-05, 4.590200000000044e-05, 4.580500000000293e-05, 4.5875000000000776e-05, 4.5361000000000706e-05, 4.549999999999693e-05, 4.56939999999989e-05, 4.5611000000000956e-05, 4.5111000000000456e-05, 4.5652999999999666e-05, 4.5667000000006175e-05, 4.572199999999804e-05, 4.575000000000412e-05, 4.523600000000405e-05, 4.583400000000154e-05, 4.531999999999453e-05, 4.505600000000165e-05, 4.557000000000172e-05, 4.5694999999998376e-05, 4.5861000000001206e-05, 4.595800000000566e-05, 4.550000000000387e-05, 4.5111000000000456e-05, 4.5319000000001997e-05, 4.5889000000000346e-05, 4.591600000000001e-05, 4.565200000000019e-05, 4.525000000000362e-05, 4.5652999999999666e-05, 4.51939999999984e-05, 4.5625000000000526e-05, 4.599999999999743e-05, 4.587499999999384e-05, 4.5111000000000456e-05, 4.5722999999997516e-05, 4.5402999999999416e-05, 4.5152999999999166e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.822" endtime="20201117 14:43:09.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.811" endtime="20201117 14:43:09.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.830" endtime="20201117 14:43:09.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.834" endtime="20201117 14:43:09.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.832" endtime="20201117 14:43:09.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.828" endtime="20201117 14:43:09.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.319" endtime="20201117 14:43:09.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.753" endtime="20201117 14:43:09.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.752" endtime="20201117 14:43:09.856"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.858" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.869" endtime="20201117 14:43:09.886"></status>
</kw>
<msg timestamp="20201117 14:43:09.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.868" endtime="20201117 14:43:09.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.888" endtime="20201117 14:43:09.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.891" endtime="20201117 14:43:09.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.864" endtime="20201117 14:43:09.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.861" endtime="20201117 14:43:09.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.902" endtime="20201117 14:43:10.239"></status>
</kw>
<msg timestamp="20201117 14:43:10.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027916917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.900" endtime="20201117 14:43:10.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027916917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.248" endtime="20201117 14:43:10.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.267" endtime="20201117 14:43:10.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.897" endtime="20201117 14:43:10.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.895" endtime="20201117 14:43:10.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.285" level="INFO">${RESULT} = [{'time': 0.027916917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6319999999999e-05, 'source_diff': 4.6319999999999e-05}, {'time': 0.027975903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201117 14:43:10.276" endtime="20201117 14:43:10.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.318" level="INFO">${ACCURACY} = {'source_diff': [4.6319999999999e-05, 4.6944999999999626e-05, 4.6416999999999986e-05, 4.666599999999729e-05, 4.699999999999843e-05, 4.6903000000000916e-05, 4.677800000000079e-05, 4.673599999999861e-05...</msg>
<status status="PASS" starttime="20201117 14:43:10.287" endtime="20201117 14:43:10.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.329" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.327" endtime="20201117 14:43:10.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.336" level="INFO">VALUE: [4.6319999999999e-05, 4.6944999999999626e-05, 4.6416999999999986e-05, 4.666599999999729e-05, 4.699999999999843e-05, 4.6903000000000916e-05, 4.677800000000079e-05, 4.673599999999861e-05, 4.698599999999886e-05, 4.649999999999793e-05, 4.665200000000119e-05, 4.654100000000064e-05, 4.66939999999999e-05, 4.6153000000000166e-05, 4.674999999999818e-05, 4.595800000000219e-05, 4.627800000000029e-05, 4.606899999999928e-05, 4.602800000000004e-05, 4.6195000000002345e-05, 4.6625000000001526e-05, 4.684699999999917e-05, 4.661099999999849e-05, 4.602800000000004e-05, 4.698599999999886e-05, 4.6194999999998876e-05, 4.677800000000079e-05, 4.679100000000089e-05, 4.6097000000001886e-05, 4.698599999999886e-05, 4.681900000000003e-05, 4.695799999999972e-05, 4.686099999999874e-05, 4.6875000000001776e-05, 4.61939999999994e-05, 4.647200000000226e-05, 4.6667000000000236e-05, 4.634699999999867e-05, 4.652800000000054e-05, 4.6416999999999986e-05, 4.648600000000183e-05, 4.648599999999836e-05, 4.649999999999793e-05, 4.6361000000001706e-05, 4.679200000000036e-05, 4.6694999999999376e-05, 4.672199999999904e-05, 4.661200000000143e-05, 4.679100000000089e-05, 4.658299999999935e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.332" endtime="20201117 14:43:10.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.320" endtime="20201117 14:43:10.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.344" endtime="20201117 14:43:10.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.353" endtime="20201117 14:43:10.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.348" endtime="20201117 14:43:10.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.340" endtime="20201117 14:43:10.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.859" endtime="20201117 14:43:10.379"></status>
</kw>
<msg timestamp="20201117 14:43:10.379" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.401" endtime="20201117 14:43:10.422"></status>
</kw>
<msg timestamp="20201117 14:43:10.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.398" endtime="20201117 14:43:10.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.426" endtime="20201117 14:43:10.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.432" endtime="20201117 14:43:10.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.390" endtime="20201117 14:43:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.385" endtime="20201117 14:43:10.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.456" endtime="20201117 14:43:10.793"></status>
</kw>
<msg timestamp="20201117 14:43:10.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.452" endtime="20201117 14:43:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.802" endtime="20201117 14:43:10.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.821" endtime="20201117 14:43:10.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.445" endtime="20201117 14:43:10.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.440" endtime="20201117 14:43:10.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.839" level="INFO">${RESULT} = [{'time': 0.043282153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.63339999999951e-05, 'source_diff': 4.63339999999951e-05}, {'time': 0.043341153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:10.830" endtime="20201117 14:43:10.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.870" level="INFO">${ACCURACY} = {'source_diff': [4.63339999999951e-05, 4.652799999999707e-05, 4.700000000000537e-05, 4.626399999999725e-05, 4.6097000000001886e-05, 4.6987000000005275e-05, 4.627799999999682e-05, 4.695799999999972e-05...</msg>
<status status="PASS" starttime="20201117 14:43:10.841" endtime="20201117 14:43:10.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.882" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.879" endtime="20201117 14:43:10.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.887" level="INFO">VALUE: [4.63339999999951e-05, 4.652799999999707e-05, 4.700000000000537e-05, 4.626399999999725e-05, 4.6097000000001886e-05, 4.6987000000005275e-05, 4.627799999999682e-05, 4.695799999999972e-05, 4.6333000000002567e-05, 4.66939999999999e-05, 4.68060000000034e-05, 4.6347000000002136e-05, 4.65139999999975e-05, 4.6903000000000916e-05, 4.649999999999793e-05, 4.6430999999999556e-05, 4.6667000000000236e-05, 4.695799999999972e-05, 4.658299999999588e-05, 4.695799999999972e-05, 4.656999999999578e-05, 4.6944999999999626e-05, 4.686099999999527e-05, 4.6695000000006315e-05, 4.6444999999999126e-05, 4.6861000000002206e-05, 4.695799999999972e-05, 4.636200000000118e-05, 4.644399999999965e-05, 4.623599999999811e-05, 4.6111000000001456e-05, 4.6889000000001346e-05, 4.699999999999843e-05, 4.637499999999434e-05, 4.624999999999768e-05, 4.698599999999886e-05, 4.6416999999999986e-05, 4.681899999999656e-05, 4.652799999999707e-05, 4.605600000000265e-05, 4.670799999999947e-05, 4.608399999999485e-05, 4.659800000000186e-05, 4.681999999999603e-05, 4.6889000000001346e-05, 4.661200000000143e-05, 4.6403000000000416e-05, 4.602800000000351e-05, 4.6694999999999376e-05, 4.699999999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.884" endtime="20201117 14:43:10.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.873" endtime="20201117 14:43:10.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.896" endtime="20201117 14:43:10.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.905" endtime="20201117 14:43:10.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.900" endtime="20201117 14:43:10.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.892" endtime="20201117 14:43:10.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.381" endtime="20201117 14:43:10.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.857" endtime="20201117 14:43:10.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.856" endtime="20201117 14:43:10.931"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.937" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.958" endtime="20201117 14:43:10.978"></status>
</kw>
<msg timestamp="20201117 14:43:10.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.955" endtime="20201117 14:43:10.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.982" endtime="20201117 14:43:10.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.988" endtime="20201117 14:43:10.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.948" endtime="20201117 14:43:10.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.942" endtime="20201117 14:43:10.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.014" endtime="20201117 14:43:11.354"></status>
</kw>
<msg timestamp="20201117 14:43:11.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047070222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.010" endtime="20201117 14:43:11.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047070222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.364" endtime="20201117 14:43:11.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.383" endtime="20201117 14:43:11.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.001" endtime="20201117 14:43:11.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.997" endtime="20201117 14:43:11.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.401" level="INFO">${RESULT} = [{'time': 0.047117306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.708399999999585e-05, 'source_diff': 4.708399999999585e-05}, {'time': 0.047168264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.392" endtime="20201117 14:43:11.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.433" level="INFO">${ACCURACY} = {'source_diff': [4.708399999999585e-05, 4.7903000000001916e-05, 4.7194999999999876e-05, 4.779200000000483e-05, 4.702800000000451e-05, 4.704199999999714e-05, 4.727800000000476e-05, 4.7458999999999696e-...</msg>
<status status="PASS" starttime="20201117 14:43:11.403" endtime="20201117 14:43:11.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.444" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.442" endtime="20201117 14:43:11.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.450" level="INFO">VALUE: [4.708399999999585e-05, 4.7903000000001916e-05, 4.7194999999999876e-05, 4.779200000000483e-05, 4.702800000000451e-05, 4.704199999999714e-05, 4.727800000000476e-05, 4.7458999999999696e-05, 4.777699999999885e-05, 4.7695000000000376e-05, 4.7861000000003207e-05, 4.749999999999893e-05, 4.726399999999825e-05, 4.745800000000022e-05, 4.74860000000063e-05, 4.7361000000002706e-05, 4.7708999999999946e-05, 4.78469999999967e-05, 4.795800000000072e-05, 4.754199999999764e-05, 4.748599999999936e-05, 4.7695000000000376e-05, 4.75139999999985e-05, 4.758400000000329e-05, 4.724999999999868e-05, 4.7681000000000806e-05, 4.7945000000000626e-05, 4.758400000000329e-05, 4.718000000000083e-05, 4.729099999999792e-05, 4.709699999999595e-05, 4.715200000000169e-05, 4.7151999999994754e-05, 4.756900000000425e-05, 4.747199999999979e-05, 4.706899999999681e-05, 4.7917000000001486e-05, 4.7625000000002526e-05, 4.755499999999774e-05, 4.7417000000000986e-05, 4.795800000000072e-05, 4.704199999999714e-05, 4.7931000000001056e-05, 4.7917000000001486e-05, 4.7347000000003137e-05, 4.7667000000001236e-05, 4.7959000000000196e-05, 4.6944999999999626e-05, 4.7667000000001236e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.447" endtime="20201117 14:43:11.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.435" endtime="20201117 14:43:11.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.459" endtime="20201117 14:43:11.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.467" endtime="20201117 14:43:11.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.463" endtime="20201117 14:43:11.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.454" endtime="20201117 14:43:11.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.938" endtime="20201117 14:43:11.493"></status>
</kw>
<msg timestamp="20201117 14:43:11.494" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.515" endtime="20201117 14:43:11.535"></status>
</kw>
<msg timestamp="20201117 14:43:11.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.512" endtime="20201117 14:43:11.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.538" endtime="20201117 14:43:11.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.545" endtime="20201117 14:43:11.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.505" endtime="20201117 14:43:11.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.499" endtime="20201117 14:43:11.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.568" endtime="20201117 14:43:11.910"></status>
</kw>
<msg timestamp="20201117 14:43:11.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041422528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041469778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.565" endtime="20201117 14:43:11.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041422528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041469778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.919" endtime="20201117 14:43:11.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.939" endtime="20201117 14:43:11.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.558" endtime="20201117 14:43:11.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.553" endtime="20201117 14:43:11.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.957" level="INFO">${RESULT} = [{'time': 0.041469778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.724999999999868e-05, 'source_diff': 4.724999999999868e-05}, {'time': 0.041522778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.948" endtime="20201117 14:43:11.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.988" level="INFO">${ACCURACY} = {'source_diff': [4.724999999999868e-05, 4.783400000000354e-05, 4.709699999999595e-05, 4.7653000000001666e-05, 4.7722999999999516e-05, 4.7153000000001166e-05, 4.704199999999714e-05, 4.7458999999999696e...</msg>
<status status="PASS" starttime="20201117 14:43:11.959" endtime="20201117 14:43:11.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.999" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.997" endtime="20201117 14:43:12.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.005" level="INFO">VALUE: [4.724999999999868e-05, 4.783400000000354e-05, 4.709699999999595e-05, 4.7653000000001666e-05, 4.7722999999999516e-05, 4.7153000000001166e-05, 4.704199999999714e-05, 4.7458999999999696e-05, 4.727700000000529e-05, 4.784700000000364e-05, 4.748599999999936e-05, 4.702700000000504e-05, 4.7861000000003207e-05, 4.751400000000544e-05, 4.706899999999681e-05, 4.78190000000045e-05, 4.732000000000347e-05, 4.798599999999986e-05, 4.776399999999875e-05, 4.7889000000002346e-05, 4.711099999999552e-05, 4.730599999999696e-05, 4.7667000000001236e-05, 4.702799999999757e-05, 4.755600000000415e-05, 4.752799999999807e-05, 4.779199999999789e-05, 4.7889000000002346e-05, 4.702800000000451e-05, 4.7139000000001596e-05, 4.798599999999986e-05, 4.729099999999792e-05, 4.799999999999943e-05, 4.793000000000158e-05, 4.78469999999967e-05, 4.770800000000047e-05, 4.698599999999886e-05, 4.758299999999688e-05, 4.7667000000001236e-05, 4.7375000000002276e-05, 4.773599999999961e-05, 4.7861000000003207e-05, 4.707000000000322e-05, 4.730599999999696e-05, 4.7153000000001166e-05, 4.754199999999764e-05, 4.712499999999509e-05, 4.774999999999918e-05, 4.798599999999986e-05, 4.7347000000003137e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.001" endtime="20201117 14:43:12.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.990" endtime="20201117 14:43:12.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.013" endtime="20201117 14:43:12.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.022" endtime="20201117 14:43:12.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.017" endtime="20201117 14:43:12.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.009" endtime="20201117 14:43:12.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.495" endtime="20201117 14:43:12.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.934" endtime="20201117 14:43:12.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.932" endtime="20201117 14:43:12.048"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.054" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.075" endtime="20201117 14:43:12.096"></status>
</kw>
<msg timestamp="20201117 14:43:12.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.072" endtime="20201117 14:43:12.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.099" endtime="20201117 14:43:12.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.106" endtime="20201117 14:43:12.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.065" endtime="20201117 14:43:12.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.059" endtime="20201117 14:43:12.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.131" endtime="20201117 14:43:12.474"></status>
</kw>
<msg timestamp="20201117 14:43:12.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047123389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047172208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.128" endtime="20201117 14:43:12.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047123389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047172208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.483" endtime="20201117 14:43:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.502" endtime="20201117 14:43:12.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.120" endtime="20201117 14:43:12.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.115" endtime="20201117 14:43:12.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.520" level="INFO">${RESULT} = [{'time': 0.047172208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.881899999999856e-05, 'source_diff': 4.881899999999856e-05}, {'time': 0.047228222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.511" endtime="20201117 14:43:12.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.553" level="INFO">${ACCURACY} = {'source_diff': [4.881899999999856e-05, 4.8125000000003026e-05, 4.877799999999932e-05, 4.8875000000003777e-05, 4.809699999999695e-05, 4.822200000000054e-05, 4.86940000000019e-05, 4.812499999999609e-05...</msg>
<status status="PASS" starttime="20201117 14:43:12.522" endtime="20201117 14:43:12.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.565" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.562" endtime="20201117 14:43:12.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.570" level="INFO">VALUE: [4.881899999999856e-05, 4.8125000000003026e-05, 4.877799999999932e-05, 4.8875000000003777e-05, 4.809699999999695e-05, 4.822200000000054e-05, 4.86940000000019e-05, 4.812499999999609e-05, 4.879200000000583e-05, 4.836099999999677e-05, 4.890299999999598e-05, 4.8931000000002056e-05, 4.8723000000000516e-05, 4.8903000000002916e-05, 4.812499999999609e-05, 4.859799999999692e-05, 4.811199999999599e-05, 4.88469999999977e-05, 4.86940000000019e-05, 4.8875000000003777e-05, 4.859700000000439e-05, 4.900000000000043e-05, 4.8625000000003527e-05, 4.891699999999555e-05, 4.833299999999763e-05, 4.848600000000036e-05, 4.802800000000551e-05, 4.856999999999778e-05, 4.802799999999857e-05, 4.868099999999487e-05, 4.852799999999907e-05, 4.863899999999616e-05, 4.808399999999685e-05, 4.881999999999803e-05, 4.8903000000002916e-05, 4.832000000000447e-05, 4.8973000000000766e-05, 4.845800000000122e-05, 4.8901999999996504e-05, 4.854099999999917e-05, 4.86940000000019e-05, 4.8653000000002666e-05, 4.863899999999616e-05, 4.8375000000003276e-05, 4.805499999999824e-05, 4.831899999999806e-05, 4.806899999999781e-05, 4.8403000000002416e-05, 4.8459000000000696e-05, 4.802799999999857e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.567" endtime="20201117 14:43:12.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.555" endtime="20201117 14:43:12.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.579" endtime="20201117 14:43:12.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.587" endtime="20201117 14:43:12.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.583" endtime="20201117 14:43:12.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.574" endtime="20201117 14:43:12.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.055" endtime="20201117 14:43:12.613"></status>
</kw>
<msg timestamp="20201117 14:43:12.613" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.635" endtime="20201117 14:43:12.656"></status>
</kw>
<msg timestamp="20201117 14:43:12.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.632" endtime="20201117 14:43:12.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.659" endtime="20201117 14:43:12.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.666" endtime="20201117 14:43:12.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.624" endtime="20201117 14:43:12.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.619" endtime="20201117 14:43:12.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.690" endtime="20201117 14:43:13.030"></status>
</kw>
<msg timestamp="20201117 14:43:13.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041469125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.686" endtime="20201117 14:43:13.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041469125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.040" endtime="20201117 14:43:13.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.059" endtime="20201117 14:43:13.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.679" endtime="20201117 14:43:13.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.674" endtime="20201117 14:43:13.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.076" level="INFO">${RESULT} = [{'time': 0.041469125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8639000000003096e-05, 'source_diff': 4.8639000000003096e-05}, {'time': 0.041524056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:13.067" endtime="20201117 14:43:13.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.109" level="INFO">${ACCURACY} = {'source_diff': [4.8639000000003096e-05, 4.856999999999778e-05, 4.849999999999993e-05, 4.895800000000172e-05, 4.8139000000002596e-05, 4.861099999999702e-05, 4.859700000000439e-05, 4.854100000000611e-0...</msg>
<status status="PASS" starttime="20201117 14:43:13.078" endtime="20201117 14:43:13.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.120" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.118" endtime="20201117 14:43:13.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.126" level="INFO">VALUE: [4.8639000000003096e-05, 4.856999999999778e-05, 4.849999999999993e-05, 4.895800000000172e-05, 4.8139000000002596e-05, 4.861099999999702e-05, 4.859700000000439e-05, 4.854100000000611e-05, 4.852799999999907e-05, 4.865299999999573e-05, 4.8179999999994894e-05, 4.895800000000172e-05, 4.841699999999505e-05, 4.8139000000002596e-05, 4.837499999999634e-05, 4.8139000000002596e-05, 4.8153000000002166e-05, 4.8445000000001126e-05, 4.8417000000001986e-05, 4.873600000000061e-05, 4.830499999999849e-05, 4.8403000000002416e-05, 4.802799999999857e-05, 4.811099999999652e-05, 4.831899999999806e-05, 4.854099999999917e-05, 4.873600000000061e-05, 4.866600000000276e-05, 4.8653000000002666e-05, 4.802800000000551e-05, 4.8945000000001626e-05, 4.8889000000003346e-05, 4.8181000000001306e-05, 4.831899999999806e-05, 4.804199999999814e-05, 4.861199999999649e-05, 4.824999999999968e-05, 4.884700000000464e-05, 4.827699999999935e-05, 4.8417000000001986e-05, 4.8473000000000266e-05, 4.856899999999831e-05, 4.811200000000293e-05, 4.833299999999763e-05, 4.856899999999831e-05, 4.837499999999634e-05, 4.8901999999996504e-05, 4.888899999999641e-05, 4.852799999999907e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.123" endtime="20201117 14:43:13.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.111" endtime="20201117 14:43:13.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.135" endtime="20201117 14:43:13.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.145" endtime="20201117 14:43:13.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.140" endtime="20201117 14:43:13.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.131" endtime="20201117 14:43:13.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.615" endtime="20201117 14:43:13.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.051" endtime="20201117 14:43:13.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.049" endtime="20201117 14:43:13.168"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.171" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.182" endtime="20201117 14:43:13.199"></status>
</kw>
<msg timestamp="20201117 14:43:13.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.180" endtime="20201117 14:43:13.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.201" endtime="20201117 14:43:13.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.204" endtime="20201117 14:43:13.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.176" endtime="20201117 14:43:13.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.173" endtime="20201117 14:43:13.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.215" endtime="20201117 14:43:13.525"></status>
</kw>
<msg timestamp="20201117 14:43:13.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029404861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.213" endtime="20201117 14:43:13.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029404861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.535" endtime="20201117 14:43:13.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.554" endtime="20201117 14:43:13.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.210" endtime="20201117 14:43:13.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.208" endtime="20201117 14:43:13.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.571" level="INFO">${RESULT} = [{'time': 0.029404861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.91529999999997e-05, 'source_diff': 4.91529999999997e-05}, {'time': 0.029458861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:13.562" endtime="20201117 14:43:13.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.604" level="INFO">${ACCURACY} = {'source_diff': [4.91529999999997e-05, 4.942999999999961e-05, 4.98200000000025e-05, 4.949999999999746e-05, 4.925000000000068e-05, 4.995899999999873e-05, 4.966699999999977e-05, 4.993099999999959e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:43:13.574" endtime="20201117 14:43:13.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.615" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.613" endtime="20201117 14:43:13.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.620" level="INFO">VALUE: [4.91529999999997e-05, 4.942999999999961e-05, 4.98200000000025e-05, 4.949999999999746e-05, 4.925000000000068e-05, 4.995899999999873e-05, 4.966699999999977e-05, 4.993099999999959e-05, 5.0014000000001e-05, 4.952800000000007e-05, 4.980499999999999e-05, 4.911200000000046e-05, 4.913900000000013e-05, 4.944399999999918e-05, 4.962500000000106e-05, 4.956900000000278e-05, 4.937500000000081e-05, 4.93469999999982e-05, 4.919399999999893e-05, 4.898600000000086e-05, 4.958300000000235e-05, 4.9181000000002306e-05, 4.983299999999913e-05, 4.927799999999982e-05, 4.938900000000038e-05, 4.987500000000131e-05, 4.9959000000002196e-05, 4.91529999999997e-05, 4.936100000000124e-05, 4.9695000000002376e-05, 4.970899999999848e-05, 4.9237000000000586e-05, 4.970800000000247e-05, 4.9693999999995964e-05, 4.965200000000419e-05, 4.956899999999931e-05, 4.9957999999995784e-05, 4.9153000000003166e-05, 4.95140000000005e-05, 4.927799999999982e-05, 4.9014e-05, 4.9653000000003666e-05, 4.945800000000222e-05, 4.926400000000025e-05, 4.902799999999957e-05, 4.984799999999817e-05, 4.9389000000003846e-05, 4.9417000000002986e-05, 4.9167000000002736e-05, 4.961099999999802e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.617" endtime="20201117 14:43:13.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.606" endtime="20201117 14:43:13.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.629" endtime="20201117 14:43:13.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.638" endtime="20201117 14:43:13.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.633" endtime="20201117 14:43:13.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.625" endtime="20201117 14:43:13.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.172" endtime="20201117 14:43:13.664"></status>
</kw>
<msg timestamp="20201117 14:43:13.664" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.686" endtime="20201117 14:43:13.707"></status>
</kw>
<msg timestamp="20201117 14:43:13.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.683" endtime="20201117 14:43:13.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.710" endtime="20201117 14:43:13.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.716" endtime="20201117 14:43:13.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.676" endtime="20201117 14:43:13.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.670" endtime="20201117 14:43:13.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.740" endtime="20201117 14:43:14.080"></status>
</kw>
<msg timestamp="20201117 14:43:14.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042045236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.737" endtime="20201117 14:43:14.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042045236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.090" endtime="20201117 14:43:14.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.109" endtime="20201117 14:43:14.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.729" endtime="20201117 14:43:14.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.725" endtime="20201117 14:43:14.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.127" level="INFO">${RESULT} = [{'time': 0.042095042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.980599999999946e-05, 'source_diff': 4.980599999999946e-05}, {'time': 0.042154, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:14.117" endtime="20201117 14:43:14.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.159" level="INFO">${ACCURACY} = {'source_diff': [4.980599999999946e-05, 4.905599999999871e-05, 4.9153000000003166e-05, 4.96940000000029e-05, 4.906900000000575e-05, 4.954199999999964e-05, 4.9471999999994853e-05, 4.911099999999752e-05...</msg>
<status status="PASS" starttime="20201117 14:43:14.129" endtime="20201117 14:43:14.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.171" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.168" endtime="20201117 14:43:14.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.177" level="INFO">VALUE: [4.980599999999946e-05, 4.905599999999871e-05, 4.9153000000003166e-05, 4.96940000000029e-05, 4.906900000000575e-05, 4.954199999999964e-05, 4.9471999999994853e-05, 4.911099999999752e-05, 4.973600000000161e-05, 4.912499999999709e-05, 4.9151999999996754e-05, 4.9487000000000836e-05, 4.909699999999795e-05, 4.9319000000006e-05, 4.958299999999888e-05, 4.9887999999997934e-05, 4.954100000000017e-05, 4.909699999999795e-05, 4.966600000000376e-05, 4.9903000000003916e-05, 4.9679999999996394e-05, 4.96669999999963e-05, 4.987500000000478e-05, 5.000000000000143e-05, 4.975000000000118e-05, 4.93469999999982e-05, 4.976400000000075e-05, 4.927799999999982e-05, 4.922200000000154e-05, 4.96669999999963e-05, 4.951399999999356e-05, 4.993099999999612e-05, 4.911099999999752e-05, 4.9473000000001266e-05, 4.962499999999759e-05, 4.961100000000496e-05, 4.976400000000075e-05, 4.9639000000004097e-05, 4.962499999999759e-05, 4.902800000000651e-05, 4.962499999999759e-05, 4.926400000000025e-05, 4.979199999999989e-05, 4.981899999999956e-05, 4.9403000000003416e-05, 4.983299999999913e-05, 4.923600000000111e-05, 4.981999999999903e-05, 4.9417000000002986e-05, 4.9125000000004027e-05]</msg>
<status status="PASS" starttime="20201117 14:43:14.173" endtime="20201117 14:43:14.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.161" endtime="20201117 14:43:14.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.187" endtime="20201117 14:43:14.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.195" endtime="20201117 14:43:14.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.191" endtime="20201117 14:43:14.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.182" endtime="20201117 14:43:14.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.666" endtime="20201117 14:43:14.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.170" endtime="20201117 14:43:14.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.169" endtime="20201117 14:43:14.223"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.228" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.252" endtime="20201117 14:43:14.273"></status>
</kw>
<msg timestamp="20201117 14:43:14.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.248" endtime="20201117 14:43:14.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.276" endtime="20201117 14:43:14.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.283" endtime="20201117 14:43:14.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.240" endtime="20201117 14:43:14.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.234" endtime="20201117 14:43:14.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.308" endtime="20201117 14:43:14.674"></status>
</kw>
<msg timestamp="20201117 14:43:14.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050005028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050055083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.305" endtime="20201117 14:43:14.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050005028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050055083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.684" endtime="20201117 14:43:14.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.704" endtime="20201117 14:43:14.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.297" endtime="20201117 14:43:14.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.292" endtime="20201117 14:43:14.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.723" level="INFO">${RESULT} = [{'time': 0.050055083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.005500000000024e-05, 'source_diff': 5.005500000000024e-05}, {'time': 0.050119069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:14.713" endtime="20201117 14:43:14.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.759" level="INFO">${ACCURACY} = {'source_diff': [5.005500000000024e-05, 5.0887999999998934e-05, 5.004099999999373e-05, 5.041600000000451e-05, 5.0403000000004416e-05, 5.023600000000211e-05, 5.05140000000015e-05, 5.074999999999524e-05...</msg>
<status status="PASS" starttime="20201117 14:43:14.725" endtime="20201117 14:43:14.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.770" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.768" endtime="20201117 14:43:14.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.776" level="INFO">VALUE: [5.005500000000024e-05, 5.0887999999998934e-05, 5.004099999999373e-05, 5.041600000000451e-05, 5.0403000000004416e-05, 5.023600000000211e-05, 5.05140000000015e-05, 5.074999999999524e-05, 5.079200000000089e-05, 5.002800000000057e-05, 5.033299999999963e-05, 5.074999999999524e-05, 5.082000000000003e-05, 5.0709000000002946e-05, 5.023600000000211e-05, 5.095899999999626e-05, 5.077799999999438e-05, 5.012499999999809e-05, 5.0651999999998254e-05, 5.004100000000067e-05, 5.0929999999997644e-05, 5.05140000000015e-05, 5.0721999999996104e-05, 5.047200000000279e-05, 5.086099999999927e-05, 5.076400000000175e-05, 5.056900000000031e-05, 5.0917000000004486e-05, 5.045800000000322e-05, 5.011099999999852e-05, 5.076400000000175e-05, 5.004200000000014e-05, 5.004200000000014e-05, 5.077800000000132e-05, 5.0929999999997644e-05, 5.073600000000261e-05, 5.056999999999978e-05, 5.065299999999773e-05, 5.080600000000046e-05, 5.0693999999996964e-05, 5.027700000000135e-05, 5.070800000000347e-05, 5.027699999999441e-05, 5.0917000000004486e-05, 5.0403000000004416e-05, 5.033299999999963e-05, 5.08469999999997e-05, 5.0707999999996534e-05, 5.015299999999723e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:43:14.773" endtime="20201117 14:43:14.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.761" endtime="20201117 14:43:14.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.786" endtime="20201117 14:43:14.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.795" endtime="20201117 14:43:14.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.791" endtime="20201117 14:43:14.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.782" endtime="20201117 14:43:14.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.230" endtime="20201117 14:43:14.823"></status>
</kw>
<msg timestamp="20201117 14:43:14.823" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.849" endtime="20201117 14:43:14.869"></status>
</kw>
<msg timestamp="20201117 14:43:14.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.846" endtime="20201117 14:43:14.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.873" endtime="20201117 14:43:14.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.880" endtime="20201117 14:43:14.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.838" endtime="20201117 14:43:14.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.830" endtime="20201117 14:43:14.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.905" endtime="20201117 14:43:15.269"></status>
</kw>
<msg timestamp="20201117 14:43:15.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047589222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047639875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.901" endtime="20201117 14:43:15.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047589222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047639875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.280" endtime="20201117 14:43:15.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.300" endtime="20201117 14:43:15.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.894" endtime="20201117 14:43:15.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.889" endtime="20201117 14:43:15.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.318" level="INFO">${RESULT} = [{'time': 0.047639875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.065299999999773e-05, 'source_diff': 5.065299999999773e-05}, {'time': 0.047692861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.309" endtime="20201117 14:43:15.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.352" level="INFO">${ACCURACY} = {'source_diff': [5.065299999999773e-05, 5.034700000000614e-05, 5.015299999999723e-05, 5.056900000000031e-05, 5.036099999999877e-05, 5.0193999999996464e-05, 5.08469999999997e-05, 5.006899999999981e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:15.321" endtime="20201117 14:43:15.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.365" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.362" endtime="20201117 14:43:15.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.370" level="INFO">VALUE: [5.065299999999773e-05, 5.034700000000614e-05, 5.015299999999723e-05, 5.056900000000031e-05, 5.036099999999877e-05, 5.0193999999996464e-05, 5.08469999999997e-05, 5.006899999999981e-05, 5.029200000000039e-05, 5.08469999999997e-05, 5.037500000000528e-05, 5.098600000000286e-05, 5.023600000000211e-05, 5.069499999999644e-05, 5.0459000000002696e-05, 5.050000000000193e-05, 5.056999999999978e-05, 5.025000000000168e-05, 5.073600000000261e-05, 5.0915999999998074e-05, 5.05270000000016e-05, 5.026400000000125e-05, 5.094400000000415e-05, 5.037500000000528e-05, 5.0014000000001e-05, 5.0431000000003556e-05, 5.041600000000451e-05, 5.005599999999971e-05, 5.082000000000003e-05, 5.073600000000261e-05, 5.074999999999524e-05, 5.022200000000254e-05, 5.0973000000002766e-05, 5.087500000000578e-05, 5.012499999999809e-05, 5.080600000000046e-05, 5.083300000000013e-05, 5.0915999999998074e-05, 5.059699999999945e-05, 5.0943999999997214e-05, 5.058299999999988e-05, 5.068099999999687e-05, 5.090299999999798e-05, 5.031900000000006e-05, 5.08469999999997e-05, 5.065299999999773e-05, 5.065299999999773e-05, 5.041699999999705e-05, 5.094499999999669e-05, 5.0709000000002946e-05]</msg>
<status status="PASS" starttime="20201117 14:43:15.367" endtime="20201117 14:43:15.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.354" endtime="20201117 14:43:15.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.380" endtime="20201117 14:43:15.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.389" endtime="20201117 14:43:15.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.385" endtime="20201117 14:43:15.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.376" endtime="20201117 14:43:15.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.825" endtime="20201117 14:43:15.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.226" endtime="20201117 14:43:15.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.224" endtime="20201117 14:43:15.416"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.422" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.445" endtime="20201117 14:43:15.466"></status>
</kw>
<msg timestamp="20201117 14:43:15.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.442" endtime="20201117 14:43:15.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.469" endtime="20201117 14:43:15.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.476" endtime="20201117 14:43:15.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.434" endtime="20201117 14:43:15.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.428" endtime="20201117 14:43:15.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.501" endtime="20201117 14:43:15.863"></status>
</kw>
<msg timestamp="20201117 14:43:15.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049417486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.497" endtime="20201117 14:43:15.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049417486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.873" endtime="20201117 14:43:15.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.893" endtime="20201117 14:43:15.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.490" endtime="20201117 14:43:15.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.485" endtime="20201117 14:43:15.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.912" level="INFO">${RESULT} = [{'time': 0.049468514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.102800000000157e-05, 'source_diff': 5.102800000000157e-05}, {'time': 0.049524583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.902" endtime="20201117 14:43:15.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.945" level="INFO">${ACCURACY} = {'source_diff': [5.102800000000157e-05, 5.151399999999556e-05, 5.162499999999959e-05, 5.115299999999823e-05, 5.1459000000003696e-05, 5.1445000000004126e-05, 5.1667000000005237e-05, 5.188899999999941e-...</msg>
<status status="PASS" starttime="20201117 14:43:15.914" endtime="20201117 14:43:15.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.958" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.956" endtime="20201117 14:43:15.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.965" level="INFO">VALUE: [5.102800000000157e-05, 5.151399999999556e-05, 5.162499999999959e-05, 5.115299999999823e-05, 5.1459000000003696e-05, 5.1445000000004126e-05, 5.1667000000005237e-05, 5.188899999999941e-05, 5.186100000000027e-05, 5.205600000000171e-05, 5.1401999999999004e-05, 5.1165999999998324e-05, 5.1929999999998644e-05, 5.187499999999984e-05, 5.112499999999909e-05, 5.188899999999941e-05, 5.112499999999909e-05, 5.108300000000038e-05, 5.175000000000318e-05, 5.127800000000182e-05, 5.151399999999556e-05, 5.1499999999995993e-05, 5.113899999999866e-05, 5.1473000000003266e-05, 5.162499999999959e-05, 5.165299999999873e-05, 5.175000000000318e-05, 5.194499999999769e-05, 5.1179999999997894e-05, 5.1749999999996243e-05, 5.1693999999997964e-05, 5.175000000000318e-05, 5.2014000000003e-05, 5.1707999999997534e-05, 5.195800000000472e-05, 5.177799999999538e-05, 5.191699999999855e-05, 5.150000000000293e-05, 5.123600000000311e-05, 5.1153000000005167e-05, 5.176399999999581e-05, 5.187499999999984e-05, 5.1179999999997894e-05, 5.18340000000006e-05, 5.162499999999959e-05, 5.1721999999997104e-05, 5.1945000000004626e-05, 5.169499999999744e-05, 5.152699999999566e-05, 5.111099999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:43:15.961" endtime="20201117 14:43:15.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.947" endtime="20201117 14:43:15.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.974" endtime="20201117 14:43:15.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.983" endtime="20201117 14:43:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.978" endtime="20201117 14:43:16.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.969" endtime="20201117 14:43:16.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.423" endtime="20201117 14:43:16.010"></status>
</kw>
<msg timestamp="20201117 14:43:16.010" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.033" endtime="20201117 14:43:16.054"></status>
</kw>
<msg timestamp="20201117 14:43:16.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.030" endtime="20201117 14:43:16.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.058" endtime="20201117 14:43:16.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.064" endtime="20201117 14:43:16.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.022" endtime="20201117 14:43:16.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.016" endtime="20201117 14:43:16.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.089" endtime="20201117 14:43:16.451"></status>
</kw>
<msg timestamp="20201117 14:43:16.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.086" endtime="20201117 14:43:16.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.461" endtime="20201117 14:43:16.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.481" endtime="20201117 14:43:16.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.078" endtime="20201117 14:43:16.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.073" endtime="20201117 14:43:16.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.500" level="INFO">${RESULT} = [{'time': 0.043628764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.161100000000002e-05, 'source_diff': 5.161100000000002e-05}, {'time': 0.043682819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.490" endtime="20201117 14:43:16.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.533" level="INFO">${ACCURACY} = {'source_diff': [5.161100000000002e-05, 5.156899999999437e-05, 5.132000000000053e-05, 5.190300000000592e-05, 5.111099999999952e-05, 5.143099999999762e-05, 5.1207999999997034e-05, 5.102800000000157e-05...</msg>
<status status="PASS" starttime="20201117 14:43:16.503" endtime="20201117 14:43:16.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.546" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.543" endtime="20201117 14:43:16.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.553" level="INFO">VALUE: [5.161100000000002e-05, 5.156899999999437e-05, 5.132000000000053e-05, 5.190300000000592e-05, 5.111099999999952e-05, 5.143099999999762e-05, 5.1207999999997034e-05, 5.102800000000157e-05, 5.145800000000422e-05, 5.1471999999996854e-05, 5.1415999999998574e-05, 5.187499999999984e-05, 5.1681000000004806e-05, 5.147200000000379e-05, 5.131900000000106e-05, 5.111099999999952e-05, 5.165299999999873e-05, 5.113899999999866e-05, 5.152800000000207e-05, 5.190299999999898e-05, 5.119499999999694e-05, 5.180600000000146e-05, 5.102799999999463e-05, 5.1999999999996493e-05, 5.113899999999866e-05, 5.1249999999995743e-05, 5.176400000000275e-05, 5.188899999999941e-05, 5.101300000000253e-05, 5.1651999999999254e-05, 5.15140000000025e-05, 5.116600000000526e-05, 5.200000000000343e-05, 5.1167000000004736e-05, 5.1499999999995993e-05, 5.1735999999996674e-05, 5.106900000000081e-05, 5.152800000000207e-05, 5.1195000000003876e-05, 5.130600000000096e-05, 5.187499999999984e-05, 5.162499999999959e-05, 5.1723000000003516e-05, 5.177800000000232e-05, 5.13340000000001e-05, 5.111199999999899e-05, 5.16940000000049e-05, 5.1707999999997534e-05, 5.10270000000021e-05, 5.1901999999999504e-05]</msg>
<status status="PASS" starttime="20201117 14:43:16.548" endtime="20201117 14:43:16.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.536" endtime="20201117 14:43:16.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.562" endtime="20201117 14:43:16.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.571" endtime="20201117 14:43:16.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.566" endtime="20201117 14:43:16.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.557" endtime="20201117 14:43:16.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.012" endtime="20201117 14:43:16.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.419" endtime="20201117 14:43:16.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.417" endtime="20201117 14:43:16.598"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.604" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.616" endtime="20201117 14:43:16.633"></status>
</kw>
<msg timestamp="20201117 14:43:16.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.615" endtime="20201117 14:43:16.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.635" endtime="20201117 14:43:16.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.638" endtime="20201117 14:43:16.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.611" endtime="20201117 14:43:16.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.608" endtime="20201117 14:43:16.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.649" endtime="20201117 14:43:16.936"></status>
</kw>
<msg timestamp="20201117 14:43:16.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037218847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037271222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.648" endtime="20201117 14:43:16.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037218847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037271222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.940" endtime="20201117 14:43:16.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.949" endtime="20201117 14:43:16.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.644" endtime="20201117 14:43:16.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.642" endtime="20201117 14:43:16.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.958" level="INFO">${RESULT} = [{'time': 0.037271222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.237500000000034e-05, 'source_diff': 5.237500000000034e-05}, {'time': 0.037329236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.953" endtime="20201117 14:43:16.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.972" level="INFO">${ACCURACY} = {'source_diff': [5.237500000000034e-05, 5.262500000000059e-05, 5.283300000000213e-05, 5.218000000000583e-05, 5.225000000000368e-05, 5.215299999999923e-05, 5.236100000000077e-05, 5.295899999999826e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:16.959" endtime="20201117 14:43:16.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.977" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.976" endtime="20201117 14:43:16.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.982" level="INFO">VALUE: [5.237500000000034e-05, 5.262500000000059e-05, 5.283300000000213e-05, 5.218000000000583e-05, 5.225000000000368e-05, 5.215299999999923e-05, 5.236100000000077e-05, 5.295899999999826e-05, 5.287500000000084e-05, 5.25140000000035e-05, 5.2735999999997674e-05, 5.220899999999751e-05, 5.270899999999801e-05, 5.2207999999998034e-05, 5.2457999999998284e-05, 5.225000000000368e-05, 5.2402000000000004e-05, 5.212500000000009e-05, 5.2985999999997924e-05, 5.263900000000016e-05, 5.256899999999537e-05, 5.26669999999993e-05, 5.26669999999993e-05, 5.2402000000000004e-05, 5.222200000000454e-05, 5.230600000000196e-05, 5.2485999999997424e-05, 5.229200000000239e-05, 5.220899999999751e-05, 5.2735999999997674e-05, 5.263900000000016e-05, 5.204200000000214e-05, 5.227800000000282e-05, 5.287500000000084e-05, 5.234699999999426e-05, 5.211100000000052e-05, 5.265299999999973e-05, 5.286100000000127e-05, 5.2749999999997244e-05, 5.279200000000289e-05, 5.226400000000325e-05, 5.276400000000375e-05, 5.227800000000282e-05, 5.252799999999613e-05, 5.259700000000145e-05, 5.2999999999997494e-05, 5.2485999999997424e-05, 5.265299999999973e-05, 5.275000000000418e-05, 5.280599999999552e-05]</msg>
<status status="PASS" starttime="20201117 14:43:16.979" endtime="20201117 14:43:16.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.973" endtime="20201117 14:43:16.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.986" endtime="20201117 14:43:16.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.990" endtime="20201117 14:43:17.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.988" endtime="20201117 14:43:17.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.984" endtime="20201117 14:43:17.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.605" endtime="20201117 14:43:17.012"></status>
</kw>
<msg timestamp="20201117 14:43:17.012" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.023" endtime="20201117 14:43:17.041"></status>
</kw>
<msg timestamp="20201117 14:43:17.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.021" endtime="20201117 14:43:17.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.042" endtime="20201117 14:43:17.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.045" endtime="20201117 14:43:17.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.018" endtime="20201117 14:43:17.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.015" endtime="20201117 14:43:17.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.057" endtime="20201117 14:43:17.353"></status>
</kw>
<msg timestamp="20201117 14:43:17.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024955083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.055" endtime="20201117 14:43:17.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024955083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.363" endtime="20201117 14:43:17.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.384" endtime="20201117 14:43:17.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.052" endtime="20201117 14:43:17.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.049" endtime="20201117 14:43:17.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.402" level="INFO">${RESULT} = [{'time': 0.025007528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.244500000000166e-05, 'source_diff': 5.244500000000166e-05}, {'time': 0.025068528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:17.393" endtime="20201117 14:43:17.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.435" level="INFO">${ACCURACY} = {'source_diff': [5.244500000000166e-05, 5.244499999999819e-05, 5.241699999999905e-05, 5.282000000000203e-05, 5.24730000000008e-05, 5.230499999999902e-05, 5.256900000000231e-05, 5.212500000000009e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:17.405" endtime="20201117 14:43:17.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.447" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.445" endtime="20201117 14:43:17.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.453" level="INFO">VALUE: [5.244500000000166e-05, 5.244499999999819e-05, 5.241699999999905e-05, 5.282000000000203e-05, 5.24730000000008e-05, 5.230499999999902e-05, 5.256900000000231e-05, 5.212500000000009e-05, 5.2957999999998784e-05, 5.262500000000059e-05, 5.272200000000157e-05, 5.2666000000003294e-05, 5.208300000000138e-05, 5.2499999999996994e-05, 5.262499999999712e-05, 5.261100000000102e-05, 5.212500000000009e-05, 5.290299999999998e-05, 5.248600000000089e-05, 5.286100000000127e-05, 5.245800000000175e-05, 5.204199999999867e-05, 5.282000000000203e-05, 5.229199999999892e-05, 5.23470000000012e-05, 5.23479999999972e-05, 5.212500000000009e-05, 5.209699999999748e-05, 5.212500000000009e-05, 5.2665999999999824e-05, 5.212500000000009e-05, 5.231899999999859e-05, 5.2721999999998104e-05, 5.241699999999905e-05, 5.2471999999997854e-05, 5.209699999999748e-05, 5.238899999999991e-05, 5.23340000000011e-05, 5.240299999999948e-05, 5.220899999999751e-05, 5.2902000000000504e-05, 5.2749999999997244e-05, 5.225000000000021e-05, 5.256999999999831e-05, 5.251400000000003e-05, 5.288900000000041e-05, 5.2443999999998714e-05, 5.247200000000132e-05, 5.2943999999999214e-05, 5.245800000000175e-05]</msg>
<status status="PASS" starttime="20201117 14:43:17.450" endtime="20201117 14:43:17.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.437" endtime="20201117 14:43:17.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.462" endtime="20201117 14:43:17.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.473" endtime="20201117 14:43:17.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.466" endtime="20201117 14:43:17.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.457" endtime="20201117 14:43:17.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.013" endtime="20201117 14:43:17.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.601" endtime="20201117 14:43:17.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.599" endtime="20201117 14:43:17.500"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.506" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.528" endtime="20201117 14:43:17.549"></status>
</kw>
<msg timestamp="20201117 14:43:17.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.525" endtime="20201117 14:43:17.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.553" endtime="20201117 14:43:17.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.559" endtime="20201117 14:43:17.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.517" endtime="20201117 14:43:17.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.511" endtime="20201117 14:43:17.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.585" endtime="20201117 14:43:17.946"></status>
</kw>
<msg timestamp="20201117 14:43:17.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049462278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.581" endtime="20201117 14:43:17.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049462278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.957" endtime="20201117 14:43:17.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.976" endtime="20201117 14:43:17.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.574" endtime="20201117 14:43:17.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.568" endtime="20201117 14:43:17.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.995" level="INFO">${RESULT} = [{'time': 0.049462278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.391700000000055e-05, 'source_diff': 5.391700000000055e-05}, {'time': 0.049522278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:17.985" endtime="20201117 14:43:17.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.028" level="INFO">${ACCURACY} = {'source_diff': [5.391700000000055e-05, 5.398600000000586e-05, 5.386099999999533e-05, 5.3777999999997383e-05, 5.387500000000184e-05, 5.322299999999808e-05, 5.3457999999999284e-05, 5.3707999999999534e-...</msg>
<status status="PASS" starttime="20201117 14:43:17.997" endtime="20201117 14:43:18.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.040" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.037" endtime="20201117 14:43:18.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.046" level="INFO">VALUE: [5.391700000000055e-05, 5.398600000000586e-05, 5.386099999999533e-05, 5.3777999999997383e-05, 5.387500000000184e-05, 5.322299999999808e-05, 5.3457999999999284e-05, 5.3707999999999534e-05, 5.354099999999723e-05, 5.3457999999999284e-05, 5.3166000000000324e-05, 5.35549999999968e-05, 5.330599999999602e-05, 5.387500000000184e-05, 5.308300000000238e-05, 5.390299999999404e-05, 5.365300000000073e-05, 5.368099999999987e-05, 5.395899999999926e-05, 5.323600000000511e-05, 5.3277999999996883e-05, 5.391700000000055e-05, 5.395899999999926e-05, 5.362500000000159e-05, 5.393100000000012e-05, 5.363900000000116e-05, 5.381899999999662e-05, 5.3207999999999034e-05, 5.313900000000066e-05, 5.38749999999949e-05, 5.3944000000000214e-05, 5.387500000000184e-05, 5.3513999999997564e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.311099999999458e-05, 5.326400000000425e-05, 5.320899999999851e-05, 5.38470000000027e-05, 5.368099999999987e-05, 5.302799999999663e-05, 5.309700000000195e-05, 5.379099999999748e-05, 5.307000000000228e-05, 5.3735999999998674e-05, 5.309699999999501e-05, 5.3721999999999104e-05, 5.333300000000263e-05, 5.400000000000543e-05, 5.362499999999465e-05]</msg>
<status status="PASS" starttime="20201117 14:43:18.042" endtime="20201117 14:43:18.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.030" endtime="20201117 14:43:18.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.055" endtime="20201117 14:43:18.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.066" endtime="20201117 14:43:18.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.059" endtime="20201117 14:43:18.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.050" endtime="20201117 14:43:18.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.507" endtime="20201117 14:43:18.092"></status>
</kw>
<msg timestamp="20201117 14:43:18.092" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.115" endtime="20201117 14:43:18.136"></status>
</kw>
<msg timestamp="20201117 14:43:18.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.112" endtime="20201117 14:43:18.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.140" endtime="20201117 14:43:18.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.147" endtime="20201117 14:43:18.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.104" endtime="20201117 14:43:18.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.098" endtime="20201117 14:43:18.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.172" endtime="20201117 14:43:18.535"></status>
</kw>
<msg timestamp="20201117 14:43:18.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043445556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.169" endtime="20201117 14:43:18.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043445556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.545" endtime="20201117 14:43:18.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.565" endtime="20201117 14:43:18.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.161" endtime="20201117 14:43:18.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.156" endtime="20201117 14:43:18.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.584" level="INFO">${RESULT} = [{'time': 0.043445556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.329200000000339e-05, 'source_diff': 5.329200000000339e-05}, {'time': 0.043501569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:18.574" endtime="20201117 14:43:18.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.616" level="INFO">${ACCURACY} = {'source_diff': [5.329200000000339e-05, 5.354099999999723e-05, 5.372200000000604e-05, 5.3915999999994135e-05, 5.325000000000468e-05, 5.306900000000281e-05, 5.315300000000023e-05, 5.302800000000357e-05...</msg>
<status status="PASS" starttime="20201117 14:43:18.586" endtime="20201117 14:43:18.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.628" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.626" endtime="20201117 14:43:18.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.634" level="INFO">VALUE: [5.329200000000339e-05, 5.354099999999723e-05, 5.372200000000604e-05, 5.3915999999994135e-05, 5.325000000000468e-05, 5.306900000000281e-05, 5.315300000000023e-05, 5.302800000000357e-05, 5.3763999999997814e-05, 5.356900000000331e-05, 5.368099999999987e-05, 5.38470000000027e-05, 5.344499999999919e-05, 5.386100000000227e-05, 5.368099999999987e-05, 5.302799999999663e-05, 5.341700000000005e-05, 5.30419999999962e-05, 5.383399999999566e-05, 5.31669999999998e-05, 5.368099999999987e-05, 5.3707999999999534e-05, 5.361100000000202e-05, 5.359699999999551e-05, 5.306900000000281e-05, 5.312499999999415e-05, 5.3263999999997313e-05, 5.341700000000005e-05, 5.3443999999999714e-05, 5.322299999999808e-05, 5.3485999999998424e-05, 5.345899999999876e-05, 5.38340000000026e-05, 5.308400000000185e-05, 5.344499999999919e-05, 5.309799999999448e-05, 5.318099999999937e-05, 5.337500000000134e-05, 5.308300000000238e-05, 5.3249999999997744e-05, 5.383300000000313e-05, 5.359700000000245e-05, 5.3985999999998924e-05, 5.336100000000177e-05, 5.332000000000253e-05, 5.387500000000184e-05, 5.365300000000073e-05, 5.3707999999999534e-05, 5.3499999999997994e-05, 5.393100000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:43:18.630" endtime="20201117 14:43:18.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.618" endtime="20201117 14:43:18.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.643" endtime="20201117 14:43:18.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.652" endtime="20201117 14:43:18.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.647" endtime="20201117 14:43:18.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.638" endtime="20201117 14:43:18.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.094" endtime="20201117 14:43:18.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.503" endtime="20201117 14:43:18.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.501" endtime="20201117 14:43:18.679"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.685" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.711" endtime="20201117 14:43:18.733"></status>
</kw>
<msg timestamp="20201117 14:43:18.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.707" endtime="20201117 14:43:18.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.736" endtime="20201117 14:43:18.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.743" endtime="20201117 14:43:18.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.699" endtime="20201117 14:43:18.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.690" endtime="20201117 14:43:18.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.768" endtime="20201117 14:43:19.131"></status>
</kw>
<msg timestamp="20201117 14:43:19.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052360556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.765" endtime="20201117 14:43:19.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052360556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.141" endtime="20201117 14:43:19.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.161" endtime="20201117 14:43:19.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.757" endtime="20201117 14:43:19.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.752" endtime="20201117 14:43:19.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.180" level="INFO">${RESULT} = [{'time': 0.052414944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4387999999995496e-05, 'source_diff': 5.4387999999995496e-05}, {'time': 0.052481931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.170" endtime="20201117 14:43:19.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.213" level="INFO">${ACCURACY} = {'source_diff': [5.4387999999995496e-05, 5.487500000000284e-05, 5.423699999999865e-05, 5.4416000000001574e-05, 5.437500000000234e-05, 5.4194000000000464e-05, 5.431900000000406e-05, 5.458300000000388e-...</msg>
<status status="PASS" starttime="20201117 14:43:19.182" endtime="20201117 14:43:19.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.225" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.222" endtime="20201117 14:43:19.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.230" level="INFO">VALUE: [5.4387999999995496e-05, 5.487500000000284e-05, 5.423699999999865e-05, 5.4416000000001574e-05, 5.437500000000234e-05, 5.4194000000000464e-05, 5.431900000000406e-05, 5.458300000000388e-05, 5.4485999999999424e-05, 5.431999999999659e-05, 5.411100000000252e-05, 5.4541999999997703e-05, 5.486100000000327e-05, 5.441700000000105e-05, 5.4777999999998384e-05, 5.4985999999999924e-05, 5.4485999999999424e-05, 5.4763999999998814e-05, 5.444500000000019e-05, 5.4722000000000104e-05, 5.49869999999994e-05, 5.488899999999547e-05, 5.4152000000001754e-05, 5.4708000000000534e-05, 5.4208000000000034e-05, 5.4458000000000284e-05, 5.441700000000105e-05, 5.408299999999644e-05, 5.46670000000013e-05, 5.411100000000252e-05, 5.4027999999997633e-05, 5.4444000000000714e-05, 5.411100000000252e-05, 5.497299999999983e-05, 5.412499999999515e-05, 5.434800000000267e-05, 5.4499999999998994e-05, 5.465300000000173e-05, 5.456899999999737e-05, 5.4013999999998064e-05, 5.483299999999719e-05, 5.4263999999998314e-05, 5.4249999999998744e-05, 5.4901999999995565e-05, 5.4471999999999854e-05, 5.462500000000259e-05, 5.500000000000643e-05, 5.408300000000338e-05, 5.412499999999515e-05, 5.408299999999644e-05]</msg>
<status status="PASS" starttime="20201117 14:43:19.227" endtime="20201117 14:43:19.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.215" endtime="20201117 14:43:19.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.240" endtime="20201117 14:43:19.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.249" endtime="20201117 14:43:19.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.244" endtime="20201117 14:43:19.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.235" endtime="20201117 14:43:19.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.686" endtime="20201117 14:43:19.276"></status>
</kw>
<msg timestamp="20201117 14:43:19.276" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.299" endtime="20201117 14:43:19.324"></status>
</kw>
<msg timestamp="20201117 14:43:19.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.296" endtime="20201117 14:43:19.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.328" endtime="20201117 14:43:19.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.335" endtime="20201117 14:43:19.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.288" endtime="20201117 14:43:19.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.282" endtime="20201117 14:43:19.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.360" endtime="20201117 14:43:19.726"></status>
</kw>
<msg timestamp="20201117 14:43:19.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048615417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048670403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.357" endtime="20201117 14:43:19.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048615417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048670403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.736" endtime="20201117 14:43:19.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.756" endtime="20201117 14:43:19.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.349" endtime="20201117 14:43:19.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.344" endtime="20201117 14:43:19.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.775" level="INFO">${RESULT} = [{'time': 0.048670403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.048737431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.765" endtime="20201117 14:43:19.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.808" level="INFO">${ACCURACY} = {'source_diff': [5.4985999999999924e-05, 5.411199999999505e-05, 5.411199999999505e-05, 5.494499999999375e-05, 5.472299999999958e-05, 5.409699999999601e-05, 5.4916000000002074e-05, 5.4902000000002504e-...</msg>
<status status="PASS" starttime="20201117 14:43:19.777" endtime="20201117 14:43:19.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.819" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.817" endtime="20201117 14:43:19.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.825" level="INFO">VALUE: [5.4985999999999924e-05, 5.411199999999505e-05, 5.411199999999505e-05, 5.494499999999375e-05, 5.472299999999958e-05, 5.409699999999601e-05, 5.4916000000002074e-05, 5.4902000000002504e-05, 5.462499999999565e-05, 5.45549999999978e-05, 5.483299999999719e-05, 5.487500000000284e-05, 5.41670000000008e-05, 5.441700000000105e-05, 5.48749999999959e-05, 5.469500000000044e-05, 5.440300000000148e-05, 5.479200000000489e-05, 5.441700000000105e-05, 5.4777999999998384e-05, 5.448600000000636e-05, 5.48340000000036e-05, 5.4708000000000534e-05, 5.4513999999998564e-05, 5.4666000000001824e-05, 5.4458000000000284e-05, 5.465300000000173e-05, 5.4194000000000464e-05, 5.462500000000259e-05, 5.490300000000198e-05, 5.466699999999436e-05, 5.4944000000001214e-05, 5.41670000000008e-05, 5.4180000000000894e-05, 5.4527999999998134e-05, 5.462500000000259e-05, 5.468100000000087e-05, 5.46949999999935e-05, 5.491700000000155e-05, 5.457000000000378e-05, 5.429100000000492e-05, 5.437500000000234e-05, 5.4749999999999244e-05, 5.4958000000000784e-05, 5.46670000000013e-05, 5.438900000000191e-05, 5.41670000000008e-05, 5.4708000000000534e-05, 5.411099999999558e-05, 5.4527999999998134e-05]</msg>
<status status="PASS" starttime="20201117 14:43:19.822" endtime="20201117 14:43:19.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.810" endtime="20201117 14:43:19.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.841" endtime="20201117 14:43:19.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.850" endtime="20201117 14:43:19.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.846" endtime="20201117 14:43:19.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.836" endtime="20201117 14:43:19.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.278" endtime="20201117 14:43:19.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.682" endtime="20201117 14:43:19.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.680" endtime="20201117 14:43:19.878"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.883" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.906" endtime="20201117 14:43:19.927"></status>
</kw>
<msg timestamp="20201117 14:43:19.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.903" endtime="20201117 14:43:19.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.931" endtime="20201117 14:43:19.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.937" endtime="20201117 14:43:19.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.895" endtime="20201117 14:43:19.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.889" endtime="20201117 14:43:19.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.964" endtime="20201117 14:43:20.326"></status>
</kw>
<msg timestamp="20201117 14:43:20.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049523847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049579264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.961" endtime="20201117 14:43:20.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049523847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049579264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.337" endtime="20201117 14:43:20.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.357" endtime="20201117 14:43:20.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.951" endtime="20201117 14:43:20.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.946" endtime="20201117 14:43:20.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.377" level="INFO">${RESULT} = [{'time': 0.049579264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541699999999511e-05, 'source_diff': 5.541699999999511e-05}, {'time': 0.049643264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:20.367" endtime="20201117 14:43:20.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.409" level="INFO">${ACCURACY} = {'source_diff': [5.541699999999511e-05, 5.5263999999999314e-05, 5.511099999999658e-05, 5.5735999999993735e-05, 5.5555999999998273e-05, 5.5527999999999134e-05, 5.5027999999998634e-05, 5.565299999999579...</msg>
<status status="PASS" starttime="20201117 14:43:20.379" endtime="20201117 14:43:20.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.421" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.419" endtime="20201117 14:43:20.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.427" level="INFO">VALUE: [5.541699999999511e-05, 5.5263999999999314e-05, 5.511099999999658e-05, 5.5735999999993735e-05, 5.5555999999998273e-05, 5.5527999999999134e-05, 5.5027999999998634e-05, 5.565299999999579e-05, 5.5416000000002574e-05, 5.581899999999862e-05, 5.508300000000438e-05, 5.559699999999751e-05, 5.565299999999579e-05, 5.543100000000162e-05, 5.5791999999998954e-05, 5.5013999999999064e-05, 5.5277999999998884e-05, 5.5986000000000924e-05, 5.545900000000076e-05, 5.529200000000539e-05, 5.512499999999615e-05, 5.51670000000018e-05, 5.595900000000126e-05, 5.5277999999998884e-05, 5.5236000000000174e-05, 5.53619999999963e-05, 5.5722000000001104e-05, 5.5901999999996566e-05, 5.529099999999898e-05, 5.5750000000000244e-05, 5.581899999999862e-05, 5.509699999999701e-05, 5.5513999999999564e-05, 5.540299999999554e-05, 5.584699999999776e-05, 5.511100000000352e-05, 5.538899999999597e-05, 5.5277999999998884e-05, 5.590300000000298e-05, 5.513899999999572e-05, 5.506999999999734e-05, 5.5305999999998023e-05, 5.561100000000402e-05, 5.558300000000488e-05, 5.579099999999948e-05, 5.5887999999996996e-05, 5.511100000000352e-05, 5.577699999999991e-05, 5.565300000000273e-05, 5.5986000000000924e-05]</msg>
<status status="PASS" starttime="20201117 14:43:20.424" endtime="20201117 14:43:20.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.412" endtime="20201117 14:43:20.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.437" endtime="20201117 14:43:20.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.446" endtime="20201117 14:43:20.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.442" endtime="20201117 14:43:20.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.432" endtime="20201117 14:43:20.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.885" endtime="20201117 14:43:20.472"></status>
</kw>
<msg timestamp="20201117 14:43:20.473" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.496" endtime="20201117 14:43:20.517"></status>
</kw>
<msg timestamp="20201117 14:43:20.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.493" endtime="20201117 14:43:20.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.521" endtime="20201117 14:43:20.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.527" endtime="20201117 14:43:20.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.485" endtime="20201117 14:43:20.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.478" endtime="20201117 14:43:20.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.552" endtime="20201117 14:43:20.862"></status>
</kw>
<msg timestamp="20201117 14:43:20.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043614361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043669347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.549" endtime="20201117 14:43:20.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043614361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043669347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.872" endtime="20201117 14:43:20.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.892" endtime="20201117 14:43:20.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.541" endtime="20201117 14:43:20.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.536" endtime="20201117 14:43:20.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.911" level="INFO">${RESULT} = [{'time': 0.043669347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4985999999999924e-05, 'source_diff': 5.4985999999999924e-05}, {'time': 0.043731347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.901" endtime="20201117 14:43:20.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.945" level="INFO">${ACCURACY} = {'source_diff': [5.4985999999999924e-05, 5.536099999999683e-05, 5.506900000000481e-05, 5.590299999999604e-05, 5.5443999999994775e-05, 5.5915999999996135e-05, 5.5986000000000924e-05, 5.509699999999701e...</msg>
<status status="PASS" starttime="20201117 14:43:20.913" endtime="20201117 14:43:20.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.956" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.954" endtime="20201117 14:43:20.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.962" level="INFO">VALUE: [5.4985999999999924e-05, 5.536099999999683e-05, 5.506900000000481e-05, 5.590299999999604e-05, 5.5443999999994775e-05, 5.5915999999996135e-05, 5.5986000000000924e-05, 5.509699999999701e-05, 5.5736000000000674e-05, 5.588899999999647e-05, 5.5750000000000244e-05, 5.584699999999776e-05, 5.563899999999622e-05, 5.5763999999999814e-05, 5.580500000000599e-05, 5.531899999999812e-05, 5.5958000000001784e-05, 5.5486000000000424e-05, 5.540300000000248e-05, 5.5527999999999134e-05, 5.53470000000042e-05, 5.5458000000001284e-05, 5.540299999999554e-05, 5.5750000000000244e-05, 5.5708000000001534e-05, 5.519500000000094e-05, 5.5041999999998203e-05, 5.5527999999999134e-05, 5.512500000000309e-05, 5.569500000000144e-05, 5.558299999999794e-05, 5.511100000000352e-05, 5.5486000000000424e-05, 5.591699999999561e-05, 5.508300000000438e-05, 5.581899999999862e-05, 5.5458000000001284e-05, 5.5457999999994345e-05, 5.583299999999819e-05, 5.5708000000001534e-05, 5.559699999999751e-05, 5.569500000000144e-05, 5.5499999999999994e-05, 5.511100000000352e-05, 5.5722000000001104e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.583399999999766e-05, 5.508399999999691e-05, 5.5277999999998884e-05]</msg>
<status status="PASS" starttime="20201117 14:43:20.959" endtime="20201117 14:43:20.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.947" endtime="20201117 14:43:20.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.972" endtime="20201117 14:43:20.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.981" endtime="20201117 14:43:21.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.977" endtime="20201117 14:43:21.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.968" endtime="20201117 14:43:21.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.474" endtime="20201117 14:43:21.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.880" endtime="20201117 14:43:21.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.878" endtime="20201117 14:43:21.009"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.015" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.037" endtime="20201117 14:43:21.059"></status>
</kw>
<msg timestamp="20201117 14:43:21.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.034" endtime="20201117 14:43:21.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.062" endtime="20201117 14:43:21.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.069" endtime="20201117 14:43:21.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.026" endtime="20201117 14:43:21.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.020" endtime="20201117 14:43:21.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.094" endtime="20201117 14:43:21.458"></status>
</kw>
<msg timestamp="20201117 14:43:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050063694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.090" endtime="20201117 14:43:21.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050063694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.468" endtime="20201117 14:43:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.488" endtime="20201117 14:43:21.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.083" endtime="20201117 14:43:21.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.077" endtime="20201117 14:43:21.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.507" level="INFO">${RESULT} = [{'time': 0.050063694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.68749999999979e-05, 'source_diff': 5.68749999999979e-05}, {'time': 0.050124694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:21.497" endtime="20201117 14:43:21.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.539" level="INFO">${ACCURACY} = {'source_diff': [5.68749999999979e-05, 5.601300000000059e-05, 5.679100000000048e-05, 5.627700000000041e-05, 5.6486000000001424e-05, 5.6694000000002964e-05, 5.6514000000000564e-05, 5.606999999999834e-0...</msg>
<status status="PASS" starttime="20201117 14:43:21.509" endtime="20201117 14:43:21.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.551" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.549" endtime="20201117 14:43:21.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.558" level="INFO">VALUE: [5.68749999999979e-05, 5.601300000000059e-05, 5.679100000000048e-05, 5.627700000000041e-05, 5.6486000000001424e-05, 5.6694000000002964e-05, 5.6514000000000564e-05, 5.606999999999834e-05, 5.612500000000409e-05, 5.683299999999919e-05, 5.6250000000000744e-05, 5.6722000000002104e-05, 5.70550000000003e-05, 5.63749999999974e-05, 5.6541999999999704e-05, 5.669500000000244e-05, 5.6319999999998593e-05, 5.630499999999955e-05, 5.691700000000355e-05, 5.6764000000000814e-05, 5.6693999999996025e-05, 5.6180000000002894e-05, 5.6694000000002964e-05, 5.63619999999973e-05, 5.6957999999995845e-05, 5.6222000000001604e-05, 5.647300000000133e-05, 5.6250000000000744e-05, 5.662499999999765e-05, 5.6819999999999093e-05, 5.6500000000000994e-05, 5.663899999999722e-05, 5.612499999999715e-05, 5.611099999999758e-05, 5.611200000000399e-05, 5.679100000000048e-05, 5.6221999999994665e-05, 5.65549999999998e-05, 5.604099999999973e-05, 5.6708000000002534e-05, 5.606899999999887e-05, 5.6472000000001854e-05, 5.680500000000005e-05, 5.613900000000366e-05, 5.668099999999593e-05, 5.691700000000355e-05, 5.683399999999866e-05, 5.6763999999993875e-05, 5.665299999999679e-05, 5.608399999999791e-05]</msg>
<status status="PASS" starttime="20201117 14:43:21.554" endtime="20201117 14:43:21.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.541" endtime="20201117 14:43:21.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.567" endtime="20201117 14:43:21.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.576" endtime="20201117 14:43:21.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.572" endtime="20201117 14:43:21.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.563" endtime="20201117 14:43:21.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.016" endtime="20201117 14:43:21.603"></status>
</kw>
<msg timestamp="20201117 14:43:21.603" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.626" endtime="20201117 14:43:21.647"></status>
</kw>
<msg timestamp="20201117 14:43:21.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.623" endtime="20201117 14:43:21.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.650" endtime="20201117 14:43:21.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.657" endtime="20201117 14:43:21.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.615" endtime="20201117 14:43:21.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.609" endtime="20201117 14:43:21.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.682" endtime="20201117 14:43:22.046"></status>
</kw>
<msg timestamp="20201117 14:43:22.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043755486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.679" endtime="20201117 14:43:22.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043755486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.056" endtime="20201117 14:43:22.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.076" endtime="20201117 14:43:22.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.671" endtime="20201117 14:43:22.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.666" endtime="20201117 14:43:22.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.095" level="INFO">${RESULT} = [{'time': 0.043755486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.606900000000581e-05, 'source_diff': 5.606900000000581e-05}, {'time': 0.0438245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:22.085" endtime="20201117 14:43:22.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.127" level="INFO">${ACCURACY} = {'source_diff': [5.606900000000581e-05, 5.633300000000563e-05, 5.6443999999995775e-05, 5.63749999999974e-05, 5.611099999999758e-05, 5.665300000000373e-05, 5.6472000000001854e-05, 5.659799999999798e-05...</msg>
<status status="PASS" starttime="20201117 14:43:22.097" endtime="20201117 14:43:22.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.139" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.137" endtime="20201117 14:43:22.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.145" level="INFO">VALUE: [5.606900000000581e-05, 5.633300000000563e-05, 5.6443999999995775e-05, 5.63749999999974e-05, 5.611099999999758e-05, 5.665300000000373e-05, 5.6472000000001854e-05, 5.659799999999798e-05, 5.7000000000001494e-05, 5.669500000000244e-05, 5.63749999999974e-05, 5.662500000000459e-05, 5.6472000000001854e-05, 5.656899999999937e-05, 5.6666000000003824e-05, 5.663899999999722e-05, 5.673700000000115e-05, 5.6208000000002034e-05, 5.661099999999808e-05, 5.6027999999999634e-05, 5.6277999999999884e-05, 5.609699999999801e-05, 5.6500000000000994e-05, 5.640300000000348e-05, 5.6791999999999954e-05, 5.643099999999568e-05, 5.620900000000151e-05, 5.683299999999919e-05, 5.6500000000000994e-05, 5.636100000000477e-05, 5.658299999999894e-05, 5.606899999999887e-05, 5.615300000000323e-05, 5.6541999999999704e-05, 5.683299999999919e-05, 5.6528000000000134e-05, 5.6778000000000384e-05, 5.636099999999783e-05, 5.663900000000416e-05, 5.686099999999833e-05, 5.668100000000287e-05, 5.647300000000133e-05, 5.647300000000133e-05, 5.677700000000091e-05, 5.63749999999974e-05, 5.68749999999979e-05, 5.6888000000004935e-05, 5.637500000000434e-05, 5.6264000000000314e-05, 5.6958000000002784e-05]</msg>
<status status="PASS" starttime="20201117 14:43:22.142" endtime="20201117 14:43:22.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.130" endtime="20201117 14:43:22.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.155" endtime="20201117 14:43:22.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.164" endtime="20201117 14:43:22.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.159" endtime="20201117 14:43:22.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.150" endtime="20201117 14:43:22.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.605" endtime="20201117 14:43:22.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.012" endtime="20201117 14:43:22.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.010" endtime="20201117 14:43:22.191"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.196" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.219" endtime="20201117 14:43:22.241"></status>
</kw>
<msg timestamp="20201117 14:43:22.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.216" endtime="20201117 14:43:22.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.245" endtime="20201117 14:43:22.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.251" endtime="20201117 14:43:22.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.208" endtime="20201117 14:43:22.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.202" endtime="20201117 14:43:22.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.276" endtime="20201117 14:43:22.639"></status>
</kw>
<msg timestamp="20201117 14:43:22.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049450347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049507403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.272" endtime="20201117 14:43:22.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049450347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049507403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.649" endtime="20201117 14:43:22.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.669" endtime="20201117 14:43:22.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.265" endtime="20201117 14:43:22.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.260" endtime="20201117 14:43:22.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.691" level="INFO">${RESULT} = [{'time': 0.049507403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7055999999999774e-05, 'source_diff': 5.7055999999999774e-05}, {'time': 0.049570389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.681" endtime="20201117 14:43:22.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.723" level="INFO">${ACCURACY} = {'source_diff': [5.7055999999999774e-05, 5.759699999999951e-05, 5.7833999999999663e-05, 5.7000000000001494e-05, 5.743100000000362e-05, 5.7333999999999163e-05, 5.7749999999995305e-05, 5.761199999999855...</msg>
<status status="PASS" starttime="20201117 14:43:22.693" endtime="20201117 14:43:22.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.735" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.733" endtime="20201117 14:43:22.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.741" level="INFO">VALUE: [5.7055999999999774e-05, 5.759699999999951e-05, 5.7833999999999663e-05, 5.7000000000001494e-05, 5.743100000000362e-05, 5.7333999999999163e-05, 5.7749999999995305e-05, 5.761199999999855e-05, 5.7458000000003284e-05, 5.7722000000003104e-05, 5.7971999999996415e-05, 5.736099999999883e-05, 5.73470000000062e-05, 5.7264000000001314e-05, 5.7708000000003534e-05, 5.790299999999804e-05, 5.7778000000001384e-05, 5.7250000000001744e-05, 5.7820000000000094e-05, 5.7583999999999413e-05, 5.7083999999998913e-05, 5.7569999999999844e-05, 5.7833999999999663e-05, 5.7736000000002674e-05, 5.719500000000294e-05, 5.729100000000098e-05, 5.7972000000003354e-05, 5.7901999999998566e-05, 5.7028000000000634e-05, 5.7929999999997706e-05, 5.7221999999995665e-05, 5.738899999999797e-05, 5.786099999999933e-05, 5.758299999999994e-05, 5.8000000000002494e-05, 5.733299999999969e-05, 5.8013999999995125e-05, 5.740300000000448e-05, 5.720900000000251e-05, 5.768100000000387e-05, 5.709699999999901e-05, 5.77629999999954e-05, 5.793099999999718e-05, 5.737500000000534e-05, 5.781900000000062e-05, 5.758299999999994e-05, 5.784699999999976e-05, 5.7929999999997706e-05, 5.7764000000001814e-05, 5.7792000000000954e-05]</msg>
<status status="PASS" starttime="20201117 14:43:22.738" endtime="20201117 14:43:22.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.725" endtime="20201117 14:43:22.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.750" endtime="20201117 14:43:22.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.759" endtime="20201117 14:43:22.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.755" endtime="20201117 14:43:22.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.746" endtime="20201117 14:43:22.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.198" endtime="20201117 14:43:22.786"></status>
</kw>
<msg timestamp="20201117 14:43:22.786" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.809" endtime="20201117 14:43:22.831"></status>
</kw>
<msg timestamp="20201117 14:43:22.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.806" endtime="20201117 14:43:22.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.834" endtime="20201117 14:43:22.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.841" endtime="20201117 14:43:22.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.798" endtime="20201117 14:43:22.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.792" endtime="20201117 14:43:22.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.866" endtime="20201117 14:43:23.227"></status>
</kw>
<msg timestamp="20201117 14:43:23.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043510417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043568056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.863" endtime="20201117 14:43:23.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043510417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043568056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.237" endtime="20201117 14:43:23.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.258" endtime="20201117 14:43:23.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.855" endtime="20201117 14:43:23.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.850" endtime="20201117 14:43:23.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.278" level="INFO">${RESULT} = [{'time': 0.043568056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.763899999999822e-05, 'source_diff': 5.763899999999822e-05}, {'time': 0.043631069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:23.269" endtime="20201117 14:43:23.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.311" level="INFO">${ACCURACY} = {'source_diff': [5.763899999999822e-05, 5.7416000000004574e-05, 5.7152000000004755e-05, 5.7471999999995915e-05, 5.731900000000012e-05, 5.7222000000002604e-05, 5.7943999999997275e-05, 5.706899999999987...</msg>
<status status="PASS" starttime="20201117 14:43:23.280" endtime="20201117 14:43:23.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.323" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.320" endtime="20201117 14:43:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.328" level="INFO">VALUE: [5.763899999999822e-05, 5.7416000000004574e-05, 5.7152000000004755e-05, 5.7471999999995915e-05, 5.731900000000012e-05, 5.7222000000002604e-05, 5.7943999999997275e-05, 5.706899999999987e-05, 5.7444000000003714e-05, 5.734699999999926e-05, 5.786099999999933e-05, 5.770899999999607e-05, 5.7069999999999343e-05, 5.793100000000412e-05, 5.7055999999999774e-05, 5.7069999999999343e-05, 5.744499999999625e-05, 5.769500000000344e-05, 5.7986000000002924e-05, 5.756900000000037e-05, 5.716699999999686e-05, 5.7278000000000884e-05, 5.756900000000037e-05, 5.7499999999995055e-05, 5.7235999999995235e-05, 5.758299999999994e-05, 5.7556000000000274e-05, 5.7277999999993945e-05, 5.791700000000455e-05, 5.7806000000000524e-05, 5.7292000000000454e-05, 5.733299999999969e-05, 5.781900000000062e-05, 5.7319999999999593e-05, 5.7458000000003284e-05, 5.744500000000319e-05, 5.7736000000002674e-05, 5.713900000000466e-05, 5.7250000000001744e-05, 5.7528000000001134e-05, 5.73749999999984e-05, 5.7278000000000884e-05, 5.736099999999883e-05, 5.78749999999989e-05, 5.7249999999994805e-05, 5.7735999999995735e-05, 5.712499999999815e-05, 5.7278000000000884e-05, 5.790299999999804e-05, 5.711099999999858e-05]</msg>
<status status="PASS" starttime="20201117 14:43:23.325" endtime="20201117 14:43:23.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.313" endtime="20201117 14:43:23.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.338" endtime="20201117 14:43:23.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.347" endtime="20201117 14:43:23.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.342" endtime="20201117 14:43:23.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.333" endtime="20201117 14:43:23.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.788" endtime="20201117 14:43:23.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.194" endtime="20201117 14:43:23.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.192" endtime="20201117 14:43:23.374"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.379" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.403" endtime="20201117 14:43:23.423"></status>
</kw>
<msg timestamp="20201117 14:43:23.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.399" endtime="20201117 14:43:23.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.427" endtime="20201117 14:43:23.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.434" endtime="20201117 14:43:23.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.391" endtime="20201117 14:43:23.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.385" endtime="20201117 14:43:23.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.461" endtime="20201117 14:43:23.824"></status>
</kw>
<msg timestamp="20201117 14:43:23.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049618847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049677625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.457" endtime="20201117 14:43:23.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049618847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049677625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.835" endtime="20201117 14:43:23.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.855" endtime="20201117 14:43:23.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.449" endtime="20201117 14:43:23.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.443" endtime="20201117 14:43:23.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.873" level="INFO">${RESULT} = [{'time': 0.049677625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8778000000002384e-05, 'source_diff': 5.8778000000002384e-05}, {'time': 0.049745625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.864" endtime="20201117 14:43:23.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.906" level="INFO">${ACCURACY} = {'source_diff': [5.8778000000002384e-05, 5.865299999999879e-05, 5.8820000000001094e-05, 5.897300000000383e-05, 5.8250000000002744e-05, 5.8542000000001704e-05, 5.8028000000001634e-05, 5.874999999999630...</msg>
<status status="PASS" starttime="20201117 14:43:23.876" endtime="20201117 14:43:23.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.918" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.915" endtime="20201117 14:43:23.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.923" level="INFO">VALUE: [5.8778000000002384e-05, 5.865299999999879e-05, 5.8820000000001094e-05, 5.897300000000383e-05, 5.8250000000002744e-05, 5.8542000000001704e-05, 5.8028000000001634e-05, 5.8749999999996305e-05, 5.838899999999897e-05, 5.811099999999958e-05, 5.8694000000004964e-05, 5.858300000000094e-05, 5.80550000000013e-05, 5.81670000000048e-05, 5.7999999999995555e-05, 5.88749999999999e-05, 5.806900000000087e-05, 5.893099999999818e-05, 5.8944000000005214e-05, 5.845900000000376e-05, 5.8820000000001094e-05, 5.8320000000000594e-05, 5.8320000000000594e-05, 5.888899999999947e-05, 5.8820000000001094e-05, 5.8778000000002384e-05, 5.829099999999504e-05, 5.884700000000076e-05, 5.854100000000223e-05, 5.8944000000005214e-05, 5.831900000000112e-05, 5.880500000000205e-05, 5.806900000000087e-05, 5.809700000000001e-05, 5.833300000000069e-05, 5.813899999999872e-05, 5.819500000000394e-05, 5.8985999999996985e-05, 5.8235999999996235e-05, 5.8235999999996235e-05, 5.8070000000000344e-05, 5.8249999999995805e-05, 5.805499999999436e-05, 5.8235999999996235e-05, 5.8736000000003674e-05, 5.8208000000004034e-05, 5.8749999999996305e-05, 5.8207999999997095e-05, 5.8764000000002814e-05, 5.891699999999861e-05]</msg>
<status status="PASS" starttime="20201117 14:43:23.920" endtime="20201117 14:43:23.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.908" endtime="20201117 14:43:23.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.933" endtime="20201117 14:43:23.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.942" endtime="20201117 14:43:23.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.937" endtime="20201117 14:43:23.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.928" endtime="20201117 14:43:23.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.381" endtime="20201117 14:43:23.968"></status>
</kw>
<msg timestamp="20201117 14:43:23.968" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.992" endtime="20201117 14:43:24.011"></status>
</kw>
<msg timestamp="20201117 14:43:24.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.988" endtime="20201117 14:43:24.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.012" endtime="20201117 14:43:24.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.016" endtime="20201117 14:43:24.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.980" endtime="20201117 14:43:24.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.974" endtime="20201117 14:43:24.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.027" endtime="20201117 14:43:24.313"></status>
</kw>
<msg timestamp="20201117 14:43:24.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042793431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.026" endtime="20201117 14:43:24.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042793431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.317" endtime="20201117 14:43:24.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.326" endtime="20201117 14:43:24.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.022" endtime="20201117 14:43:24.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.020" endtime="20201117 14:43:24.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.337" level="INFO">${RESULT} = [{'time': 0.042793431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.863899999999922e-05, 'source_diff': 5.863899999999922e-05}, {'time': 0.042856431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:24.332" endtime="20201117 14:43:24.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.351" level="INFO">${ACCURACY} = {'source_diff': [5.863899999999922e-05, 5.8848000000000233e-05, 5.804099999999479e-05, 5.879100000000248e-05, 5.8179999999997956e-05, 5.8750000000003244e-05, 5.890300000000598e-05, 5.862499999999965e-...</msg>
<status status="PASS" starttime="20201117 14:43:24.338" endtime="20201117 14:43:24.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.356" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.355" endtime="20201117 14:43:24.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.359" level="INFO">VALUE: [5.863899999999922e-05, 5.8848000000000233e-05, 5.804099999999479e-05, 5.879100000000248e-05, 5.8179999999997956e-05, 5.8750000000003244e-05, 5.890300000000598e-05, 5.862499999999965e-05, 5.881900000000162e-05, 5.8472000000003854e-05, 5.85550000000018e-05, 5.837500000000634e-05, 5.865299999999879e-05, 5.8292000000001454e-05, 5.8264000000002314e-05, 5.894500000000469e-05, 5.8584000000000414e-05, 5.897300000000383e-05, 5.8971999999997415e-05, 5.893099999999818e-05, 5.809700000000001e-05, 5.829099999999504e-05, 5.8236000000003174e-05, 5.8943999999998276e-05, 5.83749999999994e-05, 5.806900000000087e-05, 5.833300000000069e-05, 5.883300000000119e-05, 5.8208000000004034e-05, 5.813899999999872e-05, 5.8528000000002134e-05, 5.8306000000001024e-05, 5.8472000000003854e-05, 5.886100000000033e-05, 5.8527999999995195e-05, 5.8887999999999996e-05, 5.8278000000001884e-05, 5.8929999999998706e-05, 5.8735999999996735e-05, 5.854100000000223e-05, 5.8499999999996055e-05, 5.8721999999997165e-05, 5.818099999999743e-05, 5.8292000000001454e-05, 5.855499999999486e-05, 5.8805999999994585e-05, 5.8985999999996985e-05, 5.8264000000002314e-05, 5.836099999999983e-05, 5.865299999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:43:24.357" endtime="20201117 14:43:24.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.352" endtime="20201117 14:43:24.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.363" endtime="20201117 14:43:24.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.367" endtime="20201117 14:43:24.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.365" endtime="20201117 14:43:24.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.361" endtime="20201117 14:43:24.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.970" endtime="20201117 14:43:24.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.377" endtime="20201117 14:43:24.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.375" endtime="20201117 14:43:24.389"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.392" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.403" endtime="20201117 14:43:24.420"></status>
</kw>
<msg timestamp="20201117 14:43:24.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.401" endtime="20201117 14:43:24.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.421" endtime="20201117 14:43:24.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.425" endtime="20201117 14:43:24.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.397" endtime="20201117 14:43:24.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.394" endtime="20201117 14:43:24.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.436" endtime="20201117 14:43:24.781"></status>
</kw>
<msg timestamp="20201117 14:43:24.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028217667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.434" endtime="20201117 14:43:24.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028217667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.791" endtime="20201117 14:43:24.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.812" endtime="20201117 14:43:24.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.431" endtime="20201117 14:43:24.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.429" endtime="20201117 14:43:24.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.830" level="INFO">${RESULT} = [{'time': 0.028217667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9263999999999845e-05, 'source_diff': 5.9263999999999845e-05}, {'time': 0.028279667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:24.821" endtime="20201117 14:43:24.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.863" level="INFO">${ACCURACY} = {'source_diff': [5.9263999999999845e-05, 5.9750000000000775e-05, 5.9541999999999234e-05, 5.9665999999999886e-05, 5.9027999999999164e-05, 5.9542000000002704e-05, 5.9652000000000316e-05, 5.9554999999999...</msg>
<status status="PASS" starttime="20201117 14:43:24.833" endtime="20201117 14:43:24.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.875" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.872" endtime="20201117 14:43:24.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.880" level="INFO">VALUE: [5.9263999999999845e-05, 5.9750000000000775e-05, 5.9541999999999234e-05, 5.9665999999999886e-05, 5.9027999999999164e-05, 5.9542000000002704e-05, 5.9652000000000316e-05, 5.955499999999933e-05, 5.9222000000001135e-05, 5.956900000000237e-05, 5.95689999999989e-05, 5.941700000000258e-05, 5.9236000000000705e-05, 5.9277999999999414e-05, 5.941700000000258e-05, 5.941699999999911e-05, 5.972299999999764e-05, 5.986100000000133e-05, 5.93750000000004e-05, 5.9362000000000303e-05, 5.9334000000001164e-05, 5.922300000000061e-05, 5.9708000000002065e-05, 5.9485999999997485e-05, 5.9165999999999386e-05, 6.0000000000001025e-05, 6.0000000000001025e-05, 5.984699999999829e-05, 5.9999999999997555e-05, 5.90689999999984e-05, 5.9777999999999915e-05, 5.9569999999998374e-05, 5.9820000000002094e-05, 5.913900000000319e-05, 5.9222000000001135e-05, 5.9236000000000705e-05, 5.908300000000144e-05, 5.9069999999997874e-05, 5.911100000000058e-05, 5.9193999999998526e-05, 5.963900000000022e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.990300000000004e-05, 5.968099999999893e-05, 5.9528000000003134e-05, 5.9943999999999276e-05, 5.9541999999995765e-05, 5.9957999999998846e-05, 5.9055999999994835e-05]</msg>
<status status="PASS" starttime="20201117 14:43:24.877" endtime="20201117 14:43:24.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.865" endtime="20201117 14:43:24.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.890" endtime="20201117 14:43:24.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.899" endtime="20201117 14:43:24.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.894" endtime="20201117 14:43:24.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.885" endtime="20201117 14:43:24.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.392" endtime="20201117 14:43:24.934"></status>
</kw>
<msg timestamp="20201117 14:43:24.934" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.957" endtime="20201117 14:43:24.978"></status>
</kw>
<msg timestamp="20201117 14:43:24.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.954" endtime="20201117 14:43:24.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.982" endtime="20201117 14:43:24.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.988" endtime="20201117 14:43:24.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.946" endtime="20201117 14:43:24.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.940" endtime="20201117 14:43:24.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.014" endtime="20201117 14:43:25.375"></status>
</kw>
<msg timestamp="20201117 14:43:25.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.010" endtime="20201117 14:43:25.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.385" endtime="20201117 14:43:25.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.405" endtime="20201117 14:43:25.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.002" endtime="20201117 14:43:25.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.997" endtime="20201117 14:43:25.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.426" level="INFO">${RESULT} = [{'time': 0.045201222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.938899999999997e-05, 'source_diff': 5.938899999999997e-05}, {'time': 0.045268236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:25.416" endtime="20201117 14:43:25.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.458" level="INFO">${ACCURACY} = {'source_diff': [5.938899999999997e-05, 5.9972000000005354e-05, 5.9486000000004424e-05, 5.9777999999996445e-05, 5.959700000000151e-05, 5.90829999999945e-05, 5.986100000000133e-05, 5.906900000000187e-0...</msg>
<status status="PASS" starttime="20201117 14:43:25.428" endtime="20201117 14:43:25.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.470" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.467" endtime="20201117 14:43:25.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.476" level="INFO">VALUE: [5.938899999999997e-05, 5.9972000000005354e-05, 5.9486000000004424e-05, 5.9777999999996445e-05, 5.959700000000151e-05, 5.90829999999945e-05, 5.986100000000133e-05, 5.906900000000187e-05, 5.944499999999825e-05, 5.9194999999998e-05, 5.913899999999972e-05, 5.993099999999918e-05, 5.9458000000005284e-05, 5.9777999999996445e-05, 5.96949999999985e-05, 5.983300000000219e-05, 5.9235999999997235e-05, 5.9902000000000566e-05, 5.941699999999911e-05, 5.990300000000004e-05, 5.980499999999611e-05, 5.9707999999998596e-05, 5.938899999999997e-05, 5.966699999999936e-05, 5.9277999999995945e-05, 5.993099999999918e-05, 5.96949999999985e-05, 5.9485999999997485e-05, 5.9320000000001594e-05, 5.9805999999995585e-05, 5.9443999999998776e-05, 5.9402000000000066e-05, 5.991699999999961e-05, 5.9179999999998956e-05, 5.959699999999457e-05, 5.9444000000005714e-05, 5.933300000000169e-05, 5.93750000000004e-05, 5.9971999999998415e-05, 5.9443999999998776e-05, 5.966699999999936e-05, 5.9499999999997055e-05, 5.9320000000001594e-05, 5.9236000000004174e-05, 5.9320000000001594e-05, 5.9500000000003994e-05, 5.9084000000000914e-05, 5.9679999999999456e-05, 5.965299999999979e-05, 5.936100000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:43:25.472" endtime="20201117 14:43:25.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.460" endtime="20201117 14:43:25.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.486" endtime="20201117 14:43:25.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.495" endtime="20201117 14:43:25.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.490" endtime="20201117 14:43:25.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.481" endtime="20201117 14:43:25.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.936" endtime="20201117 14:43:25.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.390" endtime="20201117 14:43:25.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.389" endtime="20201117 14:43:25.523"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.529" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.552" endtime="20201117 14:43:25.574"></status>
</kw>
<msg timestamp="20201117 14:43:25.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.549" endtime="20201117 14:43:25.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.578" endtime="20201117 14:43:25.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.585" endtime="20201117 14:43:25.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.541" endtime="20201117 14:43:25.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.535" endtime="20201117 14:43:25.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.609" endtime="20201117 14:43:25.972"></status>
</kw>
<msg timestamp="20201117 14:43:25.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050741167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050801708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.606" endtime="20201117 14:43:25.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050741167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050801708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.982" endtime="20201117 14:43:26.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.003" endtime="20201117 14:43:26.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.598" endtime="20201117 14:43:26.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.593" endtime="20201117 14:43:26.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:26.021" level="INFO">${RESULT} = [{'time': 0.050801708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054100000000423e-05, 'source_diff': 6.054100000000423e-05}, {'time': 0.050867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:26.012" endtime="20201117 14:43:26.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:26.054" level="INFO">${ACCURACY} = {'source_diff': [6.054100000000423e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.033300000000269e-05, 6.0541999999996765e-05, 6.1000000000005494e-05, 6.015300000000029e-05, 6.0777999999997445...</msg>
<status status="PASS" starttime="20201117 14:43:26.023" endtime="20201117 14:43:26.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.066" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:43:26.063" endtime="20201117 14:43:26.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.072" level="INFO">VALUE: [6.054100000000423e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.033300000000269e-05, 6.0541999999996765e-05, 6.1000000000005494e-05, 6.015300000000029e-05, 6.0777999999997445e-05, 6.0500000000004994e-05, 6.016699999999986e-05, 6.065300000000079e-05, 6.0736000000005674e-05, 6.087499999999496e-05, 6.08750000000019e-05, 6.0112000000001053e-05, 6.0957999999999846e-05, 6.0985999999998985e-05, 6.056899999999643e-05, 6.079100000000448e-05, 6.0944000000000276e-05, 6.086100000000233e-05, 6.0179999999999956e-05, 6.0957999999999846e-05, 6.081899999999668e-05, 6.090300000000104e-05, 6.022299999999814e-05, 6.066700000000036e-05, 6.0598000000001984e-05, 6.063900000000122e-05, 6.006900000000287e-05, 6.0042000000003204e-05, 6.040300000000054e-05, 6.022299999999814e-05, 6.0749999999998305e-05, 6.006899999999593e-05, 6.05550000000038e-05, 6.0806000000003524e-05, 6.036099999999489e-05, 6.0500000000004994e-05, 6.033300000000269e-05, 6.0042000000003204e-05, 6.0056000000002774e-05, 6.061100000000208e-05, 6.1028000000004634e-05, 6.0999999999998555e-05, 6.0263999999997375e-05, 6.0264000000004314e-05, 6.0084000000001914e-05, 6.0041999999996265e-05, 6.0471999999998916e-05]</msg>
<status status="PASS" starttime="20201117 14:43:26.068" endtime="20201117 14:43:26.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.056" endtime="20201117 14:43:26.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.082" endtime="20201117 14:43:26.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:26.091" endtime="20201117 14:43:26.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.086" endtime="20201117 14:43:26.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.077" endtime="20201117 14:43:26.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.530" endtime="20201117 14:43:26.117"></status>
</kw>
<msg timestamp="20201117 14:43:26.117" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.140" endtime="20201117 14:43:26.163"></status>
</kw>
<msg timestamp="20201117 14:43:26.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.137" endtime="20201117 14:43:26.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.166" endtime="20201117 14:43:26.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.173" endtime="20201117 14:43:26.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.129" endtime="20201117 14:43:26.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.123" endtime="20201117 14:43:26.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.198" endtime="20201117 14:43:26.558"></status>
</kw>
<msg timestamp="20201117 14:43:26.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043806458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043867167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.194" endtime="20201117 14:43:26.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043806458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043867167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.569" endtime="20201117 14:43:26.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.589" endtime="20201117 14:43:26.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.187" endtime="20201117 14:43:26.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.182" endtime="20201117 14:43:26.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:26.611" level="INFO">${RESULT} = [{'time': 0.043867167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070899999999907e-05, 'source_diff': 6.070899999999907e-05}, {'time': 0.043930181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:26.602" endtime="20201117 14:43:26.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:26.644" level="INFO">${ACCURACY} = {'source_diff': [6.070899999999907e-05, 6.013900000000072e-05, 6.0056000000002774e-05, 6.0250000000004744e-05, 6.0028000000003634e-05, 6.0944000000000276e-05, 6.0888000000001996e-05, 6.069400000000002...</msg>
<status status="PASS" starttime="20201117 14:43:26.614" endtime="20201117 14:43:26.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.656" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:43:26.654" endtime="20201117 14:43:26.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.662" level="INFO">VALUE: [6.070899999999907e-05, 6.013900000000072e-05, 6.0056000000002774e-05, 6.0250000000004744e-05, 6.0028000000003634e-05, 6.0944000000000276e-05, 6.0888000000001996e-05, 6.0694000000000026e-05, 6.0193999999999526e-05, 6.041700000000011e-05, 6.00829999999955e-05, 6.006900000000287e-05, 6.0944000000000276e-05, 6.083299999999625e-05, 6.094499999999975e-05, 6.0194999999999e-05, 6.070899999999907e-05, 6.0570000000002844e-05, 6.0443999999999776e-05, 6.0944000000000276e-05, 6.0666000000000886e-05, 6.034699999999532e-05, 6.0957999999999846e-05, 6.03750000000014e-05, 6.0443999999999776e-05, 6.0708000000006535e-05, 6.0457999999999346e-05, 6.0235999999998235e-05, 6.0598000000001984e-05, 6.0542000000003704e-05, 6.0707999999999596e-05, 6.041700000000011e-05, 6.0777999999997445e-05, 6.0443999999999776e-05, 6.08750000000019e-05, 6.0235999999998235e-05, 6.072299999999864e-05, 6.094499999999975e-05, 6.008300000000244e-05, 6.0430000000000206e-05, 6.0582999999996e-05, 6.030500000000355e-05, 6.036100000000183e-05, 6.038900000000097e-05, 6.0721999999999166e-05, 6.0249999999997805e-05, 6.0042000000003204e-05, 6.065300000000079e-05, 6.0347999999994795e-05, 6.0041999999996265e-05]</msg>
<status status="PASS" starttime="20201117 14:43:26.659" endtime="20201117 14:43:26.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.647" endtime="20201117 14:43:26.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.672" endtime="20201117 14:43:26.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:26.681" endtime="20201117 14:43:26.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.676" endtime="20201117 14:43:26.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.667" endtime="20201117 14:43:26.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.119" endtime="20201117 14:43:26.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.526" endtime="20201117 14:43:26.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.524" endtime="20201117 14:43:26.708"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.714" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.737" endtime="20201117 14:43:26.758"></status>
</kw>
<msg timestamp="20201117 14:43:26.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.733" endtime="20201117 14:43:26.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.762" endtime="20201117 14:43:26.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.768" endtime="20201117 14:43:26.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.725" endtime="20201117 14:43:26.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.719" endtime="20201117 14:43:26.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.793" endtime="20201117 14:43:27.155"></status>
</kw>
<msg timestamp="20201117 14:43:27.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049565972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.790" endtime="20201117 14:43:27.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049565972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.165" endtime="20201117 14:43:27.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.185" endtime="20201117 14:43:27.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.782" endtime="20201117 14:43:27.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.777" endtime="20201117 14:43:27.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:27.204" level="INFO">${RESULT} = [{'time': 0.049565972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.161100000000308e-05, 'source_diff': 6.161100000000308e-05}, {'time': 0.049643, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:27.194" endtime="20201117 14:43:27.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:27.237" level="INFO">${ACCURACY} = {'source_diff': [6.161100000000308e-05, 6.184699999999682e-05, 6.127800000000488e-05, 6.149999999999906e-05, 6.169400000000103e-05, 6.125000000000574e-05, 6.194500000000075e-05, 6.112500000000215e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:27.206" endtime="20201117 14:43:27.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.248" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:43:27.246" endtime="20201117 14:43:27.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.254" level="INFO">VALUE: [6.161100000000308e-05, 6.184699999999682e-05, 6.127800000000488e-05, 6.149999999999906e-05, 6.169400000000103e-05, 6.125000000000574e-05, 6.194500000000075e-05, 6.112500000000215e-05, 6.151400000000556e-05, 6.108400000000291e-05, 6.12629999999989e-05, 6.147199999999992e-05, 6.145800000000035e-05, 6.191600000000214e-05, 6.123599999999924e-05, 6.147199999999992e-05, 6.166600000000189e-05, 6.177800000000538e-05, 6.198599999999999e-05, 6.137499999999546e-05, 6.115299999999435e-05, 6.129100000000498e-05, 6.120899999999957e-05, 6.143100000000068e-05, 6.194499999999381e-05, 6.120899999999957e-05, 6.17499999999993e-05, 6.17499999999993e-05, 6.158300000000394e-05, 6.154099999999829e-05, 6.177699999999897e-05, 6.145800000000035e-05, 6.136099999999589e-05, 6.106899999999693e-05, 6.158300000000394e-05, 6.126399999999838e-05, 6.1014000000005064e-05, 6.12499999999988e-05, 6.111100000000258e-05, 6.180600000000452e-05, 6.179199999999802e-05, 6.170900000000007e-05, 6.141700000000111e-05, 6.112500000000215e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.12499999999988e-05, 6.181899999999768e-05, 6.198599999999999e-05, 6.17080000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:43:27.251" endtime="20201117 14:43:27.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.239" endtime="20201117 14:43:27.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.264" endtime="20201117 14:43:27.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:27.272" endtime="20201117 14:43:27.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.268" endtime="20201117 14:43:27.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.259" endtime="20201117 14:43:27.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.715" endtime="20201117 14:43:27.299"></status>
</kw>
<msg timestamp="20201117 14:43:27.299" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.322" endtime="20201117 14:43:27.344"></status>
</kw>
<msg timestamp="20201117 14:43:27.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.319" endtime="20201117 14:43:27.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.347" endtime="20201117 14:43:27.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.354" endtime="20201117 14:43:27.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.311" endtime="20201117 14:43:27.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.305" endtime="20201117 14:43:27.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.379" endtime="20201117 14:43:27.739"></status>
</kw>
<msg timestamp="20201117 14:43:27.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.376" endtime="20201117 14:43:27.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.743" endtime="20201117 14:43:27.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.752" endtime="20201117 14:43:27.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.368" endtime="20201117 14:43:27.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.363" endtime="20201117 14:43:27.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:27.762" level="INFO">${RESULT} = [{'time': 0.043466931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.141700000000111e-05, 'source_diff': 6.141700000000111e-05}, {'time': 0.043535944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:27.757" endtime="20201117 14:43:27.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:27.776" level="INFO">${ACCURACY} = {'source_diff': [6.141700000000111e-05, 6.194400000000128e-05, 6.176399999999888e-05, 6.161100000000308e-05, 6.123600000000617e-05, 6.156899999999743e-05, 6.123599999999924e-05, 6.116700000000086e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:27.763" endtime="20201117 14:43:27.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.781" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:43:27.780" endtime="20201117 14:43:27.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.784" level="INFO">VALUE: [6.141700000000111e-05, 6.194400000000128e-05, 6.176399999999888e-05, 6.161100000000308e-05, 6.123600000000617e-05, 6.156899999999743e-05, 6.123599999999924e-05, 6.116700000000086e-05, 6.106899999999693e-05, 6.133299999999675e-05, 6.172200000000017e-05, 6.149999999999906e-05, 6.158400000000341e-05, 6.19029999999951e-05, 6.116700000000086e-05, 6.129199999999752e-05, 6.154199999999777e-05, 6.161200000000255e-05, 6.197200000000042e-05, 6.194399999999434e-05, 6.20000000000065e-05, 6.12080000000001e-05, 6.105499999999736e-05, 6.140300000000154e-05, 6.131899999999718e-05, 6.115300000000129e-05, 6.161100000000308e-05, 6.186099999999639e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.19029999999951e-05, 6.166700000000136e-05, 6.17499999999993e-05, 6.155499999999786e-05, 6.152800000000513e-05, 6.111100000000258e-05, 6.145800000000035e-05, 6.130500000000455e-05, 6.180499999999811e-05, 6.15279999999982e-05, 6.197200000000042e-05, 6.169400000000103e-05, 6.126399999999838e-05, 6.191699999999467e-05, 6.187499999999596e-05, 6.198599999999999e-05, 6.127800000000488e-05, 6.136100000000283e-05, 6.126300000000584e-05, 6.130499999999761e-05]</msg>
<status status="PASS" starttime="20201117 14:43:27.782" endtime="20201117 14:43:27.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.777" endtime="20201117 14:43:27.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.788" endtime="20201117 14:43:27.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:27.792" endtime="20201117 14:43:27.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.790" endtime="20201117 14:43:27.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.786" endtime="20201117 14:43:27.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.301" endtime="20201117 14:43:27.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.711" endtime="20201117 14:43:27.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.709" endtime="20201117 14:43:27.814"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.817" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.827" endtime="20201117 14:43:27.845"></status>
</kw>
<msg timestamp="20201117 14:43:27.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.826" endtime="20201117 14:43:27.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.847" endtime="20201117 14:43:27.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.850" endtime="20201117 14:43:27.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.822" endtime="20201117 14:43:27.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.819" endtime="20201117 14:43:27.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.862" endtime="20201117 14:43:28.150"></status>
</kw>
<msg timestamp="20201117 14:43:28.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027639222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027701736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.861" endtime="20201117 14:43:28.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027639222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027701736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.154" endtime="20201117 14:43:28.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.163" endtime="20201117 14:43:28.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.857" endtime="20201117 14:43:28.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.854" endtime="20201117 14:43:28.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:28.172" level="INFO">${RESULT} = [{'time': 0.027701736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.251399999999963e-05, 'source_diff': 6.251399999999963e-05}, {'time': 0.02777175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:28.167" endtime="20201117 14:43:28.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:28.186" level="INFO">${ACCURACY} = {'source_diff': [6.251399999999963e-05, 6.254200000000223e-05, 6.213899999999925e-05, 6.223600000000024e-05, 6.286100000000086e-05, 6.219399999999806e-05, 6.259700000000104e-05, 6.22499999999998e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:28.173" endtime="20201117 14:43:28.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.191" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:43:28.190" endtime="20201117 14:43:28.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.194" level="INFO">VALUE: [6.251399999999963e-05, 6.254200000000223e-05, 6.213899999999925e-05, 6.223600000000024e-05, 6.286100000000086e-05, 6.219399999999806e-05, 6.259700000000104e-05, 6.22499999999998e-05, 6.20699999999974e-05, 6.206899999999793e-05, 6.237499999999993e-05, 6.212499999999968e-05, 6.204099999999879e-05, 6.215199999999935e-05, 6.241599999999917e-05, 6.295799999999838e-05, 6.229100000000251e-05, 6.223600000000024e-05, 6.287500000000043e-05, 6.248600000000049e-05, 6.254200000000223e-05, 6.265299999999932e-05, 6.240299999999907e-05, 6.2889e-05, 6.265300000000279e-05, 6.220900000000057e-05, 6.294499999999828e-05, 6.216700000000186e-05, 6.202699999999922e-05, 6.248600000000049e-05, 6.211100000000011e-05, 6.29020000000001e-05, 6.205500000000183e-05, 6.24300000000022e-05, 6.273600000000074e-05, 6.268099999999846e-05, 6.280499999999911e-05, 6.297200000000142e-05, 6.258300000000147e-05, 6.200000000000302e-05, 6.23340000000007e-05, 6.223600000000024e-05, 6.294499999999828e-05, 6.211100000000011e-05, 6.230600000000155e-05, 6.240300000000254e-05, 6.252699999999972e-05, 6.22080000000011e-05, 6.237499999999993e-05, 6.237499999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:43:28.192" endtime="20201117 14:43:28.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.187" endtime="20201117 14:43:28.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.198" endtime="20201117 14:43:28.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:28.202" endtime="20201117 14:43:28.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.200" endtime="20201117 14:43:28.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.196" endtime="20201117 14:43:28.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.817" endtime="20201117 14:43:28.224"></status>
</kw>
<msg timestamp="20201117 14:43:28.224" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.234" endtime="20201117 14:43:28.252"></status>
</kw>
<msg timestamp="20201117 14:43:28.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.233" endtime="20201117 14:43:28.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.254" endtime="20201117 14:43:28.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.257" endtime="20201117 14:43:28.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.229" endtime="20201117 14:43:28.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.226" endtime="20201117 14:43:28.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.269" endtime="20201117 14:43:28.555"></status>
</kw>
<msg timestamp="20201117 14:43:28.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024828847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.267" endtime="20201117 14:43:28.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024828847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.559" endtime="20201117 14:43:28.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.568" endtime="20201117 14:43:28.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.264" endtime="20201117 14:43:28.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.261" endtime="20201117 14:43:28.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:28.579" level="INFO">${RESULT} = [{'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259699999999757e-05, 'source_diff': 6.259699999999757e-05}, {'time': 0.024966444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:28.574" endtime="20201117 14:43:28.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:28.593" level="INFO">${ACCURACY} = {'source_diff': [6.259699999999757e-05, 6.272200000000117e-05, 6.265299999999932e-05, 6.269400000000203e-05, 6.292999999999924e-05, 6.245800000000135e-05, 6.204200000000173e-05, 6.273600000000074e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:28.580" endtime="20201117 14:43:28.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.599" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:43:28.597" endtime="20201117 14:43:28.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.602" level="INFO">VALUE: [6.259699999999757e-05, 6.272200000000117e-05, 6.265299999999932e-05, 6.269400000000203e-05, 6.292999999999924e-05, 6.245800000000135e-05, 6.204200000000173e-05, 6.273600000000074e-05, 6.229199999999852e-05, 6.270799999999813e-05, 6.205599999999784e-05, 6.27089999999976e-05, 6.20560000000013e-05, 6.234800000000026e-05, 6.284700000000129e-05, 6.2195000000001e-05, 6.261200000000008e-05, 6.218000000000196e-05, 6.20140000000026e-05, 6.202699999999922e-05, 6.245800000000135e-05, 6.265299999999932e-05, 6.263900000000322e-05, 6.281899999999868e-05, 6.265299999999932e-05, 6.245799999999788e-05, 6.216699999999839e-05, 6.220900000000057e-05, 6.272300000000064e-05, 6.245899999999735e-05, 6.236100000000036e-05, 6.237499999999993e-05, 6.216699999999839e-05, 6.22499999999998e-05, 6.241599999999917e-05, 6.247200000000092e-05, 6.27219999999977e-05, 6.263899999999975e-05, 6.252800000000266e-05, 6.290299999999957e-05, 6.261100000000061e-05, 6.230599999999809e-05, 6.26950000000015e-05, 6.291699999999914e-05, 6.244499999999778e-05, 6.22499999999998e-05, 6.272300000000064e-05, 6.208399999999697e-05, 6.279099999999954e-05, 6.251399999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:43:28.600" endtime="20201117 14:43:28.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.594" endtime="20201117 14:43:28.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.606" endtime="20201117 14:43:28.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:28.610" endtime="20201117 14:43:28.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.608" endtime="20201117 14:43:28.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.604" endtime="20201117 14:43:28.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.224" endtime="20201117 14:43:28.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.815" endtime="20201117 14:43:28.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.815" endtime="20201117 14:43:28.632"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.635" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.647" endtime="20201117 14:43:28.669"></status>
</kw>
<msg timestamp="20201117 14:43:28.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.644" endtime="20201117 14:43:28.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.672" endtime="20201117 14:43:28.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.679" endtime="20201117 14:43:28.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.640" endtime="20201117 14:43:28.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.637" endtime="20201117 14:43:28.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.704" endtime="20201117 14:43:29.065"></status>
</kw>
<msg timestamp="20201117 14:43:29.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030694819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030758375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.701" endtime="20201117 14:43:29.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030694819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030758375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.076" endtime="20201117 14:43:29.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.096" endtime="20201117 14:43:29.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.693" endtime="20201117 14:43:29.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.688" endtime="20201117 14:43:29.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:29.115" level="INFO">${RESULT} = [{'time': 0.030758375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.355599999999934e-05, 'source_diff': 6.355599999999934e-05}, {'time': 0.030825375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:29.105" endtime="20201117 14:43:29.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:29.147" level="INFO">${ACCURACY} = {'source_diff': [6.355599999999934e-05, 6.306899999999893e-05, 6.297200000000142e-05, 6.3195000000002e-05, 6.397199999999895e-05, 6.391700000000014e-05, 6.327700000000047e-05, 6.355599999999934e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:43:29.117" endtime="20201117 14:43:29.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.159" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:43:29.156" endtime="20201117 14:43:29.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.165" level="INFO">VALUE: [6.355599999999934e-05, 6.306899999999893e-05, 6.297200000000142e-05, 6.3195000000002e-05, 6.397199999999895e-05, 6.391700000000014e-05, 6.327700000000047e-05, 6.355599999999934e-05, 6.320900000000157e-05, 6.366599999999695e-05, 6.401399999999419e-05, 6.347200000000192e-05, 6.400000000000156e-05, 6.322200000000167e-05, 6.304099999999979e-05, 6.372199999999523e-05, 6.365300000000379e-05, 6.344400000000278e-05, 6.356899999999943e-05, 6.340300000000354e-05, 6.30699999999984e-05, 6.333399999999823e-05, 6.331999999999866e-05, 6.362499999999771e-05, 6.373600000000174e-05, 6.326400000000038e-05, 6.356899999999943e-05, 6.361099999999814e-05, 6.362500000000465e-05, 6.377699999999403e-05, 6.374999999999437e-05, 6.356899999999943e-05, 6.338900000000397e-05, 6.304199999999927e-05, 6.37080000000026e-05, 6.393099999999624e-05, 6.388899999999753e-05, 6.351400000000063e-05, 6.387499999999796e-05, 6.305599999999884e-05, 6.370899999999513e-05, 6.331999999999866e-05, 6.388900000000447e-05, 6.304099999999979e-05, 6.344399999999584e-05, 6.30829999999985e-05, 6.337499999999746e-05, 6.320799999999516e-05, 6.366700000000336e-05, 6.340300000000354e-05]</msg>
<status status="PASS" starttime="20201117 14:43:29.161" endtime="20201117 14:43:29.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.149" endtime="20201117 14:43:29.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.174" endtime="20201117 14:43:29.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:29.183" endtime="20201117 14:43:29.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.178" endtime="20201117 14:43:29.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.169" endtime="20201117 14:43:29.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.635" endtime="20201117 14:43:29.210"></status>
</kw>
<msg timestamp="20201117 14:43:29.210" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.234" endtime="20201117 14:43:29.255"></status>
</kw>
<msg timestamp="20201117 14:43:29.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.230" endtime="20201117 14:43:29.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.259" endtime="20201117 14:43:29.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.266" endtime="20201117 14:43:29.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.222" endtime="20201117 14:43:29.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.216" endtime="20201117 14:43:29.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.291" endtime="20201117 14:43:29.653"></status>
</kw>
<msg timestamp="20201117 14:43:29.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044559083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044622903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.287" endtime="20201117 14:43:29.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044559083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044622903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.663" endtime="20201117 14:43:29.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.683" endtime="20201117 14:43:29.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.279" endtime="20201117 14:43:29.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.274" endtime="20201117 14:43:29.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:29.703" level="INFO">${RESULT} = [{'time': 0.044622903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381999999999916e-05, 'source_diff': 6.381999999999916e-05}, {'time': 0.044699903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:29.693" endtime="20201117 14:43:29.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:29.735" level="INFO">${ACCURACY} = {'source_diff': [6.381999999999916e-05, 6.327799999999995e-05, 6.344399999999584e-05, 6.312499999999721e-05, 6.354199999999977e-05, 6.400000000000156e-05, 6.387499999999796e-05, 6.373600000000174e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:29.705" endtime="20201117 14:43:29.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.747" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:43:29.745" endtime="20201117 14:43:29.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.753" level="INFO">VALUE: [6.381999999999916e-05, 6.327799999999995e-05, 6.344399999999584e-05, 6.312499999999721e-05, 6.354199999999977e-05, 6.400000000000156e-05, 6.387499999999796e-05, 6.373600000000174e-05, 6.390300000000404e-05, 6.33750000000044e-05, 6.333300000000569e-05, 6.336100000000483e-05, 6.319400000000253e-05, 6.387499999999796e-05, 6.365300000000379e-05, 6.384699999999882e-05, 6.322199999999473e-05, 6.397299999999495e-05, 6.345900000000182e-05, 6.390300000000404e-05, 6.30550000000063e-05, 6.344500000000225e-05, 6.366599999999695e-05, 6.311099999999764e-05, 6.348600000000149e-05, 6.333299999999875e-05, 6.356899999999943e-05, 6.350000000000106e-05, 6.394399999999634e-05, 6.370799999999566e-05, 6.333299999999875e-05, 6.341700000000311e-05, 6.345900000000182e-05, 6.347299999999445e-05, 6.327799999999995e-05, 6.376400000000088e-05, 6.308400000000491e-05, 6.323600000000124e-05, 6.392999999999677e-05, 6.356899999999943e-05, 6.388900000000447e-05, 6.319400000000253e-05, 6.395799999999591e-05, 6.35280000000002e-05, 6.368000000000346e-05, 6.305499999999936e-05, 6.35280000000002e-05, 6.383300000000619e-05, 6.39029999999971e-05, 6.344499999999531e-05]</msg>
<status status="PASS" starttime="20201117 14:43:29.750" endtime="20201117 14:43:29.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.737" endtime="20201117 14:43:29.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.763" endtime="20201117 14:43:29.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:29.772" endtime="20201117 14:43:29.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.768" endtime="20201117 14:43:29.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.758" endtime="20201117 14:43:29.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.212" endtime="20201117 14:43:29.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.633" endtime="20201117 14:43:29.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.633" endtime="20201117 14:43:29.800"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.805" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.828" endtime="20201117 14:43:29.850"></status>
</kw>
<msg timestamp="20201117 14:43:29.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.825" endtime="20201117 14:43:29.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.854" endtime="20201117 14:43:29.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.860" endtime="20201117 14:43:29.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.817" endtime="20201117 14:43:29.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.811" endtime="20201117 14:43:29.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.885" endtime="20201117 14:43:30.247"></status>
</kw>
<msg timestamp="20201117 14:43:30.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049676972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.882" endtime="20201117 14:43:30.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049676972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.257" endtime="20201117 14:43:30.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.277" endtime="20201117 14:43:30.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.874" endtime="20201117 14:43:30.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.869" endtime="20201117 14:43:30.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:30.296" level="INFO">${RESULT} = [{'time': 0.049676972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486099999999939e-05, 'source_diff': 6.486099999999939e-05}, {'time': 0.049754944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:30.286" endtime="20201117 14:43:30.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:30.328" level="INFO">${ACCURACY} = {'source_diff': [6.486099999999939e-05, 6.488799999999906e-05, 6.426400000000138e-05, 6.469399999999709e-05, 6.440300000000454e-05, 6.481899999999374e-05, 6.500000000000256e-05, 6.470799999999666e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:30.298" endtime="20201117 14:43:30.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.340" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:43:30.338" endtime="20201117 14:43:30.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.346" level="INFO">VALUE: [6.486099999999939e-05, 6.488799999999906e-05, 6.426400000000138e-05, 6.469399999999709e-05, 6.440300000000454e-05, 6.481899999999374e-05, 6.500000000000256e-05, 6.470799999999666e-05, 6.40280000000007e-05, 6.447200000000292e-05, 6.483399999999973e-05, 6.4277999999994e-05, 6.451400000000163e-05, 6.483399999999973e-05, 6.430600000000009e-05, 6.47080000000036e-05, 6.448599999999555e-05, 6.404100000000079e-05, 6.43750000000054e-05, 6.406899999999993e-05, 6.44029999999976e-05, 6.4583e-05, 6.441699999999717e-05, 6.43750000000054e-05, 6.4277999999994e-05, 6.445800000000335e-05, 6.423600000000224e-05, 6.493099999999724e-05, 6.45280000000012e-05, 6.494499999999681e-05, 6.42500000000018e-05, 6.444400000000378e-05, 6.445799999999641e-05, 6.451400000000163e-05, 6.429100000000104e-05, 6.469400000000403e-05, 6.430600000000009e-05, 6.472199999999623e-05, 6.437499999999846e-05, 6.437499999999846e-05, 6.45280000000012e-05, 6.436099999999889e-05, 6.40280000000007e-05, 6.477800000000145e-05, 6.43479999999988e-05, 6.469499999999656e-05, 6.440300000000454e-05, 6.45280000000012e-05, 6.449999999999512e-05, 6.404100000000079e-05]</msg>
<status status="PASS" starttime="20201117 14:43:30.343" endtime="20201117 14:43:30.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.330" endtime="20201117 14:43:30.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.363" endtime="20201117 14:43:30.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:30.372" endtime="20201117 14:43:30.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.367" endtime="20201117 14:43:30.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.358" endtime="20201117 14:43:30.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.807" endtime="20201117 14:43:30.398"></status>
</kw>
<msg timestamp="20201117 14:43:30.399" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.422" endtime="20201117 14:43:30.443"></status>
</kw>
<msg timestamp="20201117 14:43:30.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.418" endtime="20201117 14:43:30.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.447" endtime="20201117 14:43:30.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.454" endtime="20201117 14:43:30.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.410" endtime="20201117 14:43:30.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.404" endtime="20201117 14:43:30.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.479" endtime="20201117 14:43:30.841"></status>
</kw>
<msg timestamp="20201117 14:43:30.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043986181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.475" endtime="20201117 14:43:30.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043986181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.851" endtime="20201117 14:43:30.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.871" endtime="20201117 14:43:30.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.467" endtime="20201117 14:43:30.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.462" endtime="20201117 14:43:30.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:30.894" level="INFO">${RESULT} = [{'time': 0.043986181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.409799999999855e-05, 'source_diff': 6.409799999999855e-05}, {'time': 0.044059153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:30.884" endtime="20201117 14:43:30.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:30.927" level="INFO">${ACCURACY} = {'source_diff': [6.409799999999855e-05, 6.472199999999623e-05, 6.409799999999855e-05, 6.433399999999923e-05, 6.42229999999952e-05, 6.477800000000145e-05, 6.402799999999376e-05, 6.497299999999595e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:30.896" endtime="20201117 14:43:30.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.938" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:43:30.936" endtime="20201117 14:43:30.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.944" level="INFO">VALUE: [6.409799999999855e-05, 6.472199999999623e-05, 6.409799999999855e-05, 6.433399999999923e-05, 6.42229999999952e-05, 6.477800000000145e-05, 6.402799999999376e-05, 6.497299999999595e-05, 6.422200000000267e-05, 6.487499999999896e-05, 6.494399999999734e-05, 6.423600000000224e-05, 6.426400000000138e-05, 6.484699999999982e-05, 6.494400000000428e-05, 6.456900000000043e-05, 6.469399999999709e-05, 6.416699999999692e-05, 6.48479999999993e-05, 6.468099999999699e-05, 6.488899999999853e-05, 6.420900000000257e-05, 6.436199999999836e-05, 6.409799999999855e-05, 6.473600000000274e-05, 6.456900000000043e-05, 6.426400000000138e-05, 6.466599999999795e-05, 6.412499999999821e-05, 6.4583e-05, 6.480500000000111e-05, 6.477800000000145e-05, 6.441699999999717e-05, 6.427800000000095e-05, 6.461099999999914e-05, 6.465199999999838e-05, 6.487499999999896e-05, 6.455500000000086e-05, 6.43200000000066e-05, 6.459699999999957e-05, 6.415199999999788e-05, 6.405500000000036e-05, 6.462499999999871e-05, 6.488899999999853e-05, 6.479200000000102e-05, 6.44029999999976e-05, 6.42500000000018e-05, 6.462499999999871e-05, 6.491699999999767e-05, 6.4195000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:43:30.941" endtime="20201117 14:43:30.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.929" endtime="20201117 14:43:30.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.954" endtime="20201117 14:43:30.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:30.963" endtime="20201117 14:43:30.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.958" endtime="20201117 14:43:30.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.949" endtime="20201117 14:43:30.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.400" endtime="20201117 14:43:30.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.802" endtime="20201117 14:43:30.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.800" endtime="20201117 14:43:30.991"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.996" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.020" endtime="20201117 14:43:31.042"></status>
</kw>
<msg timestamp="20201117 14:43:31.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.016" endtime="20201117 14:43:31.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.045" endtime="20201117 14:43:31.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.052" endtime="20201117 14:43:31.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.008" endtime="20201117 14:43:31.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.002" endtime="20201117 14:43:31.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.077" endtime="20201117 14:43:31.437"></status>
</kw>
<msg timestamp="20201117 14:43:31.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049966583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050032, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:31.073" endtime="20201117 14:43:31.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049966583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050032, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:31.448" endtime="20201117 14:43:31.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.468" endtime="20201117 14:43:31.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.066" endtime="20201117 14:43:31.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.061" endtime="20201117 14:43:31.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:31.486" level="INFO">${RESULT} = [{'time': 0.050032, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541699999999817e-05, 'source_diff': 6.541699999999817e-05}, {'time': 0.050111069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:31.477" endtime="20201117 14:43:31.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:31.519" level="INFO">${ACCURACY} = {'source_diff': [6.541699999999817e-05, 6.597200000000442e-05, 6.577800000000245e-05, 6.541700000000511e-05, 6.527800000000195e-05, 6.569399999999809e-05, 6.513899999999878e-05, 6.531899999999424e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:31.489" endtime="20201117 14:43:31.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.531" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:43:31.528" endtime="20201117 14:43:31.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.537" level="INFO">VALUE: [6.541699999999817e-05, 6.597200000000442e-05, 6.577800000000245e-05, 6.541700000000511e-05, 6.527800000000195e-05, 6.569399999999809e-05, 6.513899999999878e-05, 6.531899999999424e-05, 6.52909999999951e-05, 6.501400000000213e-05, 6.52500000000028e-05, 6.577699999999603e-05, 6.545899999999688e-05, 6.545799999999741e-05, 6.50830000000005e-05, 6.60280000000027e-05, 6.509700000000007e-05, 6.562499999999971e-05, 6.569499999999756e-05, 6.570899999999713e-05, 6.566700000000536e-05, 6.570899999999713e-05, 6.594499999999781e-05, 6.586199999999987e-05, 6.538899999999903e-05, 6.518099999999749e-05, 6.524999999999587e-05, 6.545799999999741e-05, 6.545800000000435e-05, 6.541700000000511e-05, 6.561100000000014e-05, 6.519400000000453e-05, 6.591699999999867e-05, 6.594499999999781e-05, 6.586100000000039e-05, 6.544499999999731e-05, 6.591699999999867e-05, 6.552799999999526e-05, 6.545799999999741e-05, 6.500000000000256e-05, 6.592999999999877e-05, 6.573600000000374e-05, 6.572200000000417e-05, 6.551399999999569e-05, 6.54029999999986e-05, 6.554199999999483e-05, 6.555600000000134e-05, 6.50830000000005e-05, 6.530599999999415e-05, 6.529199999999458e-05]</msg>
<status status="PASS" starttime="20201117 14:43:31.533" endtime="20201117 14:43:31.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.521" endtime="20201117 14:43:31.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.547" endtime="20201117 14:43:31.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:31.556" endtime="20201117 14:43:31.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.551" endtime="20201117 14:43:31.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.542" endtime="20201117 14:43:31.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.998" endtime="20201117 14:43:31.582"></status>
</kw>
<msg timestamp="20201117 14:43:31.582" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.605" endtime="20201117 14:43:31.627"></status>
</kw>
<msg timestamp="20201117 14:43:31.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.602" endtime="20201117 14:43:31.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.631" endtime="20201117 14:43:31.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.637" endtime="20201117 14:43:31.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.594" endtime="20201117 14:43:31.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.588" endtime="20201117 14:43:31.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.662" endtime="20201117 14:43:31.985"></status>
</kw>
<msg timestamp="20201117 14:43:31.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043536556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043602083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.659" endtime="20201117 14:43:31.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043536556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043602083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.990" endtime="20201117 14:43:31.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.998" endtime="20201117 14:43:32.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.651" endtime="20201117 14:43:32.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.646" endtime="20201117 14:43:32.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:32.008" level="INFO">${RESULT} = [{'time': 0.043602083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.552700000000272e-05, 'source_diff': 6.552700000000272e-05}, {'time': 0.043679097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:32.004" endtime="20201117 14:43:32.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:32.022" level="INFO">${ACCURACY} = {'source_diff': [6.552700000000272e-05, 6.537499999999946e-05, 6.581900000000168e-05, 6.561100000000014e-05, 6.527800000000195e-05, 6.548600000000349e-05, 6.52500000000028e-05, 6.551399999999569e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:32.009" endtime="20201117 14:43:32.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.028" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:43:32.027" endtime="20201117 14:43:32.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.030" level="INFO">VALUE: [6.552700000000272e-05, 6.537499999999946e-05, 6.581900000000168e-05, 6.561100000000014e-05, 6.527800000000195e-05, 6.548600000000349e-05, 6.52500000000028e-05, 6.551399999999569e-05, 6.532000000000066e-05, 6.549999999999612e-05, 6.550000000000306e-05, 6.54029999999986e-05, 6.594499999999781e-05, 6.504100000000179e-05, 6.527700000000247e-05, 6.501400000000213e-05, 6.512499999999921e-05, 6.565300000000579e-05, 6.531900000000118e-05, 6.530500000000161e-05, 6.537499999999946e-05, 6.593099999999824e-05, 6.579200000000202e-05, 6.551399999999569e-05, 6.587499999999996e-05, 6.523700000000271e-05, 6.565299999999885e-05, 6.524999999999587e-05, 6.547199999999698e-05, 6.582000000000116e-05, 6.600000000000356e-05, 6.529100000000204e-05, 6.550000000000306e-05, 6.548600000000349e-05, 6.545799999999741e-05, 6.5277999999995e-05, 6.550000000000306e-05, 6.545800000000435e-05, 6.570799999999766e-05, 6.526399999999544e-05, 6.582000000000116e-05, 6.511099999999964e-05, 6.593099999999824e-05, 6.588899999999953e-05, 6.5277999999995e-05, 6.545800000000435e-05, 6.591699999999867e-05, 6.574999999999637e-05, 6.502700000000222e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:43:32.029" endtime="20201117 14:43:32.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.023" endtime="20201117 14:43:32.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.035" endtime="20201117 14:43:32.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:32.039" endtime="20201117 14:43:32.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.037" endtime="20201117 14:43:32.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.033" endtime="20201117 14:43:32.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.584" endtime="20201117 14:43:32.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.993" endtime="20201117 14:43:32.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.992" endtime="20201117 14:43:32.061"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.063" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.074" endtime="20201117 14:43:32.092"></status>
</kw>
<msg timestamp="20201117 14:43:32.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.072" endtime="20201117 14:43:32.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.093" endtime="20201117 14:43:32.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.096" endtime="20201117 14:43:32.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.069" endtime="20201117 14:43:32.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.066" endtime="20201117 14:43:32.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.108" endtime="20201117 14:43:32.393"></status>
</kw>
<msg timestamp="20201117 14:43:32.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027641208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027707556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.106" endtime="20201117 14:43:32.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027641208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027707556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.398" endtime="20201117 14:43:32.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.407" endtime="20201117 14:43:32.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.103" endtime="20201117 14:43:32.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.101" endtime="20201117 14:43:32.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:32.416" level="INFO">${RESULT} = [{'time': 0.027707556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.63480000000008e-05, 'source_diff': 6.63480000000008e-05}, {'time': 0.027786583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:32.411" endtime="20201117 14:43:32.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:32.430" level="INFO">${ACCURACY} = {'source_diff': [6.63480000000008e-05, 6.633300000000175e-05, 6.69160000000002e-05, 6.655499999999939e-05, 6.625000000000034e-05, 6.606899999999846e-05, 6.684699999999835e-05, 6.656900000000243e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:43:32.417" endtime="20201117 14:43:32.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.435" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:43:32.434" endtime="20201117 14:43:32.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.438" level="INFO">VALUE: [6.63480000000008e-05, 6.633300000000175e-05, 6.69160000000002e-05, 6.655499999999939e-05, 6.625000000000034e-05, 6.606899999999846e-05, 6.684699999999835e-05, 6.656900000000243e-05, 6.687500000000096e-05, 6.666699999999942e-05, 6.69030000000001e-05, 6.616699999999892e-05, 6.648600000000102e-05, 6.666699999999942e-05, 6.637500000000046e-05, 6.670799999999866e-05, 6.694399999999934e-05, 6.631899999999871e-05, 6.687500000000096e-05, 6.697199999999848e-05, 6.681900000000268e-05, 6.656899999999896e-05, 6.673600000000127e-05, 6.65969999999981e-05, 6.620799999999816e-05, 6.643099999999874e-05, 6.615299999999935e-05, 6.612500000000021e-05, 6.680599999999912e-05, 6.652799999999973e-05, 6.611200000000012e-05, 6.658299999999853e-05, 6.686100000000139e-05, 6.60969999999976e-05, 6.60969999999976e-05, 6.680499999999964e-05, 6.602799999999923e-05, 6.638900000000003e-05, 6.613899999999978e-05, 6.669399999999909e-05, 6.625000000000034e-05, 6.69030000000001e-05, 6.694500000000228e-05, 6.683399999999826e-05, 6.636100000000089e-05, 6.609799999999708e-05, 6.608299999999803e-05, 6.651300000000415e-05, 6.616599999999945e-05, 6.694399999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:43:32.436" endtime="20201117 14:43:32.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.431" endtime="20201117 14:43:32.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.442" endtime="20201117 14:43:32.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:32.446" endtime="20201117 14:43:32.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.444" endtime="20201117 14:43:32.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.440" endtime="20201117 14:43:32.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.064" endtime="20201117 14:43:32.468"></status>
</kw>
<msg timestamp="20201117 14:43:32.468" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.478" endtime="20201117 14:43:32.497"></status>
</kw>
<msg timestamp="20201117 14:43:32.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.477" endtime="20201117 14:43:32.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.499" endtime="20201117 14:43:32.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.502" endtime="20201117 14:43:32.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.473" endtime="20201117 14:43:32.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.470" endtime="20201117 14:43:32.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.514" endtime="20201117 14:43:32.855"></status>
</kw>
<msg timestamp="20201117 14:43:32.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025266056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.512" endtime="20201117 14:43:32.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025266056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.865" endtime="20201117 14:43:32.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.886" endtime="20201117 14:43:32.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.509" endtime="20201117 14:43:32.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.506" endtime="20201117 14:43:32.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:32.909" level="INFO">${RESULT} = [{'time': 0.025332569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.651300000000068e-05, 'source_diff': 6.651300000000068e-05}, {'time': 0.025410569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:32.899" endtime="20201117 14:43:32.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:32.941" level="INFO">${ACCURACY} = {'source_diff': [6.651300000000068e-05, 6.637500000000046e-05, 6.647199999999798e-05, 6.648599999999755e-05, 6.663900000000028e-05, 6.658299999999853e-05, 6.631899999999871e-05, 6.691699999999967e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:32.911" endtime="20201117 14:43:32.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.953" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:43:32.950" endtime="20201117 14:43:32.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.959" level="INFO">VALUE: [6.651300000000068e-05, 6.637500000000046e-05, 6.647199999999798e-05, 6.648599999999755e-05, 6.663900000000028e-05, 6.658299999999853e-05, 6.631899999999871e-05, 6.691699999999967e-05, 6.692999999999977e-05, 6.669400000000256e-05, 6.679199999999955e-05, 6.602799999999923e-05, 6.665299999999985e-05, 6.615199999999988e-05, 6.615300000000282e-05, 6.675000000000084e-05, 6.698700000000099e-05, 6.637500000000046e-05, 6.683299999999878e-05, 6.620799999999816e-05, 6.694399999999934e-05, 6.645800000000188e-05, 6.686100000000139e-05, 6.62359999999973e-05, 6.679199999999955e-05, 6.644499999999831e-05, 6.60419999999988e-05, 6.606999999999794e-05, 6.688900000000053e-05, 6.679199999999955e-05, 6.694500000000228e-05, 6.684700000000182e-05, 6.633299999999828e-05, 6.634699999999785e-05, 6.620800000000163e-05, 6.669400000000256e-05, 6.651400000000016e-05, 6.694400000000281e-05, 6.637500000000046e-05, 6.654200000000277e-05, 6.665200000000038e-05, 6.676399999999694e-05, 6.69030000000001e-05, 6.656999999999844e-05, 6.661100000000114e-05, 6.62229999999972e-05, 6.62639999999999e-05, 6.698700000000099e-05, 6.668000000000299e-05, 6.676300000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:43:32.955" endtime="20201117 14:43:32.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.943" endtime="20201117 14:43:32.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.968" endtime="20201117 14:43:32.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:32.977" endtime="20201117 14:43:32.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.972" endtime="20201117 14:43:33.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.963" endtime="20201117 14:43:33.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.469" endtime="20201117 14:43:33.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.062" endtime="20201117 14:43:33.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.061" endtime="20201117 14:43:33.005"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.010" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.033" endtime="20201117 14:43:33.055"></status>
</kw>
<msg timestamp="20201117 14:43:33.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.029" endtime="20201117 14:43:33.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.059" endtime="20201117 14:43:33.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.065" endtime="20201117 14:43:33.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.022" endtime="20201117 14:43:33.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.016" endtime="20201117 14:43:33.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.092" endtime="20201117 14:43:33.453"></status>
</kw>
<msg timestamp="20201117 14:43:33.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049629542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049697042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.088" endtime="20201117 14:43:33.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049629542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049697042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.464" endtime="20201117 14:43:33.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.484" endtime="20201117 14:43:33.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.079" endtime="20201117 14:43:33.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.074" endtime="20201117 14:43:33.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:33.502" level="INFO">${RESULT} = [{'time': 0.049697042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-05, 'source_diff': 6.749999999999812e-05}, {'time': 0.049774, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:33.493" endtime="20201117 14:43:33.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:33.535" level="INFO">${ACCURACY} = {'source_diff': [6.749999999999812e-05, 6.702799999999676e-05, 6.779200000000402e-05, 6.744499999999931e-05, 6.783399999999579e-05, 6.74030000000006e-05, 6.777799999999751e-05, 6.704199999999633e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:33.505" endtime="20201117 14:43:33.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.547" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:43:33.544" endtime="20201117 14:43:33.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.552" level="INFO">VALUE: [6.749999999999812e-05, 6.702799999999676e-05, 6.779200000000402e-05, 6.744499999999931e-05, 6.783399999999579e-05, 6.74030000000006e-05, 6.777799999999751e-05, 6.704199999999633e-05, 6.790299999999416e-05, 6.726399999999744e-05, 6.726400000000438e-05, 6.730499999999667e-05, 6.750000000000506e-05, 6.798599999999905e-05, 6.72359999999983e-05, 6.749999999999812e-05, 6.765300000000085e-05, 6.793100000000024e-05, 6.748600000000549e-05, 6.765300000000085e-05, 6.711100000000164e-05, 6.782000000000316e-05, 6.779200000000402e-05, 6.794499999999981e-05, 6.756899999999649e-05, 6.766600000000095e-05, 6.70830000000025e-05, 6.704100000000379e-05, 6.727799999999701e-05, 6.777799999999751e-05, 6.723600000000524e-05, 6.751400000000463e-05, 6.737500000000146e-05, 6.70700000000024e-05, 6.704200000000327e-05, 6.713900000000078e-05, 6.78480000000023e-05, 6.791700000000067e-05, 6.762500000000171e-05, 6.762500000000171e-05, 6.754099999999735e-05, 6.783300000000325e-05, 6.744399999999984e-05, 6.744499999999931e-05, 6.70830000000025e-05, 6.722199999999873e-05, 6.758400000000248e-05, 6.794499999999981e-05, 6.784700000000282e-05, 6.772200000000617e-05]</msg>
<status status="PASS" starttime="20201117 14:43:33.549" endtime="20201117 14:43:33.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.537" endtime="20201117 14:43:33.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.562" endtime="20201117 14:43:33.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:33.571" endtime="20201117 14:43:33.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.566" endtime="20201117 14:43:33.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.557" endtime="20201117 14:43:33.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.011" endtime="20201117 14:43:33.597"></status>
</kw>
<msg timestamp="20201117 14:43:33.597" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.620" endtime="20201117 14:43:33.642"></status>
</kw>
<msg timestamp="20201117 14:43:33.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.617" endtime="20201117 14:43:33.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.645" endtime="20201117 14:43:33.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.653" endtime="20201117 14:43:33.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.609" endtime="20201117 14:43:33.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.603" endtime="20201117 14:43:33.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.680" endtime="20201117 14:43:34.055"></status>
</kw>
<msg timestamp="20201117 14:43:34.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043756889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:33.677" endtime="20201117 14:43:34.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043756889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:34.065" endtime="20201117 14:43:34.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.086" endtime="20201117 14:43:34.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.669" endtime="20201117 14:43:34.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.664" endtime="20201117 14:43:34.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:34.107" level="INFO">${RESULT} = [{'time': 0.043756889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.788900000000153e-05, 'source_diff': 6.788900000000153e-05}, {'time': 0.043832903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:34.097" endtime="20201117 14:43:34.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:34.139" level="INFO">${ACCURACY} = {'source_diff': [6.788900000000153e-05, 6.72359999999983e-05, 6.794499999999981e-05, 6.73480000000018e-05, 6.791700000000067e-05, 6.72909999999971e-05, 6.716600000000045e-05, 6.769400000000009e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:43:34.109" endtime="20201117 14:43:34.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.151" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:43:34.148" endtime="20201117 14:43:34.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.157" level="INFO">VALUE: [6.788900000000153e-05, 6.72359999999983e-05, 6.794499999999981e-05, 6.73480000000018e-05, 6.791700000000067e-05, 6.72909999999971e-05, 6.716600000000045e-05, 6.769400000000009e-05, 6.737500000000146e-05, 6.777700000000497e-05, 6.781899999999674e-05, 6.734700000000232e-05, 6.791700000000067e-05, 6.709700000000207e-05, 6.765300000000085e-05, 6.76109999999952e-05, 6.77500000000053e-05, 6.77359999999988e-05, 6.756999999999597e-05, 6.744399999999984e-05, 6.719499999999906e-05, 6.723700000000471e-05, 6.756899999999649e-05, 6.766600000000095e-05, 6.745799999999941e-05, 6.748600000000549e-05, 6.794400000000034e-05, 6.786100000000239e-05, 6.779199999999708e-05, 6.752799999999726e-05, 6.724999999999787e-05, 6.776399999999794e-05, 6.749999999999812e-05, 6.770799999999966e-05, 6.743099999999974e-05, 6.793000000000077e-05, 6.720799999999916e-05, 6.70830000000025e-05, 6.795799999999991e-05, 6.786100000000239e-05, 6.769400000000009e-05, 6.794400000000034e-05, 6.715300000000035e-05, 6.715300000000035e-05, 6.706899999999599e-05, 6.783400000000273e-05, 6.747300000000539e-05, 6.70559999999959e-05, 6.761100000000214e-05, 6.770899999999913e-05]</msg>
<status status="PASS" starttime="20201117 14:43:34.153" endtime="20201117 14:43:34.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.141" endtime="20201117 14:43:34.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.166" endtime="20201117 14:43:34.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:34.175" endtime="20201117 14:43:34.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.170" endtime="20201117 14:43:34.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.161" endtime="20201117 14:43:34.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.599" endtime="20201117 14:43:34.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.007" endtime="20201117 14:43:34.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.005" endtime="20201117 14:43:34.202"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.208" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.232" endtime="20201117 14:43:34.253"></status>
</kw>
<msg timestamp="20201117 14:43:34.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.228" endtime="20201117 14:43:34.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.257" endtime="20201117 14:43:34.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.264" endtime="20201117 14:43:34.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.220" endtime="20201117 14:43:34.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.214" endtime="20201117 14:43:34.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.289" endtime="20201117 14:43:34.653"></status>
</kw>
<msg timestamp="20201117 14:43:34.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050309597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050377806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.286" endtime="20201117 14:43:34.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050309597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050377806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.663" endtime="20201117 14:43:34.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.684" endtime="20201117 14:43:34.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.278" endtime="20201117 14:43:34.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.273" endtime="20201117 14:43:34.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:34.705" level="INFO">${RESULT} = [{'time': 0.050377806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820899999999963e-05, 'source_diff': 6.820899999999963e-05}, {'time': 0.050455819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:34.695" endtime="20201117 14:43:34.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:34.738" level="INFO">${ACCURACY} = {'source_diff': [6.820899999999963e-05, 6.845800000000041e-05, 6.848599999999955e-05, 6.844400000000084e-05, 6.819399999999365e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.812500000000221e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:34.707" endtime="20201117 14:43:34.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.750" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:43:34.747" endtime="20201117 14:43:34.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.755" level="INFO">VALUE: [6.820899999999963e-05, 6.845800000000041e-05, 6.848599999999955e-05, 6.844400000000084e-05, 6.819399999999365e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.812500000000221e-05, 6.834699999999638e-05, 6.824999999999887e-05, 6.858399999999654e-05, 6.847199999999998e-05, 6.824999999999887e-05, 6.80830000000035e-05, 6.811200000000212e-05, 6.823699999999877e-05, 6.80830000000035e-05, 6.845800000000041e-05, 6.868100000000099e-05, 6.80830000000035e-05, 6.811100000000264e-05, 6.851399999999869e-05, 6.848599999999955e-05, 6.898600000000005e-05, 6.831900000000418e-05, 6.905499999999842e-05, 6.81109999999957e-05, 6.80700000000034e-05, 6.813900000000178e-05, 6.861100000000314e-05, 6.856999999999697e-05, 6.819500000000006e-05, 6.881900000000468e-05, 6.813900000000178e-05, 6.881899999999774e-05, 6.877799999999851e-05, 6.845800000000041e-05, 6.827800000000495e-05, 6.812500000000221e-05, 6.905499999999842e-05, 6.868100000000099e-05, 6.804199999999733e-05, 6.894400000000134e-05, 6.84030000000016e-05, 6.862499999999577e-05, 6.816700000000092e-05, 6.881999999999722e-05, 6.888800000000306e-05, 6.883300000000425e-05, 6.838900000000203e-05]</msg>
<status status="PASS" starttime="20201117 14:43:34.752" endtime="20201117 14:43:34.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.740" endtime="20201117 14:43:34.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.765" endtime="20201117 14:43:34.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:34.774" endtime="20201117 14:43:34.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.769" endtime="20201117 14:43:34.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.760" endtime="20201117 14:43:34.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.209" endtime="20201117 14:43:34.802"></status>
</kw>
<msg timestamp="20201117 14:43:34.803" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.826" endtime="20201117 14:43:34.848"></status>
</kw>
<msg timestamp="20201117 14:43:34.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.823" endtime="20201117 14:43:34.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.852" endtime="20201117 14:43:34.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.858" endtime="20201117 14:43:34.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.815" endtime="20201117 14:43:34.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.809" endtime="20201117 14:43:34.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.884" endtime="20201117 14:43:35.249"></status>
</kw>
<msg timestamp="20201117 14:43:35.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045950653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.880" endtime="20201117 14:43:35.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045950653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.259" endtime="20201117 14:43:35.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.279" endtime="20201117 14:43:35.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.872" endtime="20201117 14:43:35.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.867" endtime="20201117 14:43:35.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:35.302" level="INFO">${RESULT} = [{'time': 0.045950653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.858400000000348e-05, 'source_diff': 6.858400000000348e-05}, {'time': 0.046022653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:35.292" endtime="20201117 14:43:35.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:35.334" level="INFO">${ACCURACY} = {'source_diff': [6.858400000000348e-05, 6.808399999999604e-05, 6.888899999999559e-05, 6.818100000000049e-05, 6.829199999999758e-05, 6.827799999999801e-05, 6.847199999999998e-05, 6.890199999999569e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:35.304" endtime="20201117 14:43:35.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.346" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:43:35.343" endtime="20201117 14:43:35.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.352" level="INFO">VALUE: [6.858400000000348e-05, 6.808399999999604e-05, 6.888899999999559e-05, 6.818100000000049e-05, 6.829199999999758e-05, 6.827799999999801e-05, 6.847199999999998e-05, 6.890199999999569e-05, 6.819400000000059e-05, 6.862500000000271e-05, 6.804099999999785e-05, 6.80830000000035e-05, 6.842999999999433e-05, 6.854200000000477e-05, 6.847199999999998e-05, 6.869500000000056e-05, 6.829199999999758e-05, 6.86109999999962e-05, 6.861100000000314e-05, 6.845899999999988e-05, 6.809699999999613e-05, 6.895799999999397e-05, 6.815300000000135e-05, 6.887500000000296e-05, 6.886100000000339e-05, 6.881899999999774e-05, 6.874999999999937e-05, 6.827799999999801e-05, 6.865200000000238e-05, 6.886100000000339e-05, 6.804200000000427e-05, 6.830600000000409e-05, 6.833399999999629e-05, 6.870900000000013e-05, 6.894500000000081e-05, 6.820899999999963e-05, 6.82909999999981e-05, 6.898600000000005e-05, 6.883299999999731e-05, 6.852799999999826e-05, 6.812499999999527e-05, 6.869500000000056e-05, 6.819400000000059e-05, 6.856900000000443e-05, 6.87359999999998e-05, 6.897200000000048e-05, 6.838899999999509e-05, 6.831999999999672e-05, 6.886099999999645e-05, 6.870900000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:43:35.348" endtime="20201117 14:43:35.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.336" endtime="20201117 14:43:35.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.368" endtime="20201117 14:43:35.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:35.377" endtime="20201117 14:43:35.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.372" endtime="20201117 14:43:35.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.356" endtime="20201117 14:43:35.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.804" endtime="20201117 14:43:35.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.205" endtime="20201117 14:43:35.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.203" endtime="20201117 14:43:35.404"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.410" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.432" endtime="20201117 14:43:35.455"></status>
</kw>
<msg timestamp="20201117 14:43:35.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.429" endtime="20201117 14:43:35.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.458" endtime="20201117 14:43:35.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.465" endtime="20201117 14:43:35.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.421" endtime="20201117 14:43:35.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.415" endtime="20201117 14:43:35.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.490" endtime="20201117 14:43:35.846"></status>
</kw>
<msg timestamp="20201117 14:43:35.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049473153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049543042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.486" endtime="20201117 14:43:35.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049473153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049543042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.850" endtime="20201117 14:43:35.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.859" endtime="20201117 14:43:35.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.478" endtime="20201117 14:43:35.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.473" endtime="20201117 14:43:35.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:35.868" level="INFO">${RESULT} = [{'time': 0.049543042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.988900000000353e-05, 'source_diff': 6.988900000000353e-05}, {'time': 0.049625042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:35.863" endtime="20201117 14:43:35.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:35.882" level="INFO">${ACCURACY} = {'source_diff': [6.988900000000353e-05, 6.993100000000224e-05, 6.937500000000346e-05, 6.937500000000346e-05, 6.986100000000439e-05, 6.956899999999849e-05, 6.975000000000037e-05, 6.97360000000008e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:35.869" endtime="20201117 14:43:35.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.887" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:43:35.886" endtime="20201117 14:43:35.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.890" level="INFO">VALUE: [6.988900000000353e-05, 6.993100000000224e-05, 6.937500000000346e-05, 6.937500000000346e-05, 6.986100000000439e-05, 6.956899999999849e-05, 6.975000000000037e-05, 6.97360000000008e-05, 6.927799999999901e-05, 6.965300000000285e-05, 6.998600000000105e-05, 6.924999999999987e-05, 6.998600000000105e-05, 6.993100000000224e-05, 6.916700000000192e-05, 6.961100000000414e-05, 6.916700000000192e-05, 6.911100000000364e-05, 6.924999999999987e-05, 6.970800000000166e-05, 6.902699999999928e-05, 6.920800000000116e-05, 6.96109999999972e-05, 6.902799999999876e-05, 6.977799999999951e-05, 6.988899999999659e-05, 6.997200000000148e-05, 6.91109999999967e-05, 6.913900000000278e-05, 6.988900000000353e-05, 6.918100000000149e-05, 6.983400000000473e-05, 6.927799999999901e-05, 6.933299999999781e-05, 6.97909999999996e-05, 6.917999999999508e-05, 6.954099999999935e-05, 6.926399999999944e-05, 6.926399999999944e-05, 6.919400000000159e-05, 6.902799999999876e-05, 6.968100000000199e-05, 6.972200000000123e-05, 6.931999999999772e-05, 6.995900000000138e-05, 6.998600000000105e-05, 6.94030000000026e-05, 6.950000000000012e-05, 6.96109999999972e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201117 14:43:35.888" endtime="20201117 14:43:35.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.883" endtime="20201117 14:43:35.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.895" endtime="20201117 14:43:35.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:35.899" endtime="20201117 14:43:35.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.897" endtime="20201117 14:43:35.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.892" endtime="20201117 14:43:35.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.411" endtime="20201117 14:43:35.920"></status>
</kw>
<msg timestamp="20201117 14:43:35.920" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.933" endtime="20201117 14:43:35.955"></status>
</kw>
<msg timestamp="20201117 14:43:35.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.930" endtime="20201117 14:43:35.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.959" endtime="20201117 14:43:35.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.965" endtime="20201117 14:43:35.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.926" endtime="20201117 14:43:35.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.923" endtime="20201117 14:43:35.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.990" endtime="20201117 14:43:36.353"></status>
</kw>
<msg timestamp="20201117 14:43:36.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028494708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028564444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.987" endtime="20201117 14:43:36.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028494708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028564444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.363" endtime="20201117 14:43:36.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.383" endtime="20201117 14:43:36.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.979" endtime="20201117 14:43:36.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.974" endtime="20201117 14:43:36.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:36.403" level="INFO">${RESULT} = [{'time': 0.028564444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.97360000000008e-05, 'source_diff': 6.97360000000008e-05}, {'time': 0.028643486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:36.394" endtime="20201117 14:43:36.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:36.436" level="INFO">${ACCURACY} = {'source_diff': [6.97360000000008e-05, 6.905499999999842e-05, 6.927799999999901e-05, 6.981899999999874e-05, 7.001400000000019e-05, 6.979199999999908e-05, 6.919399999999812e-05, 6.957000000000144e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:36.406" endtime="20201117 14:43:36.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.448" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:43:36.445" endtime="20201117 14:43:36.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.454" level="INFO">VALUE: [6.97360000000008e-05, 6.905499999999842e-05, 6.927799999999901e-05, 6.981899999999874e-05, 7.001400000000019e-05, 6.979199999999908e-05, 6.919399999999812e-05, 6.957000000000144e-05, 6.990299999999963e-05, 6.933399999999729e-05, 6.970900000000113e-05, 6.92230000000002e-05, 6.952799999999926e-05, 6.958300000000153e-05, 6.956900000000196e-05, 6.908299999999756e-05, 6.938900000000303e-05, 6.902799999999876e-05, 6.94169999999987e-05, 6.908299999999756e-05, 6.929199999999858e-05, 7.001400000000019e-05, 6.947200000000098e-05, 6.966700000000242e-05, 6.941700000000217e-05, 6.901399999999919e-05, 6.923699999999977e-05, 6.927799999999901e-05, 6.950000000000012e-05, 6.931900000000171e-05, 6.931899999999824e-05, 6.972200000000123e-05, 6.986099999999745e-05, 6.97360000000008e-05, 6.956999999999797e-05, 6.965300000000285e-05, 6.984699999999788e-05, 6.945900000000088e-05, 6.916600000000245e-05, 6.912499999999627e-05, 6.929100000000604e-05, 6.924999999999987e-05, 6.967999999999558e-05, 6.941599999999576e-05, 6.909699999999713e-05, 6.962500000000371e-05, 6.916600000000245e-05, 6.933400000000423e-05, 6.91109999999967e-05, 6.950000000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:43:36.450" endtime="20201117 14:43:36.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.438" endtime="20201117 14:43:36.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.464" endtime="20201117 14:43:36.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:36.473" endtime="20201117 14:43:36.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.468" endtime="20201117 14:43:36.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.459" endtime="20201117 14:43:36.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.921" endtime="20201117 14:43:36.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.407" endtime="20201117 14:43:36.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.405" endtime="20201117 14:43:36.500"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.506" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.529" endtime="20201117 14:43:36.550"></status>
</kw>
<msg timestamp="20201117 14:43:36.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.525" endtime="20201117 14:43:36.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.554" endtime="20201117 14:43:36.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.561" endtime="20201117 14:43:36.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.517" endtime="20201117 14:43:36.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.511" endtime="20201117 14:43:36.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.586" endtime="20201117 14:43:36.950"></status>
</kw>
<msg timestamp="20201117 14:43:36.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049724417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.582" endtime="20201117 14:43:36.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049724417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.961" endtime="20201117 14:43:36.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.981" endtime="20201117 14:43:36.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.574" endtime="20201117 14:43:36.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.569" endtime="20201117 14:43:36.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:36.999" level="INFO">${RESULT} = [{'time': 0.049794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038899999999709e-05, 'source_diff': 7.038899999999709e-05}, {'time': 0.049871806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:36.990" endtime="20201117 14:43:37.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:37.032" level="INFO">${ACCURACY} = {'source_diff': [7.038899999999709e-05, 7.05559999999994e-05, 7.01109999999977e-05, 7.095800000000291e-05, 7.023599999999436e-05, 7.068000000000352e-05, 7.069400000000309e-05, 7.077800000000051e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:43:37.002" endtime="20201117 14:43:37.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.044" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:43:37.041" endtime="20201117 14:43:37.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.050" level="INFO">VALUE: [7.038899999999709e-05, 7.05559999999994e-05, 7.01109999999977e-05, 7.095800000000291e-05, 7.023599999999436e-05, 7.068000000000352e-05, 7.069400000000309e-05, 7.077800000000051e-05, 7.037499999999752e-05, 7.030599999999915e-05, 7.019500000000206e-05, 7.02360000000013e-05, 7.095900000000238e-05, 7.037500000000446e-05, 7.070900000000213e-05, 7.013800000000431e-05, 7.018000000000302e-05, 7.066600000000395e-05, 7.04160000000037e-05, 7.036099999999795e-05, 7.012499999999727e-05, 7.067999999999658e-05, 7.002799999999976e-05, 7.051400000000069e-05, 7.069400000000309e-05, 7.05689999999995e-05, 7.033399999999829e-05, 7.094499999999587e-05, 7.095899999999544e-05, 7.079200000000008e-05, 7.031899999999924e-05, 7.084700000000582e-05, 7.088899999999759e-05, 7.077800000000051e-05, 7.09439999999964e-05, 7.092999999999683e-05, 7.02360000000013e-05, 7.051400000000069e-05, 7.038899999999709e-05, 7.001399999999325e-05, 7.07910000000006e-05, 7.091699999999673e-05, 7.081999999999922e-05, 7.019500000000206e-05, 7.095899999999544e-05, 7.090299999999716e-05, 7.044400000000284e-05, 7.050000000000112e-05, 7.104200000000033e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201117 14:43:37.046" endtime="20201117 14:43:37.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.034" endtime="20201117 14:43:37.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.060" endtime="20201117 14:43:37.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:37.068" endtime="20201117 14:43:37.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.064" endtime="20201117 14:43:37.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.055" endtime="20201117 14:43:37.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.507" endtime="20201117 14:43:37.095"></status>
</kw>
<msg timestamp="20201117 14:43:37.095" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.118" endtime="20201117 14:43:37.141"></status>
</kw>
<msg timestamp="20201117 14:43:37.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.115" endtime="20201117 14:43:37.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.144" endtime="20201117 14:43:37.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.151" endtime="20201117 14:43:37.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.107" endtime="20201117 14:43:37.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.101" endtime="20201117 14:43:37.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.176" endtime="20201117 14:43:37.535"></status>
</kw>
<msg timestamp="20201117 14:43:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043596181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043666806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.172" endtime="20201117 14:43:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043596181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043666806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.545" endtime="20201117 14:43:37.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.565" endtime="20201117 14:43:37.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.165" endtime="20201117 14:43:37.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.160" endtime="20201117 14:43:37.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:37.587" level="INFO">${RESULT} = [{'time': 0.043666806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.062500000000471e-05, 'source_diff': 7.062500000000471e-05}, {'time': 0.043743819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:37.578" endtime="20201117 14:43:37.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:37.620" level="INFO">${ACCURACY} = {'source_diff': [7.062500000000471e-05, 7.038800000000456e-05, 7.081999999999922e-05, 7.087499999999802e-05, 7.034699999999838e-05, 7.065300000000385e-05, 7.034699999999838e-05, 7.011100000000464e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:37.590" endtime="20201117 14:43:37.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.632" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:43:37.630" endtime="20201117 14:43:37.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.638" level="INFO">VALUE: [7.062500000000471e-05, 7.038800000000456e-05, 7.081999999999922e-05, 7.087499999999802e-05, 7.034699999999838e-05, 7.065300000000385e-05, 7.034699999999838e-05, 7.011100000000464e-05, 7.05559999999994e-05, 7.018099999999555e-05, 7.019399999999565e-05, 7.031999999999872e-05, 7.052800000000026e-05, 7.044500000000231e-05, 7.02910000000001e-05, 7.079200000000008e-05, 7.082000000000616e-05, 7.097199999999554e-05, 7.045800000000241e-05, 7.069400000000309e-05, 7.090200000000463e-05, 7.077800000000051e-05, 7.054199999999983e-05, 7.034699999999838e-05, 7.04030000000036e-05, 7.091699999999673e-05, 7.063900000000428e-05, 7.045900000000188e-05, 7.05559999999994e-05, 7.07230000000017e-05, 7.069499999999562e-05, 7.037500000000446e-05, 7.054100000000035e-05, 7.088799999999812e-05, 7.075000000000137e-05, 7.020900000000163e-05, 7.098600000000205e-05, 7.044400000000284e-05, 7.063899999999734e-05, 7.040299999999666e-05, 7.080599999999965e-05, 7.026400000000044e-05, 7.008299999999856e-05, 7.091699999999673e-05, 7.001399999999325e-05, 7.050000000000112e-05, 7.083299999999931e-05, 7.020800000000216e-05, 7.087499999999802e-05, 7.058299999999906e-05]</msg>
<status status="PASS" starttime="20201117 14:43:37.635" endtime="20201117 14:43:37.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.622" endtime="20201117 14:43:37.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.647" endtime="20201117 14:43:37.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:37.656" endtime="20201117 14:43:37.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.652" endtime="20201117 14:43:37.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.643" endtime="20201117 14:43:37.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.097" endtime="20201117 14:43:37.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.503" endtime="20201117 14:43:37.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.501" endtime="20201117 14:43:37.683"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.689" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.712" endtime="20201117 14:43:37.734"></status>
</kw>
<msg timestamp="20201117 14:43:37.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.709" endtime="20201117 14:43:37.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.738" endtime="20201117 14:43:37.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.744" endtime="20201117 14:43:37.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.701" endtime="20201117 14:43:37.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.695" endtime="20201117 14:43:37.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.769" endtime="20201117 14:43:38.129"></status>
</kw>
<msg timestamp="20201117 14:43:38.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049926319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049997958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.766" endtime="20201117 14:43:38.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049926319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049997958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.140" endtime="20201117 14:43:38.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.159" endtime="20201117 14:43:38.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.758" endtime="20201117 14:43:38.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.753" endtime="20201117 14:43:38.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:38.179" level="INFO">${RESULT} = [{'time': 0.049997958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.163900000000528e-05, 'source_diff': 7.163900000000528e-05}, {'time': 0.050071972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:38.169" endtime="20201117 14:43:38.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:38.211" level="INFO">${ACCURACY} = {'source_diff': [7.163900000000528e-05, 7.11109999999987e-05, 7.1069e-05, 7.102800000000076e-05, 7.116699999999698e-05, 7.158399999999954e-05, 7.162499999999877e-05, 7.116699999999698e-05, 7.111099999...</msg>
<status status="PASS" starttime="20201117 14:43:38.181" endtime="20201117 14:43:38.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.223" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:43:38.221" endtime="20201117 14:43:38.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.229" level="INFO">VALUE: [7.163900000000528e-05, 7.11109999999987e-05, 7.1069e-05, 7.102800000000076e-05, 7.116699999999698e-05, 7.158399999999954e-05, 7.162499999999877e-05, 7.116699999999698e-05, 7.11109999999987e-05, 7.113899999999784e-05, 7.106999999999947e-05, 7.137499999999852e-05, 7.155500000000092e-05, 7.136099999999895e-05, 7.154100000000135e-05, 7.183300000000031e-05, 7.112499999999827e-05, 7.176400000000194e-05, 7.129200000000058e-05, 7.148600000000255e-05, 7.198600000000305e-05, 7.101400000000119e-05, 7.16109999999992e-05, 7.170899999999619e-05, 7.158399999999954e-05, 7.133400000000623e-05, 7.188899999999859e-05, 7.169399999999715e-05, 7.17360000000028e-05, 7.17769999999951e-05, 7.188900000000553e-05, 7.148599999999561e-05, 7.131900000000024e-05, 7.175000000000237e-05, 7.104200000000033e-05, 7.126400000000144e-05, 7.104200000000033e-05, 7.126400000000144e-05, 7.138899999999809e-05, 7.169500000000356e-05, 7.111199999999818e-05, 7.194400000000434e-05, 7.184699999999988e-05, 7.191599999999826e-05, 7.127800000000101e-05, 7.166699999999748e-05, 7.150000000000212e-05, 7.097199999999554e-05, 7.131900000000024e-05, 7.122200000000273e-05]</msg>
<status status="PASS" starttime="20201117 14:43:38.226" endtime="20201117 14:43:38.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.213" endtime="20201117 14:43:38.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.238" endtime="20201117 14:43:38.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:38.247" endtime="20201117 14:43:38.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.242" endtime="20201117 14:43:38.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.233" endtime="20201117 14:43:38.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.690" endtime="20201117 14:43:38.273"></status>
</kw>
<msg timestamp="20201117 14:43:38.274" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.297" endtime="20201117 14:43:38.319"></status>
</kw>
<msg timestamp="20201117 14:43:38.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.293" endtime="20201117 14:43:38.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.323" endtime="20201117 14:43:38.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.329" endtime="20201117 14:43:38.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.286" endtime="20201117 14:43:38.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.279" endtime="20201117 14:43:38.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.354" endtime="20201117 14:43:38.714"></status>
</kw>
<msg timestamp="20201117 14:43:38.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.350" endtime="20201117 14:43:38.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.724" endtime="20201117 14:43:38.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.745" endtime="20201117 14:43:38.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.343" endtime="20201117 14:43:38.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.338" endtime="20201117 14:43:38.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:38.766" level="INFO">${RESULT} = [{'time': 0.044033903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.148600000000255e-05, 'source_diff': 7.148600000000255e-05}, {'time': 0.044107931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:38.756" endtime="20201117 14:43:38.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:38.798" level="INFO">${ACCURACY} = {'source_diff': [7.148600000000255e-05, 7.15560000000004e-05, 7.186099999999945e-05, 7.152800000000126e-05, 7.14439999999969e-05, 7.112499999999827e-05, 7.119399999999665e-05, 7.199999999999568e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:43:38.768" endtime="20201117 14:43:38.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.810" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:43:38.807" endtime="20201117 14:43:38.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.816" level="INFO">VALUE: [7.148600000000255e-05, 7.15560000000004e-05, 7.186099999999945e-05, 7.152800000000126e-05, 7.14439999999969e-05, 7.112499999999827e-05, 7.119399999999665e-05, 7.199999999999568e-05, 7.102800000000076e-05, 7.192999999999783e-05, 7.195800000000391e-05, 7.144400000000384e-05, 7.166699999999748e-05, 7.179199999999414e-05, 7.148599999999561e-05, 7.170799999999672e-05, 7.193000000000477e-05, 7.154099999999441e-05, 7.108299999999956e-05, 7.187499999999902e-05, 7.150000000000212e-05, 7.147299999999551e-05, 7.142999999999733e-05, 7.145799999999647e-05, 7.133299999999981e-05, 7.15560000000004e-05, 7.195800000000391e-05, 7.182000000000022e-05, 7.115299999999741e-05, 7.194500000000381e-05, 7.169499999999662e-05, 7.183399999999979e-05, 7.191599999999826e-05, 7.181900000000074e-05, 7.11109999999987e-05, 7.105500000000042e-05, 7.169399999999715e-05, 7.12360000000023e-05, 7.190299999999816e-05, 7.108299999999956e-05, 7.118099999999655e-05, 7.17360000000028e-05, 7.200000000000262e-05, 7.19309999999973e-05, 7.168099999999705e-05, 7.184699999999988e-05, 7.12360000000023e-05, 7.112500000000521e-05, 7.151400000000169e-05, 7.180500000000117e-05]</msg>
<status status="PASS" starttime="20201117 14:43:38.812" endtime="20201117 14:43:38.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.800" endtime="20201117 14:43:38.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.825" endtime="20201117 14:43:38.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:38.834" endtime="20201117 14:43:38.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.829" endtime="20201117 14:43:38.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.820" endtime="20201117 14:43:38.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.275" endtime="20201117 14:43:38.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.686" endtime="20201117 14:43:38.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.684" endtime="20201117 14:43:38.861"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.867" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.890" endtime="20201117 14:43:38.912"></status>
</kw>
<msg timestamp="20201117 14:43:38.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.886" endtime="20201117 14:43:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.915" endtime="20201117 14:43:38.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.922" endtime="20201117 14:43:38.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.879" endtime="20201117 14:43:38.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.872" endtime="20201117 14:43:38.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.949" endtime="20201117 14:43:39.300"></status>
</kw>
<msg timestamp="20201117 14:43:39.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049574, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:38.946" endtime="20201117 14:43:39.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049574, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:39.305" endtime="20201117 14:43:39.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.313" endtime="20201117 14:43:39.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.937" endtime="20201117 14:43:39.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.932" endtime="20201117 14:43:39.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:39.322" level="INFO">${RESULT} = [{'time': 0.049646472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.247199999999704e-05, 'source_diff': 7.247199999999704e-05}, {'time': 0.049731528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:39.317" endtime="20201117 14:43:39.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:39.336" level="INFO">${ACCURACY} = {'source_diff': [7.247199999999704e-05, 7.236099999999995e-05, 7.219499999999712e-05, 7.270900000000413e-05, 7.282000000000122e-05, 7.267999999999858e-05, 7.207000000000047e-05, 7.245900000000388e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:39.323" endtime="20201117 14:43:39.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.341" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:43:39.340" endtime="20201117 14:43:39.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.344" level="INFO">VALUE: [7.247199999999704e-05, 7.236099999999995e-05, 7.219499999999712e-05, 7.270900000000413e-05, 7.282000000000122e-05, 7.267999999999858e-05, 7.207000000000047e-05, 7.245900000000388e-05, 7.282000000000122e-05, 7.223700000000277e-05, 7.204100000000185e-05, 7.25690000000015e-05, 7.266599999999901e-05, 7.240299999999866e-05, 7.25560000000014e-05, 7.251399999999575e-05, 7.259700000000063e-05, 7.251399999999575e-05, 7.287500000000002e-05, 7.269499999999762e-05, 7.262499999999977e-05, 7.202800000000176e-05, 7.284800000000036e-05, 7.231900000000124e-05, 7.211199999999918e-05, 7.26110000000002e-05, 7.224999999999593e-05, 7.298599999999711e-05, 7.208300000000056e-05, 7.25560000000014e-05, 7.284700000000088e-05, 7.295799999999797e-05, 7.202800000000176e-05, 7.248600000000355e-05, 7.249999999999618e-05, 7.219499999999712e-05, 7.248600000000355e-05, 7.208400000000004e-05, 7.202800000000176e-05, 7.234700000000038e-05, 7.287500000000002e-05, 7.202700000000228e-05, 7.254100000000235e-05, 7.299999999999668e-05, 7.279200000000208e-05, 7.219400000000459e-05, 7.273599999999686e-05, 7.265300000000585e-05, 7.21109999999997e-05, 7.290299999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:43:39.343" endtime="20201117 14:43:39.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.337" endtime="20201117 14:43:39.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.348" endtime="20201117 14:43:39.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:39.352" endtime="20201117 14:43:39.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.350" endtime="20201117 14:43:39.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.346" endtime="20201117 14:43:39.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.868" endtime="20201117 14:43:39.374"></status>
</kw>
<msg timestamp="20201117 14:43:39.374" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.385" endtime="20201117 14:43:39.404"></status>
</kw>
<msg timestamp="20201117 14:43:39.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.383" endtime="20201117 14:43:39.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.405" endtime="20201117 14:43:39.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.409" endtime="20201117 14:43:39.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.379" endtime="20201117 14:43:39.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.377" endtime="20201117 14:43:39.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.420" endtime="20201117 14:43:39.707"></status>
</kw>
<msg timestamp="20201117 14:43:39.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:39.419" endtime="20201117 14:43:39.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:39.712" endtime="20201117 14:43:39.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.720" endtime="20201117 14:43:39.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.415" endtime="20201117 14:43:39.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.413" endtime="20201117 14:43:39.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:39.731" level="INFO">${RESULT} = [{'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.266699999999848e-05, 'source_diff': 7.266699999999848e-05}, {'time': 0.025459514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:39.726" endtime="20201117 14:43:39.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:39.745" level="INFO">${ACCURACY} = {'source_diff': [7.266699999999848e-05, 7.270799999999772e-05, 7.213799999999937e-05, 7.208400000000004e-05, 7.284800000000036e-05, 7.223599999999983e-05, 7.265300000000238e-05, 7.202800000000176e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:39.732" endtime="20201117 14:43:39.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.750" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:43:39.749" endtime="20201117 14:43:39.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.753" level="INFO">VALUE: [7.266699999999848e-05, 7.270799999999772e-05, 7.213799999999937e-05, 7.208400000000004e-05, 7.284800000000036e-05, 7.223599999999983e-05, 7.265300000000238e-05, 7.202800000000176e-05, 7.22910000000021e-05, 7.290199999999969e-05, 7.250000000000312e-05, 7.283300000000131e-05, 7.283299999999784e-05, 7.266700000000195e-05, 7.227799999999854e-05, 7.215300000000188e-05, 7.24170000000017e-05, 7.27499999999999e-05, 7.254200000000183e-05, 7.25699999999975e-05, 7.259800000000011e-05, 7.240300000000213e-05, 7.287500000000002e-05, 7.244400000000137e-05, 7.209700000000013e-05, 7.233300000000081e-05, 7.225000000000287e-05, 7.227800000000201e-05, 7.276399999999947e-05, 7.229199999999811e-05, 7.272199999999729e-05, 7.282000000000122e-05, 7.270800000000119e-05, 7.245900000000041e-05, 7.2069000000001e-05, 7.247199999999704e-05, 7.241599999999876e-05, 7.252700000000278e-05, 7.206899999999752e-05, 7.281900000000174e-05, 7.237500000000299e-05, 7.233300000000081e-05, 7.265300000000238e-05, 7.209700000000013e-05, 7.270800000000119e-05, 7.234700000000038e-05, 7.259800000000011e-05, 7.21109999999997e-05, 7.234699999999691e-05, 7.251399999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:43:39.751" endtime="20201117 14:43:39.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.746" endtime="20201117 14:43:39.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.757" endtime="20201117 14:43:39.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:39.761" endtime="20201117 14:43:39.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.759" endtime="20201117 14:43:39.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.755" endtime="20201117 14:43:39.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.375" endtime="20201117 14:43:39.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.864" endtime="20201117 14:43:39.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.862" endtime="20201117 14:43:39.783"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.786" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.797" endtime="20201117 14:43:39.815"></status>
</kw>
<msg timestamp="20201117 14:43:39.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.795" endtime="20201117 14:43:39.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.816" endtime="20201117 14:43:39.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.819" endtime="20201117 14:43:39.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.791" endtime="20201117 14:43:39.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.788" endtime="20201117 14:43:39.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.831" endtime="20201117 14:43:40.155"></status>
</kw>
<msg timestamp="20201117 14:43:40.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028154208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028227361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.829" endtime="20201117 14:43:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028154208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028227361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.165" endtime="20201117 14:43:40.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.185" endtime="20201117 14:43:40.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.826" endtime="20201117 14:43:40.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.824" endtime="20201117 14:43:40.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:40.204" level="INFO">${RESULT} = [{'time': 0.028227361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.315299999999941e-05, 'source_diff': 7.315299999999941e-05}, {'time': 0.028307347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:40.194" endtime="20201117 14:43:40.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:40.237" level="INFO">${ACCURACY} = {'source_diff': [7.315299999999941e-05, 7.35829999999986e-05, 7.302699999999981e-05, 7.370799999999872e-05, 7.341699999999923e-05, 7.33049999999992e-05, 7.309700000000113e-05, 7.35829999999986e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:43:40.206" endtime="20201117 14:43:40.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.249" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:43:40.246" endtime="20201117 14:43:40.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.255" level="INFO">VALUE: [7.315299999999941e-05, 7.35829999999986e-05, 7.302699999999981e-05, 7.370799999999872e-05, 7.341699999999923e-05, 7.33049999999992e-05, 7.309700000000113e-05, 7.35829999999986e-05, 7.357000000000197e-05, 7.400000000000115e-05, 7.373600000000133e-05, 7.39170000000032e-05, 7.347300000000098e-05, 7.345799999999847e-05, 7.367999999999958e-05, 7.366600000000001e-05, 7.352699999999684e-05, 7.381899999999927e-05, 7.379200000000308e-05, 7.345799999999847e-05, 7.308400000000104e-05, 7.333299999999834e-05, 7.391699999999973e-05, 7.376400000000047e-05, 7.323600000000083e-05, 7.316599999999951e-05, 7.309699999999766e-05, 7.329099999999963e-05, 7.386099999999798e-05, 7.373600000000133e-05, 7.38049999999997e-05, 7.376400000000047e-05, 7.392999999999983e-05, 7.380600000000265e-05, 7.30829999999981e-05, 7.358400000000154e-05, 7.351400000000022e-05, 7.365200000000044e-05, 7.398600000000158e-05, 7.345899999999794e-05, 7.320899999999769e-05, 7.373699999999733e-05, 7.398599999999811e-05, 7.31110000000007e-05, 7.387500000000102e-05, 7.369499999999862e-05, 7.38189999999958e-05, 7.304200000000233e-05, 7.356899999999555e-05, 7.30560000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:43:40.251" endtime="20201117 14:43:40.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.239" endtime="20201117 14:43:40.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.264" endtime="20201117 14:43:40.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:40.273" endtime="20201117 14:43:40.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.268" endtime="20201117 14:43:40.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.259" endtime="20201117 14:43:40.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.786" endtime="20201117 14:43:40.300"></status>
</kw>
<msg timestamp="20201117 14:43:40.300" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.323" endtime="20201117 14:43:40.345"></status>
</kw>
<msg timestamp="20201117 14:43:40.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.320" endtime="20201117 14:43:40.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.348" endtime="20201117 14:43:40.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.355" endtime="20201117 14:43:40.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.312" endtime="20201117 14:43:40.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.306" endtime="20201117 14:43:40.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.380" endtime="20201117 14:43:40.741"></status>
</kw>
<msg timestamp="20201117 14:43:40.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044154389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044227764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.376" endtime="20201117 14:43:40.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044154389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044227764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.751" endtime="20201117 14:43:40.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.771" endtime="20201117 14:43:40.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.369" endtime="20201117 14:43:40.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.364" endtime="20201117 14:43:40.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:40.792" level="INFO">${RESULT} = [{'time': 0.044227764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.337500000000052e-05, 'source_diff': 7.337500000000052e-05}, {'time': 0.044312792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:40.782" endtime="20201117 14:43:40.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:40.824" level="INFO">${ACCURACY} = {'source_diff': [7.337500000000052e-05, 7.316699999999898e-05, 7.313899999999984e-05, 7.352799999999632e-05, 7.395899999999844e-05, 7.336200000000043e-05, 7.352799999999632e-05, 7.354100000000335e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:40.794" endtime="20201117 14:43:40.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.836" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:43:40.833" endtime="20201117 14:43:40.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.841" level="INFO">VALUE: [7.337500000000052e-05, 7.316699999999898e-05, 7.313899999999984e-05, 7.352799999999632e-05, 7.395899999999844e-05, 7.336200000000043e-05, 7.352799999999632e-05, 7.354100000000335e-05, 7.337499999999358e-05, 7.327800000000301e-05, 7.355499999999598e-05, 7.312500000000027e-05, 7.383300000000231e-05, 7.36110000000012e-05, 7.308300000000156e-05, 7.316699999999898e-05, 7.391699999999973e-05, 7.315199999999994e-05, 7.313899999999984e-05, 7.367999999999958e-05, 7.382000000000222e-05, 7.34439999999989e-05, 7.304100000000285e-05, 7.370800000000566e-05, 7.391699999999973e-05, 7.38189999999958e-05, 7.331900000000224e-05, 7.340200000000019e-05, 7.297200000000448e-05, 7.369500000000556e-05, 7.304200000000233e-05, 7.30560000000019e-05, 7.372299999999776e-05, 7.304200000000233e-05, 7.332000000000172e-05, 7.319499999999812e-05, 7.358300000000206e-05, 7.345799999999847e-05, 7.358300000000206e-05, 7.36110000000012e-05, 7.368099999999905e-05, 7.347200000000498e-05, 7.312500000000027e-05, 7.341700000000617e-05, 7.345899999999794e-05, 7.387499999999408e-05, 7.392999999999983e-05, 7.399999999999768e-05, 7.390300000000016e-05, 7.377800000000351e-05]</msg>
<status status="PASS" starttime="20201117 14:43:40.838" endtime="20201117 14:43:40.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.826" endtime="20201117 14:43:40.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.858" endtime="20201117 14:43:40.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:40.867" endtime="20201117 14:43:40.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.862" endtime="20201117 14:43:40.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.846" endtime="20201117 14:43:40.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.302" endtime="20201117 14:43:40.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.784" endtime="20201117 14:43:40.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.784" endtime="20201117 14:43:40.894"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.900" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.923" endtime="20201117 14:43:40.945"></status>
</kw>
<msg timestamp="20201117 14:43:40.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.919" endtime="20201117 14:43:40.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.949" endtime="20201117 14:43:40.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.956" endtime="20201117 14:43:40.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.912" endtime="20201117 14:43:40.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.906" endtime="20201117 14:43:40.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.982" endtime="20201117 14:43:41.344"></status>
</kw>
<msg timestamp="20201117 14:43:41.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049401472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049476181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.978" endtime="20201117 14:43:41.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049401472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049476181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.354" endtime="20201117 14:43:41.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.374" endtime="20201117 14:43:41.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.970" endtime="20201117 14:43:41.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.965" endtime="20201117 14:43:41.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:41.393" level="INFO">${RESULT} = [{'time': 0.049476181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.470899999999919e-05, 'source_diff': 7.470899999999919e-05}, {'time': 0.049560181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:41.383" endtime="20201117 14:43:41.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:41.425" level="INFO">${ACCURACY} = {'source_diff': [7.470899999999919e-05, 7.426400000000444e-05, 7.494499999999987e-05, 7.488800000000212e-05, 7.492999999999389e-05, 7.490200000000169e-05, 7.480500000000417e-05, 7.454100000000435e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:41.395" endtime="20201117 14:43:41.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.437" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:43:41.435" endtime="20201117 14:43:41.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.443" level="INFO">VALUE: [7.470899999999919e-05, 7.426400000000444e-05, 7.494499999999987e-05, 7.488800000000212e-05, 7.492999999999389e-05, 7.490200000000169e-05, 7.480500000000417e-05, 7.454100000000435e-05, 7.463900000000134e-05, 7.424999999999793e-05, 7.411099999999476e-05, 7.404199999999639e-05, 7.459700000000263e-05, 7.448599999999861e-05, 7.487500000000202e-05, 7.445899999999894e-05, 7.436099999999501e-05, 7.490300000000116e-05, 7.470799999999972e-05, 7.419399999999965e-05, 7.437500000000152e-05, 7.452799999999732e-05, 7.429199999999664e-05, 7.466699999999354e-05, 7.480599999999671e-05, 7.422199999999879e-05, 7.420799999999922e-05, 7.473599999999886e-05, 7.44309999999998e-05, 7.429199999999664e-05, 7.423599999999836e-05, 7.49310000000003e-05, 7.40969999999952e-05, 7.486100000000245e-05, 7.463900000000134e-05, 7.429200000000358e-05, 7.420799999999922e-05, 7.406899999999605e-05, 7.413900000000084e-05, 7.461099999999526e-05, 7.46110000000022e-05, 7.42360000000053e-05, 7.42639999999975e-05, 7.437500000000152e-05, 7.493000000000083e-05, 7.490300000000116e-05, 7.408300000000256e-05, 7.452700000000478e-05, 7.477799999999757e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:43:41.439" endtime="20201117 14:43:41.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.427" endtime="20201117 14:43:41.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.453" endtime="20201117 14:43:41.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:41.462" endtime="20201117 14:43:41.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.457" endtime="20201117 14:43:41.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.448" endtime="20201117 14:43:41.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.901" endtime="20201117 14:43:41.488"></status>
</kw>
<msg timestamp="20201117 14:43:41.488" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.512" endtime="20201117 14:43:41.535"></status>
</kw>
<msg timestamp="20201117 14:43:41.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.508" endtime="20201117 14:43:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.538" endtime="20201117 14:43:41.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.545" endtime="20201117 14:43:41.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.500" endtime="20201117 14:43:41.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.494" endtime="20201117 14:43:41.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.570" endtime="20201117 14:43:41.930"></status>
</kw>
<msg timestamp="20201117 14:43:41.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043646028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043721014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.567" endtime="20201117 14:43:41.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043646028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043721014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.940" endtime="20201117 14:43:41.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.960" endtime="20201117 14:43:41.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.559" endtime="20201117 14:43:41.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.554" endtime="20201117 14:43:41.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:41.983" level="INFO">${RESULT} = [{'time': 0.043721014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.498599999999911e-05, 'source_diff': 7.498599999999911e-05}, {'time': 0.043799028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:41.974" endtime="20201117 14:43:41.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:42.016" level="INFO">${ACCURACY} = {'source_diff': [7.498599999999911e-05, 7.470899999999919e-05, 7.41110000000017e-05, 7.484800000000236e-05, 7.448699999999808e-05, 7.437500000000152e-05, 7.454099999999741e-05, 7.486100000000245e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:41.985" endtime="20201117 14:43:42.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.028" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:43:42.026" endtime="20201117 14:43:42.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.034" level="INFO">VALUE: [7.498599999999911e-05, 7.470899999999919e-05, 7.41110000000017e-05, 7.484800000000236e-05, 7.448699999999808e-05, 7.437500000000152e-05, 7.454099999999741e-05, 7.486100000000245e-05, 7.429099999999716e-05, 7.412500000000127e-05, 7.466700000000048e-05, 7.45839999999956e-05, 7.490300000000116e-05, 7.46110000000022e-05, 7.497199999999954e-05, 7.448599999999861e-05, 7.474999999999843e-05, 7.426300000000496e-05, 7.486100000000245e-05, 7.42910000000041e-05, 7.469400000000015e-05, 7.413900000000084e-05, 7.404099999999691e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.436100000000195e-05, 7.490300000000116e-05, 7.502799999999782e-05, 7.49310000000003e-05, 7.498599999999911e-05, 7.462500000000177e-05, 7.402800000000376e-05, 7.437500000000152e-05, 7.501400000000519e-05, 7.422199999999879e-05, 7.466700000000048e-05, 7.465300000000091e-05, 7.420799999999922e-05, 7.465300000000091e-05, 7.404200000000333e-05, 7.427800000000401e-05, 7.501399999999825e-05, 7.484800000000236e-05, 7.477800000000451e-05, 7.418099999999955e-05, 7.487500000000202e-05, 7.427799999999707e-05, 7.448599999999861e-05, 7.441600000000076e-05, 7.443000000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:43:42.031" endtime="20201117 14:43:42.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.018" endtime="20201117 14:43:42.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.044" endtime="20201117 14:43:42.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:42.053" endtime="20201117 14:43:42.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.048" endtime="20201117 14:43:42.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.039" endtime="20201117 14:43:42.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.490" endtime="20201117 14:43:42.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.897" endtime="20201117 14:43:42.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.895" endtime="20201117 14:43:42.080"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.086" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.109" endtime="20201117 14:43:42.132"></status>
</kw>
<msg timestamp="20201117 14:43:42.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:42.105" endtime="20201117 14:43:42.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:42.135" endtime="20201117 14:43:42.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.142" endtime="20201117 14:43:42.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.098" endtime="20201117 14:43:42.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.091" endtime="20201117 14:43:42.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.167" endtime="20201117 14:43:42.526"></status>
</kw>
<msg timestamp="20201117 14:43:42.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049930153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050006042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:42.163" endtime="20201117 14:43:42.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049930153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050006042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:42.536" endtime="20201117 14:43:42.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.556" endtime="20201117 14:43:42.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.155" endtime="20201117 14:43:42.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.150" endtime="20201117 14:43:42.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:42.575" level="INFO">${RESULT} = [{'time': 0.050006042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.58890000000026e-05, 'source_diff': 7.58890000000026e-05}, {'time': 0.050085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201117 14:43:42.565" endtime="20201117 14:43:42.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:42.607" level="INFO">${ACCURACY} = {'source_diff': [7.58890000000026e-05, 7.529199999999764e-05, 7.531900000000424e-05, 7.549999999999918e-05, 7.566700000000148e-05, 7.551399999999875e-05, 7.586099999999651e-05, 7.549999999999918e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:42.577" endtime="20201117 14:43:42.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.619" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:43:42.617" endtime="20201117 14:43:42.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.626" level="INFO">VALUE: [7.58890000000026e-05, 7.529199999999764e-05, 7.531900000000424e-05, 7.549999999999918e-05, 7.566700000000148e-05, 7.551399999999875e-05, 7.586099999999651e-05, 7.549999999999918e-05, 7.502799999999782e-05, 7.583300000000431e-05, 7.570800000000072e-05, 7.58189999999978e-05, 7.52360000000063e-05, 7.549999999999918e-05, 7.565299999999497e-05, 7.512500000000227e-05, 7.573599999999986e-05, 7.504199999999739e-05, 7.537500000000252e-05, 7.594500000000087e-05, 7.509700000000313e-05, 7.512499999999533e-05, 7.506999999999653e-05, 7.508299999999662e-05, 7.516600000000151e-05, 7.566600000000201e-05, 7.516599999999457e-05, 7.584699999999694e-05, 7.524999999999893e-05, 7.562500000000277e-05, 7.534699999999644e-05, 7.549999999999918e-05, 7.520899999999969e-05, 7.525000000000587e-05, 7.504199999999739e-05, 7.543000000000133e-05, 7.509700000000313e-05, 7.565200000000244e-05, 7.508300000000356e-05, 7.545800000000047e-05, 7.536100000000295e-05, 7.509800000000261e-05, 7.516700000000098e-05, 7.54310000000008e-05, 7.534700000000338e-05, 7.51110000000027e-05, 7.569499999999368e-05, 7.583400000000379e-05, 7.573699999999933e-05, 7.511200000000218e-05]</msg>
<status status="PASS" starttime="20201117 14:43:42.622" endtime="20201117 14:43:42.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.609" endtime="20201117 14:43:42.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.635" endtime="20201117 14:43:42.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:42.644" endtime="20201117 14:43:42.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.639" endtime="20201117 14:43:42.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.630" endtime="20201117 14:43:42.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.087" endtime="20201117 14:43:42.670"></status>
</kw>
<msg timestamp="20201117 14:43:42.671" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.694" endtime="20201117 14:43:42.717"></status>
</kw>
<msg timestamp="20201117 14:43:42.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:42.690" endtime="20201117 14:43:42.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:42.721" endtime="20201117 14:43:42.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.727" endtime="20201117 14:43:42.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.683" endtime="20201117 14:43:42.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.677" endtime="20201117 14:43:42.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.752" endtime="20201117 14:43:43.115"></status>
</kw>
<msg timestamp="20201117 14:43:43.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044216986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044292097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:42.749" endtime="20201117 14:43:43.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044216986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044292097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:43.126" endtime="20201117 14:43:43.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.145" endtime="20201117 14:43:43.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.741" endtime="20201117 14:43:43.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.736" endtime="20201117 14:43:43.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:43.166" level="INFO">${RESULT} = [{'time': 0.044292097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.51110000000027e-05, 'source_diff': 7.51110000000027e-05}, {'time': 0.044370097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:43.156" endtime="20201117 14:43:43.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:43.198" level="INFO">${ACCURACY} = {'source_diff': [7.51110000000027e-05, 7.594399999999446e-05, 7.537500000000252e-05, 7.569400000000115e-05, 7.566700000000148e-05, 7.591700000000173e-05, 7.504200000000433e-05, 7.512500000000227e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:43.168" endtime="20201117 14:43:43.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.210" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:43:43.208" endtime="20201117 14:43:43.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.216" level="INFO">VALUE: [7.51110000000027e-05, 7.594399999999446e-05, 7.537500000000252e-05, 7.569400000000115e-05, 7.566700000000148e-05, 7.591700000000173e-05, 7.504200000000433e-05, 7.512500000000227e-05, 7.572299999999976e-05, 7.520899999999969e-05, 7.506899999999705e-05, 7.512499999999533e-05, 7.588899999999565e-05, 7.555499999999798e-05, 7.519500000000012e-05, 7.586099999999651e-05, 7.566700000000148e-05, 7.504199999999739e-05, 7.582000000000422e-05, 7.529199999999764e-05, 7.532000000000372e-05, 7.591599999999532e-05, 7.53890000000021e-05, 7.529199999999764e-05, 7.506999999999653e-05, 7.537500000000252e-05, 7.531900000000424e-05, 7.59440000000014e-05, 7.583299999999737e-05, 7.59440000000014e-05, 7.524999999999893e-05, 7.568100000000105e-05, 7.581900000000474e-05, 7.598600000000011e-05, 7.595900000000044e-05, 7.51110000000027e-05, 7.504199999999739e-05, 7.599999999999968e-05, 7.581999999999728e-05, 7.569400000000115e-05, 7.579099999999866e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.565300000000191e-05, 7.53189999999973e-05, 7.504200000000433e-05, 7.536100000000295e-05, 7.566700000000148e-05, 7.541700000000123e-05, 7.523599999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:43:43.213" endtime="20201117 14:43:43.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.201" endtime="20201117 14:43:43.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.220" endtime="20201117 14:43:43.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:43.225" endtime="20201117 14:43:43.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.223" endtime="20201117 14:43:43.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.218" endtime="20201117 14:43:43.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.672" endtime="20201117 14:43:43.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.083" endtime="20201117 14:43:43.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.081" endtime="20201117 14:43:43.246"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.249" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.260" endtime="20201117 14:43:43.277"></status>
</kw>
<msg timestamp="20201117 14:43:43.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:43.258" endtime="20201117 14:43:43.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:43.279" endtime="20201117 14:43:43.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.282" endtime="20201117 14:43:43.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.255" endtime="20201117 14:43:43.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.252" endtime="20201117 14:43:43.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.294" endtime="20201117 14:43:43.582"></status>
</kw>
<msg timestamp="20201117 14:43:43.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027837097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:43.292" endtime="20201117 14:43:43.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027837097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:43.586" endtime="20201117 14:43:43.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.595" endtime="20201117 14:43:43.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.289" endtime="20201117 14:43:43.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.286" endtime="20201117 14:43:43.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:43.604" level="INFO">${RESULT} = [{'time': 0.027837097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.66250000000003e-05, 'source_diff': 7.66250000000003e-05}, {'time': 0.027925111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:43.599" endtime="20201117 14:43:43.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:43.618" level="INFO">${ACCURACY} = {'source_diff': [7.66250000000003e-05, 7.615299999999894e-05, 7.670799999999825e-05, 7.693099999999883e-05, 7.658400000000107e-05, 7.684800000000089e-05, 7.630599999999821e-05, 7.631999999999778e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:43.605" endtime="20201117 14:43:43.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.623" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:43:43.622" endtime="20201117 14:43:43.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.626" level="INFO">VALUE: [7.66250000000003e-05, 7.615299999999894e-05, 7.670799999999825e-05, 7.693099999999883e-05, 7.658400000000107e-05, 7.684800000000089e-05, 7.630599999999821e-05, 7.631999999999778e-05, 7.606900000000152e-05, 7.650000000000018e-05, 7.633299999999787e-05, 7.62769999999996e-05, 7.683299999999837e-05, 7.688900000000012e-05, 7.695800000000197e-05, 7.675000000000043e-05, 7.698600000000111e-05, 7.622200000000079e-05, 7.619400000000165e-05, 7.670900000000119e-05, 7.602799999999882e-05, 7.656999999999803e-05, 7.654200000000236e-05, 7.649999999999671e-05, 7.648600000000061e-05, 7.698600000000111e-05, 7.690200000000022e-05, 7.684700000000141e-05, 7.619400000000165e-05, 7.643000000000233e-05, 7.701400000000025e-05, 7.655599999999846e-05, 7.64029999999992e-05, 7.683400000000132e-05, 7.69440000000024e-05, 7.665299999999944e-05, 7.62769999999996e-05, 7.650000000000018e-05, 7.615199999999947e-05, 7.665199999999997e-05, 7.618099999999808e-05, 7.604199999999839e-05, 7.611099999999676e-05, 7.613900000000284e-05, 7.650000000000018e-05, 7.666700000000248e-05, 7.608400000000404e-05, 7.64440000000019e-05, 7.612500000000327e-05, 7.648700000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:43:43.625" endtime="20201117 14:43:43.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.619" endtime="20201117 14:43:43.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.630" endtime="20201117 14:43:43.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:43.635" endtime="20201117 14:43:43.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.633" endtime="20201117 14:43:43.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.628" endtime="20201117 14:43:43.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.250" endtime="20201117 14:43:43.656"></status>
</kw>
<msg timestamp="20201117 14:43:43.656" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.667" endtime="20201117 14:43:43.685"></status>
</kw>
<msg timestamp="20201117 14:43:43.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:43.665" endtime="20201117 14:43:43.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:43.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:43.687" endtime="20201117 14:43:43.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.690" endtime="20201117 14:43:43.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.662" endtime="20201117 14:43:43.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.659" endtime="20201117 14:43:43.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:43.701" endtime="20201117 14:43:43.988"></status>
</kw>
<msg timestamp="20201117 14:43:43.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024947694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:43.700" endtime="20201117 14:43:43.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024947694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025024639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:43.993" endtime="20201117 14:43:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.002" endtime="20201117 14:43:44.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.696" endtime="20201117 14:43:44.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.694" endtime="20201117 14:43:44.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:44.013" level="INFO">${RESULT} = [{'time': 0.025024639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694500000000187e-05, 'source_diff': 7.694500000000187e-05}, {'time': 0.025112639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:44.008" endtime="20201117 14:43:44.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:44.027" level="INFO">${ACCURACY} = {'source_diff': [7.694500000000187e-05, 7.698599999999764e-05, 7.605599999999796e-05, 7.679199999999914e-05, 7.611100000000023e-05, 7.611199999999971e-05, 7.60969999999972e-05, 7.656900000000202e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:44.014" endtime="20201117 14:43:44.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.032" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:43:44.031" endtime="20201117 14:43:44.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.035" level="INFO">VALUE: [7.694500000000187e-05, 7.698599999999764e-05, 7.605599999999796e-05, 7.679199999999914e-05, 7.611100000000023e-05, 7.611199999999971e-05, 7.60969999999972e-05, 7.656900000000202e-05, 7.65969999999977e-05, 7.670799999999825e-05, 7.672200000000129e-05, 7.623600000000036e-05, 7.679199999999914e-05, 7.604200000000186e-05, 7.615299999999894e-05, 7.644399999999843e-05, 7.604199999999839e-05, 7.69029999999997e-05, 7.633399999999735e-05, 7.655499999999898e-05, 7.648600000000061e-05, 7.687500000000055e-05, 7.650000000000018e-05, 7.612500000000327e-05, 7.618099999999808e-05, 7.697199999999807e-05, 7.605600000000143e-05, 7.645800000000147e-05, 7.698600000000111e-05, 7.629199999999864e-05, 7.694399999999893e-05, 7.604200000000186e-05, 7.626400000000297e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.606900000000152e-05, 7.672200000000129e-05, 7.650000000000018e-05, 7.61249999999998e-05, 7.668099999999858e-05, 7.615299999999894e-05, 7.6764e-05, 7.64449999999979e-05, 7.636100000000048e-05, 7.64310000000018e-05, 7.670899999999772e-05, 7.624999999999993e-05, 7.640199999999972e-05, 7.617999999999861e-05, 7.641599999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:43:44.033" endtime="20201117 14:43:44.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.028" endtime="20201117 14:43:44.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.039" endtime="20201117 14:43:44.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:44.043" endtime="20201117 14:43:44.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.041" endtime="20201117 14:43:44.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.037" endtime="20201117 14:43:44.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.657" endtime="20201117 14:43:44.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.248" endtime="20201117 14:43:44.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:43.247" endtime="20201117 14:43:44.065"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.068" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.079" endtime="20201117 14:43:44.099"></status>
</kw>
<msg timestamp="20201117 14:43:44.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:44.077" endtime="20201117 14:43:44.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:44.100" endtime="20201117 14:43:44.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.104" endtime="20201117 14:43:44.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.074" endtime="20201117 14:43:44.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.071" endtime="20201117 14:43:44.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.116" endtime="20201117 14:43:44.475"></status>
</kw>
<msg timestamp="20201117 14:43:44.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028264028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028341069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:44.114" endtime="20201117 14:43:44.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028264028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028341069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:44.485" endtime="20201117 14:43:44.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.506" endtime="20201117 14:43:44.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.110" endtime="20201117 14:43:44.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.108" endtime="20201117 14:43:44.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:44.524" level="INFO">${RESULT} = [{'time': 0.028341069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.704099999999992e-05, 'source_diff': 7.704099999999992e-05}, {'time': 0.028432083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:44.515" endtime="20201117 14:43:44.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:44.557" level="INFO">${ACCURACY} = {'source_diff': [7.704099999999992e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.772199999999882e-05, 7.70969999999982e-05, 7.758299999999912e-05, 7.769399999999968e-05, 7.793099999999983e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:44.527" endtime="20201117 14:43:44.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.569" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:43:44.566" endtime="20201117 14:43:44.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.574" level="INFO">VALUE: [7.704099999999992e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.772199999999882e-05, 7.70969999999982e-05, 7.758299999999912e-05, 7.769399999999968e-05, 7.793099999999983e-05, 7.769499999999915e-05, 7.784699999999894e-05, 7.741699999999976e-05, 7.75839999999986e-05, 7.70839999999981e-05, 7.71380000000009e-05, 7.71250000000008e-05, 7.768000000000011e-05, 7.747199999999857e-05, 7.712499999999733e-05, 7.797200000000254e-05, 7.773600000000186e-05, 7.788899999999765e-05, 7.704199999999939e-05, 7.798600000000211e-05, 7.725000000000093e-05, 7.768099999999958e-05, 7.716699999999951e-05, 7.731999999999878e-05, 7.712499999999733e-05, 7.79579999999995e-05, 7.704099999999992e-05, 7.77770000000011e-05, 7.71250000000008e-05, 7.794399999999993e-05, 7.729199999999964e-05, 7.730600000000268e-05, 7.800000000000168e-05, 7.702799999999982e-05, 7.780599999999971e-05, 7.766699999999654e-05, 7.762499999999783e-05, 7.775000000000143e-05, 7.765299999999697e-05, 7.769500000000262e-05, 7.790200000000469e-05, 7.765299999999697e-05, 7.790299999999722e-05, 7.762499999999783e-05, 7.730599999999921e-05, 7.705599999999896e-05, 7.752800000000032e-05]</msg>
<status status="PASS" starttime="20201117 14:43:44.571" endtime="20201117 14:43:44.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.559" endtime="20201117 14:43:44.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.584" endtime="20201117 14:43:44.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:44.593" endtime="20201117 14:43:44.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.588" endtime="20201117 14:43:44.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.579" endtime="20201117 14:43:44.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.069" endtime="20201117 14:43:44.619"></status>
</kw>
<msg timestamp="20201117 14:43:44.619" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.643" endtime="20201117 14:43:44.665"></status>
</kw>
<msg timestamp="20201117 14:43:44.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:44.639" endtime="20201117 14:43:44.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:44.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:44.668" endtime="20201117 14:43:44.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.676" endtime="20201117 14:43:44.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.631" endtime="20201117 14:43:44.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.625" endtime="20201117 14:43:44.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:44.701" endtime="20201117 14:43:45.063"></status>
</kw>
<msg timestamp="20201117 14:43:45.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043696889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:44.697" endtime="20201117 14:43:45.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043696889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:45.073" endtime="20201117 14:43:45.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.094" endtime="20201117 14:43:45.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.689" endtime="20201117 14:43:45.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.684" endtime="20201117 14:43:45.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:45.115" level="INFO">${RESULT} = [{'time': 0.043774375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.748599999999467e-05, 'source_diff': 7.748599999999467e-05}, {'time': 0.043860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:45.105" endtime="20201117 14:43:45.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:45.147" level="INFO">${ACCURACY} = {'source_diff': [7.748599999999467e-05, 7.706899999999905e-05, 7.794500000000287e-05, 7.70839999999981e-05, 7.730599999999921e-05, 7.794500000000287e-05, 7.738799999999768e-05, 7.788800000000512e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:45.117" endtime="20201117 14:43:45.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.159" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:43:45.157" endtime="20201117 14:43:45.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.165" level="INFO">VALUE: [7.748599999999467e-05, 7.706899999999905e-05, 7.794500000000287e-05, 7.70839999999981e-05, 7.730599999999921e-05, 7.794500000000287e-05, 7.738799999999768e-05, 7.788800000000512e-05, 7.765299999999697e-05, 7.787499999999808e-05, 7.729199999999964e-05, 7.716699999999604e-05, 7.708300000000556e-05, 7.725000000000093e-05, 7.765299999999697e-05, 7.787500000000502e-05, 7.766699999999654e-05, 7.723600000000136e-05, 7.720800000000222e-05, 7.7458999999995e-05, 7.787500000000502e-05, 7.750000000000118e-05, 7.784699999999894e-05, 7.755499999999999e-05, 7.787499999999808e-05, 7.704199999999939e-05, 7.787499999999808e-05, 7.740300000000366e-05, 7.730600000000615e-05, 7.74310000000028e-05, 7.773600000000186e-05, 7.72640000000005e-05, 7.738800000000462e-05, 7.724999999999399e-05, 7.708299999999862e-05, 7.734700000000538e-05, 7.765300000000391e-05, 7.770800000000272e-05, 7.775000000000143e-05, 7.800000000000168e-05, 7.72640000000005e-05, 7.768099999999611e-05, 7.712500000000427e-05, 7.741600000000376e-05, 7.761099999999826e-05, 7.747200000000204e-05, 7.706999999999853e-05, 7.712499999999733e-05, 7.713799999999743e-05, 7.75269999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:43:45.161" endtime="20201117 14:43:45.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.149" endtime="20201117 14:43:45.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.174" endtime="20201117 14:43:45.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:45.183" endtime="20201117 14:43:45.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.178" endtime="20201117 14:43:45.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.169" endtime="20201117 14:43:45.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.621" endtime="20201117 14:43:45.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.067" endtime="20201117 14:43:45.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:44.066" endtime="20201117 14:43:45.210"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.216" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.240" endtime="20201117 14:43:45.262"></status>
</kw>
<msg timestamp="20201117 14:43:45.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:45.236" endtime="20201117 14:43:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:45.265" endtime="20201117 14:43:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.272" endtime="20201117 14:43:45.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.228" endtime="20201117 14:43:45.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.222" endtime="20201117 14:43:45.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.297" endtime="20201117 14:43:45.660"></status>
</kw>
<msg timestamp="20201117 14:43:45.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050407833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:45.294" endtime="20201117 14:43:45.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050407833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:45.671" endtime="20201117 14:43:45.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.690" endtime="20201117 14:43:45.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.286" endtime="20201117 14:43:45.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.281" endtime="20201117 14:43:45.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:45.709" level="INFO">${RESULT} = [{'time': 0.050486792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.895900000000344e-05, 'source_diff': 7.895900000000344e-05}, {'time': 0.050571806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:45.699" endtime="20201117 14:43:45.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:45.742" level="INFO">${ACCURACY} = {'source_diff': [7.895900000000344e-05, 7.85839999999996e-05, 7.887499999999908e-05, 7.823700000000183e-05, 7.84719999999961e-05, 7.893000000000483e-05, 7.869399999999721e-05, 7.854100000000142e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:43:45.711" endtime="20201117 14:43:45.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.754" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:43:45.752" endtime="20201117 14:43:45.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.760" level="INFO">VALUE: [7.895900000000344e-05, 7.85839999999996e-05, 7.887499999999908e-05, 7.823700000000183e-05, 7.84719999999961e-05, 7.893000000000483e-05, 7.869399999999721e-05, 7.854100000000142e-05, 7.825000000000193e-05, 7.894399999999746e-05, 7.854199999999395e-05, 7.887499999999908e-05, 7.869499999999668e-05, 7.805599999999996e-05, 7.815200000000494e-05, 7.888899999999865e-05, 7.837499999999858e-05, 7.845799999999653e-05, 7.83190000000003e-05, 7.85969999999997e-05, 7.877800000000157e-05, 7.805599999999996e-05, 7.842999999999739e-05, 7.811099999999876e-05, 7.879200000000114e-05, 7.886099999999951e-05, 7.895900000000344e-05, 7.837500000000552e-05, 7.881999999999334e-05, 7.845900000000294e-05, 7.8764000000002e-05, 7.802700000000135e-05, 7.838899999999815e-05, 7.80969999999992e-05, 7.891700000000473e-05, 7.870899999999625e-05, 7.88190000000008e-05, 7.899999999999574e-05, 7.816699999999704e-05, 7.836099999999901e-05, 7.884699999999994e-05, 7.89589999999965e-05, 7.898599999999617e-05, 7.874999999999549e-05, 7.895799999999703e-05, 7.804100000000092e-05, 7.888899999999865e-05, 7.875000000000243e-05, 7.816699999999704e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:43:45.757" endtime="20201117 14:43:45.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.744" endtime="20201117 14:43:45.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.769" endtime="20201117 14:43:45.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:45.778" endtime="20201117 14:43:45.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.774" endtime="20201117 14:43:45.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.765" endtime="20201117 14:43:45.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.217" endtime="20201117 14:43:45.805"></status>
</kw>
<msg timestamp="20201117 14:43:45.806" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.829" endtime="20201117 14:43:45.852"></status>
</kw>
<msg timestamp="20201117 14:43:45.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:45.826" endtime="20201117 14:43:45.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:45.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:45.855" endtime="20201117 14:43:45.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.862" endtime="20201117 14:43:45.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.818" endtime="20201117 14:43:45.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.812" endtime="20201117 14:43:45.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:45.887" endtime="20201117 14:43:46.249"></status>
</kw>
<msg timestamp="20201117 14:43:46.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044316292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044394778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:45.883" endtime="20201117 14:43:46.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044316292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044394778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:46.259" endtime="20201117 14:43:46.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.279" endtime="20201117 14:43:46.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.876" endtime="20201117 14:43:46.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.871" endtime="20201117 14:43:46.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:46.302" level="INFO">${RESULT} = [{'time': 0.044394778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.848600000000261e-05, 'source_diff': 7.848600000000261e-05}, {'time': 0.044480764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:46.292" endtime="20201117 14:43:46.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:46.334" level="INFO">${ACCURACY} = {'source_diff': [7.848600000000261e-05, 7.811099999999876e-05, 7.812499999999833e-05, 7.879200000000114e-05, 7.857000000000003e-05, 7.890300000000516e-05, 7.867999999999764e-05, 7.880500000000124e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:46.304" endtime="20201117 14:43:46.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.346" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:43:46.343" endtime="20201117 14:43:46.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.352" level="INFO">VALUE: [7.848600000000261e-05, 7.811099999999876e-05, 7.812499999999833e-05, 7.879200000000114e-05, 7.857000000000003e-05, 7.890300000000516e-05, 7.867999999999764e-05, 7.880500000000124e-05, 7.840199999999825e-05, 7.808300000000656e-05, 7.855500000000099e-05, 7.88190000000008e-05, 7.870800000000372e-05, 7.816700000000398e-05, 7.882000000000028e-05, 7.816699999999704e-05, 7.819500000000312e-05, 7.873700000000233e-05, 7.845900000000294e-05, 7.851400000000175e-05, 7.854100000000142e-05, 7.802700000000135e-05, 7.881899999999387e-05, 7.808299999999962e-05, 7.845800000000347e-05, 7.887499999999908e-05, 7.829200000000064e-05, 7.804200000000039e-05, 7.81110000000057e-05, 7.80839999999991e-05, 7.801400000000125e-05, 7.884799999999942e-05, 7.836199999999849e-05, 7.806900000000006e-05, 7.861099999999926e-05, 7.82770000000016e-05, 7.887500000000602e-05, 7.820799999999628e-05, 7.873600000000286e-05, 7.856900000000056e-05, 7.822199999999585e-05, 7.848600000000261e-05, 7.844499999999643e-05, 7.858300000000012e-05, 7.882000000000028e-05, 7.848700000000208e-05, 7.82770000000016e-05, 7.805500000000049e-05, 7.883300000000037e-05, 7.894399999999746e-05]</msg>
<status status="PASS" starttime="20201117 14:43:46.348" endtime="20201117 14:43:46.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.336" endtime="20201117 14:43:46.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.368" endtime="20201117 14:43:46.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:46.377" endtime="20201117 14:43:46.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.372" endtime="20201117 14:43:46.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.356" endtime="20201117 14:43:46.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.807" endtime="20201117 14:43:46.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.213" endtime="20201117 14:43:46.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:45.211" endtime="20201117 14:43:46.404"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.410" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.433" endtime="20201117 14:43:46.455"></status>
</kw>
<msg timestamp="20201117 14:43:46.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:46.429" endtime="20201117 14:43:46.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:46.458" endtime="20201117 14:43:46.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.465" endtime="20201117 14:43:46.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.422" endtime="20201117 14:43:46.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.416" endtime="20201117 14:43:46.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.490" endtime="20201117 14:43:46.851"></status>
</kw>
<msg timestamp="20201117 14:43:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049818458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:46.486" endtime="20201117 14:43:46.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049818458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:46.861" endtime="20201117 14:43:46.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.882" endtime="20201117 14:43:46.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.479" endtime="20201117 14:43:46.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.474" endtime="20201117 14:43:46.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:46.900" level="INFO">${RESULT} = [{'time': 0.049898167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.970899999999725e-05, 'source_diff': 7.970899999999725e-05}, {'time': 0.049981181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:46.890" endtime="20201117 14:43:46.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:46.933" level="INFO">${ACCURACY} = {'source_diff': [7.970899999999725e-05, 7.905600000000096e-05, 7.902800000000182e-05, 7.955500000000199e-05, 7.973599999999692e-05, 7.961100000000026e-05, 7.955500000000199e-05, 7.940299999999872e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:46.902" endtime="20201117 14:43:46.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.945" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:43:46.942" endtime="20201117 14:43:46.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:46.950" level="INFO">VALUE: [7.970899999999725e-05, 7.905600000000096e-05, 7.902800000000182e-05, 7.955500000000199e-05, 7.973599999999692e-05, 7.961100000000026e-05, 7.955500000000199e-05, 7.940299999999872e-05, 7.969399999999821e-05, 7.90970000000002e-05, 7.934700000000044e-05, 7.987500000000008e-05, 7.920899999999675e-05, 7.912499999999933e-05, 7.922299999999632e-05, 7.925000000000293e-05, 7.995799999999803e-05, 7.973600000000386e-05, 7.90269999999954e-05, 7.990299999999922e-05, 7.973599999999692e-05, 7.966700000000548e-05, 7.948599999999667e-05, 7.945800000000447e-05, 7.952799999999538e-05, 7.984800000000042e-05, 7.952800000000232e-05, 7.976399999999606e-05, 7.904100000000192e-05, 7.958300000000113e-05, 7.970799999999778e-05, 7.955500000000199e-05, 7.936100000000001e-05, 7.967999999999864e-05, 7.920799999999728e-05, 7.932000000000078e-05, 7.927800000000207e-05, 7.990299999999922e-05, 7.987500000000008e-05, 7.925000000000293e-05, 7.912499999999933e-05, 7.902799999999488e-05, 7.962500000000677e-05, 7.940199999999925e-05, 7.95269999999959e-05, 7.916599999999857e-05, 7.970799999999778e-05, 7.999999999999674e-05, 7.962499999999983e-05, 7.922199999999685e-05]</msg>
<status status="PASS" starttime="20201117 14:43:46.947" endtime="20201117 14:43:46.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.935" endtime="20201117 14:43:46.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:46.961" endtime="20201117 14:43:46.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:46.970" endtime="20201117 14:43:46.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.965" endtime="20201117 14:43:46.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.956" endtime="20201117 14:43:46.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.411" endtime="20201117 14:43:46.996"></status>
</kw>
<msg timestamp="20201117 14:43:46.996" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.019" endtime="20201117 14:43:47.041"></status>
</kw>
<msg timestamp="20201117 14:43:47.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.016" endtime="20201117 14:43:47.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.045" endtime="20201117 14:43:47.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.051" endtime="20201117 14:43:47.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.008" endtime="20201117 14:43:47.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.002" endtime="20201117 14:43:47.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.076" endtime="20201117 14:43:47.421"></status>
</kw>
<msg timestamp="20201117 14:43:47.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043665153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:47.073" endtime="20201117 14:43:47.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043665153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:47.426" endtime="20201117 14:43:47.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.434" endtime="20201117 14:43:47.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.065" endtime="20201117 14:43:47.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.060" endtime="20201117 14:43:47.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:47.444" level="INFO">${RESULT} = [{'time': 0.043665153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.95840000000006e-05, 'source_diff': 7.95840000000006e-05}, {'time': 0.043759167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:47.439" endtime="20201117 14:43:47.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:47.458" level="INFO">${ACCURACY} = {'source_diff': [7.95840000000006e-05, 7.966699999999854e-05, 7.944500000000437e-05, 7.902800000000182e-05, 7.955499999999505e-05, 7.923600000000336e-05, 7.983300000000138e-05, 7.954100000000242e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:47.445" endtime="20201117 14:43:47.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.463" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:43:47.462" endtime="20201117 14:43:47.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.466" level="INFO">VALUE: [7.95840000000006e-05, 7.966699999999854e-05, 7.944500000000437e-05, 7.902800000000182e-05, 7.955499999999505e-05, 7.923600000000336e-05, 7.983300000000138e-05, 7.954100000000242e-05, 7.96389999999994e-05, 7.98190000000018e-05, 7.944399999999796e-05, 7.969400000000515e-05, 7.976399999999606e-05, 7.957000000000103e-05, 7.99589999999975e-05, 7.973599999999692e-05, 7.961199999999974e-05, 7.908300000000063e-05, 7.923599999999642e-05, 7.930500000000174e-05, 7.966599999999907e-05, 7.954200000000189e-05, 7.91389999999989e-05, 7.904200000000139e-05, 7.954200000000189e-05, 7.927800000000207e-05, 7.90840000000001e-05, 7.99589999999975e-05, 7.924999999999599e-05, 7.98190000000018e-05, 7.982000000000128e-05, 7.911099999999976e-05, 7.925000000000293e-05, 7.9846999999994e-05, 7.998599999999717e-05, 7.93890000000061e-05, 7.930600000000121e-05, 7.948600000000361e-05, 7.898600000000311e-05, 7.959800000000017e-05, 7.911099999999976e-05, 7.9458999999997e-05, 7.912499999999933e-05, 7.902800000000182e-05, 7.970799999999778e-05, 7.988899999999965e-05, 7.929100000000217e-05, 7.93190000000013e-05, 7.99169999999988e-05, 7.923599999999642e-05]</msg>
<status status="PASS" starttime="20201117 14:43:47.464" endtime="20201117 14:43:47.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.458" endtime="20201117 14:43:47.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.471" endtime="20201117 14:43:47.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:47.475" endtime="20201117 14:43:47.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.473" endtime="20201117 14:43:47.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.468" endtime="20201117 14:43:47.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.998" endtime="20201117 14:43:47.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.407" endtime="20201117 14:43:47.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:46.405" endtime="20201117 14:43:47.496"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.499" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.510" endtime="20201117 14:43:47.528"></status>
</kw>
<msg timestamp="20201117 14:43:47.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.508" endtime="20201117 14:43:47.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.530" endtime="20201117 14:43:47.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.533" endtime="20201117 14:43:47.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.505" endtime="20201117 14:43:47.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.502" endtime="20201117 14:43:47.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.544" endtime="20201117 14:43:47.832"></status>
</kw>
<msg timestamp="20201117 14:43:47.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027615236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027696208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:47.543" endtime="20201117 14:43:47.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027615236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027696208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:47.836" endtime="20201117 14:43:47.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.845" endtime="20201117 14:43:47.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.539" endtime="20201117 14:43:47.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.537" endtime="20201117 14:43:47.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:47.853" level="INFO">${RESULT} = [{'time': 0.027696208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.09719999999986e-05, 'source_diff': 8.09719999999986e-05}, {'time': 0.027788222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:47.849" endtime="20201117 14:43:47.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:47.867" level="INFO">${ACCURACY} = {'source_diff': [8.09719999999986e-05, 8.100000000000121e-05, 8.033300000000188e-05, 8.019399999999871e-05, 8.061100000000126e-05, 8.087500000000108e-05, 8.001399999999978e-05, 8.004199999999892e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:47.854" endtime="20201117 14:43:47.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.873" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:43:47.872" endtime="20201117 14:43:47.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.876" level="INFO">VALUE: [8.09719999999986e-05, 8.100000000000121e-05, 8.033300000000188e-05, 8.019399999999871e-05, 8.061100000000126e-05, 8.087500000000108e-05, 8.001399999999978e-05, 8.004199999999892e-05, 8.07780000000001e-05, 8.080499999999977e-05, 8.05130000000008e-05, 8.0458000000002e-05, 8.070800000000225e-05, 8.023600000000089e-05, 8.005599999999849e-05, 8.08329999999989e-05, 8.062499999999737e-05, 8.093099999999936e-05, 8.048599999999767e-05, 8.02779999999996e-05, 8.076399999999706e-05, 8.087500000000108e-05, 8.025000000000046e-05, 8.037500000000058e-05, 8.050000000000071e-05, 8.022200000000132e-05, 8.036100000000101e-05, 8.026400000000003e-05, 8.02779999999996e-05, 8.088900000000065e-05, 8.005599999999849e-05, 8.095900000000197e-05, 8.088900000000065e-05, 8.06109999999978e-05, 8.090300000000022e-05, 8.099999999999774e-05, 8.023700000000036e-05, 8.084700000000195e-05, 8.040200000000025e-05, 8.002699999999988e-05, 8.054099999999995e-05, 8.079200000000314e-05, 8.081899999999587e-05, 8.036100000000101e-05, 8.01389999999999e-05, 8.07919999999962e-05, 8.0764000000004e-05, 8.002800000000282e-05, 8.024999999999699e-05, 8.048700000000408e-05]</msg>
<status status="PASS" starttime="20201117 14:43:47.874" endtime="20201117 14:43:47.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.868" endtime="20201117 14:43:47.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.880" endtime="20201117 14:43:47.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:47.884" endtime="20201117 14:43:47.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.882" endtime="20201117 14:43:47.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.878" endtime="20201117 14:43:47.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.500" endtime="20201117 14:43:47.906"></status>
</kw>
<msg timestamp="20201117 14:43:47.906" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.917" endtime="20201117 14:43:47.936"></status>
</kw>
<msg timestamp="20201117 14:43:47.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.915" endtime="20201117 14:43:47.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:47.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:47.937" endtime="20201117 14:43:47.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.940" endtime="20201117 14:43:47.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.911" endtime="20201117 14:43:47.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.909" endtime="20201117 14:43:47.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:47.952" endtime="20201117 14:43:48.259"></status>
</kw>
<msg timestamp="20201117 14:43:48.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:47.950" endtime="20201117 14:43:48.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:48.269" endtime="20201117 14:43:48.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.288" endtime="20201117 14:43:48.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.947" endtime="20201117 14:43:48.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.945" endtime="20201117 14:43:48.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:48.311" level="INFO">${RESULT} = [{'time': 0.025101375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012500000000033e-05, 'source_diff': 8.012500000000033e-05}, {'time': 0.025189375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:48.302" endtime="20201117 14:43:48.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:48.344" level="INFO">${ACCURACY} = {'source_diff': [8.012500000000033e-05, 8.03329999999984e-05, 8.004200000000239e-05, 8.073599999999792e-05, 8.063899999999694e-05, 8.073600000000139e-05, 8.001399999999978e-05, 8.081999999999881e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:48.314" endtime="20201117 14:43:48.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.356" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:43:48.354" endtime="20201117 14:43:48.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.362" level="INFO">VALUE: [8.012500000000033e-05, 8.03329999999984e-05, 8.004200000000239e-05, 8.073599999999792e-05, 8.063899999999694e-05, 8.073600000000139e-05, 8.001399999999978e-05, 8.081999999999881e-05, 8.041599999999982e-05, 8.055499999999952e-05, 8.027700000000013e-05, 8.075000000000096e-05, 8.029199999999917e-05, 8.093100000000283e-05, 8.072199999999835e-05, 8.093099999999936e-05, 8.037500000000058e-05, 8.059800000000117e-05, 8.011199999999677e-05, 8.030499999999927e-05, 8.09580000000025e-05, 8.037500000000058e-05, 8.052700000000038e-05, 8.070799999999878e-05, 8.068099999999911e-05, 8.018099999999861e-05, 8.066699999999954e-05, 8.00970000000012e-05, 8.093099999999936e-05, 8.081999999999881e-05, 8.020900000000122e-05, 8.087500000000108e-05, 8.07910000000002e-05, 8.093099999999936e-05, 8.020799999999828e-05, 8.020799999999828e-05, 8.009699999999773e-05, 8.070800000000225e-05, 8.099999999999774e-05, 8.072200000000182e-05, 8.059699999999823e-05, 8.025000000000046e-05, 8.004199999999892e-05, 8.02779999999996e-05, 8.047299999999757e-05, 8.104100000000045e-05, 8.019499999999818e-05, 8.086100000000151e-05, 8.07910000000002e-05, 8.086100000000151e-05]</msg>
<status status="PASS" starttime="20201117 14:43:48.358" endtime="20201117 14:43:48.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.346" endtime="20201117 14:43:48.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.371" endtime="20201117 14:43:48.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:48.380" endtime="20201117 14:43:48.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.375" endtime="20201117 14:43:48.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.366" endtime="20201117 14:43:48.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.907" endtime="20201117 14:43:48.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.498" endtime="20201117 14:43:48.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:47.497" endtime="20201117 14:43:48.407"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.413" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.436" endtime="20201117 14:43:48.458"></status>
</kw>
<msg timestamp="20201117 14:43:48.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:48.433" endtime="20201117 14:43:48.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:48.462" endtime="20201117 14:43:48.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.468" endtime="20201117 14:43:48.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.425" endtime="20201117 14:43:48.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.419" endtime="20201117 14:43:48.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.493" endtime="20201117 14:43:48.856"></status>
</kw>
<msg timestamp="20201117 14:43:48.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049492181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049573764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:48.490" endtime="20201117 14:43:48.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049492181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049573764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:48.866" endtime="20201117 14:43:48.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.886" endtime="20201117 14:43:48.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.482" endtime="20201117 14:43:48.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.477" endtime="20201117 14:43:48.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:48.905" level="INFO">${RESULT} = [{'time': 0.049573764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.158299999999619e-05, 'source_diff': 8.158299999999619e-05}, {'time': 0.049670778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:48.896" endtime="20201117 14:43:48.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:48.938" level="INFO">${ACCURACY} = {'source_diff': [8.158299999999619e-05, 8.176399999999806e-05, 8.180500000000424e-05, 8.102799999999688e-05, 8.123700000000483e-05, 8.158300000000313e-05, 8.111099999999483e-05, 8.161099999999533e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:48.908" endtime="20201117 14:43:48.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.950" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:43:48.947" endtime="20201117 14:43:48.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:48.955" level="INFO">VALUE: [8.158299999999619e-05, 8.176399999999806e-05, 8.180500000000424e-05, 8.102799999999688e-05, 8.123700000000483e-05, 8.158300000000313e-05, 8.111099999999483e-05, 8.161099999999533e-05, 8.104099999999698e-05, 8.156899999999662e-05, 8.119399999999971e-05, 8.16390000000014e-05, 8.111099999999483e-05, 8.127799999999713e-05, 8.12919999999967e-05, 8.1458999999999e-05, 8.102800000000382e-05, 8.19170000000008e-05, 8.183299999999644e-05, 8.183299999999644e-05, 8.161099999999533e-05, 8.118099999999961e-05, 8.120799999999928e-05, 8.105500000000349e-05, 8.127799999999713e-05, 8.193100000000036e-05, 8.102800000000382e-05, 8.120899999999875e-05, 8.183400000000285e-05, 8.10840000000021e-05, 8.19589999999995e-05, 8.170799999999978e-05, 8.148599999999867e-05, 8.104100000000392e-05, 8.133299999999594e-05, 8.123599999999842e-05, 8.109699999999526e-05, 8.19170000000008e-05, 8.12640000000045e-05, 8.187499999999515e-05, 8.149999999999824e-05, 8.163899999999447e-05, 8.188900000000165e-05, 8.133300000000288e-05, 8.179099999999773e-05, 8.17770000000051e-05, 8.122199999999885e-05, 8.191600000000132e-05, 8.140299999999379e-05, 8.126399999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:43:48.952" endtime="20201117 14:43:48.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.940" endtime="20201117 14:43:48.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:48.965" endtime="20201117 14:43:48.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:48.974" endtime="20201117 14:43:48.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.969" endtime="20201117 14:43:48.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.960" endtime="20201117 14:43:48.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.414" endtime="20201117 14:43:49.000"></status>
</kw>
<msg timestamp="20201117 14:43:49.001" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.024" endtime="20201117 14:43:49.046"></status>
</kw>
<msg timestamp="20201117 14:43:49.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:49.020" endtime="20201117 14:43:49.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:49.049" endtime="20201117 14:43:49.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.056" endtime="20201117 14:43:49.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.013" endtime="20201117 14:43:49.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.006" endtime="20201117 14:43:49.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.081" endtime="20201117 14:43:49.444"></status>
</kw>
<msg timestamp="20201117 14:43:49.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043633625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:49.078" endtime="20201117 14:43:49.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043633625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:49.454" endtime="20201117 14:43:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.474" endtime="20201117 14:43:49.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.070" endtime="20201117 14:43:49.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.065" endtime="20201117 14:43:49.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:49.495" level="INFO">${RESULT} = [{'time': 0.043633625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.195800000000003e-05, 'source_diff': 8.195800000000003e-05}, {'time': 0.043721625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:49.485" endtime="20201117 14:43:49.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:49.527" level="INFO">${ACCURACY} = {'source_diff': [8.195800000000003e-05, 8.137500000000158e-05, 8.123599999999842e-05, 8.158300000000313e-05, 8.180600000000371e-05, 8.170899999999925e-05, 8.187499999999515e-05, 8.1458999999999e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:43:49.497" endtime="20201117 14:43:49.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.539" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:43:49.536" endtime="20201117 14:43:49.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.545" level="INFO">VALUE: [8.195800000000003e-05, 8.137500000000158e-05, 8.123599999999842e-05, 8.158300000000313e-05, 8.180600000000371e-05, 8.170899999999925e-05, 8.187499999999515e-05, 8.1458999999999e-05, 8.181999999999634e-05, 8.174999999999849e-05, 8.145799999999953e-05, 8.169400000000021e-05, 8.17919999999972e-05, 8.170799999999978e-05, 8.137499999999465e-05, 8.198599999999917e-05, 8.19170000000008e-05, 8.17919999999972e-05, 8.123599999999842e-05, 8.143099999999986e-05, 8.166700000000054e-05, 8.179099999999773e-05, 8.16390000000014e-05, 8.11390000000009e-05, 8.104200000000339e-05, 8.181899999999687e-05, 8.101399999999731e-05, 8.190299999999429e-05, 8.188900000000165e-05, 8.131999999999584e-05, 8.136100000000202e-05, 8.14170000000003e-05, 8.136100000000202e-05, 8.112500000000133e-05, 8.131899999999637e-05, 8.187499999999515e-05, 8.194400000000046e-05, 8.162500000000183e-05, 8.183300000000338e-05, 8.108300000000263e-05, 8.144399999999996e-05, 8.116700000000004e-05, 8.1458999999999e-05, 8.180599999999677e-05, 8.138900000000115e-05, 8.162500000000183e-05, 8.16520000000015e-05, 8.186099999999558e-05, 8.183299999999644e-05, 8.170799999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:43:49.541" endtime="20201117 14:43:49.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.529" endtime="20201117 14:43:49.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.554" endtime="20201117 14:43:49.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:49.563" endtime="20201117 14:43:49.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.558" endtime="20201117 14:43:49.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.549" endtime="20201117 14:43:49.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.002" endtime="20201117 14:43:49.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.410" endtime="20201117 14:43:49.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:48.408" endtime="20201117 14:43:49.590"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.596" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.619" endtime="20201117 14:43:49.641"></status>
</kw>
<msg timestamp="20201117 14:43:49.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:49.615" endtime="20201117 14:43:49.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:49.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:49.645" endtime="20201117 14:43:49.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.651" endtime="20201117 14:43:49.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.607" endtime="20201117 14:43:49.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.601" endtime="20201117 14:43:49.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:49.677" endtime="20201117 14:43:50.040"></status>
</kw>
<msg timestamp="20201117 14:43:50.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049376403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0494585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:49.673" endtime="20201117 14:43:50.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049376403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0494585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:50.050" endtime="20201117 14:43:50.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.069" endtime="20201117 14:43:50.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.665" endtime="20201117 14:43:50.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.660" endtime="20201117 14:43:50.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:50.088" level="INFO">${RESULT} = [{'time': 0.0494585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.20970000000032e-05, 'source_diff': 8.20970000000032e-05}, {'time': 0.049544569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201117 14:43:50.078" endtime="20201117 14:43:50.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:50.121" level="INFO">${ACCURACY} = {'source_diff': [8.20970000000032e-05, 8.297199999999366e-05, 8.220800000000028e-05, 8.236100000000302e-05, 8.276399999999906e-05, 8.22919999999977e-05, 8.224999999999899e-05, 8.224999999999899e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:43:50.090" endtime="20201117 14:43:50.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.132" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:43:50.130" endtime="20201117 14:43:50.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.138" level="INFO">VALUE: [8.20970000000032e-05, 8.297199999999366e-05, 8.220800000000028e-05, 8.236100000000302e-05, 8.276399999999906e-05, 8.22919999999977e-05, 8.224999999999899e-05, 8.224999999999899e-05, 8.216600000000157e-05, 8.277699999999916e-05, 8.23469999999965e-05, 8.220800000000028e-05, 8.208299999999669e-05, 8.275000000000643e-05, 8.2764000000006e-05, 8.233399999999641e-05, 8.294500000000093e-05, 8.22919999999977e-05, 8.223599999999942e-05, 8.290300000000222e-05, 8.279099999999873e-05, 8.280599999999777e-05, 8.294400000000146e-05, 8.29720000000006e-05, 8.272200000000035e-05, 8.290300000000222e-05, 8.286099999999658e-05, 8.218100000000061e-05, 8.245799999999359e-05, 8.294500000000093e-05, 8.281999999999734e-05, 8.24170000000013e-05, 8.229100000000517e-05, 8.205599999999702e-05, 8.277699999999916e-05, 8.290300000000222e-05, 8.224999999999899e-05, 8.29590000000005e-05, 8.270800000000078e-05, 8.298600000000017e-05, 8.22640000000055e-05, 8.295800000000103e-05, 8.249999999999924e-05, 8.227800000000507e-05, 8.294500000000093e-05, 8.286199999999605e-05, 8.291600000000232e-05, 8.293000000000189e-05, 8.237499999999565e-05, 8.266600000000207e-05]</msg>
<status status="PASS" starttime="20201117 14:43:50.135" endtime="20201117 14:43:50.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.123" endtime="20201117 14:43:50.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.147" endtime="20201117 14:43:50.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:50.156" endtime="20201117 14:43:50.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.152" endtime="20201117 14:43:50.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.143" endtime="20201117 14:43:50.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.597" endtime="20201117 14:43:50.182"></status>
</kw>
<msg timestamp="20201117 14:43:50.183" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.206" endtime="20201117 14:43:50.228"></status>
</kw>
<msg timestamp="20201117 14:43:50.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:50.202" endtime="20201117 14:43:50.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:50.232" endtime="20201117 14:43:50.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.239" endtime="20201117 14:43:50.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.195" endtime="20201117 14:43:50.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.189" endtime="20201117 14:43:50.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.266" endtime="20201117 14:43:50.626"></status>
</kw>
<msg timestamp="20201117 14:43:50.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043384069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:50.262" endtime="20201117 14:43:50.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043384069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:50.636" endtime="20201117 14:43:50.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.656" endtime="20201117 14:43:50.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.254" endtime="20201117 14:43:50.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.249" endtime="20201117 14:43:50.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:50.679" level="INFO">${RESULT} = [{'time': 0.043466611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.254200000000489e-05, 'source_diff': 8.254200000000489e-05}, {'time': 0.043561625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:50.669" endtime="20201117 14:43:50.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:50.711" level="INFO">${ACCURACY} = {'source_diff': [8.254200000000489e-05, 8.294400000000146e-05, 8.231999999999684e-05, 8.268100000000111e-05, 8.29170000000018e-05, 8.201399999999831e-05, 8.272299999999982e-05, 8.2459e-05, 8.266600000...</msg>
<status status="PASS" starttime="20201117 14:43:50.681" endtime="20201117 14:43:50.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.723" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:43:50.720" endtime="20201117 14:43:50.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.728" level="INFO">VALUE: [8.254200000000489e-05, 8.294400000000146e-05, 8.231999999999684e-05, 8.268100000000111e-05, 8.29170000000018e-05, 8.201399999999831e-05, 8.272299999999982e-05, 8.2459e-05, 8.266600000000207e-05, 8.270799999999384e-05, 8.286100000000352e-05, 8.290300000000222e-05, 8.244400000000096e-05, 8.233299999999694e-05, 8.225000000000593e-05, 8.2846999999997e-05, 8.269500000000068e-05, 8.233400000000335e-05, 8.277799999999863e-05, 8.29590000000005e-05, 8.224999999999899e-05, 8.301399999999931e-05, 8.236100000000302e-05, 8.240199999999531e-05, 8.295799999999409e-05, 8.201399999999831e-05, 8.290300000000222e-05, 8.26669999999946e-05, 8.252800000000532e-05, 8.205600000000396e-05, 8.275000000000643e-05, 8.248599999999967e-05, 8.206999999999659e-05, 8.273599999999992e-05, 8.288900000000265e-05, 8.205499999999755e-05, 8.277799999999863e-05, 8.216700000000104e-05, 8.274999999999949e-05, 8.27919999999982e-05, 8.29720000000006e-05, 8.262500000000284e-05, 8.276399999999906e-05, 8.290300000000222e-05, 8.254200000000489e-05, 8.244500000000043e-05, 8.27369999999994e-05, 8.261099999999633e-05, 8.23469999999965e-05, 8.212500000000234e-05]</msg>
<status status="PASS" starttime="20201117 14:43:50.725" endtime="20201117 14:43:50.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.713" endtime="20201117 14:43:50.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.738" endtime="20201117 14:43:50.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:50.747" endtime="20201117 14:43:50.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.742" endtime="20201117 14:43:50.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.733" endtime="20201117 14:43:50.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.184" endtime="20201117 14:43:50.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.593" endtime="20201117 14:43:50.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:49.591" endtime="20201117 14:43:50.774"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.780" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.804" endtime="20201117 14:43:50.826"></status>
</kw>
<msg timestamp="20201117 14:43:50.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:50.800" endtime="20201117 14:43:50.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:50.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:50.829" endtime="20201117 14:43:50.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.836" endtime="20201117 14:43:50.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.792" endtime="20201117 14:43:50.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.785" endtime="20201117 14:43:50.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:50.861" endtime="20201117 14:43:51.220"></status>
</kw>
<msg timestamp="20201117 14:43:51.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050430875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050514542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:50.857" endtime="20201117 14:43:51.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050430875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050514542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:51.230" endtime="20201117 14:43:51.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.250" endtime="20201117 14:43:51.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.850" endtime="20201117 14:43:51.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.845" endtime="20201117 14:43:51.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:51.269" level="INFO">${RESULT} = [{'time': 0.050514542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.366700000000254e-05, 'source_diff': 8.366700000000254e-05}, {'time': 0.050601542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:51.259" endtime="20201117 14:43:51.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:51.302" level="INFO">${ACCURACY} = {'source_diff': [8.366700000000254e-05, 8.368100000000211e-05, 8.348600000000067e-05, 8.326399999999956e-05, 8.35970000000047e-05, 8.38049999999993e-05, 8.391600000000332e-05, 8.30970000000042e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:43:51.271" endtime="20201117 14:43:51.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.314" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:43:51.312" endtime="20201117 14:43:51.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.320" level="INFO">VALUE: [8.366700000000254e-05, 8.368100000000211e-05, 8.348600000000067e-05, 8.326399999999956e-05, 8.35970000000047e-05, 8.38049999999993e-05, 8.391600000000332e-05, 8.30970000000042e-05, 8.348600000000067e-05, 8.372200000000135e-05, 8.401400000000031e-05, 8.383399999999791e-05, 8.320900000000075e-05, 8.350000000000024e-05, 8.308299999999769e-05, 8.372300000000082e-05, 8.394399999999552e-05, 8.350000000000024e-05, 8.375000000000049e-05, 8.320800000000128e-05, 8.375000000000049e-05, 8.369400000000221e-05, 8.386099999999758e-05, 8.381999999999834e-05, 8.3846999999998e-05, 8.316700000000204e-05, 8.365300000000297e-05, 8.39170000000028e-05, 8.395799999999509e-05, 8.304099999999898e-05, 8.36669999999956e-05, 8.338899999999622e-05, 8.309699999999726e-05, 8.348599999999373e-05, 8.30970000000042e-05, 8.333299999999794e-05, 8.37919999999992e-05, 8.386099999999758e-05, 8.3459000000001e-05, 8.39590000000015e-05, 8.302699999999941e-05, 8.350000000000024e-05, 8.312500000000334e-05, 8.336099999999708e-05, 8.370800000000178e-05, 8.340299999999579e-05, 8.373600000000092e-05, 8.380599999999877e-05, 8.309699999999726e-05, 8.36249999999969e-05]</msg>
<status status="PASS" starttime="20201117 14:43:51.317" endtime="20201117 14:43:51.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.304" endtime="20201117 14:43:51.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.329" endtime="20201117 14:43:51.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:51.338" endtime="20201117 14:43:51.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.334" endtime="20201117 14:43:51.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.324" endtime="20201117 14:43:51.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.781" endtime="20201117 14:43:51.371"></status>
</kw>
<msg timestamp="20201117 14:43:51.372" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.395" endtime="20201117 14:43:51.418"></status>
</kw>
<msg timestamp="20201117 14:43:51.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:51.392" endtime="20201117 14:43:51.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:51.422" endtime="20201117 14:43:51.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.428" endtime="20201117 14:43:51.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.384" endtime="20201117 14:43:51.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.378" endtime="20201117 14:43:51.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.453" endtime="20201117 14:43:51.748"></status>
</kw>
<msg timestamp="20201117 14:43:51.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0512145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:51.450" endtime="20201117 14:43:51.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0512145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:51.753" endtime="20201117 14:43:51.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.762" endtime="20201117 14:43:51.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.442" endtime="20201117 14:43:51.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.437" endtime="20201117 14:43:51.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:51.771" level="INFO">${RESULT} = [{'time': 0.0512145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.337500000000359e-05, 'source_diff': 8.337500000000359e-05}, {'time': 0.051306528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:51.767" endtime="20201117 14:43:51.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:51.785" level="INFO">${ACCURACY} = {'source_diff': [8.337500000000359e-05, 8.351399999999981e-05, 8.365300000000297e-05, 8.375000000000049e-05, 8.319400000000171e-05, 8.39590000000015e-05, 8.322300000000032e-05, 8.331899999999837e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:51.772" endtime="20201117 14:43:51.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.790" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:43:51.789" endtime="20201117 14:43:51.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.793" level="INFO">VALUE: [8.337500000000359e-05, 8.351399999999981e-05, 8.365300000000297e-05, 8.375000000000049e-05, 8.319400000000171e-05, 8.39590000000015e-05, 8.322300000000032e-05, 8.331899999999837e-05, 8.36520000000035e-05, 8.366600000000307e-05, 8.327799999999913e-05, 8.32919999999987e-05, 8.348600000000067e-05, 8.35970000000047e-05, 8.319500000000118e-05, 8.309800000000367e-05, 8.370900000000125e-05, 8.34449999999945e-05, 8.301399999999931e-05, 8.350000000000024e-05, 8.323600000000042e-05, 8.373600000000092e-05, 8.356900000000556e-05, 8.336099999999708e-05, 8.319400000000171e-05, 8.368100000000211e-05, 8.324999999999999e-05, 8.320900000000075e-05, 8.386099999999758e-05, 8.374999999999355e-05, 8.39590000000015e-05, 8.340300000000272e-05, 8.340200000000325e-05, 8.391600000000332e-05, 8.308300000000463e-05, 8.386099999999758e-05, 8.344400000000196e-05, 8.387499999999715e-05, 8.377799999999963e-05, 8.386100000000452e-05, 8.330599999999827e-05, 8.358399999999766e-05, 8.322300000000032e-05, 8.33469999999975e-05, 8.344400000000196e-05, 8.340299999999579e-05, 8.370800000000178e-05, 8.369400000000221e-05, 8.304199999999845e-05, 8.390299999999629e-05]</msg>
<status status="PASS" starttime="20201117 14:43:51.792" endtime="20201117 14:43:51.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.786" endtime="20201117 14:43:51.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.798" endtime="20201117 14:43:51.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:51.802" endtime="20201117 14:43:51.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.800" endtime="20201117 14:43:51.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.795" endtime="20201117 14:43:51.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.374" endtime="20201117 14:43:51.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.777" endtime="20201117 14:43:51.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:50.775" endtime="20201117 14:43:51.824"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.827" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.837" endtime="20201117 14:43:51.855"></status>
</kw>
<msg timestamp="20201117 14:43:51.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:51.836" endtime="20201117 14:43:51.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:51.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:51.857" endtime="20201117 14:43:51.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.860" endtime="20201117 14:43:51.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.832" endtime="20201117 14:43:51.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.829" endtime="20201117 14:43:51.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:51.872" endtime="20201117 14:43:52.158"></status>
</kw>
<msg timestamp="20201117 14:43:52.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027911097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027996014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:51.870" endtime="20201117 14:43:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027911097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027996014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:52.163" endtime="20201117 14:43:52.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.172" endtime="20201117 14:43:52.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.867" endtime="20201117 14:43:52.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.864" endtime="20201117 14:43:52.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:52.180" level="INFO">${RESULT} = [{'time': 0.027996014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.491700000000033e-05, 'source_diff': 8.491700000000033e-05}, {'time': 0.028088986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:52.176" endtime="20201117 14:43:52.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:52.194" level="INFO">${ACCURACY} = {'source_diff': [8.491700000000033e-05, 8.466700000000008e-05, 8.452800000000038e-05, 8.448600000000167e-05, 8.486100000000205e-05, 8.433399999999841e-05, 8.477800000000063e-05, 8.476399999999759e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:52.181" endtime="20201117 14:43:52.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.200" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:43:52.198" endtime="20201117 14:43:52.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.202" level="INFO">VALUE: [8.491700000000033e-05, 8.466700000000008e-05, 8.452800000000038e-05, 8.448600000000167e-05, 8.486100000000205e-05, 8.433399999999841e-05, 8.477800000000063e-05, 8.476399999999759e-05, 8.431899999999937e-05, 8.461200000000127e-05, 8.418000000000314e-05, 8.420799999999881e-05, 8.426400000000056e-05, 8.48050000000003e-05, 8.494499999999947e-05, 8.427800000000013e-05, 8.462500000000137e-05, 8.409699999999826e-05, 8.416699999999958e-05, 8.47920000000002e-05, 8.426299999999762e-05, 8.440300000000026e-05, 8.487499999999815e-05, 8.49309999999999e-05, 8.436099999999808e-05, 8.411099999999783e-05, 8.475000000000149e-05, 8.461099999999833e-05, 8.423600000000142e-05, 8.450000000000124e-05, 8.4153e-05, 8.431899999999937e-05, 8.452800000000038e-05, 8.4846999999999e-05, 8.481899999999987e-05, 8.445799999999906e-05, 8.452700000000091e-05, 8.475000000000149e-05, 8.493099999999643e-05, 8.469400000000321e-05, 8.448600000000167e-05, 8.42919999999997e-05, 8.470800000000278e-05, 8.415199999999706e-05, 8.422300000000132e-05, 8.495800000000303e-05, 8.483299999999944e-05, 8.497199999999566e-05, 8.450000000000124e-05, 8.491600000000432e-05]</msg>
<status status="PASS" starttime="20201117 14:43:52.201" endtime="20201117 14:43:52.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.195" endtime="20201117 14:43:52.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.207" endtime="20201117 14:43:52.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:52.211" endtime="20201117 14:43:52.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.209" endtime="20201117 14:43:52.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.205" endtime="20201117 14:43:52.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.827" endtime="20201117 14:43:52.233"></status>
</kw>
<msg timestamp="20201117 14:43:52.233" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.244" endtime="20201117 14:43:52.262"></status>
</kw>
<msg timestamp="20201117 14:43:52.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:52.242" endtime="20201117 14:43:52.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:52.263" endtime="20201117 14:43:52.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.266" endtime="20201117 14:43:52.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.238" endtime="20201117 14:43:52.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.236" endtime="20201117 14:43:52.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.278" endtime="20201117 14:43:52.629"></status>
</kw>
<msg timestamp="20201117 14:43:52.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:52.276" endtime="20201117 14:43:52.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:52.639" endtime="20201117 14:43:52.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.659" endtime="20201117 14:43:52.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.273" endtime="20201117 14:43:52.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.270" endtime="20201117 14:43:52.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:52.682" level="INFO">${RESULT} = [{'time': 0.025129514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.440300000000026e-05, 'source_diff': 8.440300000000026e-05}, {'time': 0.025227514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:52.672" endtime="20201117 14:43:52.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:52.714" level="INFO">${ACCURACY} = {'source_diff': [8.440300000000026e-05, 8.490300000000076e-05, 8.469500000000268e-05, 8.483399999999891e-05, 8.450000000000124e-05, 8.472300000000182e-05, 8.401299999999737e-05, 8.465200000000103e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:52.684" endtime="20201117 14:43:52.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.726" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:43:52.723" endtime="20201117 14:43:52.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.732" level="INFO">VALUE: [8.440300000000026e-05, 8.490300000000076e-05, 8.469500000000268e-05, 8.483399999999891e-05, 8.450000000000124e-05, 8.472300000000182e-05, 8.401299999999737e-05, 8.465200000000103e-05, 8.454100000000048e-05, 8.474999999999802e-05, 8.504200000000045e-05, 8.440300000000026e-05, 8.448600000000167e-05, 8.487500000000162e-05, 8.420900000000175e-05, 8.469499999999922e-05, 8.427800000000013e-05, 8.455500000000005e-05, 8.425000000000099e-05, 8.474999999999802e-05, 8.408299999999869e-05, 8.438900000000069e-05, 8.441699999999983e-05, 8.461099999999833e-05, 8.434700000000198e-05, 8.456999999999909e-05, 8.472300000000182e-05, 8.402799999999988e-05, 8.487500000000162e-05, 8.40980000000012e-05, 8.469500000000268e-05, 8.456899999999962e-05, 8.451400000000081e-05, 8.44720000000021e-05, 8.461099999999833e-05, 8.420799999999881e-05, 8.408299999999869e-05, 8.448600000000167e-05, 8.501400000000131e-05, 8.416700000000304e-05, 8.46530000000005e-05, 8.413800000000096e-05, 8.459799999999823e-05, 8.490200000000128e-05, 8.499999999999827e-05, 8.449999999999777e-05, 8.423599999999795e-05, 8.426400000000056e-05, 8.454199999999995e-05, 8.408299999999869e-05]</msg>
<status status="PASS" starttime="20201117 14:43:52.728" endtime="20201117 14:43:52.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.716" endtime="20201117 14:43:52.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.742" endtime="20201117 14:43:52.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:52.751" endtime="20201117 14:43:52.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.746" endtime="20201117 14:43:52.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.737" endtime="20201117 14:43:52.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.234" endtime="20201117 14:43:52.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.825" endtime="20201117 14:43:52.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:51.824" endtime="20201117 14:43:52.778"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.784" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.807" endtime="20201117 14:43:52.829"></status>
</kw>
<msg timestamp="20201117 14:43:52.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:52.803" endtime="20201117 14:43:52.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:52.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:52.832" endtime="20201117 14:43:52.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.839" endtime="20201117 14:43:52.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.796" endtime="20201117 14:43:52.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.789" endtime="20201117 14:43:52.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:52.864" endtime="20201117 14:43:53.225"></status>
</kw>
<msg timestamp="20201117 14:43:53.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049467917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:52.861" endtime="20201117 14:43:53.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049467917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:53.235" endtime="20201117 14:43:53.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.255" endtime="20201117 14:43:53.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.853" endtime="20201117 14:43:53.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.848" endtime="20201117 14:43:53.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:53.274" level="INFO">${RESULT} = [{'time': 0.049553722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.58050000000013e-05, 'source_diff': 8.58050000000013e-05}, {'time': 0.049646722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:53.264" endtime="20201117 14:43:53.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:53.306" level="INFO">${ACCURACY} = {'source_diff': [8.58050000000013e-05, 8.527799999999419e-05, 8.505600000000002e-05, 8.522200000000285e-05, 8.515300000000448e-05, 8.505600000000002e-05, 8.594500000000393e-05, 8.577800000000163e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:53.276" endtime="20201117 14:43:53.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.318" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:53.315" endtime="20201117 14:43:53.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.325" level="INFO">VALUE: [8.58050000000013e-05, 8.527799999999419e-05, 8.505600000000002e-05, 8.522200000000285e-05, 8.515300000000448e-05, 8.505600000000002e-05, 8.594500000000393e-05, 8.577800000000163e-05, 8.559800000000617e-05, 8.51119999999983e-05, 8.513899999999797e-05, 8.505500000000055e-05, 8.600000000000274e-05, 8.583300000000044e-05, 8.537499999999865e-05, 8.601400000000231e-05, 8.555600000000052e-05, 8.54170000000043e-05, 8.543099999999693e-05, 8.591699999999786e-05, 8.59590000000035e-05, 8.56669999999976e-05, 8.573600000000292e-05, 8.551400000000181e-05, 8.5847e-05, 8.504100000000098e-05, 8.523599999999548e-05, 8.595800000000403e-05, 8.570799999999684e-05, 8.531999999999984e-05, 8.513899999999797e-05, 8.513899999999797e-05, 8.570899999999632e-05, 8.523600000000242e-05, 8.559699999999976e-05, 8.522199999999591e-05, 8.592999999999795e-05, 8.590300000000523e-05, 8.595800000000403e-05, 8.588899999999872e-05, 8.504200000000045e-05, 8.569399999999727e-05, 8.513899999999797e-05, 8.568099999999718e-05, 8.559699999999976e-05, 8.550000000000224e-05, 8.600000000000274e-05, 8.54720000000031e-05, 8.565199999999856e-05, 8.511099999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:43:53.321" endtime="20201117 14:43:53.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.308" endtime="20201117 14:43:53.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.335" endtime="20201117 14:43:53.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:53.345" endtime="20201117 14:43:53.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.340" endtime="20201117 14:43:53.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.330" endtime="20201117 14:43:53.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.785" endtime="20201117 14:43:53.371"></status>
</kw>
<msg timestamp="20201117 14:43:53.372" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.395" endtime="20201117 14:43:53.418"></status>
</kw>
<msg timestamp="20201117 14:43:53.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:53.391" endtime="20201117 14:43:53.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:53.421" endtime="20201117 14:43:53.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.428" endtime="20201117 14:43:53.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.384" endtime="20201117 14:43:53.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.377" endtime="20201117 14:43:53.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.453" endtime="20201117 14:43:53.814"></status>
</kw>
<msg timestamp="20201117 14:43:53.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043690083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043776028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:53.449" endtime="20201117 14:43:53.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043690083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043776028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:53.824" endtime="20201117 14:43:53.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.844" endtime="20201117 14:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.442" endtime="20201117 14:43:53.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.437" endtime="20201117 14:43:53.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:53.865" level="INFO">${RESULT} = [{'time': 0.043776028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.594500000000393e-05, 'source_diff': 8.594500000000393e-05}, {'time': 0.043869972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:53.855" endtime="20201117 14:43:53.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:53.897" level="INFO">${ACCURACY} = {'source_diff': [8.594500000000393e-05, 8.508299999999969e-05, 8.552800000000138e-05, 8.545800000000353e-05, 8.574999999999555e-05, 8.530600000000027e-05, 8.502800000000088e-05, 8.544500000000343e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:53.867" endtime="20201117 14:43:53.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.909" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:53.907" endtime="20201117 14:43:53.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.915" level="INFO">VALUE: [8.594500000000393e-05, 8.508299999999969e-05, 8.552800000000138e-05, 8.545800000000353e-05, 8.574999999999555e-05, 8.530600000000027e-05, 8.502800000000088e-05, 8.544500000000343e-05, 8.550000000000224e-05, 8.572200000000335e-05, 8.593099999999743e-05, 8.520799999999634e-05, 8.54720000000031e-05, 8.579099999999479e-05, 8.531999999999984e-05, 8.504200000000045e-05, 8.536099999999908e-05, 8.583300000000044e-05, 8.540199999999831e-05, 8.51249999999984e-05, 8.513899999999797e-05, 8.544500000000343e-05, 8.582000000000034e-05, 8.533299999999994e-05, 8.525000000000199e-05, 8.504099999999404e-05, 8.540299999999779e-05, 8.525000000000199e-05, 8.590299999999829e-05, 8.511099999999883e-05, 8.575000000000249e-05, 8.51669999999971e-05, 8.531999999999984e-05, 8.573599999999598e-05, 8.51119999999983e-05, 8.506900000000012e-05, 8.600000000000274e-05, 8.588899999999872e-05, 8.505500000000055e-05, 8.576400000000206e-05, 8.542999999999745e-05, 8.537499999999865e-05, 8.570799999999684e-05, 8.582000000000034e-05, 8.513899999999797e-05, 8.5459000000003e-05, 8.595799999999709e-05, 8.576300000000259e-05, 8.594399999999752e-05, 8.574999999999555e-05]</msg>
<status status="PASS" starttime="20201117 14:43:53.912" endtime="20201117 14:43:53.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.900" endtime="20201117 14:43:53.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.925" endtime="20201117 14:43:53.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:53.934" endtime="20201117 14:43:53.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.929" endtime="20201117 14:43:53.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.920" endtime="20201117 14:43:53.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.373" endtime="20201117 14:43:53.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.781" endtime="20201117 14:43:53.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:52.779" endtime="20201117 14:43:53.961"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:53.967" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:53.990" endtime="20201117 14:43:54.013"></status>
</kw>
<msg timestamp="20201117 14:43:54.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:53.986" endtime="20201117 14:43:54.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:54.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:54.016" endtime="20201117 14:43:54.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.023" endtime="20201117 14:43:54.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.979" endtime="20201117 14:43:54.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.972" endtime="20201117 14:43:54.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.048" endtime="20201117 14:43:54.412"></status>
</kw>
<msg timestamp="20201117 14:43:54.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049838653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049924889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:54.044" endtime="20201117 14:43:54.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:54.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049838653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049924889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:54.422" endtime="20201117 14:43:54.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.442" endtime="20201117 14:43:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.036" endtime="20201117 14:43:54.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.031" endtime="20201117 14:43:54.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:54.462" level="INFO">${RESULT} = [{'time': 0.049924889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.623600000000342e-05, 'source_diff': 8.623600000000342e-05}, {'time': 0.050026903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:54.453" endtime="20201117 14:43:54.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:54.495" level="INFO">${ACCURACY} = {'source_diff': [8.623600000000342e-05, 8.68199999999944e-05, 8.615299999999854e-05, 8.66249999999999e-05, 8.608400000000016e-05, 8.619400000000471e-05, 8.644400000000496e-05, 8.609700000000026e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:43:54.464" endtime="20201117 14:43:54.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:54.507" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:54.505" endtime="20201117 14:43:54.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:54.513" level="INFO">VALUE: [8.623600000000342e-05, 8.68199999999944e-05, 8.615299999999854e-05, 8.66249999999999e-05, 8.608400000000016e-05, 8.619400000000471e-05, 8.644400000000496e-05, 8.609700000000026e-05, 8.700000000000374e-05, 8.648599999999673e-05, 8.663899999999947e-05, 8.619399999999777e-05, 8.694399999999852e-05, 8.6944999999998e-05, 8.668099999999818e-05, 8.62920000000017e-05, 8.64999999999963e-05, 8.658400000000066e-05, 8.68050000000023e-05, 8.654100000000248e-05, 8.690299999999929e-05, 8.648600000000367e-05, 8.661100000000033e-05, 8.675000000000349e-05, 8.691699999999886e-05, 8.683400000000091e-05, 8.683400000000091e-05, 8.686100000000058e-05, 8.641600000000582e-05, 8.687500000000015e-05, 8.608300000000069e-05, 8.604100000000198e-05, 8.611099999999983e-05, 8.702800000000288e-05, 8.690299999999929e-05, 8.622199999999691e-05, 8.66249999999999e-05, 8.608400000000016e-05, 8.687500000000015e-05, 8.66249999999999e-05, 8.620899999999682e-05, 8.679100000000273e-05, 8.608300000000069e-05, 8.66799999999987e-05, 8.691599999999938e-05, 8.68050000000023e-05, 8.631900000000137e-05, 8.698600000000417e-05, 8.616700000000505e-05, 8.633400000000041e-05]</msg>
<status status="PASS" starttime="20201117 14:43:54.509" endtime="20201117 14:43:54.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.497" endtime="20201117 14:43:54.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.522" endtime="20201117 14:43:54.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:54.531" endtime="20201117 14:43:54.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.527" endtime="20201117 14:43:54.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.517" endtime="20201117 14:43:54.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.968" endtime="20201117 14:43:54.559"></status>
</kw>
<msg timestamp="20201117 14:43:54.559" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.585" endtime="20201117 14:43:54.607"></status>
</kw>
<msg timestamp="20201117 14:43:54.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:54.581" endtime="20201117 14:43:54.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:54.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:54.610" endtime="20201117 14:43:54.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.617" endtime="20201117 14:43:54.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.573" endtime="20201117 14:43:54.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.566" endtime="20201117 14:43:54.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:54.642" endtime="20201117 14:43:55.007"></status>
</kw>
<msg timestamp="20201117 14:43:55.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046835653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:54.639" endtime="20201117 14:43:55.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046835653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:55.017" endtime="20201117 14:43:55.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.038" endtime="20201117 14:43:55.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.631" endtime="20201117 14:43:55.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.626" endtime="20201117 14:43:55.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:55.061" level="INFO">${RESULT} = [{'time': 0.046922458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.68050000000023e-05, 'source_diff': 8.68050000000023e-05}, {'time': 0.047023444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:55.051" endtime="20201117 14:43:55.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:55.094" level="INFO">${ACCURACY} = {'source_diff': [8.68050000000023e-05, 8.624999999999605e-05, 8.697199999999766e-05, 8.608300000000069e-05, 8.651400000000281e-05, 8.648599999999673e-05, 8.655600000000152e-05, 8.63470000000005e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:43:55.063" endtime="20201117 14:43:55.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.105" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:55.103" endtime="20201117 14:43:55.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.111" level="INFO">VALUE: [8.68050000000023e-05, 8.624999999999605e-05, 8.697199999999766e-05, 8.608300000000069e-05, 8.651400000000281e-05, 8.648599999999673e-05, 8.655600000000152e-05, 8.63470000000005e-05, 8.623600000000342e-05, 8.683300000000144e-05, 8.694399999999852e-05, 8.609799999999973e-05, 8.676400000000306e-05, 8.672200000000435e-05, 8.658300000000119e-05, 8.651400000000281e-05, 8.656899999999468e-05, 8.693000000000589e-05, 8.69720000000046e-05, 8.64999999999963e-05, 8.656900000000162e-05, 8.655600000000152e-05, 8.650000000000324e-05, 8.648599999999673e-05, 8.6847000000001e-05, 8.675000000000349e-05, 8.644399999999802e-05, 8.644399999999802e-05, 8.6847000000001e-05, 8.683300000000144e-05, 8.633300000000094e-05, 8.681899999999493e-05, 8.623600000000342e-05, 8.626399999999562e-05, 8.654200000000195e-05, 8.623599999999648e-05, 8.66249999999999e-05, 8.604100000000198e-05, 8.613899999999897e-05, 8.644400000000496e-05, 8.691599999999938e-05, 8.627800000000213e-05, 8.629199999999476e-05, 8.694399999999852e-05, 8.669399999999827e-05, 8.627800000000213e-05, 8.622299999999639e-05, 8.665299999999904e-05, 8.633400000000041e-05, 8.658300000000119e-05]</msg>
<status status="PASS" starttime="20201117 14:43:55.108" endtime="20201117 14:43:55.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.096" endtime="20201117 14:43:55.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.120" endtime="20201117 14:43:55.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:55.129" endtime="20201117 14:43:55.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.125" endtime="20201117 14:43:55.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.116" endtime="20201117 14:43:55.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:54.561" endtime="20201117 14:43:55.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.964" endtime="20201117 14:43:55.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:53.962" endtime="20201117 14:43:55.156"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.163" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.188" endtime="20201117 14:43:55.210"></status>
</kw>
<msg timestamp="20201117 14:43:55.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:55.184" endtime="20201117 14:43:55.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:55.214" endtime="20201117 14:43:55.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.221" endtime="20201117 14:43:55.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.176" endtime="20201117 14:43:55.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.170" endtime="20201117 14:43:55.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.246" endtime="20201117 14:43:55.596"></status>
</kw>
<msg timestamp="20201117 14:43:55.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052723306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052810958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:55.243" endtime="20201117 14:43:55.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052723306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052810958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:55.601" endtime="20201117 14:43:55.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.609" endtime="20201117 14:43:55.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.235" endtime="20201117 14:43:55.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.229" endtime="20201117 14:43:55.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:55.618" level="INFO">${RESULT} = [{'time': 0.052810958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.765200000000056e-05, 'source_diff': 8.765200000000056e-05}, {'time': 0.052905972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:55.614" endtime="20201117 14:43:55.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:55.632" level="INFO">${ACCURACY} = {'source_diff': [8.765200000000056e-05, 8.731900000000237e-05, 8.763900000000047e-05, 8.791699999999986e-05, 8.791699999999986e-05, 8.729199999999576e-05, 8.71669999999991e-05, 8.736100000000108e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:55.619" endtime="20201117 14:43:55.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.637" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:55.636" endtime="20201117 14:43:55.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.640" level="INFO">VALUE: [8.765200000000056e-05, 8.731900000000237e-05, 8.763900000000047e-05, 8.791699999999986e-05, 8.791699999999986e-05, 8.729199999999576e-05, 8.71669999999991e-05, 8.736100000000108e-05, 8.76250000000009e-05, 8.727800000000313e-05, 8.808400000000216e-05, 8.759700000000176e-05, 8.745799999999859e-05, 8.713899999999997e-05, 8.708300000000169e-05, 8.724999999999705e-05, 8.783300000000244e-05, 8.7332999999995e-05, 8.732000000000184e-05, 8.713899999999997e-05, 8.754099999999654e-05, 8.795799999999909e-05, 8.776400000000406e-05, 8.74999999999973e-05, 8.797199999999866e-05, 8.727800000000313e-05, 8.755600000000252e-05, 8.763900000000047e-05, 8.776399999999712e-05, 8.752800000000338e-05, 8.71250000000004e-05, 8.76250000000009e-05, 8.80129999999979e-05, 8.773699999999746e-05, 8.718099999999868e-05, 8.708299999999475e-05, 8.724999999999705e-05, 8.787500000000115e-05, 8.747199999999816e-05, 8.709799999999379e-05, 8.741699999999936e-05, 8.795899999999857e-05, 8.788900000000072e-05, 8.775000000000449e-05, 8.719499999999825e-05, 8.727799999999619e-05, 8.766600000000013e-05, 8.752700000000391e-05, 8.788899999999378e-05, 8.731900000000237e-05]</msg>
<status status="PASS" starttime="20201117 14:43:55.639" endtime="20201117 14:43:55.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.633" endtime="20201117 14:43:55.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.644" endtime="20201117 14:43:55.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:55.648" endtime="20201117 14:43:55.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.646" endtime="20201117 14:43:55.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.642" endtime="20201117 14:43:55.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.165" endtime="20201117 14:43:55.670"></status>
</kw>
<msg timestamp="20201117 14:43:55.670" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.681" endtime="20201117 14:43:55.700"></status>
</kw>
<msg timestamp="20201117 14:43:55.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:55.679" endtime="20201117 14:43:55.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:55.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:55.702" endtime="20201117 14:43:55.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.705" endtime="20201117 14:43:55.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.676" endtime="20201117 14:43:55.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.673" endtime="20201117 14:43:55.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:55.717" endtime="20201117 14:43:56.016"></status>
</kw>
<msg timestamp="20201117 14:43:56.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025108236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:55.715" endtime="20201117 14:43:56.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025108236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:56.026" endtime="20201117 14:43:56.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.046" endtime="20201117 14:43:56.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.712" endtime="20201117 14:43:56.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.709" endtime="20201117 14:43:56.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:56.066" level="INFO">${RESULT} = [{'time': 0.025196181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.794500000000247e-05, 'source_diff': 8.794500000000247e-05}, {'time': 0.025295208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:56.057" endtime="20201117 14:43:56.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:56.099" level="INFO">${ACCURACY} = {'source_diff': [8.794500000000247e-05, 8.758299999999872e-05, 8.733300000000194e-05, 8.76799999999997e-05, 8.787500000000115e-05, 8.763900000000047e-05, 8.729199999999923e-05, 8.795899999999857e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:56.069" endtime="20201117 14:43:56.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.111" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:56.108" endtime="20201117 14:43:56.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.116" level="INFO">VALUE: [8.794500000000247e-05, 8.758299999999872e-05, 8.733300000000194e-05, 8.76799999999997e-05, 8.787500000000115e-05, 8.763900000000047e-05, 8.729199999999923e-05, 8.795899999999857e-05, 8.754199999999948e-05, 8.704199999999898e-05, 8.802700000000094e-05, 8.797200000000213e-05, 8.786100000000158e-05, 8.742999999999945e-05, 8.769500000000222e-05, 8.708300000000169e-05, 8.713899999999997e-05, 8.790300000000029e-05, 8.725000000000052e-05, 8.747199999999816e-05, 8.791699999999986e-05, 8.740299999999979e-05, 8.786099999999811e-05, 8.741699999999936e-05, 8.777700000000069e-05, 8.711100000000083e-05, 8.76799999999997e-05, 8.704099999999951e-05, 8.723599999999748e-05, 8.761100000000133e-05, 8.793099999999943e-05, 8.770799999999884e-05, 8.741699999999936e-05, 8.722300000000086e-05, 8.723600000000095e-05, 8.750000000000077e-05, 8.800000000000127e-05, 8.787499999999768e-05, 8.750000000000077e-05, 8.737500000000065e-05, 8.71250000000004e-05, 8.733300000000194e-05, 8.761100000000133e-05, 8.770800000000231e-05, 8.79730000000016e-05, 8.763900000000047e-05, 8.737500000000065e-05, 8.743099999999893e-05, 8.748599999999773e-05, 8.709699999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:43:56.113" endtime="20201117 14:43:56.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.101" endtime="20201117 14:43:56.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.126" endtime="20201117 14:43:56.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:56.135" endtime="20201117 14:43:56.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.130" endtime="20201117 14:43:56.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.121" endtime="20201117 14:43:56.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.671" endtime="20201117 14:43:56.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.160" endtime="20201117 14:43:56.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:55.157" endtime="20201117 14:43:56.162"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.168" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.192" endtime="20201117 14:43:56.215"></status>
</kw>
<msg timestamp="20201117 14:43:56.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:56.188" endtime="20201117 14:43:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:56.219" endtime="20201117 14:43:56.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.226" endtime="20201117 14:43:56.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.180" endtime="20201117 14:43:56.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.174" endtime="20201117 14:43:56.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.251" endtime="20201117 14:43:56.615"></status>
</kw>
<msg timestamp="20201117 14:43:56.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050605972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:56.247" endtime="20201117 14:43:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050605972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:56.625" endtime="20201117 14:43:56.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.645" endtime="20201117 14:43:56.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.239" endtime="20201117 14:43:56.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.234" endtime="20201117 14:43:56.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:56.664" level="INFO">${RESULT} = [{'time': 0.050694764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.87920000000042e-05, 'source_diff': 8.87920000000042e-05}, {'time': 0.050790764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:56.654" endtime="20201117 14:43:56.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:56.696" level="INFO">${ACCURACY} = {'source_diff': [8.87920000000042e-05, 8.8945e-05, 8.848599999999873e-05, 8.8945e-05, 8.838900000000122e-05, 8.894400000000052e-05, 8.840200000000131e-05, 8.81250000000014e-05, 8.808299999999575e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:56.666" endtime="20201117 14:43:56.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.708" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:56.706" endtime="20201117 14:43:56.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.714" level="INFO">VALUE: [8.87920000000042e-05, 8.8945e-05, 8.848599999999873e-05, 8.8945e-05, 8.838900000000122e-05, 8.894400000000052e-05, 8.840200000000131e-05, 8.81250000000014e-05, 8.808299999999575e-05, 8.834700000000251e-05, 8.79999999999978e-05, 8.883300000000344e-05, 8.838900000000122e-05, 8.893100000000043e-05, 8.819499999999925e-05, 8.876399999999812e-05, 8.872199999999941e-05, 8.834699999999557e-05, 8.833300000000294e-05, 8.804100000000398e-05, 8.873599999999898e-05, 8.86670000000006e-05, 8.886100000000258e-05, 8.895800000000009e-05, 8.82920000000037e-05, 8.804200000000345e-05, 8.830599999999633e-05, 8.836100000000208e-05, 8.872200000000635e-05, 8.86800000000007e-05, 8.886099999999564e-05, 8.850000000000524e-05, 8.827800000000413e-05, 8.82920000000037e-05, 8.823599999999848e-05, 8.809700000000226e-05, 8.850000000000524e-05, 8.845899999999907e-05, 8.843099999999993e-05, 8.897199999999966e-05, 8.81800000000002e-05, 8.883300000000344e-05, 8.829100000000423e-05, 8.895800000000009e-05, 8.879100000000473e-05, 8.801400000000431e-05, 8.858400000000266e-05, 8.833300000000294e-05, 8.807000000000259e-05, 8.868100000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:43:56.711" endtime="20201117 14:43:56.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.698" endtime="20201117 14:43:56.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.723" endtime="20201117 14:43:56.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:56.732" endtime="20201117 14:43:56.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.727" endtime="20201117 14:43:56.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.718" endtime="20201117 14:43:56.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.169" endtime="20201117 14:43:56.765"></status>
</kw>
<msg timestamp="20201117 14:43:56.765" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.790" endtime="20201117 14:43:56.812"></status>
</kw>
<msg timestamp="20201117 14:43:56.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:56.786" endtime="20201117 14:43:56.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:56.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:56.815" endtime="20201117 14:43:56.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.822" endtime="20201117 14:43:56.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.778" endtime="20201117 14:43:56.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.772" endtime="20201117 14:43:56.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:56.847" endtime="20201117 14:43:57.210"></status>
</kw>
<msg timestamp="20201117 14:43:57.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051151208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05124, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:43:56.844" endtime="20201117 14:43:57.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051151208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05124, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:43:57.221" endtime="20201117 14:43:57.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.240" endtime="20201117 14:43:57.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.836" endtime="20201117 14:43:57.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.831" endtime="20201117 14:43:57.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:57.263" level="INFO">${RESULT} = [{'time': 0.05124, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.87920000000042e-05, 'source_diff': 8.87920000000042e-05}, {'time': 0.051333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8652...</msg>
<status status="PASS" starttime="20201117 14:43:57.254" endtime="20201117 14:43:57.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:57.369" level="INFO">${ACCURACY} = {'source_diff': [8.87920000000042e-05, 8.86529999999941e-05, 8.855600000000352e-05, 8.840300000000079e-05, 8.806999999999565e-05, 8.897299999999914e-05, 8.870899999999932e-05, 8.84999999999983e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:43:57.266" endtime="20201117 14:43:57.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.381" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:57.379" endtime="20201117 14:43:57.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.387" level="INFO">VALUE: [8.87920000000042e-05, 8.86529999999941e-05, 8.855600000000352e-05, 8.840300000000079e-05, 8.806999999999565e-05, 8.897299999999914e-05, 8.870899999999932e-05, 8.84999999999983e-05, 8.89999999999988e-05, 8.881899999999693e-05, 8.829099999999729e-05, 8.818099999999968e-05, 8.850000000000524e-05, 8.888800000000224e-05, 8.883300000000344e-05, 8.879199999999726e-05, 8.890300000000129e-05, 8.857000000000309e-05, 8.845899999999907e-05, 8.879100000000473e-05, 8.808300000000269e-05, 8.886100000000258e-05, 8.829099999999729e-05, 8.893100000000043e-05, 8.806999999999565e-05, 8.863900000000147e-05, 8.845799999999959e-05, 8.890300000000129e-05, 8.841700000000036e-05, 8.891700000000086e-05, 8.884699999999607e-05, 8.855499999999711e-05, 8.867999999999376e-05, 8.805500000000355e-05, 8.84999999999983e-05, 8.813900000000097e-05, 8.893000000000095e-05, 8.874999999999855e-05, 8.873599999999898e-05, 8.823599999999848e-05, 8.827799999999719e-05, 8.855599999999658e-05, 8.86250000000019e-05, 8.845799999999959e-05, 8.887499999999521e-05, 8.898599999999923e-05, 8.856999999999615e-05, 8.804200000000345e-05, 8.819399999999977e-05, 8.808300000000269e-05]</msg>
<status status="PASS" starttime="20201117 14:43:57.384" endtime="20201117 14:43:57.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.371" endtime="20201117 14:43:57.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.397" endtime="20201117 14:43:57.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:57.406" endtime="20201117 14:43:57.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.401" endtime="20201117 14:43:57.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.391" endtime="20201117 14:43:57.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.767" endtime="20201117 14:43:57.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.165" endtime="20201117 14:43:57.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:56.163" endtime="20201117 14:43:57.433"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.439" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.464" endtime="20201117 14:43:57.487"></status>
</kw>
<msg timestamp="20201117 14:43:57.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:57.460" endtime="20201117 14:43:57.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:57.490" endtime="20201117 14:43:57.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.497" endtime="20201117 14:43:57.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.451" endtime="20201117 14:43:57.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.444" endtime="20201117 14:43:57.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.522" endtime="20201117 14:43:57.882"></status>
</kw>
<msg timestamp="20201117 14:43:57.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051921917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:57.518" endtime="20201117 14:43:57.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051921917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:57.892" endtime="20201117 14:43:57.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.912" endtime="20201117 14:43:57.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.511" endtime="20201117 14:43:57.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.506" endtime="20201117 14:43:57.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:57.931" level="INFO">${RESULT} = [{'time': 0.052011736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.981900000000487e-05, 'source_diff': 8.981900000000487e-05}, {'time': 0.052112667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:57.921" endtime="20201117 14:43:57.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:57.963" level="INFO">${ACCURACY} = {'source_diff': [8.981900000000487e-05, 8.958400000000366e-05, 8.987499999999621e-05, 8.927799999999819e-05, 8.923599999999948e-05, 8.995800000000109e-05, 8.934700000000351e-05, 8.908300000000369e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:57.933" endtime="20201117 14:43:57.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.975" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:57.972" endtime="20201117 14:43:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:57.981" level="INFO">VALUE: [8.981900000000487e-05, 8.958400000000366e-05, 8.987499999999621e-05, 8.927799999999819e-05, 8.923599999999948e-05, 8.995800000000109e-05, 8.934700000000351e-05, 8.908300000000369e-05, 8.905599999999708e-05, 8.968100000000118e-05, 8.933300000000394e-05, 8.94450000000005e-05, 8.952799999999844e-05, 8.944400000000102e-05, 8.911199999999536e-05, 8.938900000000222e-05, 8.976399999999912e-05, 8.947200000000016e-05, 8.929099999999829e-05, 8.948599999999973e-05, 8.972200000000041e-05, 8.958299999999725e-05, 8.997300000000014e-05, 8.96250000000029e-05, 8.908400000000316e-05, 8.955599999999758e-05, 8.979199999999826e-05, 8.924999999999905e-05, 8.988800000000324e-05, 8.970800000000084e-05, 8.944400000000102e-05, 8.970800000000084e-05, 8.972200000000041e-05, 8.981899999999793e-05, 8.916699999999417e-05, 8.983399999999697e-05, 8.911100000000283e-05, 8.909799999999579e-05, 8.982000000000434e-05, 8.924999999999905e-05, 8.951399999999887e-05, 8.908299999999675e-05, 8.954199999999801e-05, 8.909700000000326e-05, 8.923599999999948e-05, 8.991700000000186e-05, 8.919500000000025e-05, 8.98199999999974e-05, 8.940200000000231e-05, 8.91659999999947e-05]</msg>
<status status="PASS" starttime="20201117 14:43:57.977" endtime="20201117 14:43:57.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.965" endtime="20201117 14:43:57.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:57.991" endtime="20201117 14:43:57.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:58.000" endtime="20201117 14:43:58.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.995" endtime="20201117 14:43:58.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.986" endtime="20201117 14:43:58.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.440" endtime="20201117 14:43:58.026"></status>
</kw>
<msg timestamp="20201117 14:43:58.026" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.050" endtime="20201117 14:43:58.074"></status>
</kw>
<msg timestamp="20201117 14:43:58.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:58.046" endtime="20201117 14:43:58.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:58.077" endtime="20201117 14:43:58.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.084" endtime="20201117 14:43:58.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.038" endtime="20201117 14:43:58.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.032" endtime="20201117 14:43:58.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.109" endtime="20201117 14:43:58.471"></status>
</kw>
<msg timestamp="20201117 14:43:58.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044897111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044986694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:58.106" endtime="20201117 14:43:58.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044897111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044986694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:58.481" endtime="20201117 14:43:58.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.501" endtime="20201117 14:43:58.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.098" endtime="20201117 14:43:58.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.093" endtime="20201117 14:43:58.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:58.521" level="INFO">${RESULT} = [{'time': 0.044986694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958299999999725e-05, 'source_diff': 8.958299999999725e-05}, {'time': 0.045086694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:58.511" endtime="20201117 14:43:58.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:58.554" level="INFO">${ACCURACY} = {'source_diff': [8.958299999999725e-05, 8.913799999999555e-05, 8.908299999999675e-05, 8.974999999999955e-05, 8.972200000000041e-05, 8.908300000000369e-05, 8.920800000000034e-05, 8.945799999999365e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:58.523" endtime="20201117 14:43:58.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.565" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:58.563" endtime="20201117 14:43:58.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.571" level="INFO">VALUE: [8.958299999999725e-05, 8.913799999999555e-05, 8.908299999999675e-05, 8.974999999999955e-05, 8.972200000000041e-05, 8.908300000000369e-05, 8.920800000000034e-05, 8.945799999999365e-05, 8.98329999999975e-05, 8.957000000000409e-05, 8.922199999999991e-05, 8.909700000000326e-05, 8.937500000000265e-05, 8.96800000000017e-05, 8.966600000000213e-05, 8.943000000000145e-05, 8.98329999999975e-05, 8.915300000000154e-05, 8.944400000000102e-05, 8.973599999999998e-05, 8.945800000000059e-05, 8.945900000000007e-05, 8.901399999999837e-05, 8.958399999999672e-05, 8.943100000000093e-05, 8.955500000000505e-05, 8.908299999999675e-05, 8.965199999999562e-05, 8.91659999999947e-05, 8.92920000000047e-05, 8.994399999999458e-05, 8.943100000000093e-05, 8.944400000000102e-05, 8.995900000000057e-05, 8.963899999999553e-05, 8.911100000000283e-05, 8.916600000000163e-05, 8.902700000000541e-05, 8.909699999999632e-05, 8.94999999999993e-05, 8.923599999999948e-05, 8.955600000000452e-05, 8.991699999999492e-05, 8.919400000000077e-05, 8.979199999999826e-05, 8.979199999999826e-05, 8.924999999999905e-05, 8.984699999999707e-05, 8.99999999999998e-05, 8.981899999999793e-05]</msg>
<status status="PASS" starttime="20201117 14:43:58.568" endtime="20201117 14:43:58.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.556" endtime="20201117 14:43:58.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.581" endtime="20201117 14:43:58.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:58.590" endtime="20201117 14:43:58.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.586" endtime="20201117 14:43:58.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.577" endtime="20201117 14:43:58.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.028" endtime="20201117 14:43:58.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.436" endtime="20201117 14:43:58.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:57.434" endtime="20201117 14:43:58.618"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.623" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.646" endtime="20201117 14:43:58.669"></status>
</kw>
<msg timestamp="20201117 14:43:58.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:58.643" endtime="20201117 14:43:58.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:58.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:58.673" endtime="20201117 14:43:58.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.679" endtime="20201117 14:43:58.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.635" endtime="20201117 14:43:58.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.629" endtime="20201117 14:43:58.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:58.706" endtime="20201117 14:43:59.066"></status>
</kw>
<msg timestamp="20201117 14:43:59.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049339292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049429361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:58.703" endtime="20201117 14:43:59.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049339292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049429361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:59.076" endtime="20201117 14:43:59.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.096" endtime="20201117 14:43:59.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.693" endtime="20201117 14:43:59.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.688" endtime="20201117 14:43:59.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:59.115" level="INFO">${RESULT} = [{'time': 0.049429361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.006899999999818e-05, 'source_diff': 9.006899999999818e-05}, {'time': 0.049533389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:59.105" endtime="20201117 14:43:59.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:59.147" level="INFO">${ACCURACY} = {'source_diff': [9.006899999999818e-05, 9.030599999999833e-05, 9.054199999999901e-05, 9.06529999999961e-05, 9.013899999999603e-05, 9.070900000000132e-05, 9.011099999999689e-05, 9.036100000000408e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:59.117" endtime="20201117 14:43:59.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.159" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:59.156" endtime="20201117 14:43:59.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.165" level="INFO">VALUE: [9.006899999999818e-05, 9.030599999999833e-05, 9.054199999999901e-05, 9.06529999999961e-05, 9.013899999999603e-05, 9.070900000000132e-05, 9.011099999999689e-05, 9.036100000000408e-05, 9.058299999999825e-05, 9.075000000000055e-05, 9.004099999999904e-05, 9.031900000000537e-05, 9.045800000000159e-05, 9.029199999999876e-05, 9.054200000000595e-05, 9.077799999999969e-05, 9.01250000000034e-05, 9.030599999999833e-05, 9.06529999999961e-05, 9.001399999999937e-05, 9.004099999999904e-05, 9.025000000000005e-05, 9.072200000000141e-05, 9.069400000000227e-05, 9.098600000000123e-05, 9.091700000000286e-05, 9.077700000000022e-05, 9.080599999999883e-05, 9.006999999999765e-05, 9.041700000000236e-05, 9.080499999999936e-05, 9.084699999999807e-05, 9.01800000000022e-05, 9.005499999999861e-05, 9.026399999999962e-05, 9.009699999999732e-05, 9.079199999999926e-05, 9.087500000000415e-05, 9.022200000000091e-05, 9.033399999999747e-05, 9.030599999999833e-05, 9.086099999999764e-05, 9.0945000000002e-05, 9.027699999999972e-05, 9.070800000000184e-05, 9.091600000000338e-05, 9.058299999999825e-05, 9.0332999999998e-05, 9.097200000000166e-05, 9.070800000000184e-05]</msg>
<status status="PASS" starttime="20201117 14:43:59.161" endtime="20201117 14:43:59.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.149" endtime="20201117 14:43:59.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.175" endtime="20201117 14:43:59.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:59.184" endtime="20201117 14:43:59.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.179" endtime="20201117 14:43:59.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.170" endtime="20201117 14:43:59.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.625" endtime="20201117 14:43:59.206"></status>
</kw>
<msg timestamp="20201117 14:43:59.206" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.217" endtime="20201117 14:43:59.236"></status>
</kw>
<msg timestamp="20201117 14:43:59.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:59.215" endtime="20201117 14:43:59.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:59.237" endtime="20201117 14:43:59.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.240" endtime="20201117 14:43:59.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.212" endtime="20201117 14:43:59.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.209" endtime="20201117 14:43:59.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.253" endtime="20201117 14:43:59.540"></status>
</kw>
<msg timestamp="20201117 14:43:59.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025294472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:59.250" endtime="20201117 14:43:59.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025294472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:59.544" endtime="20201117 14:43:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.553" endtime="20201117 14:43:59.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.247" endtime="20201117 14:43:59.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.244" endtime="20201117 14:43:59.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:59.562" level="INFO">${RESULT} = [{'time': 0.025294472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.017999999999873e-05, 'source_diff': 9.017999999999873e-05}, {'time': 0.025392472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:59.557" endtime="20201117 14:43:59.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:59.577" level="INFO">${ACCURACY} = {'source_diff': [9.017999999999873e-05, 9.094399999999905e-05, 9.091699999999939e-05, 9.051399999999987e-05, 9.070800000000184e-05, 9.020800000000134e-05, 9.01670000000021e-05, 9.037500000000018e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:59.563" endtime="20201117 14:43:59.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.583" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:59.582" endtime="20201117 14:43:59.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.585" level="INFO">VALUE: [9.017999999999873e-05, 9.094399999999905e-05, 9.091699999999939e-05, 9.051399999999987e-05, 9.070800000000184e-05, 9.020800000000134e-05, 9.01670000000021e-05, 9.037500000000018e-05, 9.095900000000157e-05, 9.087499999999721e-05, 9.088900000000025e-05, 9.075000000000055e-05, 9.051399999999987e-05, 9.012499999999993e-05, 9.025000000000005e-05, 9.045800000000159e-05, 9.065299999999957e-05, 9.03060000000018e-05, 9.092999999999948e-05, 9.058400000000119e-05, 9.076400000000012e-05, 9.084699999999807e-05, 9.066599999999966e-05, 9.020799999999787e-05, 9.029099999999929e-05, 9.044400000000202e-05, 9.087500000000068e-05, 9.075000000000055e-05, 9.072200000000141e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.045900000000107e-05, 9.016599999999916e-05, 9.002700000000294e-05, 9.06800000000027e-05, 9.075000000000055e-05, 9.052800000000291e-05, 9.036099999999714e-05, 9.080500000000283e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.054199999999901e-05, 9.020900000000082e-05, 9.065300000000304e-05, 9.03199999999979e-05, 9.034700000000104e-05, 9.090200000000034e-05, 9.098600000000123e-05, 9.020800000000134e-05, 9.044399999999855e-05]</msg>
<status status="PASS" starttime="20201117 14:43:59.584" endtime="20201117 14:43:59.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.578" endtime="20201117 14:43:59.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.590" endtime="20201117 14:43:59.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:59.594" endtime="20201117 14:43:59.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.592" endtime="20201117 14:43:59.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.587" endtime="20201117 14:43:59.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.207" endtime="20201117 14:43:59.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.620" endtime="20201117 14:43:59.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:58.619" endtime="20201117 14:43:59.620"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.626" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.649" endtime="20201117 14:43:59.672"></status>
</kw>
<msg timestamp="20201117 14:43:59.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:59.645" endtime="20201117 14:43:59.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:59.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:59.676" endtime="20201117 14:43:59.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.682" endtime="20201117 14:43:59.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.638" endtime="20201117 14:43:59.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.631" endtime="20201117 14:43:59.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:59.707" endtime="20201117 14:44:00.071"></status>
</kw>
<msg timestamp="20201117 14:44:00.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049370722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049462194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:59.704" endtime="20201117 14:44:00.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049370722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049462194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:00.081" endtime="20201117 14:44:00.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.101" endtime="20201117 14:44:00.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.696" endtime="20201117 14:44:00.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.691" endtime="20201117 14:44:00.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:00.120" level="INFO">${RESULT} = [{'time': 0.049462194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.147200000000216e-05, 'source_diff': 9.147200000000216e-05}, {'time': 0.049567208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:00.111" endtime="20201117 14:44:00.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:00.153" level="INFO">${ACCURACY} = {'source_diff': [9.147200000000216e-05, 9.16800000000037e-05, 9.152800000000044e-05, 9.184700000000601e-05, 9.186099999999864e-05, 9.108299999999875e-05, 9.130599999999933e-05, 9.120900000000182e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:00.123" endtime="20201117 14:44:00.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.164" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:44:00.162" endtime="20201117 14:44:00.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.170" level="INFO">VALUE: [9.147200000000216e-05, 9.16800000000037e-05, 9.152800000000044e-05, 9.184700000000601e-05, 9.186099999999864e-05, 9.108299999999875e-05, 9.130599999999933e-05, 9.120900000000182e-05, 9.127800000000019e-05, 9.138899999999728e-05, 9.159699999999882e-05, 9.127700000000072e-05, 9.187499999999821e-05, 9.180500000000036e-05, 9.198600000000223e-05, 9.194400000000352e-05, 9.20000000000018e-05, 9.175000000000155e-05, 9.179200000000026e-05, 9.156999999999915e-05, 9.133399999999847e-05, 9.183399999999897e-05, 9.190199999999787e-05, 9.134700000000551e-05, 9.16659999999972e-05, 9.145800000000259e-05, 9.109700000000526e-05, 9.108399999999822e-05, 9.152800000000044e-05, 9.183399999999897e-05, 9.166699999999667e-05, 9.195900000000257e-05, 9.195899999999563e-05, 9.18199999999994e-05, 9.129100000000029e-05, 9.187499999999821e-05, 9.126400000000062e-05, 9.15000000000013e-05, 9.129199999999976e-05, 9.159699999999882e-05, 9.158300000000619e-05, 9.138900000000422e-05, 9.126400000000062e-05, 9.111099999999789e-05, 9.154100000000054e-05, 9.169399999999633e-05, 9.193100000000343e-05, 9.166600000000413e-05, 9.198600000000223e-05, 9.155500000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:44:00.167" endtime="20201117 14:44:00.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.155" endtime="20201117 14:44:00.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.179" endtime="20201117 14:44:00.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:00.188" endtime="20201117 14:44:00.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.184" endtime="20201117 14:44:00.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.175" endtime="20201117 14:44:00.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.627" endtime="20201117 14:44:00.215"></status>
</kw>
<msg timestamp="20201117 14:44:00.215" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.238" endtime="20201117 14:44:00.260"></status>
</kw>
<msg timestamp="20201117 14:44:00.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:00.235" endtime="20201117 14:44:00.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:00.264" endtime="20201117 14:44:00.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.270" endtime="20201117 14:44:00.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.227" endtime="20201117 14:44:00.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.221" endtime="20201117 14:44:00.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.297" endtime="20201117 14:44:00.658"></status>
</kw>
<msg timestamp="20201117 14:44:00.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:00.293" endtime="20201117 14:44:00.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:00.668" endtime="20201117 14:44:00.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.689" endtime="20201117 14:44:00.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.285" endtime="20201117 14:44:00.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.280" endtime="20201117 14:44:00.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:00.709" level="INFO">${RESULT} = [{'time': 0.043354542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.175000000000155e-05, 'source_diff': 9.175000000000155e-05}, {'time': 0.043449556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:00.700" endtime="20201117 14:44:00.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:00.741" level="INFO">${ACCURACY} = {'source_diff': [9.175000000000155e-05, 9.169500000000275e-05, 9.184699999999907e-05, 9.177699999999428e-05, 9.190200000000481e-05, 9.198600000000223e-05, 9.16529999999971e-05, 9.137500000000465e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:00.711" endtime="20201117 14:44:00.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.753" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:44:00.751" endtime="20201117 14:44:00.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.759" level="INFO">VALUE: [9.175000000000155e-05, 9.169500000000275e-05, 9.184699999999907e-05, 9.177699999999428e-05, 9.190200000000481e-05, 9.198600000000223e-05, 9.16529999999971e-05, 9.137500000000465e-05, 9.129199999999976e-05, 9.20000000000018e-05, 9.16250000000049e-05, 9.144499999999556e-05, 9.195900000000257e-05, 9.154200000000001e-05, 9.156999999999915e-05, 9.1332999999999e-05, 9.181899999999993e-05, 9.123600000000148e-05, 9.125000000000105e-05, 9.106899999999918e-05, 9.120800000000234e-05, 9.166699999999667e-05, 9.168099999999624e-05, 9.130600000000627e-05, 9.187499999999821e-05, 9.195900000000257e-05, 9.180500000000036e-05, 9.113900000000397e-05, 9.136099999999814e-05, 9.105499999999961e-05, 9.163899999999753e-05, 9.18329999999995e-05, 9.156899999999968e-05, 9.127800000000019e-05, 9.154200000000001e-05, 9.105599999999908e-05, 9.129199999999976e-05, 9.111199999999736e-05, 9.193000000000395e-05, 9.20000000000018e-05, 9.11800000000032e-05, 9.180500000000036e-05, 9.175000000000155e-05, 9.105600000000602e-05, 9.187499999999821e-05, 9.20000000000018e-05, 9.169500000000275e-05, 9.175000000000155e-05, 9.179200000000026e-05, 9.113900000000397e-05]</msg>
<status status="PASS" starttime="20201117 14:44:00.756" endtime="20201117 14:44:00.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.743" endtime="20201117 14:44:00.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.768" endtime="20201117 14:44:00.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:00.777" endtime="20201117 14:44:00.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.773" endtime="20201117 14:44:00.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.764" endtime="20201117 14:44:00.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.216" endtime="20201117 14:44:00.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.623" endtime="20201117 14:44:00.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:59.621" endtime="20201117 14:44:00.805"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.810" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.833" endtime="20201117 14:44:00.856"></status>
</kw>
<msg timestamp="20201117 14:44:00.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:00.830" endtime="20201117 14:44:00.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:00.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:00.859" endtime="20201117 14:44:00.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.866" endtime="20201117 14:44:00.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.822" endtime="20201117 14:44:00.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.816" endtime="20201117 14:44:00.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:00.892" endtime="20201117 14:44:01.265"></status>
</kw>
<msg timestamp="20201117 14:44:01.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049554111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:00.888" endtime="20201117 14:44:01.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049554111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:01.276" endtime="20201117 14:44:01.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.296" endtime="20201117 14:44:01.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.880" endtime="20201117 14:44:01.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.875" endtime="20201117 14:44:01.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:01.315" level="INFO">${RESULT} = [{'time': 0.049646764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.265300000000504e-05, 'source_diff': 9.265300000000504e-05}, {'time': 0.04974875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:44:01.305" endtime="20201117 14:44:01.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:01.347" level="INFO">${ACCURACY} = {'source_diff': [9.265300000000504e-05, 9.286099999999964e-05, 9.295899999999663e-05, 9.202800000000094e-05, 9.254100000000154e-05, 9.261099999999939e-05, 9.263799999999905e-05, 9.216600000000463e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:01.317" endtime="20201117 14:44:01.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.359" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:44:01.356" endtime="20201117 14:44:01.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.365" level="INFO">VALUE: [9.265300000000504e-05, 9.286099999999964e-05, 9.295899999999663e-05, 9.202800000000094e-05, 9.254100000000154e-05, 9.261099999999939e-05, 9.263799999999905e-05, 9.216600000000463e-05, 9.277700000000222e-05, 9.244399999999708e-05, 9.248600000000273e-05, 9.233399999999947e-05, 9.209699999999932e-05, 9.294499999999706e-05, 9.272199999999647e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.229200000000076e-05, 9.290199999999887e-05, 9.215200000000506e-05, 9.25000000000023e-05, 9.245800000000359e-05, 9.225000000000205e-05, 9.25000000000023e-05, 9.277800000000169e-05, 9.241700000000436e-05, 9.211099999999889e-05, 9.202800000000094e-05, 9.257000000000015e-05, 9.251299999999546e-05, 9.225000000000205e-05, 9.2333e-05, 9.295799999999715e-05, 9.254100000000154e-05, 9.277800000000169e-05, 9.237499999999871e-05, 9.249999999999536e-05, 9.201400000000137e-05, 9.293099999999749e-05, 9.229200000000076e-05, 9.245900000000307e-05, 9.224999999999511e-05, 9.222200000000291e-05, 9.297200000000366e-05, 9.275000000000255e-05, 9.272199999999647e-05, 9.21250000000054e-05, 9.275000000000255e-05, 9.220800000000334e-05, 9.234699999999957e-05]</msg>
<status status="PASS" starttime="20201117 14:44:01.361" endtime="20201117 14:44:01.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.349" endtime="20201117 14:44:01.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.374" endtime="20201117 14:44:01.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:01.383" endtime="20201117 14:44:01.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.378" endtime="20201117 14:44:01.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.369" endtime="20201117 14:44:01.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.812" endtime="20201117 14:44:01.409"></status>
</kw>
<msg timestamp="20201117 14:44:01.409" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.432" endtime="20201117 14:44:01.456"></status>
</kw>
<msg timestamp="20201117 14:44:01.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:01.429" endtime="20201117 14:44:01.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:01.459" endtime="20201117 14:44:01.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.467" endtime="20201117 14:44:01.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.421" endtime="20201117 14:44:01.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.415" endtime="20201117 14:44:01.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.492" endtime="20201117 14:44:01.862"></status>
</kw>
<msg timestamp="20201117 14:44:01.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043976764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:01.488" endtime="20201117 14:44:01.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043976764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:01.873" endtime="20201117 14:44:01.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.892" endtime="20201117 14:44:01.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.480" endtime="20201117 14:44:01.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.475" endtime="20201117 14:44:01.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:01.913" level="INFO">${RESULT} = [{'time': 0.043976764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.273600000000298e-05, 'source_diff': 9.273600000000298e-05}, {'time': 0.044076792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:01.903" endtime="20201117 14:44:01.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:01.948" level="INFO">${ACCURACY} = {'source_diff': [9.273600000000298e-05, 9.234799999999904e-05, 9.204200000000051e-05, 9.262499999999896e-05, 9.222299999999545e-05, 9.212499999999846e-05, 9.276399999999518e-05, 9.225000000000205e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:01.915" endtime="20201117 14:44:01.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.959" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:44:01.957" endtime="20201117 14:44:01.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:01.965" level="INFO">VALUE: [9.273600000000298e-05, 9.234799999999904e-05, 9.204200000000051e-05, 9.262499999999896e-05, 9.222299999999545e-05, 9.212499999999846e-05, 9.276399999999518e-05, 9.225000000000205e-05, 9.237499999999871e-05, 9.238899999999828e-05, 9.220899999999588e-05, 9.287499999999921e-05, 9.290300000000529e-05, 9.295899999999663e-05, 9.295900000000357e-05, 9.237499999999871e-05, 9.277700000000222e-05, 9.287499999999921e-05, 9.231900000000043e-05, 9.2333e-05, 9.198600000000223e-05, 9.295800000000409e-05, 9.297200000000366e-05, 9.291599999999844e-05, 9.230600000000033e-05, 9.205600000000008e-05, 9.291700000000486e-05, 9.252800000000144e-05, 9.261099999999939e-05, 9.25000000000023e-05, 9.21529999999976e-05, 9.284700000000007e-05, 9.272199999999647e-05, 9.241699999999742e-05, 9.245800000000359e-05, 9.270900000000332e-05, 9.279200000000126e-05, 9.272299999999595e-05, 9.265200000000556e-05, 9.267999999999776e-05, 9.286099999999964e-05, 9.204100000000104e-05, 9.291699999999792e-05, 9.294399999999758e-05, 9.208299999999975e-05, 9.266700000000461e-05, 9.262499999999896e-05, 9.226400000000162e-05, 9.204200000000051e-05, 9.283399999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:44:01.962" endtime="20201117 14:44:01.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.950" endtime="20201117 14:44:01.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:01.975" endtime="20201117 14:44:01.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:01.984" endtime="20201117 14:44:02.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.979" endtime="20201117 14:44:02.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.970" endtime="20201117 14:44:02.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:01.411" endtime="20201117 14:44:02.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.807" endtime="20201117 14:44:02.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:00.806" endtime="20201117 14:44:02.011"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.017" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.048" endtime="20201117 14:44:02.071"></status>
</kw>
<msg timestamp="20201117 14:44:02.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:02.044" endtime="20201117 14:44:02.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:02.075" endtime="20201117 14:44:02.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.081" endtime="20201117 14:44:02.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.029" endtime="20201117 14:44:02.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.023" endtime="20201117 14:44:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.106" endtime="20201117 14:44:02.477"></status>
</kw>
<msg timestamp="20201117 14:44:02.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057933736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058027083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:02.103" endtime="20201117 14:44:02.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057933736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058027083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:02.487" endtime="20201117 14:44:02.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.507" endtime="20201117 14:44:02.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.095" endtime="20201117 14:44:02.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.090" endtime="20201117 14:44:02.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:02.527" level="INFO">${RESULT} = [{'time': 0.058027083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.334700000000057e-05, 'source_diff': 9.334700000000057e-05}, {'time': 0.058126083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:02.518" endtime="20201117 14:44:02.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:02.560" level="INFO">${ACCURACY} = {'source_diff': [9.334700000000057e-05, 9.358300000000125e-05, 9.395799999999815e-05, 9.316699999999817e-05, 9.356999999999421e-05, 9.33879999999998e-05, 9.324999999999611e-05, 9.354199999999507e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:02.530" endtime="20201117 14:44:02.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.571" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:44:02.569" endtime="20201117 14:44:02.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.577" level="INFO">VALUE: [9.334700000000057e-05, 9.358300000000125e-05, 9.395799999999815e-05, 9.316699999999817e-05, 9.356999999999421e-05, 9.33879999999998e-05, 9.324999999999611e-05, 9.354199999999507e-05, 9.381999999999446e-05, 9.330600000000133e-05, 9.324999999999611e-05, 9.395800000000509e-05, 9.386100000000064e-05, 9.304100000000204e-05, 9.304100000000204e-05, 9.337499999999971e-05, 9.355600000000158e-05, 9.390299999999935e-05, 9.327800000000219e-05, 9.355600000000158e-05, 9.31250000000064e-05, 9.342999999999851e-05, 9.311199999999936e-05, 9.30130000000029e-05, 9.361100000000039e-05, 9.3333000000001e-05, 9.331900000000143e-05, 9.37079999999979e-05, 9.375000000000355e-05, 9.32079999999974e-05, 9.333400000000047e-05, 9.355499999999517e-05, 9.390299999999935e-05, 9.36659999999992e-05, 9.348600000000373e-05, 9.386100000000064e-05, 9.344399999999808e-05, 9.381900000000193e-05, 9.40000000000038e-05, 9.319400000000477e-05, 9.366699999999867e-05, 9.333400000000047e-05, 9.308400000000022e-05, 9.370900000000432e-05, 9.326300000000315e-05, 9.379099999999585e-05, 9.3333000000001e-05, 9.395800000000509e-05, 9.400000000001074e-05, 9.311100000000683e-05]</msg>
<status status="PASS" starttime="20201117 14:44:02.574" endtime="20201117 14:44:02.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.562" endtime="20201117 14:44:02.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.587" endtime="20201117 14:44:02.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:02.595" endtime="20201117 14:44:02.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.591" endtime="20201117 14:44:02.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.582" endtime="20201117 14:44:02.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.018" endtime="20201117 14:44:02.623"></status>
</kw>
<msg timestamp="20201117 14:44:02.623" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.647" endtime="20201117 14:44:02.670"></status>
</kw>
<msg timestamp="20201117 14:44:02.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:02.644" endtime="20201117 14:44:02.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:02.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:02.674" endtime="20201117 14:44:02.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.681" endtime="20201117 14:44:02.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.636" endtime="20201117 14:44:02.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.629" endtime="20201117 14:44:02.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:02.706" endtime="20201117 14:44:03.021"></status>
</kw>
<msg timestamp="20201117 14:44:03.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045679403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045772681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:02.702" endtime="20201117 14:44:03.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045679403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045772681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:03.026" endtime="20201117 14:44:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.034" endtime="20201117 14:44:03.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.695" endtime="20201117 14:44:03.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.689" endtime="20201117 14:44:03.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:03.044" level="INFO">${RESULT} = [{'time': 0.045772681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.327800000000219e-05, 'source_diff': 9.327800000000219e-05}, {'time': 0.045870694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:03.039" endtime="20201117 14:44:03.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:03.058" level="INFO">${ACCURACY} = {'source_diff': [9.327800000000219e-05, 9.301299999999596e-05, 9.370800000000484e-05, 9.311099999999989e-05, 9.344499999999756e-05, 9.38330000000015e-05, 9.313899999999903e-05, 9.327799999999525e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:03.045" endtime="20201117 14:44:03.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.063" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:44:03.062" endtime="20201117 14:44:03.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.066" level="INFO">VALUE: [9.327800000000219e-05, 9.301299999999596e-05, 9.370800000000484e-05, 9.311099999999989e-05, 9.344499999999756e-05, 9.38330000000015e-05, 9.313899999999903e-05, 9.327799999999525e-05, 9.333400000000047e-05, 9.295900000000357e-05, 9.323699999999602e-05, 9.377700000000322e-05, 9.330600000000133e-05, 9.330500000000186e-05, 9.354100000000254e-05, 9.365300000000604e-05, 9.35000000000033e-05, 9.306900000000118e-05, 9.316700000000511e-05, 9.361100000000039e-05, 9.305600000000108e-05, 9.307000000000065e-05, 9.397199999999772e-05, 9.347199999999722e-05, 9.372199999999747e-05, 9.336100000000014e-05, 9.349999999999636e-05, 9.38330000000015e-05, 9.324999999999611e-05, 9.363899999999953e-05, 9.373599999999704e-05, 9.323599999999654e-05, 9.386100000000064e-05, 9.322200000000391e-05, 9.352700000000297e-05, 9.398600000000423e-05, 9.361100000000039e-05, 9.327799999999525e-05, 9.397199999999772e-05, 9.309699999999338e-05, 9.326400000000262e-05, 9.367999999999876e-05, 9.302800000000194e-05, 9.373599999999704e-05, 9.361100000000039e-05, 9.312499999999946e-05, 9.345799999999765e-05, 9.327700000000272e-05, 9.345799999999765e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:44:03.065" endtime="20201117 14:44:03.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.059" endtime="20201117 14:44:03.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.071" endtime="20201117 14:44:03.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:03.075" endtime="20201117 14:44:03.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.073" endtime="20201117 14:44:03.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.068" endtime="20201117 14:44:03.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.625" endtime="20201117 14:44:03.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.014" endtime="20201117 14:44:03.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:02.012" endtime="20201117 14:44:03.097"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.099" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.110" endtime="20201117 14:44:03.129"></status>
</kw>
<msg timestamp="20201117 14:44:03.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:03.108" endtime="20201117 14:44:03.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:03.131" endtime="20201117 14:44:03.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.134" endtime="20201117 14:44:03.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.105" endtime="20201117 14:44:03.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.102" endtime="20201117 14:44:03.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.146" endtime="20201117 14:44:03.433"></status>
</kw>
<msg timestamp="20201117 14:44:03.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027950097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028045111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:03.144" endtime="20201117 14:44:03.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027950097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028045111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:03.437" endtime="20201117 14:44:03.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.446" endtime="20201117 14:44:03.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.140" endtime="20201117 14:44:03.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.138" endtime="20201117 14:44:03.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:03.455" level="INFO">${RESULT} = [{'time': 0.028045111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.50140000000009e-05, 'source_diff': 9.50140000000009e-05}, {'time': 0.028154111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:44:03.450" endtime="20201117 14:44:03.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:03.469" level="INFO">${ACCURACY} = {'source_diff': [9.50140000000009e-05, 9.487499999999774e-05, 9.472200000000194e-05, 9.462500000000096e-05, 9.470899999999838e-05, 9.407000000000165e-05, 9.487499999999774e-05, 9.44590000000016e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:44:03.456" endtime="20201117 14:44:03.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.474" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:44:03.473" endtime="20201117 14:44:03.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.477" level="INFO">VALUE: [9.50140000000009e-05, 9.487499999999774e-05, 9.472200000000194e-05, 9.462500000000096e-05, 9.470899999999838e-05, 9.407000000000165e-05, 9.487499999999774e-05, 9.44590000000016e-05, 9.486199999999764e-05, 9.487500000000121e-05, 9.445800000000212e-05, 9.42079999999984e-05, 9.47079999999989e-05, 9.448600000000126e-05, 9.408299999999828e-05, 9.405600000000208e-05, 9.479199999999979e-05, 9.484800000000154e-05, 9.493099999999949e-05, 9.402799999999947e-05, 9.473599999999804e-05, 9.46660000000002e-05, 9.425000000000058e-05, 9.48469999999986e-05, 9.486100000000164e-05, 9.466699999999967e-05, 9.408399999999775e-05, 9.456999999999868e-05, 9.426400000000015e-05, 9.420900000000135e-05, 9.483400000000197e-05, 9.405499999999914e-05, 9.411100000000089e-05, 9.426399999999668e-05, 9.493000000000001e-05, 9.404200000000251e-05, 9.48609999999947e-05, 9.402800000000294e-05, 9.413900000000003e-05, 9.416699999999917e-05, 9.494499999999906e-05, 9.458300000000225e-05, 9.445799999999865e-05, 9.437499999999377e-05, 9.490300000000035e-05, 9.402800000000294e-05, 9.43609999999942e-05, 9.452800000000344e-05, 9.479200000000326e-05, 9.449999999999736e-05]</msg>
<status status="PASS" starttime="20201117 14:44:03.475" endtime="20201117 14:44:03.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.470" endtime="20201117 14:44:03.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.482" endtime="20201117 14:44:03.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:03.486" endtime="20201117 14:44:03.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.484" endtime="20201117 14:44:03.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.479" endtime="20201117 14:44:03.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.100" endtime="20201117 14:44:03.507"></status>
</kw>
<msg timestamp="20201117 14:44:03.507" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.518" endtime="20201117 14:44:03.538"></status>
</kw>
<msg timestamp="20201117 14:44:03.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:03.516" endtime="20201117 14:44:03.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:03.540" endtime="20201117 14:44:03.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.543" endtime="20201117 14:44:03.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.513" endtime="20201117 14:44:03.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.510" endtime="20201117 14:44:03.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.555" endtime="20201117 14:44:03.897"></status>
</kw>
<msg timestamp="20201117 14:44:03.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025575292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:03.553" endtime="20201117 14:44:03.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025575292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:03.907" endtime="20201117 14:44:03.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:03.927" endtime="20201117 14:44:03.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.549" endtime="20201117 14:44:03.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.547" endtime="20201117 14:44:03.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:03.947" level="INFO">${RESULT} = [{'time': 0.025575292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.444499999999856e-05, 'source_diff': 9.444499999999856e-05}, {'time': 0.025674292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:03.938" endtime="20201117 14:44:03.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:03.983" level="INFO">${ACCURACY} = {'source_diff': [9.444499999999856e-05, 9.466699999999967e-05, 9.470900000000185e-05, 9.4333000000002e-05, 9.473600000000151e-05, 9.467999999999976e-05, 9.444399999999908e-05, 9.408400000000122e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:44:03.950" endtime="20201117 14:44:03.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:03.994" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:44:03.992" endtime="20201117 14:44:03.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.000" level="INFO">VALUE: [9.444499999999856e-05, 9.466699999999967e-05, 9.470900000000185e-05, 9.4333000000002e-05, 9.473600000000151e-05, 9.467999999999976e-05, 9.444399999999908e-05, 9.408400000000122e-05, 9.437500000000071e-05, 9.479199999999979e-05, 9.408400000000122e-05, 9.493099999999949e-05, 9.440299999999985e-05, 9.444500000000203e-05, 9.430500000000286e-05, 9.479099999999685e-05, 9.409699999999785e-05, 9.466699999999967e-05, 9.45140000000004e-05, 9.405499999999914e-05, 9.495799999999915e-05, 9.480599999999936e-05, 9.490300000000035e-05, 9.470900000000185e-05, 9.412500000000046e-05, 9.473600000000151e-05, 9.423600000000101e-05, 9.448600000000126e-05, 9.42079999999984e-05, 9.483299999999903e-05, 9.44720000000017e-05, 9.449999999999736e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.430599999999886e-05, 9.412500000000046e-05, 9.408399999999775e-05, 9.408300000000175e-05, 9.491599999999698e-05, 9.498600000000176e-05, 9.483299999999903e-05, 9.494399999999958e-05, 9.487500000000121e-05, 9.405599999999861e-05, 9.46530000000001e-05, 9.491699999999992e-05, 9.49590000000021e-05, 9.491699999999992e-05, 9.431899999999896e-05, 9.46530000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:44:03.997" endtime="20201117 14:44:04.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.985" endtime="20201117 14:44:04.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.010" endtime="20201117 14:44:04.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:04.019" endtime="20201117 14:44:04.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.015" endtime="20201117 14:44:04.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.006" endtime="20201117 14:44:04.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.508" endtime="20201117 14:44:04.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.098" endtime="20201117 14:44:04.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:03.097" endtime="20201117 14:44:04.047"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.052" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.075" endtime="20201117 14:44:04.098"></status>
</kw>
<msg timestamp="20201117 14:44:04.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:04.072" endtime="20201117 14:44:04.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:04.102" endtime="20201117 14:44:04.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.109" endtime="20201117 14:44:04.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.064" endtime="20201117 14:44:04.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.058" endtime="20201117 14:44:04.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.134" endtime="20201117 14:44:04.505"></status>
</kw>
<msg timestamp="20201117 14:44:04.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049407347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049503181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:04.130" endtime="20201117 14:44:04.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049407347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049503181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:04.515" endtime="20201117 14:44:04.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.535" endtime="20201117 14:44:04.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.122" endtime="20201117 14:44:04.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.117" endtime="20201117 14:44:04.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:04.555" level="INFO">${RESULT} = [{'time': 0.049503181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583400000000297e-05, 'source_diff': 9.583400000000297e-05}, {'time': 0.049604181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:04.545" endtime="20201117 14:44:04.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:04.587" level="INFO">${ACCURACY} = {'source_diff': [9.583400000000297e-05, 9.540299999999391e-05, 9.594400000000058e-05, 9.549999999999836e-05, 9.545799999999965e-05, 9.595899999999963e-05, 9.594400000000058e-05, 9.536100000000214e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:04.557" endtime="20201117 14:44:04.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.599" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:44:04.596" endtime="20201117 14:44:04.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.606" level="INFO">VALUE: [9.583400000000297e-05, 9.540299999999391e-05, 9.594400000000058e-05, 9.549999999999836e-05, 9.545799999999965e-05, 9.595899999999963e-05, 9.594400000000058e-05, 9.536100000000214e-05, 9.529199999999682e-05, 9.577799999999775e-05, 9.509799999999485e-05, 9.55279999999975e-05, 9.552800000000444e-05, 9.529099999999735e-05, 9.58330000000035e-05, 9.577799999999775e-05, 9.572199999999947e-05, 9.590300000000135e-05, 9.509700000000232e-05, 9.541600000000094e-05, 9.583400000000297e-05, 9.579199999999732e-05, 9.529200000000376e-05, 9.524999999999811e-05, 9.57079999999999e-05, 9.525000000000505e-05, 9.530500000000386e-05, 9.56530000000011e-05, 9.592999999999408e-05, 9.504199999999657e-05, 9.512500000000146e-05, 9.570899999999938e-05, 9.555599999999664e-05, 9.54859999999988e-05, 9.595800000000015e-05, 9.530499999999692e-05, 9.569400000000033e-05, 9.523599999999854e-05, 9.523600000000548e-05, 9.513900000000103e-05, 9.551399999999793e-05, 9.58200000000034e-05, 9.60000000000058e-05, 9.56530000000011e-05, 9.583399999999603e-05, 9.599999999999886e-05, 9.558299999999631e-05, 9.559700000000282e-05, 9.508300000000275e-05, 9.531900000000343e-05]</msg>
<status status="PASS" starttime="20201117 14:44:04.601" endtime="20201117 14:44:04.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.589" endtime="20201117 14:44:04.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.615" endtime="20201117 14:44:04.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:04.624" endtime="20201117 14:44:04.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.619" endtime="20201117 14:44:04.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.610" endtime="20201117 14:44:04.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.054" endtime="20201117 14:44:04.650"></status>
</kw>
<msg timestamp="20201117 14:44:04.651" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.675" endtime="20201117 14:44:04.699"></status>
</kw>
<msg timestamp="20201117 14:44:04.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:04.672" endtime="20201117 14:44:04.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:04.702" endtime="20201117 14:44:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.709" endtime="20201117 14:44:04.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.664" endtime="20201117 14:44:04.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.657" endtime="20201117 14:44:04.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:04.734" endtime="20201117 14:44:05.104"></status>
</kw>
<msg timestamp="20201117 14:44:05.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045329556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:04.731" endtime="20201117 14:44:05.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045329556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045424833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:05.114" endtime="20201117 14:44:05.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.134" endtime="20201117 14:44:05.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.723" endtime="20201117 14:44:05.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.718" endtime="20201117 14:44:05.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:05.155" level="INFO">${RESULT} = [{'time': 0.045424833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527699999999778e-05, 'source_diff': 9.527699999999778e-05}, {'time': 0.045522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:05.145" endtime="20201117 14:44:05.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:05.187" level="INFO">${ACCURACY} = {'source_diff': [9.527699999999778e-05, 9.533299999999606e-05, 9.557000000000315e-05, 9.547199999999922e-05, 9.56530000000011e-05, 9.593100000000049e-05, 9.506999999999571e-05, 9.58200000000034e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:44:05.157" endtime="20201117 14:44:05.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.199" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:44:05.197" endtime="20201117 14:44:05.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.205" level="INFO">VALUE: [9.527699999999778e-05, 9.533299999999606e-05, 9.557000000000315e-05, 9.547199999999922e-05, 9.56530000000011e-05, 9.593100000000049e-05, 9.506999999999571e-05, 9.58200000000034e-05, 9.543099999999999e-05, 9.533399999999553e-05, 9.538900000000128e-05, 9.558300000000325e-05, 9.579099999999785e-05, 9.545799999999965e-05, 9.540300000000085e-05, 9.574999999999861e-05, 9.573599999999904e-05, 9.545899999999913e-05, 9.512500000000146e-05, 9.581999999999646e-05, 9.509700000000232e-05, 9.51660000000007e-05, 9.60000000000058e-05, 9.512500000000146e-05, 9.573599999999904e-05, 9.554199999999707e-05, 9.529200000000376e-05, 9.509700000000232e-05, 9.53059999999964e-05, 9.586100000000264e-05, 9.56530000000011e-05, 9.562500000000196e-05, 9.531899999999649e-05, 9.552700000000497e-05, 9.59859999999993e-05, 9.57079999999999e-05, 9.57079999999999e-05, 9.593100000000049e-05, 9.525000000000505e-05, 9.569499999999981e-05, 9.566700000000067e-05, 9.533400000000247e-05, 9.581899999999699e-05, 9.519399999999983e-05, 9.559700000000282e-05, 9.529099999999735e-05, 9.556899999999674e-05, 9.526400000000462e-05, 9.51530000000006e-05, 9.508299999999581e-05]</msg>
<status status="PASS" starttime="20201117 14:44:05.202" endtime="20201117 14:44:05.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.189" endtime="20201117 14:44:05.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.214" endtime="20201117 14:44:05.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:05.223" endtime="20201117 14:44:05.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.219" endtime="20201117 14:44:05.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.210" endtime="20201117 14:44:05.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.653" endtime="20201117 14:44:05.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.049" endtime="20201117 14:44:05.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:04.047" endtime="20201117 14:44:05.251"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.257" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.280" endtime="20201117 14:44:05.303"></status>
</kw>
<msg timestamp="20201117 14:44:05.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:05.276" endtime="20201117 14:44:05.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:05.306" endtime="20201117 14:44:05.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.313" endtime="20201117 14:44:05.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.268" endtime="20201117 14:44:05.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.262" endtime="20201117 14:44:05.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.338" endtime="20201117 14:44:05.710"></status>
</kw>
<msg timestamp="20201117 14:44:05.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049828917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049925236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:05.335" endtime="20201117 14:44:05.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049828917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049925236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:05.720" endtime="20201117 14:44:05.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.740" endtime="20201117 14:44:05.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.327" endtime="20201117 14:44:05.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.322" endtime="20201117 14:44:05.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:05.760" level="INFO">${RESULT} = [{'time': 0.049925236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.631899999999749e-05, 'source_diff': 9.631899999999749e-05}, {'time': 0.050028236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:05.750" endtime="20201117 14:44:05.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:05.793" level="INFO">${ACCURACY} = {'source_diff': [9.631899999999749e-05, 9.679199999999832e-05, 9.61530000000016e-05, 9.679199999999832e-05, 9.624999999999911e-05, 9.683400000000397e-05, 9.681899999999799e-05, 9.654200000000501e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:05.762" endtime="20201117 14:44:05.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.805" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:44:05.802" endtime="20201117 14:44:05.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.811" level="INFO">VALUE: [9.631899999999749e-05, 9.679199999999832e-05, 9.61530000000016e-05, 9.679199999999832e-05, 9.624999999999911e-05, 9.683400000000397e-05, 9.681899999999799e-05, 9.654200000000501e-05, 9.695899999999369e-05, 9.6333000000004e-05, 9.690200000000287e-05, 9.683299999999756e-05, 9.679099999999885e-05, 9.63609999999962e-05, 9.65279999999985e-05, 9.613900000000203e-05, 9.645800000000065e-05, 9.612499999999552e-05, 9.629200000000476e-05, 9.637500000000271e-05, 9.65409999999986e-05, 9.69860000000003e-05, 9.612499999999552e-05, 9.699999999999986e-05, 9.654199999999807e-05, 9.670799999999397e-05, 9.695800000000115e-05, 9.687500000000321e-05, 9.695900000000063e-05, 9.666700000000167e-05, 9.633399999999653e-05, 9.68330000000045e-05, 9.62080000000004e-05, 9.679099999999885e-05, 9.704199999999857e-05, 9.655599999999764e-05, 9.672200000000047e-05, 9.657000000000415e-05, 9.609699999999638e-05, 9.63200000000039e-05, 9.652699999999903e-05, 9.684699999999713e-05, 9.66660000000022e-05, 9.611099999999595e-05, 9.652699999999903e-05, 9.624999999999911e-05, 9.62080000000004e-05, 9.701399999999943e-05, 9.65279999999985e-05, 9.683399999999703e-05]</msg>
<status status="PASS" starttime="20201117 14:44:05.807" endtime="20201117 14:44:05.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.795" endtime="20201117 14:44:05.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.820" endtime="20201117 14:44:05.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:05.829" endtime="20201117 14:44:05.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.824" endtime="20201117 14:44:05.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.815" endtime="20201117 14:44:05.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.258" endtime="20201117 14:44:05.855"></status>
</kw>
<msg timestamp="20201117 14:44:05.856" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.879" endtime="20201117 14:44:05.902"></status>
</kw>
<msg timestamp="20201117 14:44:05.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:05.876" endtime="20201117 14:44:05.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:05.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:05.905" endtime="20201117 14:44:05.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.912" endtime="20201117 14:44:05.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.868" endtime="20201117 14:44:05.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.862" endtime="20201117 14:44:05.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:05.937" endtime="20201117 14:44:06.309"></status>
</kw>
<msg timestamp="20201117 14:44:06.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043830903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043927181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:05.934" endtime="20201117 14:44:06.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043830903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043927181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:06.319" endtime="20201117 14:44:06.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.340" endtime="20201117 14:44:06.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.926" endtime="20201117 14:44:06.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.921" endtime="20201117 14:44:06.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:06.360" level="INFO">${RESULT} = [{'time': 0.043927181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.627800000000519e-05, 'source_diff': 9.627800000000519e-05}, {'time': 0.044034222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:06.350" endtime="20201117 14:44:06.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:06.395" level="INFO">${ACCURACY} = {'source_diff': [9.627800000000519e-05, 9.642999999999458e-05, 9.626399999999868e-05, 9.624999999999911e-05, 9.616699999999423e-05, 9.622199999999997e-05, 9.681899999999799e-05, 9.684699999999713e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:06.362" endtime="20201117 14:44:06.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.407" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:44:06.404" endtime="20201117 14:44:06.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.413" level="INFO">VALUE: [9.627800000000519e-05, 9.642999999999458e-05, 9.626399999999868e-05, 9.624999999999911e-05, 9.616699999999423e-05, 9.622199999999997e-05, 9.681899999999799e-05, 9.684699999999713e-05, 9.634699999999663e-05, 9.681900000000493e-05, 9.657000000000415e-05, 9.65279999999985e-05, 9.663900000000253e-05, 9.683299999999756e-05, 9.611100000000289e-05, 9.701399999999943e-05, 9.631899999999749e-05, 9.67080000000009e-05, 9.62080000000004e-05, 9.693100000000149e-05, 9.694500000000106e-05, 9.624999999999911e-05, 9.647200000000022e-05, 9.668000000000176e-05, 9.636100000000314e-05, 9.611099999999595e-05, 9.65279999999985e-05, 9.622199999999997e-05, 9.694400000000158e-05, 9.67080000000009e-05, 9.649999999999936e-05, 9.679199999999832e-05, 9.687500000000321e-05, 9.701299999999996e-05, 9.613900000000203e-05, 9.67080000000009e-05, 9.684699999999713e-05, 9.697200000000072e-05, 9.645800000000065e-05, 9.679199999999832e-05, 9.674999999999961e-05, 9.624999999999911e-05, 9.67080000000009e-05, 9.609800000000279e-05, 9.649999999999936e-05, 9.69159999999955e-05, 9.649999999999936e-05, 9.668100000000124e-05, 9.61530000000016e-05, 9.622199999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:44:06.409" endtime="20201117 14:44:06.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.397" endtime="20201117 14:44:06.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.422" endtime="20201117 14:44:06.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:06.431" endtime="20201117 14:44:06.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.426" endtime="20201117 14:44:06.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.417" endtime="20201117 14:44:06.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.857" endtime="20201117 14:44:06.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.254" endtime="20201117 14:44:06.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:05.252" endtime="20201117 14:44:06.458"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.464" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.487" endtime="20201117 14:44:06.510"></status>
</kw>
<msg timestamp="20201117 14:44:06.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:06.483" endtime="20201117 14:44:06.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:06.513" endtime="20201117 14:44:06.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.520" endtime="20201117 14:44:06.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.476" endtime="20201117 14:44:06.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.470" endtime="20201117 14:44:06.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.546" endtime="20201117 14:44:06.919"></status>
</kw>
<msg timestamp="20201117 14:44:06.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049562153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049659319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:06.543" endtime="20201117 14:44:06.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:06.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049562153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049659319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:06.929" endtime="20201117 14:44:06.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:06.949" endtime="20201117 14:44:06.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.534" endtime="20201117 14:44:06.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.529" endtime="20201117 14:44:06.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:06.970" level="INFO">${RESULT} = [{'time': 0.049659319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.71660000000027e-05, 'source_diff': 9.71660000000027e-05}, {'time': 0.049769347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:44:06.960" endtime="20201117 14:44:06.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:06.995" level="INFO">${ACCURACY} = {'source_diff': [9.71660000000027e-05, 9.713899999999609e-05, 9.713899999999609e-05, 9.730499999999892e-05, 9.804199999999957e-05, 9.774999999999368e-05, 9.77359999999941e-05, 9.718000000000226e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:44:06.972" endtime="20201117 14:44:06.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.001" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:44:06.999" endtime="20201117 14:44:07.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.003" level="INFO">VALUE: [9.71660000000027e-05, 9.713899999999609e-05, 9.713899999999609e-05, 9.730499999999892e-05, 9.804199999999957e-05, 9.774999999999368e-05, 9.77359999999941e-05, 9.718000000000226e-05, 9.779199999999932e-05, 9.762500000000396e-05, 9.708299999999781e-05, 9.722200000000097e-05, 9.783299999999856e-05, 9.755499999999917e-05, 9.722200000000097e-05, 9.738899999999634e-05, 9.727799999999925e-05, 9.769500000000181e-05, 9.731899999999849e-05, 9.790300000000335e-05, 9.799999999999393e-05, 9.787500000000421e-05, 9.751300000000046e-05, 9.725000000000011e-05, 9.77080000000019e-05, 9.709699999999738e-05, 9.791699999999598e-05, 9.791700000000292e-05, 9.7027999999999e-05, 9.754199999999907e-05, 9.712500000000346e-05, 9.704199999999857e-05, 9.768000000000276e-05, 9.775000000000061e-05, 9.745799999999472e-05, 9.715299999999566e-05, 9.737500000000371e-05, 9.793099999999555e-05, 9.751399999999993e-05, 9.73059999999984e-05, 9.763900000000353e-05, 9.743100000000199e-05, 9.766700000000267e-05, 9.712500000000346e-05, 9.712499999999652e-05, 9.752700000000003e-05, 9.729099999999935e-05, 9.72080000000014e-05, 9.773600000000104e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201117 14:44:07.002" endtime="20201117 14:44:07.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.996" endtime="20201117 14:44:07.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.008" endtime="20201117 14:44:07.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:07.012" endtime="20201117 14:44:07.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.010" endtime="20201117 14:44:07.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.005" endtime="20201117 14:44:07.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.465" endtime="20201117 14:44:07.033"></status>
</kw>
<msg timestamp="20201117 14:44:07.033" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.044" endtime="20201117 14:44:07.063"></status>
</kw>
<msg timestamp="20201117 14:44:07.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:07.042" endtime="20201117 14:44:07.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:07.065" endtime="20201117 14:44:07.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.074" endtime="20201117 14:44:07.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.039" endtime="20201117 14:44:07.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.036" endtime="20201117 14:44:07.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.086" endtime="20201117 14:44:07.373"></status>
</kw>
<msg timestamp="20201117 14:44:07.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025027569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:07.085" endtime="20201117 14:44:07.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025027569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:07.377" endtime="20201117 14:44:07.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.386" endtime="20201117 14:44:07.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.081" endtime="20201117 14:44:07.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.079" endtime="20201117 14:44:07.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:07.396" level="INFO">${RESULT} = [{'time': 0.025027569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.741599999999948e-05, 'source_diff': 9.741599999999948e-05}, {'time': 0.025132542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:07.391" endtime="20201117 14:44:07.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:07.409" level="INFO">${ACCURACY} = {'source_diff': [9.741599999999948e-05, 9.712499999999999e-05, 9.719499999999784e-05, 9.719399999999837e-05, 9.741599999999948e-05, 9.731899999999849e-05, 9.775000000000061e-05, 9.762500000000049e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:07.397" endtime="20201117 14:44:07.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.415" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:44:07.414" endtime="20201117 14:44:07.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.418" level="INFO">VALUE: [9.741599999999948e-05, 9.712499999999999e-05, 9.719499999999784e-05, 9.719399999999837e-05, 9.741599999999948e-05, 9.731899999999849e-05, 9.775000000000061e-05, 9.762500000000049e-05, 9.791699999999945e-05, 9.745800000000165e-05, 9.7027999999999e-05, 9.737499999999677e-05, 9.750000000000036e-05, 9.704199999999857e-05, 9.713899999999956e-05, 9.75409999999996e-05, 9.769399999999887e-05, 9.7027999999999e-05, 9.754199999999907e-05, 9.76669999999992e-05, 9.708299999999781e-05, 9.715299999999913e-05, 9.745899999999766e-05, 9.736100000000067e-05, 9.709800000000032e-05, 9.744400000000208e-05, 9.776400000000018e-05, 9.769399999999887e-05, 9.787500000000074e-05, 9.708300000000128e-05, 9.724999999999664e-05, 9.726399999999968e-05, 9.708400000000075e-05, 9.720899999999741e-05, 9.756999999999821e-05, 9.765299999999963e-05, 9.726399999999968e-05, 9.706900000000171e-05, 9.779199999999932e-05, 9.759700000000135e-05, 9.727799999999925e-05, 9.747200000000122e-05, 9.755599999999864e-05, 9.713899999999956e-05, 9.791699999999945e-05, 9.758299999999831e-05, 9.759800000000082e-05, 9.783300000000203e-05, 9.745800000000165e-05, 9.734699999999763e-05]</msg>
<status status="PASS" starttime="20201117 14:44:07.416" endtime="20201117 14:44:07.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.410" endtime="20201117 14:44:07.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.422" endtime="20201117 14:44:07.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:07.426" endtime="20201117 14:44:07.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.424" endtime="20201117 14:44:07.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.420" endtime="20201117 14:44:07.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.034" endtime="20201117 14:44:07.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.461" endtime="20201117 14:44:07.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:06.459" endtime="20201117 14:44:07.448"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.450" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.462" endtime="20201117 14:44:07.481"></status>
</kw>
<msg timestamp="20201117 14:44:07.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:07.460" endtime="20201117 14:44:07.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:07.483" endtime="20201117 14:44:07.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.486" endtime="20201117 14:44:07.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.456" endtime="20201117 14:44:07.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.453" endtime="20201117 14:44:07.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.501" endtime="20201117 14:44:07.874"></status>
</kw>
<msg timestamp="20201117 14:44:07.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028225931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:07.497" endtime="20201117 14:44:07.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028225931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:07.884" endtime="20201117 14:44:07.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.904" endtime="20201117 14:44:07.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.492" endtime="20201117 14:44:07.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.490" endtime="20201117 14:44:07.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:07.922" level="INFO">${RESULT} = [{'time': 0.028225931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.863899999999759e-05, 'source_diff': 9.863899999999759e-05}, {'time': 0.028331931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:07.912" endtime="20201117 14:44:07.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:07.955" level="INFO">${ACCURACY} = {'source_diff': [9.863899999999759e-05, 9.812500000000099e-05, 9.84999999999979e-05, 9.894400000000012e-05, 9.869399999999987e-05, 9.891600000000098e-05, 9.88059999999999e-05, 9.879200000000032e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:44:07.924" endtime="20201117 14:44:07.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.966" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:44:07.964" endtime="20201117 14:44:07.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:07.972" level="INFO">VALUE: [9.863899999999759e-05, 9.812500000000099e-05, 9.84999999999979e-05, 9.894400000000012e-05, 9.869399999999987e-05, 9.891600000000098e-05, 9.88059999999999e-05, 9.879200000000032e-05, 9.854200000000007e-05, 9.833399999999853e-05, 9.826400000000068e-05, 9.808400000000175e-05, 9.876300000000171e-05, 9.884699999999913e-05, 9.876399999999771e-05, 9.862500000000149e-05, 9.827800000000025e-05, 9.854200000000007e-05, 9.894400000000012e-05, 9.824999999999764e-05, 9.861100000000192e-05, 9.833399999999853e-05, 9.883399999999903e-05, 9.905500000000067e-05, 9.868099999999977e-05, 9.873599999999857e-05, 9.81799999999998e-05, 9.872200000000247e-05, 9.829199999999982e-05, 9.81669999999997e-05, 9.843100000000299e-05, 9.837500000000471e-05, 9.844499999999562e-05, 9.893100000000349e-05, 9.887500000000521e-05, 9.865299999999716e-05, 9.831899999999949e-05, 9.895800000000315e-05, 9.865299999999716e-05, 9.797200000000172e-05, 9.890299999999741e-05, 9.883299999999956e-05, 9.840299999999691e-05, 9.841699999999648e-05, 9.856999999999921e-05, 9.823700000000102e-05, 9.817999999999633e-05, 9.875000000000161e-05, 9.823600000000154e-05, 9.806899999999924e-05]</msg>
<status status="PASS" starttime="20201117 14:44:07.969" endtime="20201117 14:44:07.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.957" endtime="20201117 14:44:07.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:07.982" endtime="20201117 14:44:07.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:07.990" endtime="20201117 14:44:08.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.986" endtime="20201117 14:44:08.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.977" endtime="20201117 14:44:08.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.451" endtime="20201117 14:44:08.018"></status>
</kw>
<msg timestamp="20201117 14:44:08.018" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.041" endtime="20201117 14:44:08.065"></status>
</kw>
<msg timestamp="20201117 14:44:08.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:08.038" endtime="20201117 14:44:08.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:08.068" endtime="20201117 14:44:08.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.075" endtime="20201117 14:44:08.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.030" endtime="20201117 14:44:08.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.024" endtime="20201117 14:44:08.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.100" endtime="20201117 14:44:08.463"></status>
</kw>
<msg timestamp="20201117 14:44:08.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044452611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044551611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:08.096" endtime="20201117 14:44:08.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044452611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044551611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:08.473" endtime="20201117 14:44:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.493" endtime="20201117 14:44:08.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.089" endtime="20201117 14:44:08.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.084" endtime="20201117 14:44:08.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:08.513" level="INFO">${RESULT} = [{'time': 0.044551611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.899999999999493e-05, 'source_diff': 9.899999999999493e-05}, {'time': 0.044653597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:08.503" endtime="20201117 14:44:08.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:08.548" level="INFO">${ACCURACY} = {'source_diff': [9.899999999999493e-05, 9.827800000000025e-05, 9.883299999999956e-05, 9.806900000000618e-05, 9.88609999999987e-05, 9.879200000000032e-05, 9.812499999999752e-05, 9.807000000000565e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:08.515" endtime="20201117 14:44:08.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.560" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:44:08.557" endtime="20201117 14:44:08.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.566" level="INFO">VALUE: [9.899999999999493e-05, 9.827800000000025e-05, 9.883299999999956e-05, 9.806900000000618e-05, 9.88609999999987e-05, 9.879200000000032e-05, 9.812499999999752e-05, 9.807000000000565e-05, 9.894499999999612e-05, 9.863799999999812e-05, 9.887499999999827e-05, 9.89860000000023e-05, 9.856899999999974e-05, 9.836100000000514e-05, 9.801400000000043e-05, 9.805599999999914e-05, 9.837499999999777e-05, 9.824999999999418e-05, 9.85280000000005e-05, 9.84860000000018e-05, 9.808299999999881e-05, 9.833299999999906e-05, 9.805499999999967e-05, 9.881899999999999e-05, 9.891700000000392e-05, 9.891700000000392e-05, 9.899999999999493e-05, 9.869499999999587e-05, 9.833399999999853e-05, 9.883399999999903e-05, 9.862499999999802e-05, 9.834699999999863e-05, 9.887499999999827e-05, 9.848599999999486e-05, 9.805499999999967e-05, 9.87080000000029e-05, 9.887499999999827e-05, 9.830499999999992e-05, 9.880500000000042e-05, 9.88059999999999e-05, 9.863899999999759e-05, 9.867999999999683e-05, 9.866599999999726e-05, 9.827800000000025e-05, 9.90139999999945e-05, 9.86530000000041e-05, 9.841699999999648e-05, 9.829199999999982e-05, 9.855599999999964e-05, 9.879200000000032e-05]</msg>
<status status="PASS" starttime="20201117 14:44:08.562" endtime="20201117 14:44:08.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.550" endtime="20201117 14:44:08.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.576" endtime="20201117 14:44:08.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:08.585" endtime="20201117 14:44:08.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.580" endtime="20201117 14:44:08.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.570" endtime="20201117 14:44:08.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.020" endtime="20201117 14:44:08.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.449" endtime="20201117 14:44:08.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:07.448" endtime="20201117 14:44:08.612"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.618" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.641" endtime="20201117 14:44:08.664"></status>
</kw>
<msg timestamp="20201117 14:44:08.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:08.637" endtime="20201117 14:44:08.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:08.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:08.667" endtime="20201117 14:44:08.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.674" endtime="20201117 14:44:08.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.630" endtime="20201117 14:44:08.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.623" endtime="20201117 14:44:08.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:08.699" endtime="20201117 14:44:09.069"></status>
</kw>
<msg timestamp="20201117 14:44:09.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049747583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049846903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:08.695" endtime="20201117 14:44:09.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049747583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049846903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:09.079" endtime="20201117 14:44:09.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.099" endtime="20201117 14:44:09.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.688" endtime="20201117 14:44:09.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.683" endtime="20201117 14:44:09.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:09.119" level="INFO">${RESULT} = [{'time': 0.049846903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931999999999996e-05, 'source_diff': 9.931999999999996e-05}, {'time': 0.049959931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:09.110" endtime="20201117 14:44:09.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:09.152" level="INFO">${ACCURACY} = {'source_diff': [9.931999999999996e-05, 9.93060000000004e-05, 9.980500000000142e-05, 9.949999999999543e-05, 9.920799999999647e-05, 9.913899999999809e-05, 9.909699999999938e-05, 9.963899999999859e-05, ...</msg>
<status status="PASS" starttime="20201117 14:44:09.122" endtime="20201117 14:44:09.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.163" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:44:09.161" endtime="20201117 14:44:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.169" level="INFO">VALUE: [9.931999999999996e-05, 9.93060000000004e-05, 9.980500000000142e-05, 9.949999999999543e-05, 9.920799999999647e-05, 9.913899999999809e-05, 9.909699999999938e-05, 9.963899999999859e-05, 9.961099999999945e-05, 9.994499999999712e-05, 9.966599999999826e-05, 9.948599999999586e-05, 9.965199999999869e-05, 9.987499999999927e-05, 9.987499999999927e-05, 9.926400000000168e-05, 9.97080000000039e-05, 9.944400000000408e-05, 9.922199999999604e-05, 9.929200000000082e-05, 9.987499999999927e-05, 9.945900000000313e-05, 9.909699999999938e-05, 9.984700000000013e-05, 9.949999999999543e-05, 9.981899999999405e-05, 9.933300000000006e-05, 9.992999999999808e-05, 9.912499999999852e-05, 9.988899999999884e-05, 9.956900000000074e-05, 9.976400000000218e-05, 9.933399999999953e-05, 9.987499999999927e-05, 9.995899999999669e-05, 9.940299999999791e-05, 9.990199999999894e-05, 9.92359999999956e-05, 9.979100000000185e-05, 9.957000000000021e-05, 9.904200000000057e-05, 9.951400000000193e-05, 9.970900000000338e-05, 9.948700000000227e-05, 9.905600000000014e-05, 9.975000000000261e-05, 9.972199999999654e-05, 9.952699999999509e-05, 9.945800000000365e-05, 9.95689999999938e-05]</msg>
<status status="PASS" starttime="20201117 14:44:09.166" endtime="20201117 14:44:09.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.154" endtime="20201117 14:44:09.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.179" endtime="20201117 14:44:09.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:09.188" endtime="20201117 14:44:09.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.184" endtime="20201117 14:44:09.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.175" endtime="20201117 14:44:09.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.619" endtime="20201117 14:44:09.215"></status>
</kw>
<msg timestamp="20201117 14:44:09.215" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.238" endtime="20201117 14:44:09.262"></status>
</kw>
<msg timestamp="20201117 14:44:09.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:09.235" endtime="20201117 14:44:09.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:09.265" endtime="20201117 14:44:09.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.272" endtime="20201117 14:44:09.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.227" endtime="20201117 14:44:09.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.221" endtime="20201117 14:44:09.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.297" endtime="20201117 14:44:09.668"></status>
</kw>
<msg timestamp="20201117 14:44:09.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043846486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:09.293" endtime="20201117 14:44:09.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043846486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:09.678" endtime="20201117 14:44:09.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.698" endtime="20201117 14:44:09.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.286" endtime="20201117 14:44:09.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.281" endtime="20201117 14:44:09.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:09.718" level="INFO">${RESULT} = [{'time': 0.043846486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.949999999999543e-05, 'source_diff': 9.949999999999543e-05}, {'time': 0.0439565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:44:09.709" endtime="20201117 14:44:09.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:09.751" level="INFO">${ACCURACY} = {'source_diff': [9.949999999999543e-05, 9.938900000000528e-05, 9.958300000000031e-05, 9.970799999999697e-05, 9.927799999999432e-05, 9.902799999999407e-05, 9.944500000000356e-05, 9.994400000000458e-05,...</msg>
<status status="PASS" starttime="20201117 14:44:09.720" endtime="20201117 14:44:09.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.762" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:44:09.760" endtime="20201117 14:44:09.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.768" level="INFO">VALUE: [9.949999999999543e-05, 9.938900000000528e-05, 9.958300000000031e-05, 9.970799999999697e-05, 9.927799999999432e-05, 9.902799999999407e-05, 9.944500000000356e-05, 9.994400000000458e-05, 9.976399999999525e-05, 9.987499999999927e-05, 9.96939999999974e-05, 9.943100000000399e-05, 9.93060000000004e-05, 9.911099999999895e-05, 9.988899999999884e-05, 9.950000000000236e-05, 9.93479999999991e-05, 9.977800000000175e-05, 9.956900000000074e-05, 9.967999999999783e-05, 9.972200000000347e-05, 9.999999999999593e-05, 9.96939999999974e-05, 9.908299999999981e-05, 9.991699999999798e-05, 9.947200000000322e-05, 9.997299999999626e-05, 9.941699999999748e-05, 9.966699999999773e-05, 9.92080000000034e-05, 9.909699999999938e-05, 9.999999999999593e-05, 9.912499999999852e-05, 9.931900000000049e-05, 9.961099999999945e-05, 9.941699999999748e-05, 9.954200000000107e-05, 9.965299999999816e-05, 9.988899999999884e-05, 9.949999999999543e-05, 9.940200000000537e-05, 9.929100000000135e-05, 9.976400000000218e-05, 9.958300000000031e-05, 9.927799999999432e-05, 9.97080000000039e-05, 9.991700000000492e-05, 9.990300000000535e-05, 9.913900000000503e-05, 9.962499999999902e-05]</msg>
<status status="PASS" starttime="20201117 14:44:09.765" endtime="20201117 14:44:09.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.753" endtime="20201117 14:44:09.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.778" endtime="20201117 14:44:09.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:09.787" endtime="20201117 14:44:09.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.783" endtime="20201117 14:44:09.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.773" endtime="20201117 14:44:09.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.217" endtime="20201117 14:44:09.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.615" endtime="20201117 14:44:09.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:08.613" endtime="20201117 14:44:09.815"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.821" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.845" endtime="20201117 14:44:09.869"></status>
</kw>
<msg timestamp="20201117 14:44:09.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:09.841" endtime="20201117 14:44:09.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:09.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:09.872" endtime="20201117 14:44:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.879" endtime="20201117 14:44:09.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.833" endtime="20201117 14:44:09.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.827" endtime="20201117 14:44:09.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:09.904" endtime="20201117 14:44:10.277"></status>
</kw>
<msg timestamp="20201117 14:44:10.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052026833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052127431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:09.901" endtime="20201117 14:44:10.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052026833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052127431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:10.287" endtime="20201117 14:44:10.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.306" endtime="20201117 14:44:10.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.893" endtime="20201117 14:44:10.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.888" endtime="20201117 14:44:10.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:10.324" level="INFO">${RESULT} = [{'time': 0.052127431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010059800000000035, 'source_diff': 0.00010059800000000035}, {'time': 0.052239431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:10.315" endtime="20201117 14:44:10.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:10.356" level="INFO">${ACCURACY} = {'source_diff': [0.00010059800000000035, 0.00010100000000000386, 0.00010005600000000114, 0.00010015199999999919, 0.0001008610000000007, 0.0001005280000000025, 0.0001006809999999983, 0.0001008190000000...</msg>
<status status="PASS" starttime="20201117 14:44:10.327" endtime="20201117 14:44:10.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.368" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:44:10.365" endtime="20201117 14:44:10.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.375" level="INFO">VALUE: [0.00010059800000000035, 0.00010100000000000386, 0.00010005600000000114, 0.00010015199999999919, 0.0001008610000000007, 0.0001005280000000025, 0.0001006809999999983, 0.00010081900000000199, 0.00010066699999999873, 0.00010011099999999995, 0.00010087500000000027, 0.00010032000000000096, 0.00010033400000000053, 0.00010008300000000081, 0.00010045800000000465, 0.00010094400000000558, 0.00010045799999999772, 0.00010025000000000311, 0.00010027799999999532, 0.00010047199999999729, 0.00010043099999999805, 0.0001003339999999936, 0.00010075000000000361, 0.00010069499999999787, 0.0001002080000000044, 0.0001002080000000044, 0.00010012499999999952, 0.00010073600000000404, 0.0001007359999999971, 0.00010081900000000199, 0.00010079200000000232, 0.00010013899999999909, 0.00010019499999999737, 0.00010058400000000078, 0.00010079100000000285, 0.00010013899999999909, 0.00010004099999999516, 0.00010026399999999575, 0.00010022299999999651, 0.0001008060000000019, 0.00010029200000000182, 0.00010019500000000431, 0.00010005600000000114, 0.00010083400000000103, 0.00010074999999999668, 0.00010087500000000027, 0.00010056900000000174, 0.0001005410000000026, 0.00010063900000000653, 0.00010032000000000096]</msg>
<status status="PASS" starttime="20201117 14:44:10.370" endtime="20201117 14:44:10.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.358" endtime="20201117 14:44:10.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.384" endtime="20201117 14:44:10.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:10.393" endtime="20201117 14:44:10.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.388" endtime="20201117 14:44:10.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.379" endtime="20201117 14:44:10.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.822" endtime="20201117 14:44:10.419"></status>
</kw>
<msg timestamp="20201117 14:44:10.420" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.443" endtime="20201117 14:44:10.466"></status>
</kw>
<msg timestamp="20201117 14:44:10.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:10.439" endtime="20201117 14:44:10.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:10.469" endtime="20201117 14:44:10.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.476" endtime="20201117 14:44:10.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.432" endtime="20201117 14:44:10.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.426" endtime="20201117 14:44:10.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.501" endtime="20201117 14:44:10.858"></status>
</kw>
<msg timestamp="20201117 14:44:10.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043724375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:10.498" endtime="20201117 14:44:10.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043724375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:10.863" endtime="20201117 14:44:10.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.871" endtime="20201117 14:44:10.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.490" endtime="20201117 14:44:10.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.485" endtime="20201117 14:44:10.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:10.881" level="INFO">${RESULT} = [{'time': 0.043724375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010073600000000404, 'source_diff': 0.00010073600000000404}, {'time': 0.043830417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:10.876" endtime="20201117 14:44:10.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:10.896" level="INFO">${ACCURACY} = {'source_diff': [0.00010073600000000404, 0.0001008610000000007, 0.00010097299999999726, 0.00010020899999999694, 0.00010045899999999719, 0.00010057000000000121, 0.00010097200000000472, 0.00010067999999...</msg>
<status status="PASS" starttime="20201117 14:44:10.882" endtime="20201117 14:44:10.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.902" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:44:10.901" endtime="20201117 14:44:10.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.905" level="INFO">VALUE: [0.00010073600000000404, 0.0001008610000000007, 0.00010097299999999726, 0.00010020899999999694, 0.00010045899999999719, 0.00010057000000000121, 0.00010097200000000472, 0.00010067999999999883, 0.00010044399999999815, 0.00010008300000000081, 0.00010088899999999984, 0.00010031900000000149, 0.00010026400000000268, 0.00010024999999999618, 0.00010055600000000164, 0.00010016599999999876, 0.00010047199999999729, 0.00010100000000000386, 0.00010077700000000328, 0.00010038899999999934, 0.0001008610000000007, 0.00010077700000000328, 0.00010025000000000311, 0.00010009799999999985, 0.00010008400000000028, 0.00010029199999999489, 0.00010084700000000113, 0.00010075000000000361, 0.00010002699999999559, 0.00010052699999999609, 0.00010070799999999797, 0.00010076400000000318, 0.00010049999999999643, 0.0001003610000000002, 0.00010095900000000463, 0.00010055500000000217, 0.00010069499999999787, 0.00010023600000000354, 0.00010015199999999919, 0.000101028000000003, 0.00010083299999999462, 0.00010061100000000045, 0.0001002359999999966, 0.0001006809999999983, 0.00010033400000000053, 0.00010094499999999812, 0.0001005559999999947, 0.0001006660000000062, 0.00010066599999999926, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201117 14:44:10.903" endtime="20201117 14:44:10.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.897" endtime="20201117 14:44:10.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.909" endtime="20201117 14:44:10.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:10.913" endtime="20201117 14:44:10.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.911" endtime="20201117 14:44:10.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.907" endtime="20201117 14:44:10.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.421" endtime="20201117 14:44:10.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.818" endtime="20201117 14:44:10.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:09.816" endtime="20201117 14:44:10.935"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.939" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.962" endtime="20201117 14:44:10.986"></status>
</kw>
<msg timestamp="20201117 14:44:10.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:10.958" endtime="20201117 14:44:10.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:10.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:10.989" endtime="20201117 14:44:10.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:10.996" endtime="20201117 14:44:11.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.951" endtime="20201117 14:44:11.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.945" endtime="20201117 14:44:11.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.021" endtime="20201117 14:44:11.386"></status>
</kw>
<msg timestamp="20201117 14:44:11.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043352028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:11.018" endtime="20201117 14:44:11.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:11.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043352028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:11.396" endtime="20201117 14:44:11.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.415" endtime="20201117 14:44:11.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.010" endtime="20201117 14:44:11.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.005" endtime="20201117 14:44:11.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:11.436" level="INFO">${RESULT} = [{'time': 0.043453208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010117999999999933, 'source_diff': 0.00010117999999999933}, {'time': 0.043563208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:11.427" endtime="20201117 14:44:11.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:11.468" level="INFO">${ACCURACY} = {'source_diff': [0.00010117999999999933, 0.0001016939999999994, 0.0001019160000000005, 0.000101028000000003, 0.00010166699999999973, 0.0001012080000000054, 0.00010194499999999912, 0.000101458999999998...</msg>
<status status="PASS" starttime="20201117 14:44:11.438" endtime="20201117 14:44:11.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:11.480" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:44:11.477" endtime="20201117 14:44:11.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:11.485" level="INFO">VALUE: [0.00010117999999999933, 0.0001016939999999994, 0.0001019160000000005, 0.000101028000000003, 0.00010166699999999973, 0.0001012080000000054, 0.00010194499999999912, 0.00010145899999999819, 0.0001018480000000016, 0.00010166699999999973, 0.00010166600000000026, 0.00010142999999999958, 0.0001017359999999981, 0.00010111099999999401, 0.00010170799999999897, 0.00010111100000000095, 0.00010191699999999998, 0.00010125000000000411, 0.00010194499999999912, 0.00010148599999999786, 0.00010193000000000008, 0.00010106900000000224, 0.00010197199999999879, 0.00010194399999999965, 0.0001016939999999994, 0.00010126400000000368, 0.0001010559999999952, 0.00010159700000000188, 0.00010195899999999869, 0.00010111099999999401, 0.00010150000000000436, 0.00010158299999999537, 0.00010172199999999854, 0.00010133300000000206, 0.00010145799999999872, 0.0001017359999999981, 0.00010175000000000461, 0.000101416, 0.00010124999999999718, 0.00010140299999999991, 0.0001013610000000012, 0.00010194499999999912, 0.00010158300000000231, 0.00010199999999999793, 0.00010145799999999872, 0.00010191699999999998, 0.00010108300000000181, 0.00010111099999999401, 0.00010137500000000077, 0.00010145899999999819]</msg>
<status status="PASS" starttime="20201117 14:44:11.482" endtime="20201117 14:44:11.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.470" endtime="20201117 14:44:11.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.495" endtime="20201117 14:44:11.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:11.504" endtime="20201117 14:44:11.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.499" endtime="20201117 14:44:11.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.490" endtime="20201117 14:44:11.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.940" endtime="20201117 14:44:11.530"></status>
</kw>
<msg timestamp="20201117 14:44:11.530" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.554" endtime="20201117 14:44:11.577"></status>
</kw>
<msg timestamp="20201117 14:44:11.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:11.550" endtime="20201117 14:44:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:11.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:11.580" endtime="20201117 14:44:11.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.587" endtime="20201117 14:44:11.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.542" endtime="20201117 14:44:11.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.536" endtime="20201117 14:44:11.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:11.612" endtime="20201117 14:44:11.973"></status>
</kw>
<msg timestamp="20201117 14:44:11.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043923375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044024931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:11.608" endtime="20201117 14:44:11.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043923375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044024931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:11.983" endtime="20201117 14:44:12.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.003" endtime="20201117 14:44:12.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.601" endtime="20201117 14:44:12.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.596" endtime="20201117 14:44:12.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:12.023" level="INFO">${RESULT} = [{'time': 0.044024931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010155600000000264, 'source_diff': 0.00010155600000000264}, {'time': 0.044129972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:12.014" endtime="20201117 14:44:12.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:12.055" level="INFO">${ACCURACY} = {'source_diff': [0.00010155600000000264, 0.00010112500000000052, 0.00010147200000000522, 0.00010179099999999691, 0.00010181900000000299, 0.0001018610000000017, 0.00010143100000000599, 0.00010161100000...</msg>
<status status="PASS" starttime="20201117 14:44:12.025" endtime="20201117 14:44:12.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.067" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:44:12.064" endtime="20201117 14:44:12.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.072" level="INFO">VALUE: [0.00010155600000000264, 0.00010112500000000052, 0.00010147200000000522, 0.00010179099999999691, 0.00010181900000000299, 0.0001018610000000017, 0.00010143100000000599, 0.00010161100000000145, 0.00010169499999999887, 0.00010108400000000128, 0.00010199999999999793, 0.00010170899999999844, 0.00010162500000000102, 0.00010113900000000009, 0.00010137500000000077, 0.00010129099999999641, 0.00010129200000000282, 0.00010174999999999768, 0.00010190300000000041, 0.0001012359999999976, 0.00010172299999999801, 0.00010147299999999776, 0.00010106999999999478, 0.00010106900000000224, 0.00010166699999999973, 0.00010173600000000504, 0.00010165300000000016, 0.00010183299999999562, 0.00010141699999999948, 0.00010111100000000095, 0.00010150000000000436, 0.0001017359999999981, 0.00010120899999999794, 0.00010154200000000307, 0.00010138900000000034, 0.00010129100000000335, 0.00010148599999999786, 0.00010129200000000282, 0.00010144399999999915, 0.00010111100000000095, 0.00010122199999999804, 0.00010166699999999973, 0.00010170899999999844, 0.00010199999999999793, 0.00010175000000000461, 0.00010158299999999537, 0.00010115299999999966, 0.00010129200000000282, 0.00010112500000000052, 0.00010134700000000163]</msg>
<status status="PASS" starttime="20201117 14:44:12.069" endtime="20201117 14:44:12.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.057" endtime="20201117 14:44:12.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.082" endtime="20201117 14:44:12.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:12.090" endtime="20201117 14:44:12.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.086" endtime="20201117 14:44:12.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.077" endtime="20201117 14:44:12.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:11.532" endtime="20201117 14:44:12.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.936" endtime="20201117 14:44:12.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:10.935" endtime="20201117 14:44:12.118"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.123" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.146" endtime="20201117 14:44:12.169"></status>
</kw>
<msg timestamp="20201117 14:44:12.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:12.143" endtime="20201117 14:44:12.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:12.173" endtime="20201117 14:44:12.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.180" endtime="20201117 14:44:12.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.135" endtime="20201117 14:44:12.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.129" endtime="20201117 14:44:12.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.210" endtime="20201117 14:44:12.572"></status>
</kw>
<msg timestamp="20201117 14:44:12.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049301375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049404056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:12.207" endtime="20201117 14:44:12.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049301375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049404056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:12.582" endtime="20201117 14:44:12.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.601" endtime="20201117 14:44:12.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.199" endtime="20201117 14:44:12.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.188" endtime="20201117 14:44:12.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:12.619" level="INFO">${RESULT} = [{'time': 0.049404056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001026810000000003, 'source_diff': 0.0001026810000000003}, {'time': 0.049509069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:12.610" endtime="20201117 14:44:12.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:12.651" level="INFO">${ACCURACY} = {'source_diff': [0.0001026810000000003, 0.00010213800000000162, 0.00010233299999999612, 0.00010277699999999834, 0.00010290300000000141, 0.00010276399999999825, 0.00010229199999999689, 0.00010224999999...</msg>
<status status="PASS" starttime="20201117 14:44:12.622" endtime="20201117 14:44:12.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.663" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:44:12.660" endtime="20201117 14:44:12.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.669" level="INFO">VALUE: [0.0001026810000000003, 0.00010213800000000162, 0.00010233299999999612, 0.00010277699999999834, 0.00010290300000000141, 0.00010276399999999825, 0.00010229199999999689, 0.00010224999999999818, 0.00010263900000000159, 0.00010291700000000098, 0.00010204199999999664, 0.00010224999999999818, 0.00010261199999999499, 0.0001020689999999963, 0.00010261100000000245, 0.00010233300000000306, 0.00010266700000000073, 0.00010245800000000665, 0.00010222199999999904, 0.00010291700000000098, 0.0001028339999999961, 0.00010244499999999962, 0.00010249999999999843, 0.00010227700000000478, 0.00010245799999999972, 0.00010205499999999673, 0.00010254199999999714, 0.00010281899999999705, 0.00010254199999999714, 0.00010233300000000306, 0.000102028000000004, 0.00010272299999999901, 0.00010251299999999852, 0.0001023480000000021, 0.00010268000000000083, 0.00010216600000000076, 0.00010215300000000066, 0.00010213900000000109, 0.00010293100000000055, 0.00010254200000000407, 0.0001028060000000039, 0.0001030139999999985, 0.00010231999999999603, 0.00010263800000000212, 0.00010212499999999458, 0.00010204099999999716, 0.00010272199999999954, 0.00010294400000000065, 0.00010293100000000055, 0.00010211100000000195]</msg>
<status status="PASS" starttime="20201117 14:44:12.665" endtime="20201117 14:44:12.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.653" endtime="20201117 14:44:12.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.679" endtime="20201117 14:44:12.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:12.688" endtime="20201117 14:44:12.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.683" endtime="20201117 14:44:12.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.673" endtime="20201117 14:44:12.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.125" endtime="20201117 14:44:12.714"></status>
</kw>
<msg timestamp="20201117 14:44:12.714" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.737" endtime="20201117 14:44:12.761"></status>
</kw>
<msg timestamp="20201117 14:44:12.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:12.734" endtime="20201117 14:44:12.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:12.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:12.765" endtime="20201117 14:44:12.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.773" endtime="20201117 14:44:12.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.726" endtime="20201117 14:44:12.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.720" endtime="20201117 14:44:12.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:12.798" endtime="20201117 14:44:13.160"></status>
</kw>
<msg timestamp="20201117 14:44:13.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043770708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043873194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:12.794" endtime="20201117 14:44:13.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043770708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043873194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:13.170" endtime="20201117 14:44:13.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.189" endtime="20201117 14:44:13.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.787" endtime="20201117 14:44:13.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.782" endtime="20201117 14:44:13.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:13.209" level="INFO">${RESULT} = [{'time': 0.043873194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010248599999999886, 'source_diff': 0.00010248599999999886}, {'time': 0.043986208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:13.199" endtime="20201117 14:44:13.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:13.244" level="INFO">${ACCURACY} = {'source_diff': [0.00010248599999999886, 0.00010212500000000152, 0.00010249999999999843, 0.00010288900000000184, 0.00010216700000000023, 0.0001023610000000022, 0.00010291700000000098, 0.00010218099999...</msg>
<status status="PASS" starttime="20201117 14:44:13.211" endtime="20201117 14:44:13.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.255" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:44:13.253" endtime="20201117 14:44:13.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.261" level="INFO">VALUE: [0.00010248599999999886, 0.00010212500000000152, 0.00010249999999999843, 0.00010288900000000184, 0.00010216700000000023, 0.0001023610000000022, 0.00010291700000000098, 0.0001021809999999998, 0.0001027359999999991, 0.00010274999999999868, 0.00010231999999999603, 0.0001028610000000027, 0.00010274999999999868, 0.00010287500000000227, 0.0001026810000000003, 0.00010213900000000109, 0.00010249999999999843, 0.0001028060000000039, 0.00010266700000000073, 0.0001026810000000003, 0.0001020559999999962, 0.00010255500000000417, 0.0001027359999999991, 0.00010209699999999544, 0.00010234700000000263, 0.00010211100000000195, 0.000102513999999998, 0.00010279199999999739, 0.00010259799999999542, 0.00010230599999999646, 0.00010225000000000511, 0.00010218100000000674, 0.00010205500000000367, 0.00010258299999999637, 0.0001024860000000058, 0.00010281999999999653, 0.00010258300000000331, 0.00010248599999999886, 0.00010230599999999646, 0.00010269499999999987, 0.0001025559999999967, 0.00010256999999999628, 0.00010298599999999936, 0.00010212500000000152, 0.00010270799999999997, 0.00010268000000000083, 0.00010205499999999673, 0.00010261099999999551, 0.00010272199999999954, 0.00010241700000000048]</msg>
<status status="PASS" starttime="20201117 14:44:13.258" endtime="20201117 14:44:13.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.246" endtime="20201117 14:44:13.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.270" endtime="20201117 14:44:13.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:13.279" endtime="20201117 14:44:13.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.275" endtime="20201117 14:44:13.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.266" endtime="20201117 14:44:13.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.716" endtime="20201117 14:44:13.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.121" endtime="20201117 14:44:13.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:12.119" endtime="20201117 14:44:13.306"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.312" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.336" endtime="20201117 14:44:13.360"></status>
</kw>
<msg timestamp="20201117 14:44:13.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:13.332" endtime="20201117 14:44:13.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:13.363" endtime="20201117 14:44:13.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.370" endtime="20201117 14:44:13.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.324" endtime="20201117 14:44:13.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.318" endtime="20201117 14:44:13.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.395" endtime="20201117 14:44:13.755"></status>
</kw>
<msg timestamp="20201117 14:44:13.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050374625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050477958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:13.391" endtime="20201117 14:44:13.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050374625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050477958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:13.765" endtime="20201117 14:44:13.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.784" endtime="20201117 14:44:13.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.384" endtime="20201117 14:44:13.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.379" endtime="20201117 14:44:13.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:13.804" level="INFO">${RESULT} = [{'time': 0.050477958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010333300000000406, 'source_diff': 0.00010333300000000406}, {'time': 0.050587972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:13.795" endtime="20201117 14:44:13.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:13.836" level="INFO">${ACCURACY} = {'source_diff': [0.00010333300000000406, 0.00010356900000000474, 0.00010304199999999764, 0.00010390300000000241, 0.0001032359999999996, 0.00010308300000000381, 0.00010337500000000277, 0.00010393100000...</msg>
<status status="PASS" starttime="20201117 14:44:13.806" endtime="20201117 14:44:13.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.848" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:44:13.845" endtime="20201117 14:44:13.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.853" level="INFO">VALUE: [0.00010333300000000406, 0.00010356900000000474, 0.00010304199999999764, 0.00010390300000000241, 0.0001032359999999996, 0.00010308300000000381, 0.00010337500000000277, 0.00010393100000000155, 0.00010345900000000019, 0.00010302799999999807, 0.00010305499999999773, 0.00010319399999999396, 0.00010322200000000004, 0.00010345800000000072, 0.00010343100000000105, 0.00010366699999999479, 0.00010341700000000148, 0.00010386099999999676, 0.00010329199999999789, 0.00010370900000000044, 0.00010356900000000474, 0.00010397200000000079, 0.00010304099999999816, 0.00010308299999999687, 0.00010398599999999342, 0.0001033610000000032, 0.00010333300000000406, 0.00010341699999999454, 0.0001033339999999966, 0.00010370800000000097, 0.00010327699999999884, 0.0001036940000000014, 0.00010329099999999841, 0.0001039160000000025, 0.00010354199999999814, 0.00010362500000000302, 0.00010312499999999558, 0.00010319500000000037, 0.00010304199999999764, 0.00010311099999999601, 0.00010313899999999515, 0.00010304099999999816, 0.00010395799999999428, 0.00010306900000000424, 0.00010330599999999746, 0.00010316699999999429, 0.00010383299999999762, 0.00010352799999999857, 0.00010366700000000173, 0.00010308299999999687]</msg>
<status status="PASS" starttime="20201117 14:44:13.850" endtime="20201117 14:44:13.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.838" endtime="20201117 14:44:13.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.862" endtime="20201117 14:44:13.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:13.871" endtime="20201117 14:44:13.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.867" endtime="20201117 14:44:13.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.858" endtime="20201117 14:44:13.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.313" endtime="20201117 14:44:13.898"></status>
</kw>
<msg timestamp="20201117 14:44:13.899" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.922" endtime="20201117 14:44:13.946"></status>
</kw>
<msg timestamp="20201117 14:44:13.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:13.918" endtime="20201117 14:44:13.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:13.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:13.949" endtime="20201117 14:44:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.956" endtime="20201117 14:44:13.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.911" endtime="20201117 14:44:13.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.904" endtime="20201117 14:44:13.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:13.983" endtime="20201117 14:44:14.305"></status>
</kw>
<msg timestamp="20201117 14:44:14.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043518833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:13.979" endtime="20201117 14:44:14.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043518833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:14.309" endtime="20201117 14:44:14.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.318" endtime="20201117 14:44:14.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.971" endtime="20201117 14:44:14.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.966" endtime="20201117 14:44:14.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:14.327" level="INFO">${RESULT} = [{'time': 0.043622486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010365300000000216, 'source_diff': 0.00010365300000000216}, {'time': 0.0437375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:14.323" endtime="20201117 14:44:14.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:14.341" level="INFO">${ACCURACY} = {'source_diff': [0.00010365300000000216, 0.00010379199999999839, 0.00010308399999999635, 0.00010304200000000457, 0.0001038889999999959, 0.00010390300000000241, 0.00010365300000000216, 0.00010361100000...</msg>
<status status="PASS" starttime="20201117 14:44:14.328" endtime="20201117 14:44:14.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.346" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:44:14.345" endtime="20201117 14:44:14.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.349" level="INFO">VALUE: [0.00010365300000000216, 0.00010379199999999839, 0.00010308399999999635, 0.00010304200000000457, 0.0001038889999999959, 0.00010390300000000241, 0.00010365300000000216, 0.00010361100000000345, 0.00010362500000000302, 0.00010383299999999762, 0.00010357000000000421, 0.0001040139999999995, 0.00010358300000000431, 0.0001030139999999985, 0.00010324999999999918, 0.00010348599999999986, 0.00010398699999999983, 0.00010384699999999719, 0.00010327699999999884, 0.00010315300000000166, 0.00010343100000000105, 0.00010331899999999755, 0.00010347200000000029, 0.00010344500000000062, 0.00010341700000000148, 0.00010369500000000087, 0.00010345900000000019, 0.0001032359999999996, 0.00010387499999999633, 0.00010375000000000661, 0.0001030689999999973, 0.0001033610000000032, 0.00010334700000000363, 0.00010329199999999789, 0.00010345900000000019, 0.00010345900000000019, 0.00010341699999999454, 0.00010324999999999918, 0.00010331899999999755, 0.00010334700000000363, 0.0001039160000000025, 0.00010377799999999882, 0.00010376399999999925, 0.00010369500000000087, 0.00010363900000000259, 0.00010308300000000381, 0.00010312500000000252, 0.0001031940000000009, 0.000103416000000002, 0.00010316700000000123]</msg>
<status status="PASS" starttime="20201117 14:44:14.347" endtime="20201117 14:44:14.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.342" endtime="20201117 14:44:14.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.354" endtime="20201117 14:44:14.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:14.358" endtime="20201117 14:44:14.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.356" endtime="20201117 14:44:14.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.352" endtime="20201117 14:44:14.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.900" endtime="20201117 14:44:14.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.309" endtime="20201117 14:44:14.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:13.307" endtime="20201117 14:44:14.380"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.382" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.393" endtime="20201117 14:44:14.413"></status>
</kw>
<msg timestamp="20201117 14:44:14.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:14.391" endtime="20201117 14:44:14.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:14.415" endtime="20201117 14:44:14.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.418" endtime="20201117 14:44:14.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.388" endtime="20201117 14:44:14.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.385" endtime="20201117 14:44:14.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.429" endtime="20201117 14:44:14.756"></status>
</kw>
<msg timestamp="20201117 14:44:14.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027685236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027789903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:14.428" endtime="20201117 14:44:14.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027685236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027789903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:14.766" endtime="20201117 14:44:14.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.785" endtime="20201117 14:44:14.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.424" endtime="20201117 14:44:14.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.422" endtime="20201117 14:44:14.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:14.804" level="INFO">${RESULT} = [{'time': 0.027789903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010466700000000273, 'source_diff': 0.00010466700000000273}, {'time': 0.027897931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:14.795" endtime="20201117 14:44:14.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:14.837" level="INFO">${ACCURACY} = {'source_diff': [0.00010466700000000273, 0.00010409800000000038, 0.00010434800000000063, 0.00010438899999999987, 0.00010495799999999875, 0.00010423599999999714, 0.00010427799999999932, 0.0001046809999...</msg>
<status status="PASS" starttime="20201117 14:44:14.806" endtime="20201117 14:44:14.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.850" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:44:14.848" endtime="20201117 14:44:14.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.857" level="INFO">VALUE: [0.00010466700000000273, 0.00010409800000000038, 0.00010434800000000063, 0.00010438899999999987, 0.00010495799999999875, 0.00010423599999999714, 0.00010427799999999932, 0.00010468099999999883, 0.00010433300000000159, 0.000104514, 0.0001043339999999976, 0.00010491600000000004, 0.00010415299999999919, 0.00010404099999999916, 0.00010441599999999954, 0.00010422200000000104, 0.00010494399999999918, 0.00010481899999999905, 0.00010416700000000223, 0.00010447200000000129, 0.00010469500000000187, 0.00010425000000000018, 0.000104820000000002, 0.00010411199999999995, 0.00010452700000000009, 0.00010458300000000184, 0.00010497199999999832, 0.00010461100000000098, 0.00010466700000000273, 0.00010433299999999812, 0.00010416699999999876, 0.00010481999999999853, 0.00010454199999999914, 0.00010438799999999693, 0.00010492999999999614, 0.00010412500000000352, 0.00010487500000000427, 0.00010483299999999862, 0.00010459699999999794, 0.00010494399999999571, 0.00010448599999999392, 0.0001040559999999982, 0.0001046940000000024, 0.00010405499999999873, 0.00010405499999999873, 0.00010466599999999632, 0.00010416599999999582, 0.00010420800000000147, 0.00010481899999999905, 0.0001041940000000019]</msg>
<status status="PASS" starttime="20201117 14:44:14.853" endtime="20201117 14:44:14.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.840" endtime="20201117 14:44:14.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.866" endtime="20201117 14:44:14.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:14.875" endtime="20201117 14:44:14.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.871" endtime="20201117 14:44:14.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.862" endtime="20201117 14:44:14.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.383" endtime="20201117 14:44:14.902"></status>
</kw>
<msg timestamp="20201117 14:44:14.902" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.925" endtime="20201117 14:44:14.949"></status>
</kw>
<msg timestamp="20201117 14:44:14.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:14.922" endtime="20201117 14:44:14.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:14.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:14.953" endtime="20201117 14:44:14.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.959" endtime="20201117 14:44:14.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.914" endtime="20201117 14:44:14.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.908" endtime="20201117 14:44:14.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:14.985" endtime="20201117 14:44:15.349"></status>
</kw>
<msg timestamp="20201117 14:44:15.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043706931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:14.981" endtime="20201117 14:44:15.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043706931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:15.359" endtime="20201117 14:44:15.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.378" endtime="20201117 14:44:15.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.973" endtime="20201117 14:44:15.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.968" endtime="20201117 14:44:15.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:15.398" level="INFO">${RESULT} = [{'time': 0.043811375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010444400000000215, 'source_diff': 0.00010444400000000215}, {'time': 0.043931389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:15.389" endtime="20201117 14:44:15.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:15.433" level="INFO">${ACCURACY} = {'source_diff': [0.00010444400000000215, 0.00010480599999999896, 0.00010443099999999511, 0.00010452799999999957, 0.0001048339999999981, 0.00010416700000000223, 0.00010461099999999751, 0.00010420800000...</msg>
<status status="PASS" starttime="20201117 14:44:15.401" endtime="20201117 14:44:15.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.446" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:44:15.444" endtime="20201117 14:44:15.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.452" level="INFO">VALUE: [0.00010444400000000215, 0.00010480599999999896, 0.00010443099999999511, 0.00010452799999999957, 0.0001048339999999981, 0.00010416700000000223, 0.00010461099999999751, 0.00010420800000000147, 0.00010470799999999503, 0.00010504200000000657, 0.00010433300000000506, 0.00010407000000000471, 0.00010419500000000137, 0.00010429199999999889, 0.00010445900000000119, 0.00010498700000000083, 0.00010416600000000276, 0.00010412500000000352, 0.00010452700000000009, 0.0001046810000000023, 0.00010484700000000513, 0.00010431899999999855, 0.00010466700000000273, 0.00010458399999999785, 0.00010420900000000094, 0.00010408400000000428, 0.00010425000000000018, 0.0001042360000000006, 0.00010419399999999496, 0.0001050140000000005, 0.00010454199999999914, 0.00010466700000000273, 0.00010433299999999812, 0.00010437500000000377, 0.0001050140000000005, 0.00010490200000000394, 0.00010470900000000144, 0.0001041940000000019, 0.00010467999999999589, 0.00010494400000000265, 0.0001047360000000011, 0.00010470800000000197, 0.00010470900000000144, 0.00010418000000000233, 0.00010425000000000018, 0.00010404199999999864, 0.00010473700000000058, 0.00010426399999999975, 0.00010458300000000531, 0.00010483299999999862]</msg>
<status status="PASS" starttime="20201117 14:44:15.448" endtime="20201117 14:44:15.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.436" endtime="20201117 14:44:15.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.461" endtime="20201117 14:44:15.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:15.470" endtime="20201117 14:44:15.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.465" endtime="20201117 14:44:15.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.456" endtime="20201117 14:44:15.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.904" endtime="20201117 14:44:15.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.381" endtime="20201117 14:44:15.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:14.380" endtime="20201117 14:44:15.497"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.503" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.526" endtime="20201117 14:44:15.549"></status>
</kw>
<msg timestamp="20201117 14:44:15.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:15.522" endtime="20201117 14:44:15.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:15.553" endtime="20201117 14:44:15.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.559" endtime="20201117 14:44:15.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.514" endtime="20201117 14:44:15.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.508" endtime="20201117 14:44:15.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.584" endtime="20201117 14:44:15.945"></status>
</kw>
<msg timestamp="20201117 14:44:15.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049292833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049398236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:15.581" endtime="20201117 14:44:15.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:15.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049292833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049398236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:15.955" endtime="20201117 14:44:15.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:15.974" endtime="20201117 14:44:15.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.573" endtime="20201117 14:44:15.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.568" endtime="20201117 14:44:15.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:15.995" level="INFO">${RESULT} = [{'time': 0.049398236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010540299999999697, 'source_diff': 0.00010540299999999697}, {'time': 0.04951225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:44:15.986" endtime="20201117 14:44:15.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:16.028" level="INFO">${ACCURACY} = {'source_diff': [0.00010540299999999697, 0.00010509699999999844, 0.00010579200000000039, 0.00010533299999999912, 0.0001053339999999986, 0.00010550000000000143, 0.00010506999999999878, 0.00010583299999...</msg>
<status status="PASS" starttime="20201117 14:44:15.997" endtime="20201117 14:44:16.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.040" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:44:16.037" endtime="20201117 14:44:16.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.046" level="INFO">VALUE: [0.00010540299999999697, 0.00010509699999999844, 0.00010579200000000039, 0.00010533299999999912, 0.0001053339999999986, 0.00010550000000000143, 0.00010506999999999878, 0.00010583299999999962, 0.00010552700000000109, 0.0001057360000000021, 0.00010537500000000477, 0.0001052360000000016, 0.0001050689999999993, 0.00010516700000000323, 0.00010573599999999517, 0.00010598600000000236, 0.00010554200000000014, 0.0001058339999999991, 0.00010527700000000084, 0.00010600000000000193, 0.00010572200000000254, 0.00010584699999999919, 0.00010550000000000143, 0.00010552800000000057, 0.0001050559999999992, 0.00010534699999999869, 0.00010512500000000452, 0.00010550000000000143, 0.00010586099999999876, 0.00010587499999999833, 0.00010536099999999826, 0.00010558299999999937, 0.00010595799999999628, 0.00010587500000000527, 0.00010552800000000057, 0.00010562500000000502, 0.00010586099999999876, 0.00010547199999999535, 0.00010537499999999783, 0.00010569399999999646, 0.00010529100000000041, 0.00010542999999999664, 0.00010590300000000441, 0.000105514000000001, 0.0001057360000000021, 0.00010545900000000219, 0.000105514000000001, 0.00010569499999999593, 0.00010583299999999962, 0.00010501399999999356]</msg>
<status status="PASS" starttime="20201117 14:44:16.042" endtime="20201117 14:44:16.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.030" endtime="20201117 14:44:16.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.055" endtime="20201117 14:44:16.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:16.064" endtime="20201117 14:44:16.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.059" endtime="20201117 14:44:16.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.050" endtime="20201117 14:44:16.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.504" endtime="20201117 14:44:16.090"></status>
</kw>
<msg timestamp="20201117 14:44:16.091" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.114" endtime="20201117 14:44:16.137"></status>
</kw>
<msg timestamp="20201117 14:44:16.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:16.110" endtime="20201117 14:44:16.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:16.141" endtime="20201117 14:44:16.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.148" endtime="20201117 14:44:16.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.103" endtime="20201117 14:44:16.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.096" endtime="20201117 14:44:16.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.173" endtime="20201117 14:44:16.533"></status>
</kw>
<msg timestamp="20201117 14:44:16.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043659042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:44:16.169" endtime="20201117 14:44:16.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043659042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:44:16.542" endtime="20201117 14:44:16.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.563" endtime="20201117 14:44:16.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.161" endtime="20201117 14:44:16.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.156" endtime="20201117 14:44:16.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:16.583" level="INFO">${RESULT} = [{'time': 0.043659042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010504199999999964, 'source_diff': 0.00010504199999999964}, {'time': 0.043772069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:16.574" endtime="20201117 14:44:16.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:16.615" level="INFO">${ACCURACY} = {'source_diff': [0.00010504199999999964, 0.00010574999999999474, 0.00010534699999999869, 0.00010530499999999998, 0.00010505499999999973, 0.00010550000000000143, 0.00010591699999999704, 0.0001059580000...</msg>
<status status="PASS" starttime="20201117 14:44:16.585" endtime="20201117 14:44:16.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.626" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:44:16.624" endtime="20201117 14:44:16.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.632" level="INFO">VALUE: [0.00010504199999999964, 0.00010574999999999474, 0.00010534699999999869, 0.00010530499999999998, 0.00010505499999999973, 0.00010550000000000143, 0.00010591699999999704, 0.00010595800000000322, 0.00010508299999999887, 0.00010536200000000467, 0.00010584799999999867, 0.00010566600000000426, 0.00010548700000000133, 0.00010545800000000272, 0.00010581900000000005, 0.00010584699999999919, 0.00010595800000000322, 0.0001051810000000028, 0.00010590299999999747, 0.00010554200000000014, 0.00010534799999999817, 0.00010512500000000452, 0.00010522300000000151, 0.00010581900000000005, 0.0001056940000000034, 0.00010540299999999697, 0.00010584699999999919, 0.00010562499999999808, 0.00010506999999999878, 0.00010537499999999783, 0.00010529199999999989, 0.00010518000000000333, 0.00010504100000000016, 0.00010520800000000247, 0.00010568000000000383, 0.00010533299999999912, 0.00010552800000000057, 0.00010577700000000134, 0.00010520800000000247, 0.00010530599999999946, 0.00010600000000000193, 0.00010533299999999912, 0.00010591599999999757, 0.00010504100000000016, 0.00010542999999999664, 0.00010588900000000484, 0.00010548599999999492, 0.00010595799999999628, 0.00010541699999999654, 0.00010530599999999946]</msg>
<status status="PASS" starttime="20201117 14:44:16.629" endtime="20201117 14:44:16.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.617" endtime="20201117 14:44:16.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.642" endtime="20201117 14:44:16.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:16.650" endtime="20201117 14:44:16.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.646" endtime="20201117 14:44:16.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.637" endtime="20201117 14:44:16.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.092" endtime="20201117 14:44:16.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.500" endtime="20201117 14:44:16.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:15.498" endtime="20201117 14:44:16.678"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.683" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.706" endtime="20201117 14:44:16.730"></status>
</kw>
<msg timestamp="20201117 14:44:16.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:16.703" endtime="20201117 14:44:16.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:16.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:16.734" endtime="20201117 14:44:16.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.740" endtime="20201117 14:44:16.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.695" endtime="20201117 14:44:16.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.689" endtime="20201117 14:44:16.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:16.766" endtime="20201117 14:44:17.129"></status>
</kw>
<msg timestamp="20201117 14:44:17.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049735889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049842764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:16.763" endtime="20201117 14:44:17.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049735889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049842764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:17.139" endtime="20201117 14:44:17.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.158" endtime="20201117 14:44:17.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.755" endtime="20201117 14:44:17.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.749" endtime="20201117 14:44:17.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:17.176" level="INFO">${RESULT} = [{'time': 0.049842764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010687499999999933, 'source_diff': 0.00010687499999999933}, {'time': 0.049953778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:17.167" endtime="20201117 14:44:17.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:17.208" level="INFO">${ACCURACY} = {'source_diff': [0.00010687499999999933, 0.00010624999999999524, 0.00010672299999999607, 0.00010626300000000227, 0.00010673599999999617, 0.00010683300000000062, 0.00010658300000000037, 0.0001063330000...</msg>
<status status="PASS" starttime="20201117 14:44:17.178" endtime="20201117 14:44:17.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.220" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:44:17.217" endtime="20201117 14:44:17.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.225" level="INFO">VALUE: [0.00010687499999999933, 0.00010624999999999524, 0.00010672299999999607, 0.00010626300000000227, 0.00010673599999999617, 0.00010683300000000062, 0.00010658300000000037, 0.00010633300000000012, 0.00010637499999999883, 0.0001068889999999989, 0.0001060419999999937, 0.00010650000000000243, 0.00010650000000000243, 0.0001068340000000001, 0.00010670800000000397, 0.00010629099999999447, 0.00010676399999999531, 0.00010609699999999944, 0.00010662500000000602, 0.0001061810000000038, 0.00010687499999999933, 0.00010684700000000019, 0.00010613899999999815, 0.00010682000000000053, 0.00010637499999999883, 0.00010631900000000055, 0.00010616599999999782, 0.00010611099999999901, 0.0001066810000000043, 0.00010637500000000577, 0.00010609699999999944, 0.00010643099999999711, 0.00010645899999999625, 0.00010684700000000019, 0.00010615199999999825, 0.00010679100000000191, 0.00010687499999999933, 0.00010668099999999736, 0.00010698599999999642, 0.00010690299999999847, 0.00010632000000000003, 0.00010659799999999942, 0.00010620900000000294, 0.00010679200000000139, 0.00010692999999999814, 0.00010666600000000526, 0.00010602800000000107, 0.00010679200000000139, 0.0001063889999999984, 0.00010691700000000498]</msg>
<status status="PASS" starttime="20201117 14:44:17.222" endtime="20201117 14:44:17.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.210" endtime="20201117 14:44:17.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.235" endtime="20201117 14:44:17.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:17.244" endtime="20201117 14:44:17.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.239" endtime="20201117 14:44:17.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.230" endtime="20201117 14:44:17.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.685" endtime="20201117 14:44:17.270"></status>
</kw>
<msg timestamp="20201117 14:44:17.271" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.294" endtime="20201117 14:44:17.318"></status>
</kw>
<msg timestamp="20201117 14:44:17.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:17.290" endtime="20201117 14:44:17.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:17.321" endtime="20201117 14:44:17.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.329" endtime="20201117 14:44:17.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.282" endtime="20201117 14:44:17.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.276" endtime="20201117 14:44:17.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.354" endtime="20201117 14:44:17.713"></status>
</kw>
<msg timestamp="20201117 14:44:17.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043634333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:44:17.350" endtime="20201117 14:44:17.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043634333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:44:17.722" endtime="20201117 14:44:17.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.742" endtime="20201117 14:44:17.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.343" endtime="20201117 14:44:17.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.338" endtime="20201117 14:44:17.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:17.762" level="INFO">${RESULT} = [{'time': 0.0437405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010616700000000423, 'source_diff': 0.00010616700000000423}, {'time': 0.043849528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:17.752" endtime="20201117 14:44:17.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:17.796" level="INFO">${ACCURACY} = {'source_diff': [0.00010616700000000423, 0.0001065560000000007, 0.00010690299999999847, 0.00010690299999999847, 0.00010629199999999395, 0.00010699999999999599, 0.00010597200000000279, 0.00010677700000...</msg>
<status status="PASS" starttime="20201117 14:44:17.764" endtime="20201117 14:44:17.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.808" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:44:17.805" endtime="20201117 14:44:17.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.814" level="INFO">VALUE: [0.00010616700000000423, 0.0001065560000000007, 0.00010690299999999847, 0.00010690299999999847, 0.00010629199999999395, 0.00010699999999999599, 0.00010597200000000279, 0.00010677700000000234, 0.00010622200000000304, 0.00010643100000000405, 0.0001060690000000003, 0.00010670799999999703, 0.00010684700000000019, 0.00010602800000000107, 0.00010686099999999976, 0.00010611199999999849, 0.00010691599999999857, 0.00010698599999999642, 0.00010654100000000166, 0.00010665299999999822, 0.00010654200000000114, 0.00010695799999999728, 0.00010637499999999883, 0.00010645900000000319, 0.00010623599999999567, 0.0001060560000000002, 0.0001062219999999961, 0.00010641599999999807, 0.00010633300000000012, 0.00010655499999999429, 0.00010650000000000243, 0.0001068889999999989, 0.00010655599999999377, 0.00010690299999999847, 0.00010669500000000387, 0.00010613799999999868, 0.00010625000000000218, 0.00010645800000000372, 0.00010644399999999721, 0.00010623599999999567, 0.00010604200000000064, 0.00010666699999999779, 0.00010699999999999599, 0.0001068889999999989, 0.00010627800000000132, 0.00010691699999999804, 0.00010636099999999926, 0.00010613899999999815, 0.00010690299999999847, 0.00010665299999999822]</msg>
<status status="PASS" starttime="20201117 14:44:17.810" endtime="20201117 14:44:17.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.798" endtime="20201117 14:44:17.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.820" endtime="20201117 14:44:17.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:17.824" endtime="20201117 14:44:17.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.822" endtime="20201117 14:44:17.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.818" endtime="20201117 14:44:17.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.272" endtime="20201117 14:44:17.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.680" endtime="20201117 14:44:17.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:16.679" endtime="20201117 14:44:17.846"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.849" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.860" endtime="20201117 14:44:17.880"></status>
</kw>
<msg timestamp="20201117 14:44:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:17.858" endtime="20201117 14:44:17.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:17.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:17.882" endtime="20201117 14:44:17.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.885" endtime="20201117 14:44:17.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.855" endtime="20201117 14:44:17.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.851" endtime="20201117 14:44:17.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:17.896" endtime="20201117 14:44:18.199"></status>
</kw>
<msg timestamp="20201117 14:44:18.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028719972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:17.895" endtime="20201117 14:44:18.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028719972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:18.209" endtime="20201117 14:44:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.229" endtime="20201117 14:44:18.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.891" endtime="20201117 14:44:18.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.889" endtime="20201117 14:44:18.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:18.249" level="INFO">${RESULT} = [{'time': 0.028719972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010744399999999821, 'source_diff': 0.00010744399999999821}, {'time': 0.028841, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:44:18.239" endtime="20201117 14:44:18.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:18.281" level="INFO">${ACCURACY} = {'source_diff': [0.00010744399999999821, 0.0001077219999999976, 0.00010761100000000051, 0.00010784700000000119, 0.00010737499999999983, 0.00010741699999999854, 0.00010704200000000164, 0.00010749999999...</msg>
<status status="PASS" starttime="20201117 14:44:18.251" endtime="20201117 14:44:18.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.293" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:44:18.290" endtime="20201117 14:44:18.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.298" level="INFO">VALUE: [0.00010744399999999821, 0.0001077219999999976, 0.00010761100000000051, 0.00010784700000000119, 0.00010737499999999983, 0.00010741699999999854, 0.00010704200000000164, 0.00010749999999999996, 0.00010730500000000198, 0.00010762500000000008, 0.00010766700000000226, 0.00010759800000000042, 0.00010766699999999879, 0.00010745799999999778, 0.00010732000000000103, 0.00010736100000000026, 0.00010795900000000122, 0.00010749999999999996, 0.00010756899999999833, 0.00010712500000000305, 0.00010747200000000082, 0.00010783299999999815, 0.00010766699999999879, 0.00010736100000000026, 0.00010704200000000164, 0.00010774999999999674, 0.00010708400000000035, 0.00010787500000000033, 0.00010733300000000112, 0.00010708300000000087, 0.00010724999999999624, 0.00010765299999999922, 0.00010772200000000454, 0.0001070560000000012, 0.00010798699999999689, 0.00010712499999999958, 0.00010797300000000426, 0.00010794499999999818, 0.00010775000000000368, 0.000107902, 0.00010791599999999957, 0.00010766699999999879, 0.0001070560000000012, 0.00010777700000000334, 0.00010774999999999674, 0.00010754200000000214, 0.00010761100000000051, 0.00010729200000000189, 0.00010770799999999803, 0.00010792999999999914]</msg>
<status status="PASS" starttime="20201117 14:44:18.295" endtime="20201117 14:44:18.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.283" endtime="20201117 14:44:18.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.308" endtime="20201117 14:44:18.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:18.317" endtime="20201117 14:44:18.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.312" endtime="20201117 14:44:18.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.303" endtime="20201117 14:44:18.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.849" endtime="20201117 14:44:18.344"></status>
</kw>
<msg timestamp="20201117 14:44:18.344" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.367" endtime="20201117 14:44:18.390"></status>
</kw>
<msg timestamp="20201117 14:44:18.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:18.364" endtime="20201117 14:44:18.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:18.394" endtime="20201117 14:44:18.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.401" endtime="20201117 14:44:18.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.356" endtime="20201117 14:44:18.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.350" endtime="20201117 14:44:18.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.426" endtime="20201117 14:44:18.786"></status>
</kw>
<msg timestamp="20201117 14:44:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043514236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:18.422" endtime="20201117 14:44:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043514236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:18.796" endtime="20201117 14:44:18.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.815" endtime="20201117 14:44:18.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.415" endtime="20201117 14:44:18.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.410" endtime="20201117 14:44:18.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:18.835" level="INFO">${RESULT} = [{'time': 0.043514236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010783299999999468, 'source_diff': 0.00010783299999999468}, {'time': 0.043627236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:18.826" endtime="20201117 14:44:18.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:18.867" level="INFO">${ACCURACY} = {'source_diff': [0.00010783299999999468, 0.00010781900000000205, 0.00010791699999999904, 0.00010745799999999778, 0.00010775000000000368, 0.00010800000000000393, 0.00010773700000000358, 0.0001074159999...</msg>
<status status="PASS" starttime="20201117 14:44:18.837" endtime="20201117 14:44:18.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.879" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:44:18.876" endtime="20201117 14:44:18.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.884" level="INFO">VALUE: [0.00010783299999999468, 0.00010781900000000205, 0.00010791699999999904, 0.00010745799999999778, 0.00010775000000000368, 0.00010800000000000393, 0.00010773700000000358, 0.00010741599999999907, 0.00010736100000000026, 0.00010737499999999983, 0.00010779200000000239, 0.0001072219999999971, 0.0001070140000000025, 0.000107514000000003, 0.00010747300000000376, 0.00010754200000000214, 0.00010787500000000033, 0.00010723599999999667, 0.00010779100000000291, 0.00010713899999999915, 0.00010731900000000155, 0.00010736100000000026, 0.00010781899999999511, 0.00010744500000000462, 0.00010783300000000162, 0.00010799999999999699, 0.00010769499999999793, 0.00010781900000000205, 0.00010724999999999624, 0.00010749999999999649, 0.00010748599999999692, 0.00010762500000000008, 0.0001075560000000017, 0.00010798600000000436, 0.00010744500000000462, 0.0001076940000000054, 0.00010801299999999708, 0.00010754100000000266, 0.00010795799999999828, 0.00010770800000000497, 0.00010711100000000001, 0.0001078889999999999, 0.00010727800000000232, 0.00010766699999999879, 0.00010709799999999992, 0.00010708400000000035, 0.00010712499999999958, 0.00010784700000000119, 0.00010801399999999656, 0.00010720800000000447]</msg>
<status status="PASS" starttime="20201117 14:44:18.881" endtime="20201117 14:44:18.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.869" endtime="20201117 14:44:18.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.895" endtime="20201117 14:44:18.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:18.904" endtime="20201117 14:44:18.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.899" endtime="20201117 14:44:18.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.890" endtime="20201117 14:44:18.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.346" endtime="20201117 14:44:18.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.847" endtime="20201117 14:44:18.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:17.846" endtime="20201117 14:44:18.931"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.937" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.960" endtime="20201117 14:44:18.984"></status>
</kw>
<msg timestamp="20201117 14:44:18.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:18.956" endtime="20201117 14:44:18.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:18.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:18.987" endtime="20201117 14:44:18.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:18.994" endtime="20201117 14:44:18.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.949" endtime="20201117 14:44:19.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.942" endtime="20201117 14:44:19.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.020" endtime="20201117 14:44:19.383"></status>
</kw>
<msg timestamp="20201117 14:44:19.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049757125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:19.016" endtime="20201117 14:44:19.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:19.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049757125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:19.393" endtime="20201117 14:44:19.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.413" endtime="20201117 14:44:19.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.008" endtime="20201117 14:44:19.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.003" endtime="20201117 14:44:19.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:19.431" level="INFO">${RESULT} = [{'time': 0.049757125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001085560000000027, 'source_diff': 0.0001085560000000027}, {'time': 0.049877125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:19.422" endtime="20201117 14:44:19.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:19.463" level="INFO">${ACCURACY} = {'source_diff': [0.0001085560000000027, 0.00010837500000000083, 0.0001085419999999962, 0.00010899999999999799, 0.00010827799999999638, 0.00010862500000000108, 0.00010800000000000393, 0.000108277000000...</msg>
<status status="PASS" starttime="20201117 14:44:19.433" endtime="20201117 14:44:19.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:19.475" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:44:19.472" endtime="20201117 14:44:19.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:19.481" level="INFO">VALUE: [0.0001085560000000027, 0.00010837500000000083, 0.0001085419999999962, 0.00010899999999999799, 0.00010827799999999638, 0.00010862500000000108, 0.00010800000000000393, 0.00010827700000000384, 0.00010870799999999903, 0.00010840299999999997, 0.00010895799999999928, 0.00010887500000000133, 0.00010831999999999509, 0.00010829199999999595, 0.00010859800000000142, 0.00010824999999999724, 0.00010865300000000022, 0.00010812499999999364, 0.00010866600000000032, 0.00010831900000000255, 0.00010893100000000655, 0.00010849999999999749, 0.00010832000000000203, 0.00010866699999999979, 0.00010895899999999875, 0.00010825000000000418, 0.00010830499999999604, 0.0001082769999999969, 0.0001087219999999986, 0.00010848600000000486, 0.00010881900000000305, 0.00010877800000000382, 0.00010845799999999878, 0.00010812500000000058, 0.00010837500000000083, 0.00010841699999999954, 0.00010901399999999756, 0.00010847200000000529, 0.00010819399999999896, 0.0001082219999999981, 0.00010841699999999954, 0.00010826399999999681, 0.00010869499999999893, 0.00010886100000000176, 0.00010809800000000092, 0.00010872299999999807, 0.00010887500000000133, 0.00010831900000000255, 0.00010869399999999946, 0.00010816699999999929]</msg>
<status status="PASS" starttime="20201117 14:44:19.477" endtime="20201117 14:44:19.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.465" endtime="20201117 14:44:19.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.491" endtime="20201117 14:44:19.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:19.500" endtime="20201117 14:44:19.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.495" endtime="20201117 14:44:19.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.486" endtime="20201117 14:44:19.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.938" endtime="20201117 14:44:19.528"></status>
</kw>
<msg timestamp="20201117 14:44:19.529" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.552" endtime="20201117 14:44:19.576"></status>
</kw>
<msg timestamp="20201117 14:44:19.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:19.549" endtime="20201117 14:44:19.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:19.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:19.579" endtime="20201117 14:44:19.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.586" endtime="20201117 14:44:19.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.541" endtime="20201117 14:44:19.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.535" endtime="20201117 14:44:19.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:19.611" endtime="20201117 14:44:19.972"></status>
</kw>
<msg timestamp="20201117 14:44:19.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046156389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046264889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:19.607" endtime="20201117 14:44:19.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:19.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046156389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046264889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:19.982" endtime="20201117 14:44:19.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.001" endtime="20201117 14:44:20.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.600" endtime="20201117 14:44:20.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.595" endtime="20201117 14:44:20.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:20.021" level="INFO">${RESULT} = [{'time': 0.046264889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010849999999999749, 'source_diff': 0.00010849999999999749}, {'time': 0.046378903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:20.012" endtime="20201117 14:44:20.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:20.056" level="INFO">${ACCURACY} = {'source_diff': [0.00010849999999999749, 0.00010861100000000151, 0.00010868099999999936, 0.00010812500000000058, 0.00010849999999999749, 0.0001080549999999958, 0.00010829100000000341, 0.00010866699999...</msg>
<status status="PASS" starttime="20201117 14:44:20.024" endtime="20201117 14:44:20.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.068" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:44:20.066" endtime="20201117 14:44:20.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.074" level="INFO">VALUE: [0.00010849999999999749, 0.00010861100000000151, 0.00010868099999999936, 0.00010812500000000058, 0.00010849999999999749, 0.0001080549999999958, 0.00010829100000000341, 0.00010866699999999979, 0.00010809700000000144, 0.00010861100000000151, 0.00010820799999999853, 0.00010863900000000065, 0.00010852699999999715, 0.00010829200000000289, 0.00010854099999999672, 0.00010881900000000305, 0.00010833300000000212, 0.00010870800000000597, 0.00010822200000000504, 0.00010848600000000486, 0.00010852799999999663, 0.00010894499999999918, 0.00010879200000000339, 0.00010826400000000375, 0.00010845799999999878, 0.00010845799999999878, 0.00010875000000000468, 0.00010870799999999903, 0.00010840299999999997, 0.00010880599999999602, 0.00010863900000000065, 0.00010841699999999954, 0.00010893099999999961, 0.00010894499999999918, 0.00010866600000000032, 0.00010805500000000273, 0.00010804099999999622, 0.00010805599999999527, 0.00010812500000000058, 0.000108596999999995, 0.00010887500000000133, 0.00010825000000000418, 0.00010831999999999509, 0.00010813800000000068, 0.00010874999999999774, 0.00010874999999999774, 0.00010849999999999749, 0.00010849999999999749, 0.00010862500000000108, 0.00010897199999999885]</msg>
<status status="PASS" starttime="20201117 14:44:20.071" endtime="20201117 14:44:20.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.058" endtime="20201117 14:44:20.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.083" endtime="20201117 14:44:20.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:20.092" endtime="20201117 14:44:20.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.087" endtime="20201117 14:44:20.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.078" endtime="20201117 14:44:20.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:19.531" endtime="20201117 14:44:20.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.934" endtime="20201117 14:44:20.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:18.932" endtime="20201117 14:44:20.120"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.126" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.150" endtime="20201117 14:44:20.174"></status>
</kw>
<msg timestamp="20201117 14:44:20.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:20.146" endtime="20201117 14:44:20.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:20.178" endtime="20201117 14:44:20.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.184" endtime="20201117 14:44:20.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.138" endtime="20201117 14:44:20.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.132" endtime="20201117 14:44:20.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.209" endtime="20201117 14:44:20.570"></status>
</kw>
<msg timestamp="20201117 14:44:20.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051804556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051914, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:44:20.206" endtime="20201117 14:44:20.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051804556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051914, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:44:20.580" endtime="20201117 14:44:20.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.600" endtime="20201117 14:44:20.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.198" endtime="20201117 14:44:20.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.193" endtime="20201117 14:44:20.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:20.621" level="INFO">${RESULT} = [{'time': 0.051914, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010944400000000021, 'source_diff': 0.00010944400000000021}, {'time': 0.052033, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201117 14:44:20.611" endtime="20201117 14:44:20.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:20.652" level="INFO">${ACCURACY} = {'source_diff': [0.00010944400000000021, 0.00010966700000000079, 0.0001097219999999996, 0.00010919399999999996, 0.00010991700000000104, 0.00010923599999999867, 0.0001095419999999972, 0.000109805000000...</msg>
<status status="PASS" starttime="20201117 14:44:20.623" endtime="20201117 14:44:20.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.664" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:44:20.662" endtime="20201117 14:44:20.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.670" level="INFO">VALUE: [0.00010944400000000021, 0.00010966700000000079, 0.0001097219999999996, 0.00010919399999999996, 0.00010991700000000104, 0.00010923599999999867, 0.0001095419999999972, 0.00010980500000000448, 0.00010930500000000398, 0.00010976399999999831, 0.00010919399999999996, 0.00010905599999999627, 0.00010981900000000405, 0.00010968100000000036, 0.00010959799999999548, 0.000109208999999999, 0.00010980500000000448, 0.00010988799999999549, 0.00010981899999999711, 0.00010913900000000115, 0.00010908300000000287, 0.00010945799999999978, 0.00010981900000000405, 0.00010984700000000319, 0.00010998599999999942, 0.00010912499999999464, 0.00010991700000000104, 0.00010966600000000132, 0.00010929099999999747, 0.00010970800000000003, 0.00010948600000000586, 0.00010898600000000536, 0.00010990299999999453, 0.00010934699999999575, 0.000109208999999999, 0.0001097219999999996, 0.00010993000000000114, 0.00010924999999999824, 0.00010920799999999953, 0.00010927800000000432, 0.00010920799999999953, 0.00010905599999999627, 0.00010970800000000003, 0.00010995899999999975, 0.00010997299999999932, 0.00010982000000000353, 0.00010991700000000104, 0.00010991600000000157, 0.00010923599999999867, 0.00010906899999999636]</msg>
<status status="PASS" starttime="20201117 14:44:20.667" endtime="20201117 14:44:20.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.654" endtime="20201117 14:44:20.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.679" endtime="20201117 14:44:20.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:20.688" endtime="20201117 14:44:20.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.683" endtime="20201117 14:44:20.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.674" endtime="20201117 14:44:20.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.127" endtime="20201117 14:44:20.714"></status>
</kw>
<msg timestamp="20201117 14:44:20.715" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.738" endtime="20201117 14:44:20.761"></status>
</kw>
<msg timestamp="20201117 14:44:20.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:20.734" endtime="20201117 14:44:20.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:20.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:20.765" endtime="20201117 14:44:20.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.772" endtime="20201117 14:44:20.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.726" endtime="20201117 14:44:20.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.720" endtime="20201117 14:44:20.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:20.796" endtime="20201117 14:44:21.158"></status>
</kw>
<msg timestamp="20201117 14:44:21.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043367153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043476403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:20.793" endtime="20201117 14:44:21.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043367153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043476403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:21.169" endtime="20201117 14:44:21.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.190" endtime="20201117 14:44:21.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.785" endtime="20201117 14:44:21.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.780" endtime="20201117 14:44:21.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:21.210" level="INFO">${RESULT} = [{'time': 0.043476403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010924999999999824, 'source_diff': 0.00010924999999999824}, {'time': 0.043591444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:21.200" endtime="20201117 14:44:21.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:21.242" level="INFO">${ACCURACY} = {'source_diff': [0.00010924999999999824, 0.0001092219999999991, 0.00010943100000000011, 0.00010983299999999668, 0.0001097219999999996, 0.00010908300000000287, 0.00010926399999999781, 0.000109541999999...</msg>
<status status="PASS" starttime="20201117 14:44:21.212" endtime="20201117 14:44:21.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.254" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:44:21.251" endtime="20201117 14:44:21.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.259" level="INFO">VALUE: [0.00010924999999999824, 0.0001092219999999991, 0.00010943100000000011, 0.00010983299999999668, 0.0001097219999999996, 0.00010908300000000287, 0.00010926399999999781, 0.0001095419999999972, 0.00010925000000000518, 0.00010965300000000122, 0.00010997299999999932, 0.00010973599999999917, 0.00010902699999999765, 0.00010924999999999824, 0.00010929099999999747, 0.0001097219999999996, 0.00010908299999999593, 0.00010952800000000457, 0.00010990300000000147, 0.00010962500000000208, 0.000109208999999999, 0.00010999999999999899, 0.00010926299999999833, 0.00010945799999999978, 0.00010952799999999763, 0.00010929199999999695, 0.0001090969999999955, 0.00010962500000000208, 0.00010933299999999618, 0.00010952799999999763, 0.00010986100000000276, 0.00010973699999999864, 0.00010923599999999867, 0.00010991599999999463, 0.0001090549999999968, 0.00010920799999999953, 0.00010954200000000414, 0.00010974999999999874, 0.00010941700000000054, 0.00010961100000000251, 0.00011001399999999856, 0.00010911200000000149, 0.00010898599999999842, 0.00010980499999999754, 0.00010936100000000226, 0.00010986099999999582, 0.00010944400000000021, 0.00010927799999999738, 0.00010984700000000319, 0.00010908399999999541]</msg>
<status status="PASS" starttime="20201117 14:44:21.256" endtime="20201117 14:44:21.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.244" endtime="20201117 14:44:21.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.269" endtime="20201117 14:44:21.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:21.278" endtime="20201117 14:44:21.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.273" endtime="20201117 14:44:21.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.264" endtime="20201117 14:44:21.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.716" endtime="20201117 14:44:21.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.123" endtime="20201117 14:44:21.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:20.121" endtime="20201117 14:44:21.305"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.310" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.334" endtime="20201117 14:44:21.358"></status>
</kw>
<msg timestamp="20201117 14:44:21.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:21.330" endtime="20201117 14:44:21.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:21.360" endtime="20201117 14:44:21.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.364" endtime="20201117 14:44:21.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.322" endtime="20201117 14:44:21.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.316" endtime="20201117 14:44:21.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.376" endtime="20201117 14:44:21.662"></status>
</kw>
<msg timestamp="20201117 14:44:21.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049892806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050002972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:21.374" endtime="20201117 14:44:21.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049892806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050002972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:21.666" endtime="20201117 14:44:21.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.675" endtime="20201117 14:44:21.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.370" endtime="20201117 14:44:21.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.368" endtime="20201117 14:44:21.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:21.683" level="INFO">${RESULT} = [{'time': 0.050002972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011016600000000182, 'source_diff': 0.00011016600000000182}, {'time': 0.050123972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:21.679" endtime="20201117 14:44:21.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:21.697" level="INFO">${ACCURACY} = {'source_diff': [0.00011016600000000182, 0.00011020800000000053, 0.00011079199999999845, 0.00011012499999999564, 0.00011052799999999863, 0.00011026399999999881, 0.00011036100000000326, 0.0001103610000...</msg>
<status status="PASS" starttime="20201117 14:44:21.684" endtime="20201117 14:44:21.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.702" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:44:21.701" endtime="20201117 14:44:21.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.705" level="INFO">VALUE: [0.00011016600000000182, 0.00011020800000000053, 0.00011079199999999845, 0.00011012499999999564, 0.00011052799999999863, 0.00011026399999999881, 0.00011036100000000326, 0.00011036100000000326, 0.00011037499999999589, 0.00011012499999999564, 0.00011041600000000207, 0.00011079099999999897, 0.00011091700000000204, 0.00011074999999999974, 0.00011069500000000093, 0.0001100560000000042, 0.00011024999999999924, 0.00011008300000000387, 0.00010999999999999899, 0.0001105549999999983, 0.00011023599999999967, 0.00011066700000000179, 0.00011023599999999967, 0.00011098600000000042, 0.00011069500000000093, 0.0001103340000000036, 0.00011024999999999924, 0.00011083299999999768, 0.00011080499999999854, 0.00011045800000000078, 0.00011029099999999847, 0.00011090300000000247, 0.00011008300000000387, 0.00011082000000000453, 0.00011081999999999759, 0.00011030599999999752, 0.00011015300000000172, 0.00011088899999999596, 0.00011069400000000146, 0.00011012499999999564, 0.00011044400000000121, 0.00011074999999999974, 0.0001100560000000042, 0.00011024999999999924, 0.00011004200000000464, 0.00011032000000000403, 0.00011099999999999999, 0.00011009700000000344, 0.0001105549999999983, 0.00011086099999999682]</msg>
<status status="PASS" starttime="20201117 14:44:21.704" endtime="20201117 14:44:21.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.698" endtime="20201117 14:44:21.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.709" endtime="20201117 14:44:21.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:21.713" endtime="20201117 14:44:21.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.711" endtime="20201117 14:44:21.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.707" endtime="20201117 14:44:21.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.312" endtime="20201117 14:44:21.735"></status>
</kw>
<msg timestamp="20201117 14:44:21.735" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.745" endtime="20201117 14:44:21.766"></status>
</kw>
<msg timestamp="20201117 14:44:21.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:21.744" endtime="20201117 14:44:21.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:21.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:21.768" endtime="20201117 14:44:21.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.771" endtime="20201117 14:44:21.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.740" endtime="20201117 14:44:21.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.738" endtime="20201117 14:44:21.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:21.783" endtime="20201117 14:44:22.072"></status>
</kw>
<msg timestamp="20201117 14:44:22.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:21.781" endtime="20201117 14:44:22.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025480361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:22.081" endtime="20201117 14:44:22.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.101" endtime="20201117 14:44:22.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.778" endtime="20201117 14:44:22.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.775" endtime="20201117 14:44:22.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:22.121" level="INFO">${RESULT} = [{'time': 0.025480361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011019400000000096, 'source_diff': 0.00011019400000000096}, {'time': 0.025602375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:22.112" endtime="20201117 14:44:22.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:22.156" level="INFO">${ACCURACY} = {'source_diff': [0.00011019400000000096, 0.00011076399999999931, 0.00011023599999999967, 0.00011011099999999954, 0.00011066600000000232, 0.00011084699999999725, 0.00011049999999999949, 0.0001104580000...</msg>
<status status="PASS" starttime="20201117 14:44:22.123" endtime="20201117 14:44:22.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.167" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:44:22.165" endtime="20201117 14:44:22.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.173" level="INFO">VALUE: [0.00011019400000000096, 0.00011076399999999931, 0.00011023599999999967, 0.00011011099999999954, 0.00011066600000000232, 0.00011084699999999725, 0.00011049999999999949, 0.00011045800000000078, 0.00011083300000000115, 0.00011091699999999857, 0.00011004200000000117, 0.00011031900000000108, 0.00011062499999999961, 0.00011015299999999825, 0.00011079199999999845, 0.00011069500000000093, 0.0001102220000000001, 0.00011043000000000164, 0.00011011099999999954, 0.0001105830000000009, 0.00011083400000000063, 0.00011045900000000025, 0.00011032000000000056, 0.00011083400000000063, 0.00011068000000000189, 0.00011036100000000326, 0.00011019400000000096, 0.00011070800000000103, 0.00011044500000000068, 0.00011037499999999936, 0.00011070799999999756, 0.00011079199999999845, 0.00011024999999999924, 0.00011093099999999814, 0.00011016699999999782, 0.00011019499999999696, 0.00011066599999999885, 0.00011004100000000169, 0.00011038899999999893, 0.00011101399999999956, 0.0001100700000000003, 0.00011041700000000154, 0.00011026399999999881, 0.00011032000000000056, 0.00011045900000000025, 0.00011062499999999961, 0.0001104159999999986, 0.00011073600000000017, 0.00011054200000000167, 0.00011051399999999906]</msg>
<status status="PASS" starttime="20201117 14:44:22.170" endtime="20201117 14:44:22.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.158" endtime="20201117 14:44:22.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.182" endtime="20201117 14:44:22.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:22.191" endtime="20201117 14:44:22.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.186" endtime="20201117 14:44:22.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.177" endtime="20201117 14:44:22.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.736" endtime="20201117 14:44:22.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.308" endtime="20201117 14:44:22.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:21.306" endtime="20201117 14:44:22.220"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.225" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.249" endtime="20201117 14:44:22.273"></status>
</kw>
<msg timestamp="20201117 14:44:22.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:22.246" endtime="20201117 14:44:22.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:22.277" endtime="20201117 14:44:22.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.283" endtime="20201117 14:44:22.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.238" endtime="20201117 14:44:22.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.231" endtime="20201117 14:44:22.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.308" endtime="20201117 14:44:22.671"></status>
</kw>
<msg timestamp="20201117 14:44:22.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051129819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051240958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:22.305" endtime="20201117 14:44:22.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051129819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051240958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:22.682" endtime="20201117 14:44:22.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.701" endtime="20201117 14:44:22.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.297" endtime="20201117 14:44:22.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.292" endtime="20201117 14:44:22.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:22.721" level="INFO">${RESULT} = [{'time': 0.051240958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011113900000000315, 'source_diff': 0.00011113900000000315}, {'time': 0.051363972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:22.712" endtime="20201117 14:44:22.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:22.753" level="INFO">${ACCURACY} = {'source_diff': [0.00011113900000000315, 0.00011200000000000099, 0.00011148600000000092, 0.00011166700000000279, 0.00011161099999999757, 0.00011173600000000117, 0.0001110419999999987, 0.00011133399999...</msg>
<status status="PASS" starttime="20201117 14:44:22.723" endtime="20201117 14:44:22.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.765" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:44:22.762" endtime="20201117 14:44:22.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.770" level="INFO">VALUE: [0.00011113900000000315, 0.00011200000000000099, 0.00011148600000000092, 0.00011166700000000279, 0.00011161099999999757, 0.00011173600000000117, 0.0001110419999999987, 0.00011133399999999766, 0.00011176400000000031, 0.00011104099999999922, 0.00011195800000000228, 0.00011120799999999459, 0.00011134699999999775, 0.00011187499999999739, 0.00011166700000000279, 0.00011151400000000006, 0.00011194500000000218, 0.00011112499999999664, 0.00011148600000000092, 0.00011194400000000271, 0.00011112499999999664, 0.00011126399999999981, 0.00011112500000000358, 0.00011170799999999509, 0.00011193100000000261, 0.00011151400000000006, 0.00011097300000000032, 0.00011170899999999456, 0.00011191599999999663, 0.00011156899999999886, 0.00011150000000000049, 0.00011152799999999963, 0.00011177799999999988, 0.00011158299999999843, 0.00011113900000000315, 0.00011113900000000315, 0.00011162499999999714, 0.00011166700000000279, 0.00011133299999999818, 0.00011195800000000228, 0.00011149999999999355, 0.00011187499999999739, 0.00011145800000000178, 0.00011181999999999859, 0.00011148600000000092, 0.00011176400000000031, 0.00011148700000000039, 0.00011198700000000089, 0.0001110969999999975, 0.00011145800000000178]</msg>
<status status="PASS" starttime="20201117 14:44:22.767" endtime="20201117 14:44:22.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.755" endtime="20201117 14:44:22.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.780" endtime="20201117 14:44:22.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:22.794" endtime="20201117 14:44:22.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.784" endtime="20201117 14:44:22.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.775" endtime="20201117 14:44:22.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.227" endtime="20201117 14:44:22.820"></status>
</kw>
<msg timestamp="20201117 14:44:22.821" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.844" endtime="20201117 14:44:22.868"></status>
</kw>
<msg timestamp="20201117 14:44:22.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:22.840" endtime="20201117 14:44:22.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:22.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:22.872" endtime="20201117 14:44:22.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.878" endtime="20201117 14:44:22.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.833" endtime="20201117 14:44:22.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.827" endtime="20201117 14:44:22.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:22.903" endtime="20201117 14:44:23.266"></status>
</kw>
<msg timestamp="20201117 14:44:23.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:22.900" endtime="20201117 14:44:23.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:23.276" endtime="20201117 14:44:23.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.295" endtime="20201117 14:44:23.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.892" endtime="20201117 14:44:23.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.887" endtime="20201117 14:44:23.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:23.316" level="INFO">${RESULT} = [{'time': 0.043495319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011162499999999714, 'source_diff': 0.00011162499999999714}, {'time': 0.043621333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:23.306" endtime="20201117 14:44:23.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:23.347" level="INFO">${ACCURACY} = {'source_diff': [0.00011162499999999714, 0.00011165199999999681, 0.00011101399999999956, 0.00011120800000000153, 0.00011129199999999895, 0.00011162499999999714, 0.00011163900000000365, 0.0001118609999...</msg>
<status status="PASS" starttime="20201117 14:44:23.318" endtime="20201117 14:44:23.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.359" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:44:23.357" endtime="20201117 14:44:23.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.365" level="INFO">VALUE: [0.00011162499999999714, 0.00011165199999999681, 0.00011101399999999956, 0.00011120800000000153, 0.00011129199999999895, 0.00011162499999999714, 0.00011163900000000365, 0.00011186099999999782, 0.00011131899999999861, 0.00011129199999999895, 0.00011170800000000203, 0.00011133299999999818, 0.00011151400000000006, 0.00011191700000000304, 0.00011107000000000478, 0.00011141700000000254, 0.00011144500000000168, 0.0001119169999999961, 0.00011148700000000039, 0.00011156899999999886, 0.00011170800000000203, 0.00011184699999999825, 0.00011183299999999868, 0.00011120800000000153, 0.00011145800000000178, 0.00011166700000000279, 0.00011161200000000399, 0.0001117090000000015, 0.00011177799999999988, 0.00011112500000000358, 0.00011181899999999911, 0.00011201400000000056, 0.00011141700000000254, 0.00011168100000000236, 0.00011113900000000315, 0.00011111100000000401, 0.00011204100000000022, 0.00011150000000000049, 0.00011132000000000503, 0.00011144399999999527, 0.00011188899999999696, 0.00011125000000000024, 0.00011108299999999793, 0.00011166700000000279, 0.0001118890000000039, 0.00011148600000000092, 0.00011156999999999834, 0.00011144500000000168, 0.00011123599999999373, 0.00011186099999999782]</msg>
<status status="PASS" starttime="20201117 14:44:23.362" endtime="20201117 14:44:23.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.349" endtime="20201117 14:44:23.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.375" endtime="20201117 14:44:23.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:23.384" endtime="20201117 14:44:23.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.379" endtime="20201117 14:44:23.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.370" endtime="20201117 14:44:23.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.822" endtime="20201117 14:44:23.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.222" endtime="20201117 14:44:23.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:22.221" endtime="20201117 14:44:23.411"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.417" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.440" endtime="20201117 14:44:23.463"></status>
</kw>
<msg timestamp="20201117 14:44:23.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:23.436" endtime="20201117 14:44:23.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:23.466" endtime="20201117 14:44:23.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.473" endtime="20201117 14:44:23.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.428" endtime="20201117 14:44:23.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.422" endtime="20201117 14:44:23.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.498" endtime="20201117 14:44:23.861"></status>
</kw>
<msg timestamp="20201117 14:44:23.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049532569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:23.494" endtime="20201117 14:44:23.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049532569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:23.871" endtime="20201117 14:44:23.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.890" endtime="20201117 14:44:23.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.487" endtime="20201117 14:44:23.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.482" endtime="20201117 14:44:23.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:23.909" level="INFO">${RESULT} = [{'time': 0.049644847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011227800000000038, 'source_diff': 0.00011227800000000038}, {'time': 0.049761875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:23.899" endtime="20201117 14:44:23.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:23.941" level="INFO">${ACCURACY} = {'source_diff': [0.00011227800000000038, 0.00011205599999999927, 0.00011279200000000045, 0.00011215299999999678, 0.00011295800000000328, 0.0001127499999999948, 0.00011279200000000045, 0.00011241600000...</msg>
<status status="PASS" starttime="20201117 14:44:23.911" endtime="20201117 14:44:23.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.952" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:44:23.950" endtime="20201117 14:44:23.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:23.959" level="INFO">VALUE: [0.00011227800000000038, 0.00011205599999999927, 0.00011279200000000045, 0.00011215299999999678, 0.00011295800000000328, 0.0001127499999999948, 0.00011279200000000045, 0.00011241600000000407, 0.00011269399999999652, 0.00011269399999999652, 0.00011295799999999634, 0.00011208299999999893, 0.00011247199999999541, 0.00011275000000000174, 0.00011276400000000131, 0.00011284799999999873, 0.00011229199999999995, 0.00011211099999999807, 0.00011233299999999918, 0.0001125550000000003, 0.00011223600000000167, 0.00011231899999999961, 0.00011269400000000346, 0.00011287500000000533, 0.00011275000000000174, 0.0001123340000000056, 0.00011301300000000208, 0.00011280500000000054, 0.00011291700000000404, 0.0001128749999999984, 0.00011220800000000253, 0.00011272199999999566, 0.00011299999999999505, 0.00011251400000000106, 0.0001128890000000049, 0.00011273700000000164, 0.00011270800000000303, 0.00011291600000000457, 0.00011212499999999764, 0.00011290299999999753, 0.00011226400000000081, 0.00011293099999999667, 0.0001122220000000021, 0.0001124169999999966, 0.00011233399999999866, 0.0001120419999999997, 0.00011237500000000483, 0.00011233299999999918, 0.00011229100000000047, 0.00011252800000000063]</msg>
<status status="PASS" starttime="20201117 14:44:23.955" endtime="20201117 14:44:23.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.943" endtime="20201117 14:44:23.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:23.968" endtime="20201117 14:44:23.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:23.977" endtime="20201117 14:44:23.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.973" endtime="20201117 14:44:24.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.964" endtime="20201117 14:44:24.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.418" endtime="20201117 14:44:24.004"></status>
</kw>
<msg timestamp="20201117 14:44:24.004" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.027" endtime="20201117 14:44:24.052"></status>
</kw>
<msg timestamp="20201117 14:44:24.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:24.024" endtime="20201117 14:44:24.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:24.055" endtime="20201117 14:44:24.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.062" endtime="20201117 14:44:24.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.016" endtime="20201117 14:44:24.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.010" endtime="20201117 14:44:24.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.087" endtime="20201117 14:44:24.448"></status>
</kw>
<msg timestamp="20201117 14:44:24.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043668153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043780736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:24.083" endtime="20201117 14:44:24.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043668153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043780736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:24.458" endtime="20201117 14:44:24.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.477" endtime="20201117 14:44:24.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.076" endtime="20201117 14:44:24.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.070" endtime="20201117 14:44:24.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:24.497" level="INFO">${RESULT} = [{'time': 0.043780736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011258299999999943, 'source_diff': 0.00011258299999999943}, {'time': 0.043906764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:24.488" endtime="20201117 14:44:24.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:24.532" level="INFO">${ACCURACY} = {'source_diff': [0.00011258299999999943, 0.00011251400000000106, 0.00011212499999999764, 0.00011247300000000182, 0.00011219500000000243, 0.00011244500000000268, 0.00011225000000000124, 0.0001127220000...</msg>
<status status="PASS" starttime="20201117 14:44:24.500" endtime="20201117 14:44:24.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.545" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:44:24.542" endtime="20201117 14:44:24.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.550" level="INFO">VALUE: [0.00011258299999999943, 0.00011251400000000106, 0.00011212499999999764, 0.00011247300000000182, 0.00011219500000000243, 0.00011244500000000268, 0.00011225000000000124, 0.0001127220000000026, 0.00011236100000000526, 0.00011223600000000167, 0.00011202800000000013, 0.00011227799999999344, 0.00011226400000000081, 0.00011205599999999927, 0.00011298600000000242, 0.00011252700000000115, 0.0001124299999999967, 0.00011283299999999968, 0.00011283299999999968, 0.0001125420000000002, 0.00011279200000000045, 0.00011268100000000336, 0.0001122499999999943, 0.0001125420000000002, 0.00011275000000000174, 0.00011266599999999738, 0.00011295800000000328, 0.00011280500000000054, 0.00011270800000000303, 0.00011266700000000379, 0.00011208299999999893, 0.00011252800000000063, 0.00011261100000000551, 0.0001128749999999984, 0.00011279100000000097, 0.00011258299999999943, 0.0001120969999999985, 0.0001128890000000049, 0.00011230500000000004, 0.00011262499999999814, 0.00011205599999999927, 0.00011273600000000217, 0.0001120969999999985, 0.00011295900000000275, 0.00011265299999999728, 0.00011248600000000192, 0.00011252700000000115, 0.00011236100000000526, 0.0001125420000000002, 0.00011223600000000167]</msg>
<status status="PASS" starttime="20201117 14:44:24.547" endtime="20201117 14:44:24.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.535" endtime="20201117 14:44:24.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.560" endtime="20201117 14:44:24.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:24.569" endtime="20201117 14:44:24.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.564" endtime="20201117 14:44:24.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.555" endtime="20201117 14:44:24.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.006" endtime="20201117 14:44:24.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.414" endtime="20201117 14:44:24.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:23.412" endtime="20201117 14:44:24.596"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.602" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.625" endtime="20201117 14:44:24.648"></status>
</kw>
<msg timestamp="20201117 14:44:24.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:24.621" endtime="20201117 14:44:24.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:24.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:24.652" endtime="20201117 14:44:24.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.659" endtime="20201117 14:44:24.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.613" endtime="20201117 14:44:24.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.607" endtime="20201117 14:44:24.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:24.684" endtime="20201117 14:44:25.046"></status>
</kw>
<msg timestamp="20201117 14:44:25.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049459236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:24.680" endtime="20201117 14:44:25.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049459236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:25.056" endtime="20201117 14:44:25.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.076" endtime="20201117 14:44:25.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.673" endtime="20201117 14:44:25.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.667" endtime="20201117 14:44:25.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:25.097" level="INFO">${RESULT} = [{'time': 0.049572486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011325000000000224, 'source_diff': 0.00011325000000000224}, {'time': 0.049700486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:25.087" endtime="20201117 14:44:25.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:25.128" level="INFO">${ACCURACY} = {'source_diff': [0.00011325000000000224, 0.00011326400000000181, 0.0001138749999999994, 0.00011320800000000353, 0.00011334700000000669, 0.00011401400000000256, 0.00011383400000000016, 0.00011383300000...</msg>
<status status="PASS" starttime="20201117 14:44:25.099" endtime="20201117 14:44:25.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.140" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:44:25.138" endtime="20201117 14:44:25.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.146" level="INFO">VALUE: [0.00011325000000000224, 0.00011326400000000181, 0.0001138749999999994, 0.00011320800000000353, 0.00011334700000000669, 0.00011401400000000256, 0.00011383400000000016, 0.00011383300000000068, 0.00011398600000000342, 0.00011329099999999453, 0.00011325000000000224, 0.00011325000000000224, 0.00011331900000000061, 0.0001138749999999994, 0.0001130420000000007, 0.0001134169999999976, 0.00011315300000000472, 0.00011383400000000016, 0.00011336099999999932, 0.00011379100000000197, 0.00011366699999999785, 0.00011329200000000095, 0.00011333300000000018, 0.00011329200000000095, 0.00011383400000000016, 0.00011382000000000059, 0.00011306999999999984, 0.00011397199999999691, 0.00011312500000000558, 0.00011384700000000025, 0.00011383300000000068, 0.00011320799999999659, 0.00011329200000000095, 0.0001130420000000007, 0.00011302800000000113, 0.00011330600000000052, 0.00011326300000000233, 0.00011363900000000565, 0.00011391599999999863, 0.00011383300000000068, 0.00011305600000000027, 0.00011308299999999993, 0.0001133749999999989, 0.00011348600000000292, 0.00011312499999999864, 0.00011358399999999991, 0.00011313899999999821, 0.00011386099999999982, 0.00011344399999999727, 0.00011318000000000439]</msg>
<status status="PASS" starttime="20201117 14:44:25.143" endtime="20201117 14:44:25.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.130" endtime="20201117 14:44:25.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.155" endtime="20201117 14:44:25.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:25.164" endtime="20201117 14:44:25.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.159" endtime="20201117 14:44:25.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.150" endtime="20201117 14:44:25.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.603" endtime="20201117 14:44:25.190"></status>
</kw>
<msg timestamp="20201117 14:44:25.191" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.214" endtime="20201117 14:44:25.238"></status>
</kw>
<msg timestamp="20201117 14:44:25.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:25.210" endtime="20201117 14:44:25.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:25.241" endtime="20201117 14:44:25.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.248" endtime="20201117 14:44:25.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.203" endtime="20201117 14:44:25.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.197" endtime="20201117 14:44:25.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.273" endtime="20201117 14:44:25.607"></status>
</kw>
<msg timestamp="20201117 14:44:25.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043483681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:25.270" endtime="20201117 14:44:25.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043483681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:25.617" endtime="20201117 14:44:25.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.638" endtime="20201117 14:44:25.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.262" endtime="20201117 14:44:25.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.257" endtime="20201117 14:44:25.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:25.658" level="INFO">${RESULT} = [{'time': 0.043596931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001132499999999953, 'source_diff': 0.0001132499999999953}, {'time': 0.043712958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:25.648" endtime="20201117 14:44:25.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:25.689" level="INFO">${ACCURACY} = {'source_diff': [0.0001132499999999953, 0.00011350000000000249, 0.0001139299999999982, 0.00011348600000000292, 0.0001138890000000059, 0.00011322199999999616, 0.00011379200000000145, 0.0001138200000000...</msg>
<status status="PASS" starttime="20201117 14:44:25.660" endtime="20201117 14:44:25.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.701" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:44:25.699" endtime="20201117 14:44:25.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.707" level="INFO">VALUE: [0.0001132499999999953, 0.00011350000000000249, 0.0001139299999999982, 0.00011348600000000292, 0.0001138890000000059, 0.00011322199999999616, 0.00011379200000000145, 0.00011382000000000059, 0.00011400000000000299, 0.00011367999999999795, 0.00011395800000000428, 0.00011308299999999993, 0.00011329200000000095, 0.00011395799999999734, 0.00011381900000000111, 0.00011329200000000095, 0.0001138619999999993, 0.00011361199999999905, 0.00011370899999999656, 0.00011344500000000368, 0.00011308299999999993, 0.00011325000000000224, 0.000113597, 0.00011365300000000522, 0.00011375000000000274, 0.00011376400000000231, 0.00011319500000000343, 0.00011338899999999846, 0.00011316699999999735, 0.00011327699999999497, 0.00011372199999999666, 0.00011401399999999562, 0.00011361099999999957, 0.00011316700000000429, 0.00011311100000000601, 0.00011340299999999803, 0.00011302800000000113, 0.00011330600000000052, 0.00011330600000000052, 0.00011350000000000249, 0.00011356900000000086, 0.0001130550000000008, 0.00011384700000000025, 0.00011312499999999864, 0.00011312499999999864, 0.00011298600000000242, 0.00011305600000000027, 0.00011332000000000009, 0.00011388799999999949, 0.00011395800000000428]</msg>
<status status="PASS" starttime="20201117 14:44:25.703" endtime="20201117 14:44:25.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.691" endtime="20201117 14:44:25.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.716" endtime="20201117 14:44:25.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:25.725" endtime="20201117 14:44:25.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.720" endtime="20201117 14:44:25.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.711" endtime="20201117 14:44:25.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.192" endtime="20201117 14:44:25.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.599" endtime="20201117 14:44:25.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:24.597" endtime="20201117 14:44:25.752"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.758" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.781" endtime="20201117 14:44:25.805"></status>
</kw>
<msg timestamp="20201117 14:44:25.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:25.777" endtime="20201117 14:44:25.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:25.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:25.809" endtime="20201117 14:44:25.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.816" endtime="20201117 14:44:25.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.770" endtime="20201117 14:44:25.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.764" endtime="20201117 14:44:25.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:25.841" endtime="20201117 14:44:26.204"></status>
</kw>
<msg timestamp="20201117 14:44:26.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049791778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049906306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:25.838" endtime="20201117 14:44:26.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049791778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049906306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:26.213" endtime="20201117 14:44:26.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.233" endtime="20201117 14:44:26.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.830" endtime="20201117 14:44:26.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.824" endtime="20201117 14:44:26.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:26.252" level="INFO">${RESULT} = [{'time': 0.049906306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011452799999999569, 'source_diff': 0.00011452799999999569}, {'time': 0.050024319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:26.242" endtime="20201117 14:44:26.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:26.283" level="INFO">${ACCURACY} = {'source_diff': [0.00011452799999999569, 0.00011406899999999442, 0.0001145550000000023, 0.00011490200000000006, 0.00011458300000000143, 0.0001147499999999968, 0.0001145420000000022, 0.0001143330000000...</msg>
<status status="PASS" starttime="20201117 14:44:26.254" endtime="20201117 14:44:26.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.295" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:44:26.293" endtime="20201117 14:44:26.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.301" level="INFO">VALUE: [0.00011452799999999569, 0.00011406899999999442, 0.0001145550000000023, 0.00011490200000000006, 0.00011458300000000143, 0.0001147499999999968, 0.0001145420000000022, 0.00011433300000000118, 0.00011494499999999824, 0.00011498600000000442, 0.0001147629999999969, 0.00011484700000000125, 0.00011454099999999579, 0.00011499999999999705, 0.00011408300000000093, 0.00011465299999999928, 0.00011454199999999526, 0.00011477799999999594, 0.00011493099999999867, 0.00011440199999999956, 0.0001143749999999999, 0.00011437500000000683, 0.00011469399999999852, 0.00011477800000000288, 0.00011495799999999834, 0.00011425000000000324, 0.00011441599999999913, 0.00011408400000000041, 0.00011462500000000014, 0.00011462500000000014, 0.00011488800000000049, 0.00011448600000000392, 0.0001143049999999951, 0.00011486100000000082, 0.00011419399999999802, 0.00011499999999999705, 0.00011418099999999792, 0.0001140420000000017, 0.0001148750000000004, 0.0001144299999999987, 0.00011408300000000093, 0.00011483300000000168, 0.0001147220000000046, 0.00011456899999999492, 0.00011477800000000288, 0.00011445900000000425, 0.00011402800000000213, 0.00011436100000000032, 0.00011456900000000186, 0.00011498599999999748]</msg>
<status status="PASS" starttime="20201117 14:44:26.298" endtime="20201117 14:44:26.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.285" endtime="20201117 14:44:26.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.310" endtime="20201117 14:44:26.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:26.320" endtime="20201117 14:44:26.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.315" endtime="20201117 14:44:26.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.306" endtime="20201117 14:44:26.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.759" endtime="20201117 14:44:26.347"></status>
</kw>
<msg timestamp="20201117 14:44:26.347" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.370" endtime="20201117 14:44:26.395"></status>
</kw>
<msg timestamp="20201117 14:44:26.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:26.367" endtime="20201117 14:44:26.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:26.398" endtime="20201117 14:44:26.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.405" endtime="20201117 14:44:26.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.359" endtime="20201117 14:44:26.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.353" endtime="20201117 14:44:26.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.431" endtime="20201117 14:44:26.792"></status>
</kw>
<msg timestamp="20201117 14:44:26.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044282556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044396917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:26.427" endtime="20201117 14:44:26.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044282556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044396917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:26.802" endtime="20201117 14:44:26.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.822" endtime="20201117 14:44:26.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.419" endtime="20201117 14:44:26.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.414" endtime="20201117 14:44:26.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:26.842" level="INFO">${RESULT} = [{'time': 0.044396917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011436100000000032, 'source_diff': 0.00011436100000000032}, {'time': 0.044522944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:26.833" endtime="20201117 14:44:26.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:26.876" level="INFO">${ACCURACY} = {'source_diff': [0.00011436100000000032, 0.00011438799999999999, 0.00011497199999999791, 0.0001144299999999987, 0.00011430500000000204, 0.00011480600000000202, 0.00011436100000000032, 0.00011445799999...</msg>
<status status="PASS" starttime="20201117 14:44:26.844" endtime="20201117 14:44:26.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.888" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:44:26.886" endtime="20201117 14:44:26.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.894" level="INFO">VALUE: [0.00011436100000000032, 0.00011438799999999999, 0.00011497199999999791, 0.0001144299999999987, 0.00011430500000000204, 0.00011480600000000202, 0.00011436100000000032, 0.00011445799999999784, 0.00011483400000000116, 0.0001147090000000045, 0.00011412499999999964, 0.00011461200000000005, 0.0001149299999999992, 0.00011494399999999877, 0.00011491599999999963, 0.00011479199999999551, 0.00011458300000000143, 0.00011409799999999998, 0.00011499999999999705, 0.00011445900000000425, 0.00011483300000000168, 0.00011445799999999784, 0.00011426400000000281, 0.00011469399999999852, 0.00011469399999999852, 0.00011490299999999953, 0.00011449999999999655, 0.00011497299999999738, 0.00011445899999999731, 0.00011415299999999878, 0.00011493100000000561, 0.00011423599999999673, 0.00011462500000000014, 0.0001145420000000022, 0.00011420800000000453, 0.00011463899999999971, 0.00011475000000000374, 0.00011418100000000486, 0.00011408400000000041, 0.00011455499999999535, 0.00011459699999999406, 0.00011429100000000247, 0.00011431900000000161, 0.00011461100000000057, 0.00011406900000000136, 0.00011445800000000478, 0.00011490299999999953, 0.00011430600000000152, 0.00011416699999999835, 0.00011445800000000478]</msg>
<status status="PASS" starttime="20201117 14:44:26.891" endtime="20201117 14:44:26.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.878" endtime="20201117 14:44:26.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.903" endtime="20201117 14:44:26.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:26.912" endtime="20201117 14:44:26.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.907" endtime="20201117 14:44:26.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.898" endtime="20201117 14:44:26.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.349" endtime="20201117 14:44:26.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.755" endtime="20201117 14:44:26.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:25.753" endtime="20201117 14:44:26.939"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:26.945" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:26.969" endtime="20201117 14:44:26.992"></status>
</kw>
<msg timestamp="20201117 14:44:26.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:26.965" endtime="20201117 14:44:26.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:27.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:26.996" endtime="20201117 14:44:27.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.003" endtime="20201117 14:44:27.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.957" endtime="20201117 14:44:27.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.950" endtime="20201117 14:44:27.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.028" endtime="20201117 14:44:27.391"></status>
</kw>
<msg timestamp="20201117 14:44:27.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050310875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050426875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:27.024" endtime="20201117 14:44:27.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:27.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050310875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050426875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:27.400" endtime="20201117 14:44:27.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.420" endtime="20201117 14:44:27.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.017" endtime="20201117 14:44:27.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.012" endtime="20201117 14:44:27.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:27.440" level="INFO">${RESULT} = [{'time': 0.050426875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011600000000000499, 'source_diff': 0.00011600000000000499}, {'time': 0.050556889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:27.431" endtime="20201117 14:44:27.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:27.472" level="INFO">${ACCURACY} = {'source_diff': [0.00011600000000000499, 0.00011544499999999874, 0.00011523600000000467, 0.00011525000000000424, 0.00011567999999999995, 0.00011562500000000114, 0.00011567999999999995, 0.0001155690000...</msg>
<status status="PASS" starttime="20201117 14:44:27.442" endtime="20201117 14:44:27.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:27.484" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:44:27.481" endtime="20201117 14:44:27.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:27.489" level="INFO">VALUE: [0.00011600000000000499, 0.00011544499999999874, 0.00011523600000000467, 0.00011525000000000424, 0.00011567999999999995, 0.00011562500000000114, 0.00011567999999999995, 0.00011556900000000286, 0.00011540300000000003, 0.00011581900000000311, 0.00011520799999999859, 0.00011529200000000295, 0.00011584800000000173, 0.00011508400000000141, 0.00011529199999999601, 0.00011530500000000304, 0.00011556899999999592, 0.0001150550000000028, 0.00011529200000000295, 0.00011548599999999798, 0.00011520799999999859, 0.0001158750000000014, 0.00011576399999999737, 0.0001157629999999979, 0.00011561100000000157, 0.00011579100000000397, 0.00011516599999999988, 0.00011573600000000517, 0.0001158750000000014, 0.00011504199999999576, 0.00011532000000000209, 0.00011519499999999849, 0.00011565300000000028, 0.00011597199999999891, 0.00011531899999999567, 0.0001158750000000014, 0.00011579200000000345, 0.00011545799999999884, 0.0001154169999999996, 0.00011599999999999805, 0.00011501399999999662, 0.00011543099999999917, 0.00011548599999999798, 0.0001158750000000014, 0.00011573599999999823, 0.00011533300000000218, 0.00011550000000000449, 0.00011588900000000096, 0.00011569399999999952, 0.00011533400000000166]</msg>
<status status="PASS" starttime="20201117 14:44:27.486" endtime="20201117 14:44:27.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.474" endtime="20201117 14:44:27.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.499" endtime="20201117 14:44:27.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:27.509" endtime="20201117 14:44:27.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.503" endtime="20201117 14:44:27.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.494" endtime="20201117 14:44:27.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.946" endtime="20201117 14:44:27.535"></status>
</kw>
<msg timestamp="20201117 14:44:27.536" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.558" endtime="20201117 14:44:27.582"></status>
</kw>
<msg timestamp="20201117 14:44:27.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:27.555" endtime="20201117 14:44:27.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:27.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:27.586" endtime="20201117 14:44:27.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.593" endtime="20201117 14:44:27.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.547" endtime="20201117 14:44:27.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.541" endtime="20201117 14:44:27.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:27.618" endtime="20201117 14:44:27.980"></status>
</kw>
<msg timestamp="20201117 14:44:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:27.614" endtime="20201117 14:44:27.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:27.990" endtime="20201117 14:44:28.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.009" endtime="20201117 14:44:28.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.606" endtime="20201117 14:44:28.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.601" endtime="20201117 14:44:28.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:28.029" level="INFO">${RESULT} = [{'time': 0.043851653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011538900000000046, 'source_diff': 0.00011538900000000046}, {'time': 0.043975653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:28.020" endtime="20201117 14:44:28.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:28.061" level="INFO">${ACCURACY} = {'source_diff': [0.00011538900000000046, 0.00011583400000000216, 0.00011597199999999891, 0.00011569499999999899, 0.00011506899999999542, 0.00011511100000000107, 0.0001157499999999978, 0.00011565300000...</msg>
<status status="PASS" starttime="20201117 14:44:28.032" endtime="20201117 14:44:28.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.073" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:44:28.070" endtime="20201117 14:44:28.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.079" level="INFO">VALUE: [0.00011538900000000046, 0.00011583400000000216, 0.00011597199999999891, 0.00011569499999999899, 0.00011506899999999542, 0.00011511100000000107, 0.0001157499999999978, 0.00011565300000000028, 0.00011561100000000157, 0.00011520800000000553, 0.00011504199999999576, 0.00011597300000000532, 0.00011566699999999985, 0.00011570799999999909, 0.0001155829999999955, 0.00011529200000000295, 0.00011530599999999558, 0.00011590300000000053, 0.00011511200000000055, 0.00011558400000000191, 0.00011556900000000286, 0.00011590300000000053, 0.0001156249999999942, 0.00011569499999999899, 0.00011544399999999927, 0.00011551399999999712, 0.00011552799999999669, 0.00011506900000000236, 0.00011502800000000313, 0.00011599999999999805, 0.0001154169999999996, 0.00011570899999999856, 0.00011570799999999909, 0.00011562500000000114, 0.00011504099999999629, 0.00011595799999999934, 0.00011549999999999755, 0.00011595800000000628, 0.0001158750000000014, 0.00011583400000000216, 0.00011566699999999985, 0.00011570799999999909, 0.00011504100000000322, 0.00011513900000000021, 0.00011523599999999773, 0.00011523600000000467, 0.0001153620000000008, 0.00011536100000000132, 0.00011545899999999831, 0.00011594499999999924]</msg>
<status status="PASS" starttime="20201117 14:44:28.075" endtime="20201117 14:44:28.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.063" endtime="20201117 14:44:28.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.089" endtime="20201117 14:44:28.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:28.098" endtime="20201117 14:44:28.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.093" endtime="20201117 14:44:28.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.084" endtime="20201117 14:44:28.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:27.537" endtime="20201117 14:44:28.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.942" endtime="20201117 14:44:28.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:26.940" endtime="20201117 14:44:28.125"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.131" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.154" endtime="20201117 14:44:28.178"></status>
</kw>
<msg timestamp="20201117 14:44:28.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:28.150" endtime="20201117 14:44:28.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:28.182" endtime="20201117 14:44:28.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.188" endtime="20201117 14:44:28.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.143" endtime="20201117 14:44:28.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.136" endtime="20201117 14:44:28.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.213" endtime="20201117 14:44:28.576"></status>
</kw>
<msg timestamp="20201117 14:44:28.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049865194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049981764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:28.209" endtime="20201117 14:44:28.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049865194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049981764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:28.586" endtime="20201117 14:44:28.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.605" endtime="20201117 14:44:28.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.202" endtime="20201117 14:44:28.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.197" endtime="20201117 14:44:28.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:28.623" level="INFO">${RESULT} = [{'time': 0.049981764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001165699999999964, 'source_diff': 0.0001165699999999964}, {'time': 0.050104792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:28.614" endtime="20201117 14:44:28.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:28.649" level="INFO">${ACCURACY} = {'source_diff': [0.0001165699999999964, 0.00011659800000000248, 0.0001160420000000037, 0.00011629099999999754, 0.00011683300000000368, 0.0001165550000000043, 0.00011676399999999837, 0.0001165419999999...</msg>
<status status="PASS" starttime="20201117 14:44:28.626" endtime="20201117 14:44:28.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.655" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:44:28.654" endtime="20201117 14:44:28.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.658" level="INFO">VALUE: [0.0001165699999999964, 0.00011659800000000248, 0.0001160420000000037, 0.00011629099999999754, 0.00011683300000000368, 0.0001165550000000043, 0.00011676399999999837, 0.00011654199999999726, 0.0001162499999999983, 0.00011648600000000592, 0.00011649999999999855, 0.00011620899999999906, 0.00011612500000000164, 0.00011638900000000146, 0.00011673599999999923, 0.00011629099999999754, 0.00011611100000000207, 0.0001160970000000025, 0.0001166249999999952, 0.00011627800000000438, 0.0001164170000000006, 0.00011651300000000558, 0.00011658399999999597, 0.0001161249999999947, 0.00011681900000000411, 0.00011681899999999718, 0.00011670800000000009, 0.0001169170000000011, 0.00011694500000000024, 0.00011625000000000524, 0.00011636100000000232, 0.00011632000000000309, 0.00011695800000000034, 0.00011694400000000077, 0.00011631899999999668, 0.00011604199999999676, 0.0001167499999999988, 0.0001160970000000025, 0.00011649999999999855, 0.0001164170000000006, 0.00011691699999999416, 0.00011668000000000095, 0.0001160970000000025, 0.00011691599999999469, 0.00011695800000000034, 0.00011695800000000034, 0.00011668100000000042, 0.0001165420000000042, 0.00011666700000000085, 0.00011625000000000524]</msg>
<status status="PASS" starttime="20201117 14:44:28.656" endtime="20201117 14:44:28.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.650" endtime="20201117 14:44:28.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.662" endtime="20201117 14:44:28.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:28.667" endtime="20201117 14:44:28.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.665" endtime="20201117 14:44:28.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.660" endtime="20201117 14:44:28.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.132" endtime="20201117 14:44:28.688"></status>
</kw>
<msg timestamp="20201117 14:44:28.688" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.699" endtime="20201117 14:44:28.720"></status>
</kw>
<msg timestamp="20201117 14:44:28.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:28.697" endtime="20201117 14:44:28.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:28.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:28.721" endtime="20201117 14:44:28.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.724" endtime="20201117 14:44:28.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.694" endtime="20201117 14:44:28.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.691" endtime="20201117 14:44:28.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:28.736" endtime="20201117 14:44:29.092"></status>
</kw>
<msg timestamp="20201117 14:44:29.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025015944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025132778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:28.734" endtime="20201117 14:44:29.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025015944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025132778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:29.102" endtime="20201117 14:44:29.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.121" endtime="20201117 14:44:29.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.731" endtime="20201117 14:44:29.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.729" endtime="20201117 14:44:29.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:29.141" level="INFO">${RESULT} = [{'time': 0.025132778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011683400000000316, 'source_diff': 0.00011683400000000316}, {'time': 0.025262792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:29.132" endtime="20201117 14:44:29.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:29.176" level="INFO">${ACCURACY} = {'source_diff': [0.00011683400000000316, 0.00011670899999999956, 0.00011611100000000207, 0.00011651400000000159, 0.00011644400000000027, 0.00011662499999999867, 0.00011650000000000202, 0.0001164720000...</msg>
<status status="PASS" starttime="20201117 14:44:29.143" endtime="20201117 14:44:29.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.188" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:44:29.186" endtime="20201117 14:44:29.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.194" level="INFO">VALUE: [0.00011683400000000316, 0.00011670899999999956, 0.00011611100000000207, 0.00011651400000000159, 0.00011644400000000027, 0.00011662499999999867, 0.00011650000000000202, 0.00011647200000000288, 0.00011682000000000012, 0.0001160559999999998, 0.00011690299999999806, 0.00011616700000000035, 0.00011616700000000035, 0.00011686099999999935, 0.00011683300000000021, 0.00011652799999999769, 0.00011630600000000005, 0.00011652800000000116, 0.00011682000000000012, 0.00011602799999999719, 0.00011658399999999944, 0.00011605499999999686, 0.00011650000000000202, 0.00011666700000000085, 0.00011616600000000088, 0.00011638900000000146, 0.00011620799999999959, 0.0001160559999999998, 0.00011612500000000164, 0.00011633399999999919, 0.00011620899999999906, 0.00011654099999999779, 0.00011620799999999959, 0.00011663900000000171, 0.00011662499999999867, 0.0001161109999999986, 0.00011648599999999898, 0.00011701400000000209, 0.00011699999999999905, 0.000116597000000003, 0.00011604100000000075, 0.00011702799999999819, 0.00011605500000000032, 0.00011675000000000227, 0.00011654200000000073, 0.00011620900000000253, 0.00011680600000000055, 0.00011662499999999867, 0.00011620900000000253, 0.00011690300000000153]</msg>
<status status="PASS" starttime="20201117 14:44:29.191" endtime="20201117 14:44:29.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.179" endtime="20201117 14:44:29.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.203" endtime="20201117 14:44:29.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:29.212" endtime="20201117 14:44:29.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.208" endtime="20201117 14:44:29.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.199" endtime="20201117 14:44:29.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.689" endtime="20201117 14:44:29.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.128" endtime="20201117 14:44:29.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:28.126" endtime="20201117 14:44:29.239"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.245" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.268" endtime="20201117 14:44:29.293"></status>
</kw>
<msg timestamp="20201117 14:44:29.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:29.264" endtime="20201117 14:44:29.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:29.296" endtime="20201117 14:44:29.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.303" endtime="20201117 14:44:29.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.257" endtime="20201117 14:44:29.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.251" endtime="20201117 14:44:29.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.328" endtime="20201117 14:44:29.690"></status>
</kw>
<msg timestamp="20201117 14:44:29.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049559917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049677667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:29.324" endtime="20201117 14:44:29.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049559917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049677667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:29.700" endtime="20201117 14:44:29.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.719" endtime="20201117 14:44:29.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.316" endtime="20201117 14:44:29.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.311" endtime="20201117 14:44:29.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:29.740" level="INFO">${RESULT} = [{'time': 0.049677667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001177499999999998, 'source_diff': 0.0001177499999999998}, {'time': 0.049800681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:44:29.731" endtime="20201117 14:44:29.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:29.772" level="INFO">${ACCURACY} = {'source_diff': [0.0001177499999999998, 0.00011761199999999611, 0.00011770800000000109, 0.00011754099999999879, 0.00011751399999999912, 0.0001178750000000034, 0.0001170420000000047, 0.0001173749999999...</msg>
<status status="PASS" starttime="20201117 14:44:29.743" endtime="20201117 14:44:29.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.784" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:44:29.781" endtime="20201117 14:44:29.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.789" level="INFO">VALUE: [0.0001177499999999998, 0.00011761199999999611, 0.00011770800000000109, 0.00011754099999999879, 0.00011751399999999912, 0.0001178750000000034, 0.0001170420000000047, 0.00011737499999999595, 0.00011768100000000142, 0.00011708399999999647, 0.00011787499999999645, 0.00011795800000000134, 0.0001176249999999962, 0.00011708300000000393, 0.0001170970000000035, 0.00011712500000000264, 0.00011734700000000375, 0.00011754199999999826, 0.0001173750000000029, 0.00011708399999999647, 0.00011729099999999854, 0.000117082999999997, 0.00011729100000000547, 0.00011729199999999801, 0.00011737499999999595, 0.00011755600000000477, 0.0001179170000000021, 0.0001178750000000034, 0.00011732000000000409, 0.00011745800000000084, 0.00011729199999999801, 0.00011766600000000238, 0.00011705599999999733, 0.00011713899999999527, 0.00011798600000000048, 0.00011761100000000357, 0.00011713900000000221, 0.00011786199999999636, 0.00011754099999999879, 0.00011719400000000102, 0.00011762500000000314, 0.00011783299999999775, 0.0001175829999999975, 0.00011754199999999826, 0.00011740300000000203, 0.00011709799999999604, 0.00011726399999999887, 0.0001174170000000016, 0.00011713800000000274, 0.00011749999999999955]</msg>
<status status="PASS" starttime="20201117 14:44:29.786" endtime="20201117 14:44:29.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.774" endtime="20201117 14:44:29.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.799" endtime="20201117 14:44:29.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:29.808" endtime="20201117 14:44:29.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.803" endtime="20201117 14:44:29.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.794" endtime="20201117 14:44:29.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.246" endtime="20201117 14:44:29.834"></status>
</kw>
<msg timestamp="20201117 14:44:29.835" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.857" endtime="20201117 14:44:29.882"></status>
</kw>
<msg timestamp="20201117 14:44:29.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:29.854" endtime="20201117 14:44:29.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:29.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:44:29.886" endtime="20201117 14:44:29.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.893" endtime="20201117 14:44:29.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.846" endtime="20201117 14:44:29.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.840" endtime="20201117 14:44:29.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:29.918" endtime="20201117 14:44:30.278"></status>
</kw>
<msg timestamp="20201117 14:44:30.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:29.914" endtime="20201117 14:44:30.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:44:30.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043812986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:44:30.287" endtime="20201117 14:44:30.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:30.308" endtime="20201117 14:44:30.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.906" endtime="20201117 14:44:30.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.901" endtime="20201117 14:44:30.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:44:30.328" level="INFO">${RESULT} = [{'time': 0.043812986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011745800000000084, 'source_diff': 0.00011745800000000084}, {'time': 0.043940931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:44:30.319" endtime="20201117 14:44:30.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:44:30.360" level="INFO">${ACCURACY} = {'source_diff': [0.00011745800000000084, 0.0001173750000000029, 0.00011779199999999851, 0.0001175829999999975, 0.00011772200000000066, 0.00011749999999999955, 0.00011730599999999758, 0.000117472000000...</msg>
<status status="PASS" starttime="20201117 14:44:30.330" endtime="20201117 14:44:30.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:44:30.372" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:44:30.369" endtime="20201117 14:44:30.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:44:30.377" level="INFO">VALUE: [0.00011745800000000084, 0.0001173750000000029, 0.00011779199999999851, 0.0001175829999999975, 0.00011772200000000066, 0.00011749999999999955, 0.00011730599999999758, 0.00011747200000000041, 0.00011719500000000049, 0.00011730600000000452, 0.00011779199999999851, 0.00011754199999999826, 0.00011729099999999854, 0.00011762500000000314, 0.00011713900000000221, 0.00011779199999999851, 0.00011797200000000091, 0.00011743099999999423, 0.00011784799999999679, 0.0001175420000000052, 0.00011719500000000049, 0.00011713899999999527, 0.0001176249999999962, 0.00011790200000000306, 0.00011727799999999844, 0.00011763899999999577, 0.00011763900000000271, 0.00011731999999999715, 0.00011783399999999722, 0.00011758300000000443, 0.00011784799999999679, 0.0001175829999999975, 0.00011715300000000178, 0.00011706899999999743, 0.00011757000000000434, 0.00011704199999999776, 0.0001171249999999957, 0.00011730600000000452, 0.0001176249999999962, 0.0001176249999999962, 0.00011777799999999894, 0.0001179300000000022, 0.0001179170000000021, 0.00011716700000000135, 0.00011751400000000606, 0.00011729200000000495, 0.00011795900000000081, 0.00011770900000000056, 0.00011780600000000502, 0.00011766599999999544]</msg>
<status status="PASS" starttime="20201117 14:44:30.374" endtime="20201117 14:44:30.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:30.362" endtime="20201117 14:44:30.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:44:30.387" endtime="20201117 14:44:30.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:30.396" endtime="20201117 14:44:30.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:30.391" endtime="20201117 14:44:30.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:30.382" endtime="20201117 14:44:30.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.836" endtime="20201117 14:44:30.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.242" endtime="20201117 14:44:30.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:29.240" endtime="20201117 14:44:30.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.212" endtime="20201117 14:44:30.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:44:30.435" endtime="20201117 14:44:30.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:30.430" endtime="20201117 14:44:30.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:44:30.427" endtime="20201117 14:44:30.460"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:42:39.080" endtime="20201117 14:44:30.461" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:47.055" endtime="20201117 14:44:30.473"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:40:43.265" endtime="20201117 14:44:30.508"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
