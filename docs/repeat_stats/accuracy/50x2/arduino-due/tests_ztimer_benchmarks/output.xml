<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:40:42.223" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.821" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:45.829" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:46.923" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:45.820" endtime="20201117 14:40:46.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.930" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:46.927" endtime="20201117 14:40:46.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.818" endtime="20201117 14:40:46.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.939" endtime="20201117 14:40:47.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.935" endtime="20201117 14:40:47.125"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.137" endtime="20201117 14:40:50.161"></status>
</kw>
<msg timestamp="20201117 14:40:50.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.136" endtime="20201117 14:40:50.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.164" endtime="20201117 14:40:50.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:50.169" endtime="20201117 14:40:50.174"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:47.133" endtime="20201117 14:40:50.176"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:47.131" endtime="20201117 14:40:50.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.130" endtime="20201117 14:40:50.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:50.186" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:50.184" endtime="20201117 14:40:50.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.180" endtime="20201117 14:40:50.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.129" endtime="20201117 14:40:50.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.128" endtime="20201117 14:40:50.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.189" endtime="20201117 14:40:50.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.127" endtime="20201117 14:40:50.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.195" endtime="20201117 14:40:50.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.125" endtime="20201117 14:40:50.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.817" endtime="20201117 14:40:50.200"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.211" endtime="20201117 14:40:50.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.209" endtime="20201117 14:40:50.231"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.246" endtime="20201117 14:40:53.268"></status>
</kw>
<msg timestamp="20201117 14:40:53.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.243" endtime="20201117 14:40:53.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.274" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.271" endtime="20201117 14:40:53.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.281" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:53.277" endtime="20201117 14:40:53.281"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:50.241" endtime="20201117 14:40:53.283"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:50.238" endtime="20201117 14:40:53.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.236" endtime="20201117 14:40:53.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:53.292" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:53.291" endtime="20201117 14:40:53.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.286" endtime="20201117 14:40:53.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.236" endtime="20201117 14:40:53.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.235" endtime="20201117 14:40:53.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.296" endtime="20201117 14:40:53.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.234" endtime="20201117 14:40:53.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.232" endtime="20201117 14:40:53.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.207" endtime="20201117 14:40:53.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.316" endtime="20201117 14:40:53.332"></status>
</kw>
<msg timestamp="20201117 14:40:53.333" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.313" endtime="20201117 14:40:53.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.338" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.335" endtime="20201117 14:40:53.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.340" endtime="20201117 14:40:53.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.307" endtime="20201117 14:40:53.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.303" endtime="20201117 14:40:53.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.355" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:40:53.352" endtime="20201117 14:40:53.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.360" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:40:53.357" endtime="20201117 14:40:53.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.347" endtime="20201117 14:40:53.362"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:50.201" endtime="20201117 14:40:53.363" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:42.335" endtime="20201117 14:40:53.368"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.423" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:53.430" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:54.497" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:53.421" endtime="20201117 14:40:54.498"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.501" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:54.499" endtime="20201117 14:40:54.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.420" endtime="20201117 14:40:54.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.504" endtime="20201117 14:40:54.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.502" endtime="20201117 14:40:54.726"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.741" endtime="20201117 14:40:57.763"></status>
</kw>
<msg timestamp="20201117 14:40:57.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.738" endtime="20201117 14:40:57.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.769" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.766" endtime="20201117 14:40:57.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.776" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:57.771" endtime="20201117 14:40:57.776"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:54.735" endtime="20201117 14:40:57.778"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:54.733" endtime="20201117 14:40:57.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.731" endtime="20201117 14:40:57.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:57.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:57.786" endtime="20201117 14:40:57.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.781" endtime="20201117 14:40:57.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.731" endtime="20201117 14:40:57.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.730" endtime="20201117 14:40:57.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.791" endtime="20201117 14:40:57.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.729" endtime="20201117 14:40:57.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.796" endtime="20201117 14:40:57.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.727" endtime="20201117 14:40:57.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.418" endtime="20201117 14:40:57.801"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.814" endtime="20201117 14:40:57.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.811" endtime="20201117 14:40:57.837"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.850" endtime="20201117 14:41:00.872"></status>
</kw>
<msg timestamp="20201117 14:41:00.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.848" endtime="20201117 14:41:00.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.879" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.875" endtime="20201117 14:41:00.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.885" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:41:00.881" endtime="20201117 14:41:00.886"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:57.846" endtime="20201117 14:41:00.887"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:57.843" endtime="20201117 14:41:00.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.842" endtime="20201117 14:41:00.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:41:00.897" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:41:00.895" endtime="20201117 14:41:00.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.891" endtime="20201117 14:41:00.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.841" endtime="20201117 14:41:00.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.840" endtime="20201117 14:41:00.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.900" endtime="20201117 14:41:00.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.839" endtime="20201117 14:41:00.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.837" endtime="20201117 14:41:00.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.808" endtime="20201117 14:41:00.906"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.913" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.933" endtime="20201117 14:41:00.951"></status>
</kw>
<msg timestamp="20201117 14:41:00.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.928" endtime="20201117 14:41:00.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.955" endtime="20201117 14:41:00.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.960" endtime="20201117 14:41:00.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.922" endtime="20201117 14:41:00.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.918" endtime="20201117 14:41:00.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.980" endtime="20201117 14:41:01.279"></status>
</kw>
<msg timestamp="20201117 14:41:01.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108543097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108557778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.976" endtime="20201117 14:41:01.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108543097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108557778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.283" endtime="20201117 14:41:01.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.291" endtime="20201117 14:41:01.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.970" endtime="20201117 14:41:01.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.967" endtime="20201117 14:41:01.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.298" level="INFO">${RESULT} = [{'time': 3.108557778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4681000000127398e-05, 'source_diff': 1.4681000000127398e-05}, {'time': 3.108583778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.295" endtime="20201117 14:41:01.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.312" level="INFO">${ACCURACY} = {'time': [3.108557778, 3.108583778, 3.108606792, 3.108629792, 3.108652806, 3.108674792, 3.108701806, 3.108727806, 3.108747806, 3.108775806, 3.108800806, 3.108825806, 3.108852819, 3.108874847, 3.108897...</msg>
<status status="PASS" starttime="20201117 14:41:01.299" endtime="20201117 14:41:01.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.317" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.316" endtime="20201117 14:41:01.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.319" level="INFO">VALUE: [1.4681000000127398e-05, 1.4402999999774124e-05, 1.412499999986494e-05, 1.4055999999929014e-05, 1.5013999999702321e-05, 1.4708999999779593e-05, 1.43200000000121e-05, 1.4709000000223682e-05, 1.4152999999961224e-05, 1.4834000000352177e-05, 1.4694999999953495e-05, 1.4139000000135127e-05, 1.447200000015414e-05, 1.4750000000063324e-05, 1.4305000000103263e-05, 1.4263999999819532e-05, 1.4972000000224028e-05, 1.472199999996704e-05, 1.4430000000231757e-05, 1.4236000000167337e-05, 1.4832999999825347e-05, 1.4583000000012447e-05, 1.4082999999942558e-05, 1.4054999999846274e-05, 1.4653000000031113e-05, 1.4375000000121929e-05, 1.4054999999846274e-05, 1.4054999999846274e-05, 1.4653000000031113e-05, 1.4777999999715519e-05, 1.472199999996704e-05, 1.422200000034124e-05, 1.4542000000172806e-05, 1.4986000000050126e-05, 1.4499999999806334e-05, 1.4457999999883953e-05, 1.4235999999723248e-05, 1.5026999999889767e-05, 1.4778000000159608e-05, 1.4957999999953842e-05, 1.4512999999993781e-05, 1.4264000000263621e-05, 1.4084000000025299e-05, 1.4388999999948027e-05, 1.5041999999798605e-05, 1.4708999999779593e-05, 1.4681000000127398e-05, 1.4334000000282288e-05, 1.4055999999929014e-05, 1.4569999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.318" endtime="20201117 14:41:01.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.313" endtime="20201117 14:41:01.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.322" endtime="20201117 14:41:01.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.326" endtime="20201117 14:41:01.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.324" endtime="20201117 14:41:01.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.321" endtime="20201117 14:41:01.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.915" endtime="20201117 14:41:01.347"></status>
</kw>
<msg timestamp="20201117 14:41:01.347" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.355" endtime="20201117 14:41:01.371"></status>
</kw>
<msg timestamp="20201117 14:41:01.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.354" endtime="20201117 14:41:01.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.373" endtime="20201117 14:41:01.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.375" endtime="20201117 14:41:01.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.351" endtime="20201117 14:41:01.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.349" endtime="20201117 14:41:01.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.385" endtime="20201117 14:41:01.669"></status>
</kw>
<msg timestamp="20201117 14:41:01.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.383" endtime="20201117 14:41:01.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.673" endtime="20201117 14:41:01.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.681" endtime="20201117 14:41:01.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.380" endtime="20201117 14:41:01.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.378" endtime="20201117 14:41:01.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.689" level="INFO">${RESULT} = [{'time': 0.020221056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.020247056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.685" endtime="20201117 14:41:01.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.702" level="INFO">${ACCURACY} = {'time': [0.020221056, 0.020247056, 0.020274056, 0.020295056, 0.020321083, 0.020343056, 0.020363139, 0.020387069, 0.020408069, 0.020431056, 0.020459069, 0.020481083, 0.020506069, 0.020532069, 0.020559...</msg>
<status status="PASS" starttime="20201117 14:41:01.690" endtime="20201117 14:41:01.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.707" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.706" endtime="20201117 14:41:01.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.709" level="INFO">VALUE: [1.4695000000002068e-05, 1.4750000000000874e-05, 1.4694999999998598e-05, 1.4958999999998418e-05, 1.4208000000001664e-05, 1.4667000000002928e-05, 1.4194999999998098e-05, 1.504100000000036e-05, 1.4625000000000749e-05, 1.4737000000000777e-05, 1.4986000000001554e-05, 1.4943999999999374e-05, 1.4887999999997625e-05, 1.4638000000000845e-05, 1.4568999999999e-05, 1.4263999999999943e-05, 1.479100000000011e-05, 1.4778000000000013e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.5000000000001124e-05, 1.4429999999999304e-05, 1.4680000000003024e-05, 1.4750000000000874e-05, 1.4944000000002844e-05, 1.4791999999999583e-05, 1.4611000000001179e-05, 1.4930999999999278e-05, 1.4500000000000624e-05, 1.486099999999796e-05, 1.4736000000001304e-05, 1.4972000000001984e-05, 1.4916999999999708e-05, 1.4097000000001109e-05, 1.4166999999998958e-05, 1.4222000000001234e-05, 1.4209000000001137e-05, 1.4958999999998418e-05, 1.4819999999998723e-05, 1.4250000000000373e-05, 1.4319999999998223e-05, 1.4291999999999083e-05, 1.4667000000002928e-05, 1.4097000000001109e-05, 1.4416999999999208e-05, 1.4667000000002928e-05, 1.4459000000001387e-05, 1.4209000000001137e-05, 1.4431000000002248e-05, 1.433299999999832e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.708" endtime="20201117 14:41:01.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.703" endtime="20201117 14:41:01.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.712" endtime="20201117 14:41:01.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.716" endtime="20201117 14:41:01.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.714" endtime="20201117 14:41:01.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.711" endtime="20201117 14:41:01.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.348" endtime="20201117 14:41:01.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.911" endtime="20201117 14:41:01.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.909" endtime="20201117 14:41:01.737"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.739" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.748" endtime="20201117 14:41:01.764"></status>
</kw>
<msg timestamp="20201117 14:41:01.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.746" endtime="20201117 14:41:01.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.765" endtime="20201117 14:41:01.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.768" endtime="20201117 14:41:01.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.744" endtime="20201117 14:41:01.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.741" endtime="20201117 14:41:01.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.777" endtime="20201117 14:41:02.063"></status>
</kw>
<msg timestamp="20201117 14:41:02.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.776" endtime="20201117 14:41:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.067" endtime="20201117 14:41:02.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.075" endtime="20201117 14:41:02.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.773" endtime="20201117 14:41:02.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.771" endtime="20201117 14:41:02.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.082" level="INFO">${RESULT} = [{'time': 0.022717958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.502700000000079e-05, 'source_diff': 1.502700000000079e-05}, {'time': 0.022742958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:02.078" endtime="20201117 14:41:02.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.096" level="INFO">${ACCURACY} = {'time': [0.022717958, 0.022742958, 0.022765972, 0.022790014, 0.022814972, 0.022840972, 0.022862986, 0.022888986, 0.022908986, 0.022936986, 0.022958986, 0.022981986, 0.023009056, 0.023033, 0.023055014...</msg>
<status status="PASS" starttime="20201117 14:41:02.083" endtime="20201117 14:41:02.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.101" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.100" endtime="20201117 14:41:02.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.103" level="INFO">VALUE: [1.502700000000079e-05, 1.4111000000000679e-05, 1.405499999999893e-05, 1.4611000000001179e-05, 1.4693999999999124e-05, 1.4250000000000373e-05, 1.40689999999985e-05, 1.4416999999999208e-05, 1.4221999999997764e-05, 1.483299999999882e-05, 1.4778000000000013e-05, 1.4041999999998833e-05, 1.4778000000000013e-05, 1.4819000000002719e-05, 1.4514000000000193e-05, 1.4402999999999638e-05, 1.4680999999999028e-05, 1.4111000000000679e-05, 1.4473000000000957e-05, 1.4972000000001984e-05, 1.4749999999997404e-05, 1.4361000000000929e-05, 1.4402999999999638e-05, 1.4750000000000874e-05, 1.4916999999999708e-05, 1.4263999999999943e-05, 1.4125000000000248e-05, 1.4334000000001262e-05, 1.4487000000000527e-05, 1.4695000000002068e-05, 1.4638999999996849e-05, 1.4430000000002774e-05, 1.4889000000000568e-05, 1.4887999999997625e-05, 1.4110999999997209e-05, 1.509699999999864e-05, 1.4834000000001762e-05, 1.4847000000001859e-05, 1.4471999999998014e-05, 1.486099999999796e-05, 1.481899999999925e-05, 1.4583000000002039e-05, 1.477700000000054e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4778000000000013e-05, 1.4083000000001539e-05, 1.4625000000000749e-05, 1.4929999999999805e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.102" endtime="20201117 14:41:02.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.097" endtime="20201117 14:41:02.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.106" endtime="20201117 14:41:02.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.109" endtime="20201117 14:41:02.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.108" endtime="20201117 14:41:02.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.105" endtime="20201117 14:41:02.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.740" endtime="20201117 14:41:02.130"></status>
</kw>
<msg timestamp="20201117 14:41:02.130" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.139" endtime="20201117 14:41:02.154"></status>
</kw>
<msg timestamp="20201117 14:41:02.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.137" endtime="20201117 14:41:02.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.155" endtime="20201117 14:41:02.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.158" endtime="20201117 14:41:02.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.135" endtime="20201117 14:41:02.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.132" endtime="20201117 14:41:02.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.168" endtime="20201117 14:41:02.468"></status>
</kw>
<msg timestamp="20201117 14:41:02.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.167" endtime="20201117 14:41:02.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.477" endtime="20201117 14:41:02.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.496" endtime="20201117 14:41:02.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.164" endtime="20201117 14:41:02.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.162" endtime="20201117 14:41:02.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.502" level="INFO">${RESULT} = [{'time': 0.019256778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4735999999997834e-05, 'source_diff': 1.4735999999997834e-05}, {'time': 0.019280764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.499" endtime="20201117 14:41:02.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.516" level="INFO">${ACCURACY} = {'time': [0.019256778, 0.019280764, 0.019302764, 0.019330778, 0.019352792, 0.019378778, 0.019405792, 0.019429861, 0.019457778, 0.019479792, 0.019503792, 0.019524792, 0.019552792, 0.019577792, 0.019598...</msg>
<status status="PASS" starttime="20201117 14:41:02.503" endtime="20201117 14:41:02.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.520" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.519" endtime="20201117 14:41:02.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.523" level="INFO">VALUE: [1.4735999999997834e-05, 1.4389000000000068e-05, 1.4541999999999333e-05, 1.4944999999998848e-05, 1.4098000000000582e-05, 1.4194999999998098e-05, 1.4263999999999943e-05, 1.4611000000001179e-05, 1.4805999999999153e-05, 1.4485999999997584e-05, 1.4291999999999083e-05, 1.4430999999998778e-05, 1.4708999999998168e-05, 1.4680999999999028e-05, 1.4263999999999943e-05, 1.4152999999999388e-05, 1.4195000000001567e-05, 1.4500000000000624e-05, 1.4805999999999153e-05, 1.4443999999998874e-05, 1.4916000000000235e-05, 1.431899999999875e-05, 1.4180000000002524e-05, 1.4443999999998874e-05, 1.4471999999998014e-05, 1.477700000000054e-05, 1.4500000000000624e-05, 1.4972000000001984e-05, 1.4111000000000679e-05, 1.4764000000000443e-05, 1.5000000000001124e-05, 1.405499999999893e-05, 1.4375000000000498e-05, 1.4097000000001109e-05, 1.4916000000000235e-05, 1.4778000000000013e-05, 1.4958000000002414e-05, 1.4416999999999208e-05, 1.4472000000001484e-05, 1.4222000000001234e-05, 1.4930999999999278e-05, 1.481899999999925e-05, 1.4208000000001664e-05, 1.5013999999997224e-05, 1.4833000000002289e-05, 1.5028000000000263e-05, 1.4125000000000248e-05, 1.4138999999999818e-05, 1.4930999999999278e-05, 1.4903000000000138e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.521" endtime="20201117 14:41:02.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.517" endtime="20201117 14:41:02.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.526" endtime="20201117 14:41:02.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.529" endtime="20201117 14:41:02.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.528" endtime="20201117 14:41:02.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.524" endtime="20201117 14:41:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.131" endtime="20201117 14:41:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.738" endtime="20201117 14:41:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.738" endtime="20201117 14:41:02.550"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.553" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.561" endtime="20201117 14:41:02.575"></status>
</kw>
<msg timestamp="20201117 14:41:02.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.559" endtime="20201117 14:41:02.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.577" endtime="20201117 14:41:02.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.579" endtime="20201117 14:41:02.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.557" endtime="20201117 14:41:02.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.555" endtime="20201117 14:41:02.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.589" endtime="20201117 14:41:02.874"></status>
</kw>
<msg timestamp="20201117 14:41:02.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.588" endtime="20201117 14:41:02.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.878" endtime="20201117 14:41:02.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.886" endtime="20201117 14:41:02.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.585" endtime="20201117 14:41:02.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.583" endtime="20201117 14:41:02.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.893" level="INFO">${RESULT} = [{'time': 0.021726806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4667000000002928e-05, 'source_diff': 1.4667000000002928e-05}, {'time': 0.021748819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.890" endtime="20201117 14:41:02.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.906" level="INFO">${ACCURACY} = {'time': [0.021726806, 0.021748819, 0.021771806, 0.021796806, 0.021820819, 0.021847806, 0.021872819, 0.021894847, 0.021914833, 0.021940819, 0.021961833, 0.021987847, 0.022012833, 0.022038847, 0.022061...</msg>
<status status="PASS" starttime="20201117 14:41:02.894" endtime="20201117 14:41:02.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.911" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.910" endtime="20201117 14:41:02.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.913" level="INFO">VALUE: [1.4667000000002928e-05, 1.4236000000000804e-05, 1.4056000000001873e-05, 1.4208999999997668e-05, 1.4888000000001095e-05, 1.4223000000000707e-05, 1.4458000000001914e-05, 1.4943999999999374e-05, 1.4151999999999915e-05, 1.4250000000000373e-05, 1.4500000000000624e-05, 1.4444000000002344e-05, 1.409699999999764e-05, 1.4514000000000193e-05, 1.4570000000001943e-05, 1.4555000000002899e-05, 1.5014000000000693e-05, 1.4693999999999124e-05, 1.4179999999999054e-05, 1.4903000000000138e-05, 1.4943999999999374e-05, 1.4945000000002318e-05, 1.4500000000000624e-05, 1.4611000000001179e-05, 1.4193999999998624e-05, 1.4666999999999458e-05, 1.4263999999999943e-05, 1.4541999999999333e-05, 1.483299999999882e-05, 1.4250000000000373e-05, 1.4555999999998903e-05, 1.4820000000002193e-05, 1.4319999999998223e-05, 1.4389000000000068e-05, 1.4611000000001179e-05, 1.4750000000000874e-05, 1.4791999999999583e-05, 1.4931000000002748e-05, 1.4597999999997613e-05, 1.461099999999771e-05, 1.5014000000000693e-05, 1.4764000000000443e-05, 1.505499999999993e-05, 1.4750000000000874e-05, 1.4749999999997404e-05, 1.4681000000002498e-05, 1.4319999999998223e-05, 1.4736000000001304e-05, 1.430499999999918e-05, 1.4805999999999153e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.912" endtime="20201117 14:41:02.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.907" endtime="20201117 14:41:02.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.916" endtime="20201117 14:41:02.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.920" endtime="20201117 14:41:02.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.918" endtime="20201117 14:41:02.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.915" endtime="20201117 14:41:02.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.553" endtime="20201117 14:41:02.940"></status>
</kw>
<msg timestamp="20201117 14:41:02.941" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.949" endtime="20201117 14:41:02.964"></status>
</kw>
<msg timestamp="20201117 14:41:02.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.948" endtime="20201117 14:41:02.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.965" endtime="20201117 14:41:02.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.968" endtime="20201117 14:41:02.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.945" endtime="20201117 14:41:02.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.943" endtime="20201117 14:41:02.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.978" endtime="20201117 14:41:03.265"></status>
</kw>
<msg timestamp="20201117 14:41:03.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.976" endtime="20201117 14:41:03.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.269" endtime="20201117 14:41:03.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.278" endtime="20201117 14:41:03.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.974" endtime="20201117 14:41:03.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.972" endtime="20201117 14:41:03.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.284" level="INFO">${RESULT} = [{'time': 0.019749597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.019770597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:03.281" endtime="20201117 14:41:03.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.297" level="INFO">${ACCURACY} = {'time': [0.019749597, 0.019770597, 0.019792653, 0.019817681, 0.019838611, 0.019863611, 0.019885625, 0.019906625, 0.019927639, 0.019951625, 0.019976639, 0.019997625, 0.020021653, 0.020047667, 0.020073...</msg>
<status status="PASS" starttime="20201117 14:41:03.285" endtime="20201117 14:41:03.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.302" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.301" endtime="20201117 14:41:03.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.304" level="INFO">VALUE: [1.4986000000001554e-05, 1.4250000000000373e-05, 1.4111000000000679e-05, 1.4916999999999708e-05, 1.4416999999999208e-05, 1.4611000000001179e-05, 1.5028000000000263e-05, 1.4847000000001859e-05, 1.4111000000000679e-05, 1.4568999999999e-05, 1.4361000000000929e-05, 1.4652999999999888e-05, 1.4834000000001762e-05, 1.4959000000001887e-05, 1.4930999999999278e-05, 1.4847000000001859e-05, 1.4194000000002094e-05, 1.4417000000002678e-05, 1.4555999999998903e-05, 1.4069999999997973e-05, 1.4069999999997973e-05, 1.4847000000001859e-05, 1.4334000000001262e-05, 1.4250000000000373e-05, 1.4834000000001762e-05, 1.4027999999999263e-05, 1.4250000000000373e-05, 1.4665999999999985e-05, 1.4500000000000624e-05, 1.4973000000001457e-05, 1.4666999999999458e-05, 1.4903000000000138e-05, 1.4665999999999985e-05, 1.505499999999993e-05, 1.427700000000004e-05, 1.454099999999986e-05, 1.427700000000004e-05, 1.4375000000000498e-05, 1.3986000000000554e-05, 1.4069000000001969e-05, 1.454099999999986e-05, 1.4972000000001984e-05, 1.480499999999968e-05, 1.4568999999999e-05, 1.484699999999839e-05, 1.4429999999999304e-05, 1.4165999999999485e-05, 1.4737000000000777e-05, 1.4443999999998874e-05, 1.4541000000003329e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.303" endtime="20201117 14:41:03.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.298" endtime="20201117 14:41:03.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.308" endtime="20201117 14:41:03.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.311" endtime="20201117 14:41:03.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.309" endtime="20201117 14:41:03.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.306" endtime="20201117 14:41:03.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.941" endtime="20201117 14:41:03.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.552" endtime="20201117 14:41:03.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.551" endtime="20201117 14:41:03.333"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.335" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.343" endtime="20201117 14:41:03.358"></status>
</kw>
<msg timestamp="20201117 14:41:03.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.342" endtime="20201117 14:41:03.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.360" endtime="20201117 14:41:03.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.362" endtime="20201117 14:41:03.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.339" endtime="20201117 14:41:03.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.337" endtime="20201117 14:41:03.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.371" endtime="20201117 14:41:03.656"></status>
</kw>
<msg timestamp="20201117 14:41:03.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229565, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:03.370" endtime="20201117 14:41:03.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229565, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:03.660" endtime="20201117 14:41:03.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.668" endtime="20201117 14:41:03.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.367" endtime="20201117 14:41:03.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.365" endtime="20201117 14:41:03.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.675" level="INFO">${RESULT} = [{'time': 0.0229565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.022984528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:03.672" endtime="20201117 14:41:03.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.689" level="INFO">${ACCURACY} = {'time': [0.0229565, 0.022984528, 0.023007514, 0.023030514, 0.023056556, 0.0230775, 0.023103528, 0.023127569, 0.023153514, 0.023178597, 0.023201514, 0.023222514, 0.023244528, 0.023267528, 0.023291542,...</msg>
<status status="PASS" starttime="20201117 14:41:03.676" endtime="20201117 14:41:03.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.694" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.693" endtime="20201117 14:41:03.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.696" level="INFO">VALUE: [1.5000000000001124e-05, 1.4791999999999583e-05, 1.4055999999998403e-05, 1.5013999999997224e-05, 1.4944999999998848e-05, 1.4958000000002414e-05, 1.4764000000000443e-05, 1.4111000000000679e-05, 1.4957999999998944e-05, 1.5013999999997224e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.4722000000001734e-05, 1.4527999999999763e-05, 1.4555999999998903e-05, 1.4903000000000138e-05, 1.4500000000000624e-05, 1.4693999999999124e-05, 1.4458999999997918e-05, 1.4471999999998014e-05, 1.4805999999999153e-05, 1.4416999999999208e-05, 1.4639000000000318e-05, 1.4971999999998514e-05, 1.4888000000001095e-05, 1.4348000000000832e-05, 1.431899999999875e-05, 1.4611000000001179e-05, 1.409699999999764e-05, 1.4221999999997764e-05, 1.4679999999999555e-05, 1.431899999999875e-05, 1.4429999999999304e-05, 1.4972000000001984e-05, 1.4208000000001664e-05, 1.4138999999999818e-05, 1.4485999999997584e-05, 1.4277999999999513e-05, 1.4125000000000248e-05, 1.483299999999882e-05, 1.459699999999814e-05, 1.4903000000000138e-05, 1.4569000000002469e-05, 1.4416999999999208e-05, 1.4944000000002844e-05, 1.4972000000001984e-05, 1.4403000000003108e-05, 1.4069000000001969e-05, 1.4222999999997238e-05, 1.4374999999997029e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.695" endtime="20201117 14:41:03.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.690" endtime="20201117 14:41:03.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.700" endtime="20201117 14:41:03.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.703" endtime="20201117 14:41:03.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.702" endtime="20201117 14:41:03.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.698" endtime="20201117 14:41:03.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.336" endtime="20201117 14:41:03.724"></status>
</kw>
<msg timestamp="20201117 14:41:03.724" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.732" endtime="20201117 14:41:03.747"></status>
</kw>
<msg timestamp="20201117 14:41:03.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.731" endtime="20201117 14:41:03.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.749" endtime="20201117 14:41:03.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.751" endtime="20201117 14:41:03.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.728" endtime="20201117 14:41:03.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.726" endtime="20201117 14:41:03.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.761" endtime="20201117 14:41:04.046"></status>
</kw>
<msg timestamp="20201117 14:41:04.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.759" endtime="20201117 14:41:04.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.051" endtime="20201117 14:41:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.059" endtime="20201117 14:41:04.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.757" endtime="20201117 14:41:04.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.755" endtime="20201117 14:41:04.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.066" level="INFO">${RESULT} = [{'time': 0.019245653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4584000000001512e-05, 'source_diff': 1.4584000000001512e-05}, {'time': 0.019268667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.062" endtime="20201117 14:41:04.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.079" level="INFO">${ACCURACY} = {'time': [0.019245653, 0.019268667, 0.019292681, 0.019320653, 0.019343653, 0.019366681, 0.019387653, 0.019412667, 0.019440667, 0.019466722, 0.019490667, 0.019516667, 0.019539681, 0.019567694, 0.019589...</msg>
<status status="PASS" starttime="20201117 14:41:04.066" endtime="20201117 14:41:04.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.083" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.082" endtime="20201117 14:41:04.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.086" level="INFO">VALUE: [1.4584000000001512e-05, 1.4375000000000498e-05, 1.4680999999999028e-05, 1.4764000000000443e-05, 1.4527999999999763e-05, 1.4348000000000832e-05, 1.4875000000000999e-05, 1.4556000000002373e-05, 1.4958999999998418e-05, 1.4957999999998944e-05, 1.4583999999998043e-05, 1.4695000000002068e-05, 1.4833999999998293e-05, 1.483299999999882e-05, 1.4778000000000013e-05, 1.4472000000001484e-05, 1.4250000000000373e-05, 1.4929999999999805e-05, 1.4457999999998444e-05, 1.4943999999999374e-05, 1.502699999999732e-05, 1.4263999999999943e-05, 1.4916000000000235e-05, 1.4111000000000679e-05, 1.454099999999986e-05, 1.4986000000001554e-05, 1.4500000000000624e-05, 1.4791999999999583e-05, 1.4916999999999708e-05, 1.4083000000001539e-05, 1.430499999999918e-05, 1.481899999999925e-05, 1.4236000000000804e-05, 1.4971999999998514e-05, 1.4180999999998528e-05, 1.480499999999968e-05, 1.4568999999999e-05, 1.4235999999997334e-05, 1.4402999999999638e-05, 1.4305999999998653e-05, 1.4930999999999278e-05, 1.483299999999882e-05, 1.4930999999999278e-05, 1.4555999999998903e-05, 1.4402999999999638e-05, 1.4098000000000582e-05, 1.4263999999999943e-05, 1.4402999999999638e-05, 1.4723000000001207e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.084" endtime="20201117 14:41:04.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.080" endtime="20201117 14:41:04.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.096" endtime="20201117 14:41:04.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.099" endtime="20201117 14:41:04.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.098" endtime="20201117 14:41:04.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.094" endtime="20201117 14:41:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.725" endtime="20201117 14:41:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.334" endtime="20201117 14:41:04.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.333" endtime="20201117 14:41:04.120"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.123" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.131" endtime="20201117 14:41:04.145"></status>
</kw>
<msg timestamp="20201117 14:41:04.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.129" endtime="20201117 14:41:04.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.147" endtime="20201117 14:41:04.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.149" endtime="20201117 14:41:04.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.127" endtime="20201117 14:41:04.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.125" endtime="20201117 14:41:04.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.158" endtime="20201117 14:41:04.445"></status>
</kw>
<msg timestamp="20201117 14:41:04.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.157" endtime="20201117 14:41:04.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.449" endtime="20201117 14:41:04.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.457" endtime="20201117 14:41:04.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.154" endtime="20201117 14:41:04.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.152" endtime="20201117 14:41:04.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.464" level="INFO">${RESULT} = [{'time': 0.022221903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.022241917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.460" endtime="20201117 14:41:04.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.477" level="INFO">${ACCURACY} = {'time': [0.022221903, 0.022241917, 0.022269931, 0.022291931, 0.022317917, 0.022341917, 0.022365931, 0.022392944, 0.022419972, 0.022446931, 0.022467931, 0.022489931, 0.022513972, 0.022535972, 0.022561...</msg>
<status status="PASS" starttime="20201117 14:41:04.465" endtime="20201117 14:41:04.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.481" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.480" endtime="20201117 14:41:04.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.484" level="INFO">VALUE: [1.5014000000000693e-05, 1.4195000000001567e-05, 1.4764000000000443e-05, 1.4306000000002123e-05, 1.4708999999998168e-05, 1.4098000000000582e-05, 1.4972999999997988e-05, 1.4750000000000874e-05, 1.4250000000000373e-05, 1.4778000000000013e-05, 1.4223000000000707e-05, 1.4778000000000013e-05, 1.4429999999999304e-05, 1.505499999999993e-05, 1.4639000000000318e-05, 1.4999999999997654e-05, 1.4555999999998903e-05, 1.4486000000001054e-05, 1.4125000000000248e-05, 1.4389000000000068e-05, 1.5000000000001124e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.4194000000002094e-05, 1.4527999999999763e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4153000000002858e-05, 1.4179999999999054e-05, 1.4514000000000193e-05, 1.4305999999998653e-05, 1.4986000000001554e-05, 1.4764000000000443e-05, 1.4943999999999374e-05, 1.5041999999999833e-05, 1.4236000000000804e-05, 1.4472000000001484e-05, 1.4778000000000013e-05, 1.4527999999999763e-05, 1.4652999999999888e-05, 1.4680999999999028e-05, 1.4555999999998903e-05, 1.4764000000000443e-05, 1.4334000000001262e-05, 1.4263999999999943e-05, 1.4639000000000318e-05, 1.4985999999998084e-05, 1.4375000000000498e-05, 1.4319999999998223e-05, 1.4959000000001887e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.483" endtime="20201117 14:41:04.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.478" endtime="20201117 14:41:04.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.488" endtime="20201117 14:41:04.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.491" endtime="20201117 14:41:04.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.490" endtime="20201117 14:41:04.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.486" endtime="20201117 14:41:04.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.123" endtime="20201117 14:41:04.512"></status>
</kw>
<msg timestamp="20201117 14:41:04.512" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.520" endtime="20201117 14:41:04.535"></status>
</kw>
<msg timestamp="20201117 14:41:04.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.519" endtime="20201117 14:41:04.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.536" endtime="20201117 14:41:04.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.538" endtime="20201117 14:41:04.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.516" endtime="20201117 14:41:04.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.514" endtime="20201117 14:41:04.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.548" endtime="20201117 14:41:04.833"></status>
</kw>
<msg timestamp="20201117 14:41:04.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019282708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.547" endtime="20201117 14:41:04.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019282708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.838" endtime="20201117 14:41:04.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.846" endtime="20201117 14:41:04.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.544" endtime="20201117 14:41:04.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.543" endtime="20201117 14:41:04.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.852" level="INFO">${RESULT} = [{'time': 0.019282708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.484699999999839e-05, 'source_diff': 1.484699999999839e-05}, {'time': 0.019303708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:04.849" endtime="20201117 14:41:04.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.866" level="INFO">${ACCURACY} = {'time': [0.019282708, 0.019303708, 0.01932675, 0.01934975, 0.019373694, 0.019394722, 0.019420708, 0.019443778, 0.019467764, 0.019491722, 0.019519722, 0.019540736, 0.019565722, 0.019586736, 0.01961072...</msg>
<status status="PASS" starttime="20201117 14:41:04.853" endtime="20201117 14:41:04.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.871" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.870" endtime="20201117 14:41:04.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.873" level="INFO">VALUE: [1.484699999999839e-05, 1.4151999999999915e-05, 1.4180999999998528e-05, 1.4639000000000318e-05, 1.4847000000001859e-05, 1.4443999999998874e-05, 1.4985999999998084e-05, 1.5055999999999403e-05, 1.4389000000000068e-05, 1.4111000000000679e-05, 1.4736000000001304e-05, 1.4471999999998014e-05, 1.4889000000000568e-05, 1.4389000000000068e-05, 1.4333000000001789e-05, 1.4221999999997764e-05, 1.5000000000001124e-05, 1.4597000000001609e-05, 1.4361000000000929e-05, 1.455499999999943e-05, 1.4680999999999028e-05, 1.4514000000000193e-05, 1.4708000000002164e-05, 1.5014000000000693e-05, 1.4597000000001609e-05, 1.4208000000001664e-05, 1.4208999999997668e-05, 1.4472000000001484e-05, 1.4791999999999583e-05, 1.4931000000002748e-05, 1.4179999999999054e-05, 1.4250000000000373e-05, 1.4209000000001137e-05, 1.476300000000097e-05, 1.4944999999998848e-05, 1.4430999999998778e-05, 1.4070000000001442e-05, 1.4612000000000652e-05, 1.4903000000000138e-05, 1.4973000000001457e-05, 1.5014000000000693e-05, 1.4180999999998528e-05, 1.4194999999998098e-05, 1.4208999999997668e-05, 1.4151999999999915e-05, 1.4750000000000874e-05, 1.4986000000001554e-05, 1.4415999999999735e-05, 1.4707999999998694e-05, 1.4167000000002428e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.872" endtime="20201117 14:41:04.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.867" endtime="20201117 14:41:04.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.876" endtime="20201117 14:41:04.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.880" endtime="20201117 14:41:04.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.878" endtime="20201117 14:41:04.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.875" endtime="20201117 14:41:04.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.513" endtime="20201117 14:41:04.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.122" endtime="20201117 14:41:04.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.121" endtime="20201117 14:41:04.901"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.903" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.911" endtime="20201117 14:41:04.927"></status>
</kw>
<msg timestamp="20201117 14:41:04.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.910" endtime="20201117 14:41:04.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.929" endtime="20201117 14:41:04.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.931" endtime="20201117 14:41:04.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.907" endtime="20201117 14:41:04.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.905" endtime="20201117 14:41:04.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.940" endtime="20201117 14:41:05.226"></status>
</kw>
<msg timestamp="20201117 14:41:05.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:04.939" endtime="20201117 14:41:05.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:05.230" endtime="20201117 14:41:05.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.238" endtime="20201117 14:41:05.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.936" endtime="20201117 14:41:05.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.935" endtime="20201117 14:41:05.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.245" level="INFO">${RESULT} = [{'time': 0.022527028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.022554028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.242" endtime="20201117 14:41:05.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.260" level="INFO">${ACCURACY} = {'time': [0.022527028, 0.022554028, 0.022579111, 0.022601042, 0.022623042, 0.022646042, 0.022669056, 0.022696056, 0.022723069, 0.022744056, 0.022767083, 0.022791056, 0.022815111, 0.022838153, 0.022859...</msg>
<status status="PASS" starttime="20201117 14:41:05.246" endtime="20201117 14:41:05.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.264" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.263" endtime="20201117 14:41:05.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.267" level="INFO">VALUE: [1.5028000000000263e-05, 1.4750000000000874e-05, 1.4527999999999763e-05, 1.4749999999997404e-05, 1.5000000000001124e-05, 1.4514000000000193e-05, 1.4737000000000777e-05, 1.4680999999999028e-05, 1.451299999999725e-05, 1.4194999999998098e-05, 1.4861000000001429e-05, 1.4098000000000582e-05, 1.4874999999997529e-05, 1.4916999999999708e-05, 1.4902000000000665e-05, 1.4179999999999054e-05, 1.5000000000001124e-05, 1.4652000000000415e-05, 1.4152999999999388e-05, 1.4152999999999388e-05, 1.4778000000000013e-05, 1.5055999999999403e-05, 1.4875000000000999e-05, 1.480499999999968e-05, 1.458299999999857e-05, 1.4361000000000929e-05, 1.4708000000002164e-05, 1.4402999999999638e-05, 1.4750000000000874e-05, 1.4722000000001734e-05, 1.4514000000000193e-05, 1.4319000000002219e-05, 1.4236000000000804e-05, 1.4111000000000679e-05, 1.4805999999999153e-05, 1.433299999999832e-05, 1.4194000000002094e-05, 1.4250000000000373e-05, 1.4972000000001984e-05, 1.4291999999999083e-05, 1.4514000000000193e-05, 1.5097000000002109e-05, 1.4430999999998778e-05, 1.4903000000000138e-05, 1.4459000000001387e-05, 1.4193999999998624e-05, 1.4069999999997973e-05, 1.4875000000000999e-05, 1.4500000000000624e-05, 1.4820000000002193e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.265" endtime="20201117 14:41:05.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.261" endtime="20201117 14:41:05.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.270" endtime="20201117 14:41:05.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.273" endtime="20201117 14:41:05.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.272" endtime="20201117 14:41:05.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.268" endtime="20201117 14:41:05.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.904" endtime="20201117 14:41:05.294"></status>
</kw>
<msg timestamp="20201117 14:41:05.294" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.302" endtime="20201117 14:41:05.316"></status>
</kw>
<msg timestamp="20201117 14:41:05.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.301" endtime="20201117 14:41:05.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.318" endtime="20201117 14:41:05.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.320" endtime="20201117 14:41:05.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.298" endtime="20201117 14:41:05.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.296" endtime="20201117 14:41:05.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.330" endtime="20201117 14:41:05.615"></status>
</kw>
<msg timestamp="20201117 14:41:05.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.328" endtime="20201117 14:41:05.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.619" endtime="20201117 14:41:05.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.628" endtime="20201117 14:41:05.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.326" endtime="20201117 14:41:05.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.324" endtime="20201117 14:41:05.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.634" level="INFO">${RESULT} = [{'time': 0.019554986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.019580014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.631" endtime="20201117 14:41:05.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.648" level="INFO">${ACCURACY} = {'time': [0.019554986, 0.019580014, 0.019604986, 0.019631, 0.019657, 0.019680014, 0.019708028, 0.019732, 0.019755014, 0.019781, 0.019805014, 0.019829014, 0.019851014, 0.019879028, 0.019906028, 0.01993...</msg>
<status status="PASS" starttime="20201117 14:41:05.635" endtime="20201117 14:41:05.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.653" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.652" endtime="20201117 14:41:05.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.656" level="INFO">VALUE: [1.4416999999999208e-05, 1.4236000000000804e-05, 1.4138999999999818e-05, 1.4639000000000318e-05, 1.4861000000001429e-05, 1.4971999999998514e-05, 1.4764000000000443e-05, 1.4568999999999e-05, 1.5028000000000263e-05, 1.4472000000001484e-05, 1.458299999999857e-05, 1.409699999999764e-05, 1.4138999999999818e-05, 1.5000000000001124e-05, 1.4250000000000373e-05, 1.4999999999997654e-05, 1.4986000000001554e-05, 1.4889000000000568e-05, 1.4459000000001387e-05, 1.4402999999999638e-05, 1.4291999999999083e-05, 1.4250000000000373e-05, 1.504099999999689e-05, 1.4375000000000498e-05, 1.4958999999998418e-05, 1.4223000000000707e-05, 1.4875000000000999e-05, 1.4388000000000595e-05, 1.452700000000029e-05, 1.4778000000000013e-05, 1.4651999999996945e-05, 1.4375000000000498e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.504100000000036e-05, 1.4889000000000568e-05, 1.409699999999764e-05, 1.40689999999985e-05, 1.4611000000001179e-05, 1.4443999999998874e-05, 1.458299999999857e-05, 1.4235999999997334e-05, 1.4555000000002899e-05, 1.4305999999998653e-05, 1.481899999999925e-05, 1.4943999999999374e-05, 1.4736000000001304e-05, 1.409699999999764e-05, 1.4125000000000248e-05, 1.4153000000002858e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.654" endtime="20201117 14:41:05.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.649" endtime="20201117 14:41:05.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.659" endtime="20201117 14:41:05.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.662" endtime="20201117 14:41:05.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.661" endtime="20201117 14:41:05.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.657" endtime="20201117 14:41:05.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.295" endtime="20201117 14:41:05.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.902" endtime="20201117 14:41:05.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.901" endtime="20201117 14:41:05.684"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.686" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.694" endtime="20201117 14:41:05.708"></status>
</kw>
<msg timestamp="20201117 14:41:05.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.692" endtime="20201117 14:41:05.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.710" endtime="20201117 14:41:05.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.712" endtime="20201117 14:41:05.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.690" endtime="20201117 14:41:05.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.688" endtime="20201117 14:41:05.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.722" endtime="20201117 14:41:06.006"></status>
</kw>
<msg timestamp="20201117 14:41:06.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.720" endtime="20201117 14:41:06.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.011" endtime="20201117 14:41:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.019" endtime="20201117 14:41:06.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.718" endtime="20201117 14:41:06.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.716" endtime="20201117 14:41:06.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.025" level="INFO">${RESULT} = [{'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.021878333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:06.022" endtime="20201117 14:41:06.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.039" level="INFO">${ACCURACY} = {'time': [0.021857333, 0.021878333, 0.021902347, 0.021923347, 0.021947347, 0.021974375, 0.021997347, 0.022018347, 0.022039361, 0.022062361, 0.022087361, 0.022115361, 0.022139375, 0.022160361, 0.022185...</msg>
<status status="PASS" starttime="20201117 14:41:06.026" endtime="20201117 14:41:06.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.043" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.042" endtime="20201117 14:41:06.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.046" level="INFO">VALUE: [1.452700000000029e-05, 1.4375000000000498e-05, 1.431899999999875e-05, 1.4138999999999818e-05, 1.429099999999961e-05, 1.4250000000000373e-05, 1.455499999999943e-05, 1.4500000000000624e-05, 1.4194000000002094e-05, 1.4291999999999083e-05, 1.4929999999999805e-05, 1.483299999999882e-05, 1.4166999999998958e-05, 1.4457999999998444e-05, 1.4179999999999054e-05, 1.4499999999997154e-05, 1.4639000000000318e-05, 1.4306000000002123e-05, 1.4944999999998848e-05, 1.4639000000000318e-05, 1.4084000000001012e-05, 1.4570000000001943e-05, 1.4764000000000443e-05, 1.4916999999999708e-05, 1.4833999999998293e-05, 1.4958999999998418e-05, 1.4875000000000999e-05, 1.4986000000001554e-05, 1.4944999999998848e-05, 1.4875000000000999e-05, 1.4903000000000138e-05, 1.4402999999999638e-05, 1.4875000000000999e-05, 1.4263999999999943e-05, 1.426300000000047e-05, 1.4223000000000707e-05, 1.4750000000000874e-05, 1.4472000000001484e-05, 1.4098000000000582e-05, 1.4624999999997279e-05, 1.4319000000002219e-05, 1.4486000000001054e-05, 1.4457999999998444e-05, 1.4179999999999054e-05, 1.4986000000001554e-05, 1.4458000000001914e-05, 1.4250000000000373e-05, 1.4889000000000568e-05, 1.4472000000001484e-05, 1.434699999999789e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.044" endtime="20201117 14:41:06.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.040" endtime="20201117 14:41:06.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.049" endtime="20201117 14:41:06.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.052" endtime="20201117 14:41:06.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.051" endtime="20201117 14:41:06.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.047" endtime="20201117 14:41:06.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.687" endtime="20201117 14:41:06.073"></status>
</kw>
<msg timestamp="20201117 14:41:06.073" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.081" endtime="20201117 14:41:06.098"></status>
</kw>
<msg timestamp="20201117 14:41:06.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.080" endtime="20201117 14:41:06.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.099" endtime="20201117 14:41:06.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.102" endtime="20201117 14:41:06.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.077" endtime="20201117 14:41:06.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.075" endtime="20201117 14:41:06.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.112" endtime="20201117 14:41:06.396"></status>
</kw>
<msg timestamp="20201117 14:41:06.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.110" endtime="20201117 14:41:06.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.401" endtime="20201117 14:41:06.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.409" endtime="20201117 14:41:06.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.108" endtime="20201117 14:41:06.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.106" endtime="20201117 14:41:06.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.415" level="INFO">${RESULT} = [{'time': 0.020117694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.020143708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:06.412" endtime="20201117 14:41:06.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.429" level="INFO">${ACCURACY} = {'time': [0.020117694, 0.020143708, 0.020166708, 0.020191708, 0.020213708, 0.020241708, 0.020266722, 0.020292722, 0.020314736, 0.020336722, 0.020362736, 0.020384736, 0.02040575, 0.020432736, 0.0204547...</msg>
<status status="PASS" starttime="20201117 14:41:06.416" endtime="20201117 14:41:06.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.433" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.432" endtime="20201117 14:41:06.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.436" level="INFO">VALUE: [1.479100000000011e-05, 1.4486000000001054e-05, 1.429099999999961e-05, 1.486099999999796e-05, 1.430499999999918e-05, 1.4943999999999374e-05, 1.4194000000002094e-05, 1.4735999999997834e-05, 1.5000000000001124e-05, 1.4153000000002858e-05, 1.4402999999999638e-05, 1.4208000000001664e-05, 1.4986000000001554e-05, 1.4179999999999054e-05, 1.4514000000000193e-05, 1.4708000000002164e-05, 1.4764000000000443e-05, 1.4971999999998514e-05, 1.4874999999997529e-05, 1.4791999999999583e-05, 1.4666999999999458e-05, 1.4514000000000193e-05, 1.5014000000000693e-05, 1.4208999999997668e-05, 1.4236000000000804e-05, 1.4375000000000498e-05, 1.4125000000000248e-05, 1.4445000000001817e-05, 1.4848000000001332e-05, 1.4153000000002858e-05, 1.4472000000001484e-05, 1.4416999999999208e-05, 1.4999999999997654e-05, 1.4708999999998168e-05, 1.4555999999998903e-05, 1.4652999999999888e-05, 1.4694999999998598e-05, 1.4680999999999028e-05, 1.4250000000000373e-05, 1.4112000000000152e-05, 1.4445000000001817e-05, 1.4986000000001554e-05, 1.4903000000000138e-05, 1.429099999999961e-05, 1.4361000000000929e-05, 1.4833000000002289e-05, 1.4125000000000248e-05, 1.431899999999875e-05, 1.479100000000011e-05, 1.4707999999998694e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.434" endtime="20201117 14:41:06.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.430" endtime="20201117 14:41:06.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.439" endtime="20201117 14:41:06.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.442" endtime="20201117 14:41:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.441" endtime="20201117 14:41:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.437" endtime="20201117 14:41:06.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.074" endtime="20201117 14:41:06.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.685" endtime="20201117 14:41:06.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.684" endtime="20201117 14:41:06.463"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.466" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.474" endtime="20201117 14:41:06.491"></status>
</kw>
<msg timestamp="20201117 14:41:06.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.473" endtime="20201117 14:41:06.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.492" endtime="20201117 14:41:06.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.495" endtime="20201117 14:41:06.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.470" endtime="20201117 14:41:06.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.468" endtime="20201117 14:41:06.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.504" endtime="20201117 14:41:06.789"></status>
</kw>
<msg timestamp="20201117 14:41:06.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.502" endtime="20201117 14:41:06.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.793" endtime="20201117 14:41:06.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.801" endtime="20201117 14:41:06.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.500" endtime="20201117 14:41:06.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.498" endtime="20201117 14:41:06.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.808" level="INFO">${RESULT} = [{'time': 0.023044292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4889000000000568e-05, 'source_diff': 1.4889000000000568e-05}, {'time': 0.023066292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:06.804" endtime="20201117 14:41:06.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.822" level="INFO">${ACCURACY} = {'time': [0.023044292, 0.023066292, 0.023091333, 0.023114292, 0.023135292, 0.023157306, 0.023180306, 0.023204306, 0.023232306, 0.023254319, 0.023282389, 0.023307319, 0.023332347, 0.023356319, 0.023381...</msg>
<status status="PASS" starttime="20201117 14:41:06.809" endtime="20201117 14:41:06.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.827" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.826" endtime="20201117 14:41:06.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.829" level="INFO">VALUE: [1.4889000000000568e-05, 1.4222999999997238e-05, 1.4651999999996945e-05, 1.4263999999999943e-05, 1.4416999999999208e-05, 1.5028000000000263e-05, 1.4556000000002373e-05, 1.4320000000001692e-05, 1.4820000000002193e-05, 1.479100000000011e-05, 1.5041999999999833e-05, 1.4679999999999555e-05, 1.4889000000000568e-05, 1.4165999999999485e-05, 1.4665999999999985e-05, 1.4986000000001554e-05, 1.4333000000001789e-05, 1.4707999999998694e-05, 1.4929999999999805e-05, 1.4679999999999555e-05, 1.4277999999999513e-05, 1.409699999999764e-05, 1.4443999999998874e-05, 1.4805999999999153e-05, 1.4443999999998874e-05, 1.4679999999999555e-05, 1.4583000000002039e-05, 1.4485999999997584e-05, 1.4429999999999304e-05, 1.5028000000000263e-05, 1.4735999999997834e-05, 1.4097000000001109e-05, 1.4527999999999763e-05, 1.5000000000001124e-05, 1.4457999999998444e-05, 1.4138999999999818e-05, 1.4735999999997834e-05, 1.4556000000002373e-05, 1.4514000000000193e-05, 1.4916999999999708e-05, 1.4208000000001664e-05, 1.4459000000001387e-05, 1.5014000000000693e-05, 1.4444999999998348e-05, 1.4486000000001054e-05, 1.4709000000001637e-05, 1.4445000000001817e-05, 1.4959000000001887e-05, 1.4348000000000832e-05, 1.4514000000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.828" endtime="20201117 14:41:06.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.823" endtime="20201117 14:41:06.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.832" endtime="20201117 14:41:06.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.836" endtime="20201117 14:41:06.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.834" endtime="20201117 14:41:06.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.831" endtime="20201117 14:41:06.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.466" endtime="20201117 14:41:06.857"></status>
</kw>
<msg timestamp="20201117 14:41:06.857" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.865" endtime="20201117 14:41:06.879"></status>
</kw>
<msg timestamp="20201117 14:41:06.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.864" endtime="20201117 14:41:06.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.881" endtime="20201117 14:41:06.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.883" endtime="20201117 14:41:06.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.861" endtime="20201117 14:41:06.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.859" endtime="20201117 14:41:06.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.893" endtime="20201117 14:41:07.179"></status>
</kw>
<msg timestamp="20201117 14:41:07.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01923925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019254278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:06.892" endtime="20201117 14:41:07.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01923925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019254278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:07.183" endtime="20201117 14:41:07.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.191" endtime="20201117 14:41:07.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.889" endtime="20201117 14:41:07.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.888" endtime="20201117 14:41:07.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.198" level="INFO">${RESULT} = [{'time': 0.019254278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.019275264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:07.194" endtime="20201117 14:41:07.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.211" level="INFO">${ACCURACY} = {'time': [0.019254278, 0.019275264, 0.019299264, 0.019326264, 0.019352292, 0.019376278, 0.019401278, 0.019425278, 0.019450278, 0.019477306, 0.019499292, 0.019523306, 0.019544319, 0.019566306, 0.019590...</msg>
<status status="PASS" starttime="20201117 14:41:07.198" endtime="20201117 14:41:07.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.215" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.214" endtime="20201117 14:41:07.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.218" level="INFO">VALUE: [1.5028000000000263e-05, 1.4707999999998694e-05, 1.433299999999832e-05, 1.5014000000000693e-05, 1.4416999999999208e-05, 1.5028000000000263e-05, 1.4167000000002428e-05, 1.4306000000002123e-05, 1.4403000000003108e-05, 1.4084000000001012e-05, 1.4306000000002123e-05, 1.4125000000000248e-05, 1.429099999999961e-05, 1.4319999999998223e-05, 1.4666999999999458e-05, 1.4179999999999054e-05, 1.4112000000000152e-05, 1.4277999999999513e-05, 1.4861000000001429e-05, 1.4583999999998043e-05, 1.433299999999832e-05, 1.486099999999796e-05, 1.4236000000000804e-05, 1.481899999999925e-05, 1.4194000000002094e-05, 1.4069000000001969e-05, 1.431899999999875e-05, 1.4416000000003204e-05, 1.4429999999999304e-05, 1.4083000000001539e-05, 1.4972000000001984e-05, 1.4486000000001054e-05, 1.4277999999999513e-05, 1.5041999999999833e-05, 1.4443999999998874e-05, 1.408299999999807e-05, 1.4542000000002803e-05, 1.4083000000001539e-05, 1.4889000000000568e-05, 1.409699999999764e-05, 1.4500000000000624e-05, 1.459699999999814e-05, 1.5014000000000693e-05, 1.4736000000001304e-05, 1.4180999999998528e-05, 1.4222000000001234e-05, 1.4680999999999028e-05, 1.4138999999999818e-05, 1.4778000000000013e-05, 1.4971999999998514e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.216" endtime="20201117 14:41:07.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.212" endtime="20201117 14:41:07.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.221" endtime="20201117 14:41:07.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.225" endtime="20201117 14:41:07.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.223" endtime="20201117 14:41:07.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.220" endtime="20201117 14:41:07.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.858" endtime="20201117 14:41:07.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.465" endtime="20201117 14:41:07.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.464" endtime="20201117 14:41:07.246"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.248" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.256" endtime="20201117 14:41:07.272"></status>
</kw>
<msg timestamp="20201117 14:41:07.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.255" endtime="20201117 14:41:07.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.274" endtime="20201117 14:41:07.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.276" endtime="20201117 14:41:07.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.252" endtime="20201117 14:41:07.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.250" endtime="20201117 14:41:07.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.285" endtime="20201117 14:41:07.571"></status>
</kw>
<msg timestamp="20201117 14:41:07.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.284" endtime="20201117 14:41:07.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.575" endtime="20201117 14:41:07.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.583" endtime="20201117 14:41:07.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.281" endtime="20201117 14:41:07.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.279" endtime="20201117 14:41:07.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.590" level="INFO">${RESULT} = [{'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.022209431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:07.586" endtime="20201117 14:41:07.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.603" level="INFO">${ACCURACY} = {'time': [0.022185431, 0.022209431, 0.022237431, 0.022261458, 0.022285486, 0.022311444, 0.022333444, 0.0223585, 0.022381514, 0.022402458, 0.022425472, 0.022452514, 0.022477458, 0.022500472, 0.02252347...</msg>
<status status="PASS" starttime="20201117 14:41:07.591" endtime="20201117 14:41:07.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.608" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.607" endtime="20201117 14:41:07.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.610" level="INFO">VALUE: [1.4597999999997613e-05, 1.4875000000000999e-05, 1.4958999999998418e-05, 1.4569000000002469e-05, 1.4861000000001429e-05, 1.4457999999998444e-05, 1.4916000000000235e-05, 1.4193999999998624e-05, 1.4653000000003358e-05, 1.4457999999998444e-05, 1.409699999999764e-05, 1.4971999999998514e-05, 1.4429999999999304e-05, 1.4097000000001109e-05, 1.431899999999875e-05, 1.4250000000000373e-05, 1.429099999999961e-05, 1.4875000000000999e-05, 1.4903000000000138e-05, 1.4055999999998403e-05, 1.4236000000000804e-05, 1.4764000000000443e-05, 1.4138999999999818e-05, 1.4735999999997834e-05, 1.4486000000001054e-05, 1.4235999999997334e-05, 1.4944999999998848e-05, 1.434699999999789e-05, 1.4375000000000498e-05, 1.4541999999999333e-05, 1.4666999999999458e-05, 1.4763999999996974e-05, 1.4681000000002498e-05, 1.4985999999998084e-05, 1.4972000000001984e-05, 1.4236000000000804e-05, 1.4750000000000874e-05, 1.4166999999998958e-05, 1.4903000000000138e-05, 1.4361000000000929e-05, 1.5041999999999833e-05, 1.4889000000000568e-05, 1.4320000000001692e-05, 1.4833000000002289e-05, 1.4291999999999083e-05, 1.4834000000001762e-05, 1.4195000000001567e-05, 1.4152999999999388e-05, 1.4929999999999805e-05, 1.5083000000002539e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.609" endtime="20201117 14:41:07.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.604" endtime="20201117 14:41:07.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.614" endtime="20201117 14:41:07.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.617" endtime="20201117 14:41:07.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.616" endtime="20201117 14:41:07.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.612" endtime="20201117 14:41:07.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.249" endtime="20201117 14:41:07.638"></status>
</kw>
<msg timestamp="20201117 14:41:07.638" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.646" endtime="20201117 14:41:07.662"></status>
</kw>
<msg timestamp="20201117 14:41:07.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.645" endtime="20201117 14:41:07.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.663" endtime="20201117 14:41:07.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.666" endtime="20201117 14:41:07.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.642" endtime="20201117 14:41:07.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.640" endtime="20201117 14:41:07.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.677" endtime="20201117 14:41:07.962"></status>
</kw>
<msg timestamp="20201117 14:41:07.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.675" endtime="20201117 14:41:07.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.966" endtime="20201117 14:41:07.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.975" endtime="20201117 14:41:07.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.672" endtime="20201117 14:41:07.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.670" endtime="20201117 14:41:07.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.981" level="INFO">${RESULT} = [{'time': 0.019271958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.481899999999925e-05, 'source_diff': 1.481899999999925e-05}, {'time': 0.019294972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:07.978" endtime="20201117 14:41:07.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.995" level="INFO">${ACCURACY} = {'time': [0.019271958, 0.019294972, 0.019319014, 0.019345972, 0.019369972, 0.019396986, 0.019421042, 0.019445, 0.019466986, 0.019490986, 0.019516, 0.019538, 0.019562014, 0.019586056, 0.019608, 0.01963...</msg>
<status status="PASS" starttime="20201117 14:41:07.982" endtime="20201117 14:41:07.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.999" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.998" endtime="20201117 14:41:08.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.002" level="INFO">VALUE: [1.481899999999925e-05, 1.4514000000000193e-05, 1.4180999999998528e-05, 1.4957999999998944e-05, 1.484699999999839e-05, 1.4305000000002649e-05, 1.4598000000001082e-05, 1.4402999999999638e-05, 1.4916999999999708e-05, 1.480499999999968e-05, 1.4430999999998778e-05, 1.4541999999999333e-05, 1.458299999999857e-05, 1.4389000000000068e-05, 1.4472000000001484e-05, 1.4652999999999888e-05, 1.4764000000000443e-05, 1.4611000000001179e-05, 1.5028000000000263e-05, 1.4403000000003108e-05, 1.4971999999998514e-05, 1.4598000000001082e-05, 1.4791999999999583e-05, 1.4639000000000318e-05, 1.4291999999999083e-05, 1.4597000000001609e-05, 1.4555999999998903e-05, 1.4903000000000138e-05, 1.4375000000000498e-05, 1.4916999999999708e-05, 1.4098000000000582e-05, 1.4723000000001207e-05, 1.4415999999999735e-05, 1.504100000000036e-05, 1.4695000000002068e-05, 1.4570000000001943e-05, 1.4902000000000665e-05, 1.4138999999999818e-05, 1.4722000000001734e-05, 1.4319000000002219e-05, 1.4930999999999278e-05, 1.4193999999998624e-05, 1.408299999999807e-05, 1.4847000000001859e-05, 1.4111000000000679e-05, 1.402699999999979e-05, 1.483299999999882e-05, 1.4985999999998084e-05, 1.4193999999998624e-05, 1.4429999999999304e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.001" endtime="20201117 14:41:08.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.996" endtime="20201117 14:41:08.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.005" endtime="20201117 14:41:08.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.009" endtime="20201117 14:41:08.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.007" endtime="20201117 14:41:08.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.003" endtime="20201117 14:41:08.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.639" endtime="20201117 14:41:08.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.247" endtime="20201117 14:41:08.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.246" endtime="20201117 14:41:08.030"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.032" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.040" endtime="20201117 14:41:08.056"></status>
</kw>
<msg timestamp="20201117 14:41:08.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.039" endtime="20201117 14:41:08.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.058" endtime="20201117 14:41:08.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.060" endtime="20201117 14:41:08.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.036" endtime="20201117 14:41:08.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.034" endtime="20201117 14:41:08.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.069" endtime="20201117 14:41:08.353"></status>
</kw>
<msg timestamp="20201117 14:41:08.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.067" endtime="20201117 14:41:08.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.358" endtime="20201117 14:41:08.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.366" endtime="20201117 14:41:08.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.065" endtime="20201117 14:41:08.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.063" endtime="20201117 14:41:08.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.373" level="INFO">${RESULT} = [{'time': 0.022617833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.022645819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.370" endtime="20201117 14:41:08.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.387" level="INFO">${ACCURACY} = {'time': [0.022617833, 0.022645819, 0.022671875, 0.022699833, 0.022723847, 0.022747847, 0.022775861, 0.022799833, 0.022821833, 0.022842861, 0.022866861, 0.022890847, 0.022912917, 0.022937847, 0.022964...</msg>
<status status="PASS" starttime="20201117 14:41:08.374" endtime="20201117 14:41:08.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.392" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.391" endtime="20201117 14:41:08.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.394" level="INFO">VALUE: [1.480499999999968e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.477700000000054e-05, 1.409699999999764e-05, 1.4625000000000749e-05, 1.4833000000002289e-05, 1.404099999999936e-05, 1.4457999999998444e-05, 1.4985999999998084e-05, 1.4639000000000318e-05, 1.4402999999999638e-05, 1.5014000000000693e-05, 1.4347000000001359e-05, 1.5028000000000263e-05, 1.4528000000003233e-05, 1.4375000000000498e-05, 1.4236000000000804e-05, 1.4541999999999333e-05, 1.4805999999999153e-05, 1.4763999999996974e-05, 1.483299999999882e-05, 1.4944000000002844e-05, 1.4819000000002719e-05, 1.4903000000000138e-05, 1.4778000000000013e-05, 1.4403000000003108e-05, 1.4985999999998084e-05, 1.4792000000003053e-05, 1.4348000000000832e-05, 1.4597000000001609e-05, 1.4944999999998848e-05, 1.4151999999999915e-05, 1.4514000000000193e-05, 1.4319999999998223e-05, 1.4223000000000707e-05, 1.4973000000001457e-05, 1.4735999999997834e-05, 1.4930999999999278e-05, 1.430499999999918e-05, 1.4555999999998903e-05, 1.4138999999999818e-05, 1.477700000000054e-05, 1.4930999999999278e-05, 1.4151999999999915e-05, 1.4236000000000804e-05, 1.4541999999999333e-05, 1.4943999999999374e-05, 1.451300000000072e-05, 1.430499999999918e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.393" endtime="20201117 14:41:08.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.388" endtime="20201117 14:41:08.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.398" endtime="20201117 14:41:08.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.401" endtime="20201117 14:41:08.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.399" endtime="20201117 14:41:08.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.396" endtime="20201117 14:41:08.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.033" endtime="20201117 14:41:08.422"></status>
</kw>
<msg timestamp="20201117 14:41:08.422" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.430" endtime="20201117 14:41:08.445"></status>
</kw>
<msg timestamp="20201117 14:41:08.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.429" endtime="20201117 14:41:08.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.447" endtime="20201117 14:41:08.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.449" endtime="20201117 14:41:08.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.426" endtime="20201117 14:41:08.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.424" endtime="20201117 14:41:08.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.459" endtime="20201117 14:41:08.744"></status>
</kw>
<msg timestamp="20201117 14:41:08.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019306667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.458" endtime="20201117 14:41:08.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019306667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.748" endtime="20201117 14:41:08.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.757" endtime="20201117 14:41:08.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.455" endtime="20201117 14:41:08.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.453" endtime="20201117 14:41:08.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.764" level="INFO">${RESULT} = [{'time': 0.019306667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4598000000001082e-05, 'source_diff': 1.4598000000001082e-05}, {'time': 0.019331694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:08.761" endtime="20201117 14:41:08.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.777" level="INFO">${ACCURACY} = {'time': [0.019306667, 0.019331694, 0.019358667, 0.019384667, 0.019408681, 0.019430681, 0.019457681, 0.019485681, 0.019507681, 0.019528694, 0.019550694, 0.019577708, 0.019599694, 0.019625708, 0.019648...</msg>
<status status="PASS" starttime="20201117 14:41:08.765" endtime="20201117 14:41:08.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.782" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.781" endtime="20201117 14:41:08.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.784" level="INFO">VALUE: [1.4598000000001082e-05, 1.4443999999998874e-05, 1.4541999999999333e-05, 1.4973000000001457e-05, 1.4570000000001943e-05, 1.4306000000002123e-05, 1.4277999999999513e-05, 1.4945000000002318e-05, 1.4708999999998168e-05, 1.4985999999998084e-05, 1.4916000000000235e-05, 1.4250000000000373e-05, 1.401300000000022e-05, 1.4179999999999054e-05, 1.4055000000002399e-05, 1.4485999999997584e-05, 1.4957999999998944e-05, 1.4110999999997209e-05, 1.4250000000000373e-05, 1.4639000000000318e-05, 1.481899999999925e-05, 1.483299999999882e-05, 1.4207999999998194e-05, 1.4429999999999304e-05, 1.4069000000001969e-05, 1.4458000000001914e-05, 1.4583000000002039e-05, 1.4749999999997404e-05, 1.4541999999999333e-05, 1.4805999999999153e-05, 1.4305999999998653e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4375000000000498e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4930999999999278e-05, 1.4721999999998264e-05, 1.4666999999999458e-05, 1.4375000000000498e-05, 1.4250000000000373e-05, 1.4194000000002094e-05, 1.4805999999999153e-05, 1.4723000000001207e-05, 1.4527999999999763e-05, 1.4791999999999583e-05, 1.4319999999998223e-05, 1.4402999999999638e-05, 1.4360999999997459e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.783" endtime="20201117 14:41:08.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.778" endtime="20201117 14:41:08.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.787" endtime="20201117 14:41:08.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.791" endtime="20201117 14:41:08.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.789" endtime="20201117 14:41:08.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.786" endtime="20201117 14:41:08.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.423" endtime="20201117 14:41:08.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.031" endtime="20201117 14:41:08.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.030" endtime="20201117 14:41:08.812"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.814" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.823" endtime="20201117 14:41:08.837"></status>
</kw>
<msg timestamp="20201117 14:41:08.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.821" endtime="20201117 14:41:08.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.839" endtime="20201117 14:41:08.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.841" endtime="20201117 14:41:08.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.818" endtime="20201117 14:41:08.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.816" endtime="20201117 14:41:08.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.851" endtime="20201117 14:41:09.135"></status>
</kw>
<msg timestamp="20201117 14:41:09.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.849" endtime="20201117 14:41:09.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.140" endtime="20201117 14:41:09.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.148" endtime="20201117 14:41:09.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.847" endtime="20201117 14:41:09.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.844" endtime="20201117 14:41:09.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.154" level="INFO">${RESULT} = [{'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5929999999997335e-05, 'source_diff': 1.5929999999997335e-05}, {'time': 0.021920222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:09.151" endtime="20201117 14:41:09.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.168" level="INFO">${ACCURACY} = {'time': [0.021898222, 0.021920222, 0.021942236, 0.021966222, 0.021988236, 0.022013236, 0.02203525, 0.022063264, 0.022090236, 0.02211925, 0.02214525, 0.02216925, 0.02219725, 0.022220264, 0.022243278, ...</msg>
<status status="PASS" starttime="20201117 14:41:09.155" endtime="20201117 14:41:09.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.172" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.171" endtime="20201117 14:41:09.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.175" level="INFO">VALUE: [1.5929999999997335e-05, 1.5721999999999264e-05, 1.5166999999999958e-05, 1.5222000000002234e-05, 1.5222000000002234e-05, 1.511099999999821e-05, 1.5735999999998834e-05, 1.5471999999999014e-05, 1.5930000000000805e-05, 1.6014000000001694e-05, 1.5693999999996655e-05, 1.5528000000000763e-05, 1.5986000000002554e-05, 1.5069999999998973e-05, 1.509699999999864e-05, 1.5153000000000388e-05, 1.587499999999853e-05, 1.5111000000001679e-05, 1.5681000000000028e-05, 1.58889999999981e-05, 1.5444999999999348e-05, 1.5139000000000818e-05, 1.562500000000175e-05, 1.5333999999998793e-05, 1.541700000000021e-05, 1.5972000000002984e-05, 1.5235999999998334e-05, 1.566700000000046e-05, 1.5458999999998918e-05, 1.5250000000001374e-05, 1.6000000000002124e-05, 1.5708999999999168e-05, 1.554100000000086e-05, 1.562500000000175e-05, 1.5221999999998764e-05, 1.5138000000001345e-05, 1.5735999999998834e-05, 1.5249999999997904e-05, 1.5125000000001249e-05, 1.5694000000000125e-05, 1.6027999999997794e-05, 1.5721999999999264e-05, 1.5166000000000485e-05, 1.5750000000001874e-05, 1.541700000000021e-05, 1.5180000000000055e-05, 1.53750000000015e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.5305999999999653e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.174" endtime="20201117 14:41:09.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.169" endtime="20201117 14:41:09.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.178" endtime="20201117 14:41:09.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.181" endtime="20201117 14:41:09.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.180" endtime="20201117 14:41:09.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.176" endtime="20201117 14:41:09.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.815" endtime="20201117 14:41:09.202"></status>
</kw>
<msg timestamp="20201117 14:41:09.202" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.211" endtime="20201117 14:41:09.227"></status>
</kw>
<msg timestamp="20201117 14:41:09.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.209" endtime="20201117 14:41:09.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.228" endtime="20201117 14:41:09.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.236" endtime="20201117 14:41:09.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.207" endtime="20201117 14:41:09.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.205" endtime="20201117 14:41:09.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.246" endtime="20201117 14:41:09.530"></status>
</kw>
<msg timestamp="20201117 14:41:09.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02000975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:09.244" endtime="20201117 14:41:09.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02000975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:09.534" endtime="20201117 14:41:09.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.542" endtime="20201117 14:41:09.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.242" endtime="20201117 14:41:09.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.240" endtime="20201117 14:41:09.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.549" level="INFO">${RESULT} = [{'time': 0.02000975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5235999999998334e-05, 'source_diff': 1.5235999999998334e-05}, {'time': 0.020036764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:41:09.546" endtime="20201117 14:41:09.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.562" level="INFO">${ACCURACY} = {'time': [0.02000975, 0.020036764, 0.020058764, 0.020079778, 0.020106764, 0.020132764, 0.020159792, 0.020186778, 0.020208792, 0.020229778, 0.020258792, 0.020283833, 0.020309792, 0.020335792, 0.0203598...</msg>
<status status="PASS" starttime="20201117 14:41:09.550" endtime="20201117 14:41:09.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.567" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.566" endtime="20201117 14:41:09.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.569" level="INFO">VALUE: [1.5235999999998334e-05, 1.5457999999999444e-05, 1.5457999999999444e-05, 1.5153000000000388e-05, 1.566700000000046e-05, 1.5097000000002109e-05, 1.5485999999998584e-05, 1.5735999999998834e-05, 1.5958999999999418e-05, 1.509699999999864e-05, 1.5806000000000153e-05, 1.5875000000002e-05, 1.562500000000175e-05, 1.561099999999871e-05, 1.5612000000001652e-05, 1.5944000000000375e-05, 1.554099999999739e-05, 1.5569e-05, 1.537499999999803e-05, 1.5681000000000028e-05, 1.530500000000018e-05, 1.5250000000001374e-05, 1.5236000000001804e-05, 1.5916000000001235e-05, 1.5471999999999014e-05, 1.5666000000000985e-05, 1.561099999999871e-05, 1.5250000000001374e-05, 1.5207999999999194e-05, 1.5457999999999444e-05, 1.584699999999939e-05, 1.6013999999998224e-05, 1.5472000000002484e-05, 1.531899999999975e-05, 1.538900000000107e-05, 1.5721999999999264e-05, 1.5528000000000763e-05, 1.5527999999997294e-05, 1.5292000000000083e-05, 1.5875000000002e-05, 1.5750000000001874e-05, 1.508299999999907e-05, 1.588900000000157e-05, 1.50689999999995e-05, 1.58889999999981e-05, 1.541700000000021e-05, 1.511099999999821e-05, 1.5221999999998764e-05, 1.5499999999998154e-05, 1.5236000000001804e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.568" endtime="20201117 14:41:09.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.563" endtime="20201117 14:41:09.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.572" endtime="20201117 14:41:09.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.576" endtime="20201117 14:41:09.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.574" endtime="20201117 14:41:09.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.571" endtime="20201117 14:41:09.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.203" endtime="20201117 14:41:09.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.813" endtime="20201117 14:41:09.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.812" endtime="20201117 14:41:09.597"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.599" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.608" endtime="20201117 14:41:09.624"></status>
</kw>
<msg timestamp="20201117 14:41:09.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.606" endtime="20201117 14:41:09.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.625" endtime="20201117 14:41:09.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.628" endtime="20201117 14:41:09.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.604" endtime="20201117 14:41:09.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.601" endtime="20201117 14:41:09.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.637" endtime="20201117 14:41:09.924"></status>
</kw>
<msg timestamp="20201117 14:41:09.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.635" endtime="20201117 14:41:09.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.928" endtime="20201117 14:41:09.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.936" endtime="20201117 14:41:09.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.633" endtime="20201117 14:41:09.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.631" endtime="20201117 14:41:09.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.943" level="INFO">${RESULT} = [{'time': 0.023118361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6208000000000194e-05, 'source_diff': 1.6208000000000194e-05}, {'time': 0.023148431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:09.939" endtime="20201117 14:41:09.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.957" level="INFO">${ACCURACY} = {'time': [0.023118361, 0.023148431, 0.023177375, 0.023202375, 0.023225417, 0.023249375, 0.023277389, 0.023306389, 0.023334389, 0.023357403, 0.023383389, 0.023407417, 0.023432417, 0.023459417, 0.023485...</msg>
<status status="PASS" starttime="20201117 14:41:09.944" endtime="20201117 14:41:09.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.962" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.961" endtime="20201117 14:41:09.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.964" level="INFO">VALUE: [1.6208000000000194e-05, 1.7056000000001403e-05, 1.608300000000007e-05, 1.6056000000000403e-05, 1.6709000000000168e-05, 1.6986000000000084e-05, 1.6735999999999834e-05, 1.668100000000103e-05, 1.668100000000103e-05, 1.691699999999824e-05, 1.633300000000032e-05, 1.6945000000000848e-05, 1.6556000000000903e-05, 1.63889999999986e-05, 1.662500000000275e-05, 1.616700000000096e-05, 1.6221999999999764e-05, 1.6778000000002014e-05, 1.665299999999842e-05, 1.687499999999953e-05, 1.616699999999749e-05, 1.704100000000236e-05, 1.612499999999878e-05, 1.690300000000214e-05, 1.701299999999975e-05, 1.681899999999778e-05, 1.6986000000000084e-05, 1.6194000000000625e-05, 1.6735999999999834e-05, 1.6915999999998765e-05, 1.6514000000002194e-05, 1.6458000000000444e-05, 1.605500000000093e-05, 1.687499999999953e-05, 1.6764000000002444e-05, 1.6221999999999764e-05, 1.683300000000082e-05, 1.609699999999964e-05, 1.6263999999998474e-05, 1.6263999999998474e-05, 1.612499999999878e-05, 1.6430000000001305e-05, 1.6999999999999654e-05, 1.661099999999971e-05, 1.6264000000001944e-05, 1.6735999999999834e-05, 1.6069999999999973e-05, 1.6458999999999918e-05, 1.6181000000000528e-05, 1.6736000000003304e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.963" endtime="20201117 14:41:09.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.958" endtime="20201117 14:41:09.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.967" endtime="20201117 14:41:09.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.971" endtime="20201117 14:41:09.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.969" endtime="20201117 14:41:09.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.966" endtime="20201117 14:41:09.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.600" endtime="20201117 14:41:09.992"></status>
</kw>
<msg timestamp="20201117 14:41:09.992" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.000" endtime="20201117 14:41:10.017"></status>
</kw>
<msg timestamp="20201117 14:41:10.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.999" endtime="20201117 14:41:10.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.018" endtime="20201117 14:41:10.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.021" endtime="20201117 14:41:10.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.996" endtime="20201117 14:41:10.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.994" endtime="20201117 14:41:10.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.031" endtime="20201117 14:41:10.315"></status>
</kw>
<msg timestamp="20201117 14:41:10.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.029" endtime="20201117 14:41:10.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.319" endtime="20201117 14:41:10.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.328" endtime="20201117 14:41:10.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.027" endtime="20201117 14:41:10.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.025" endtime="20201117 14:41:10.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.334" level="INFO">${RESULT} = [{'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.020100111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:10.331" endtime="20201117 14:41:10.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.348" level="INFO">${ACCURACY} = {'time': [0.020078125, 0.020100111, 0.020122111, 0.020149111, 0.020175125, 0.020202125, 0.020225125, 0.020254139, 0.020280139, 0.020309139, 0.020337181, 0.020363153, 0.020390153, 0.020413153, 0.020442...</msg>
<status status="PASS" starttime="20201117 14:41:10.335" endtime="20201117 14:41:10.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.352" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.351" endtime="20201117 14:41:10.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.355" level="INFO">VALUE: [1.684700000000039e-05, 1.612499999999878e-05, 1.612500000000225e-05, 1.63750000000025e-05, 1.683299999999735e-05, 1.6221999999999764e-05, 1.6249999999998904e-05, 1.6958000000000945e-05, 1.661099999999971e-05, 1.6999999999999654e-05, 1.6541999999997864e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.6445000000000348e-05, 1.6083999999999543e-05, 1.663899999999885e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.6499999999999154e-05, 1.6472999999999488e-05, 1.643100000000078e-05, 1.619499999999663e-05, 1.615300000000139e-05, 1.693100000000128e-05, 1.6444000000000875e-05, 1.6707999999997225e-05, 1.7000000000003124e-05, 1.6249999999998904e-05, 1.6666000000001985e-05, 1.6180000000001055e-05, 1.6764000000002444e-05, 1.7042000000001833e-05, 1.631899999999728e-05, 1.7027999999998794e-05, 1.6500000000002624e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.615300000000139e-05, 1.6235999999999334e-05, 1.6458000000000444e-05, 1.665299999999842e-05, 1.7084000000000543e-05, 1.691699999999824e-05, 1.661099999999971e-05, 1.680500000000168e-05, 1.638900000000207e-05, 1.6999999999999654e-05, 1.6555999999997434e-05, 1.6999999999999654e-05, 1.6694000000001125e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.353" endtime="20201117 14:41:10.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.349" endtime="20201117 14:41:10.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.358" endtime="20201117 14:41:10.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.362" endtime="20201117 14:41:10.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.360" endtime="20201117 14:41:10.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.357" endtime="20201117 14:41:10.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.993" endtime="20201117 14:41:10.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.598" endtime="20201117 14:41:10.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.597" endtime="20201117 14:41:10.383"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.385" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.393" endtime="20201117 14:41:10.410"></status>
</kw>
<msg timestamp="20201117 14:41:10.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.392" endtime="20201117 14:41:10.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.412" endtime="20201117 14:41:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.414" endtime="20201117 14:41:10.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.389" endtime="20201117 14:41:10.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.387" endtime="20201117 14:41:10.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.423" endtime="20201117 14:41:10.708"></status>
</kw>
<msg timestamp="20201117 14:41:10.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.422" endtime="20201117 14:41:10.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.712" endtime="20201117 14:41:10.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.721" endtime="20201117 14:41:10.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.419" endtime="20201117 14:41:10.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.418" endtime="20201117 14:41:10.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.728" level="INFO">${RESULT} = [{'time': 0.022747889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000000154e-05, 'source_diff': 1.7500000000000154e-05}, {'time': 0.022773903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.724" endtime="20201117 14:41:10.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.742" level="INFO">${ACCURACY} = {'time': [0.022747889, 0.022773903, 0.022804917, 0.022833917, 0.022864903, 0.022894917, 0.022920931, 0.022943917, 0.022973931, 0.023003944, 0.023031931, 0.023062944, 0.023090931, 0.023117958, 0.023142...</msg>
<status status="PASS" starttime="20201117 14:41:10.729" endtime="20201117 14:41:10.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.746" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.745" endtime="20201117 14:41:10.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.749" level="INFO">VALUE: [1.7500000000000154e-05, 1.759700000000114e-05, 1.8056000000002403e-05, 1.7485999999997115e-05, 1.7777999999999544e-05, 1.7236000000000334e-05, 1.773699999999684e-05, 1.7098000000000113e-05, 1.793099999999881e-05, 1.7943999999998905e-05, 1.718099999999806e-05, 1.7749999999996935e-05, 1.718099999999806e-05, 1.780500000000268e-05, 1.7721999999997795e-05, 1.7166000000002485e-05, 1.70690000000015e-05, 1.7513999999999724e-05, 1.787500000000053e-05, 1.7194000000001625e-05, 1.7929999999999335e-05, 1.7500000000000154e-05, 1.740300000000264e-05, 1.709700000000064e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.708300000000107e-05, 1.8041999999999364e-05, 1.7500000000000154e-05, 1.786099999999749e-05, 1.7443999999998405e-05, 1.8027999999999794e-05, 1.7792000000002584e-05, 1.743099999999831e-05, 1.7707999999998225e-05, 1.794499999999838e-05, 1.718100000000153e-05, 1.791699999999924e-05, 1.711100000000021e-05, 1.7834000000001293e-05, 1.7013999999999224e-05, 1.713900000000282e-05, 1.766700000000246e-05, 1.716700000000196e-05, 1.7069999999997504e-05, 1.7348000000000363e-05, 1.7473000000000488e-05, 1.797299999999752e-05, 1.762500000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.747" endtime="20201117 14:41:10.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.743" endtime="20201117 14:41:10.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.752" endtime="20201117 14:41:10.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.756" endtime="20201117 14:41:10.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.754" endtime="20201117 14:41:10.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.751" endtime="20201117 14:41:10.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.386" endtime="20201117 14:41:10.777"></status>
</kw>
<msg timestamp="20201117 14:41:10.777" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.785" endtime="20201117 14:41:10.801"></status>
</kw>
<msg timestamp="20201117 14:41:10.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.784" endtime="20201117 14:41:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.802" endtime="20201117 14:41:10.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.805" endtime="20201117 14:41:10.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.781" endtime="20201117 14:41:10.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.779" endtime="20201117 14:41:10.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.815" endtime="20201117 14:41:11.101"></status>
</kw>
<msg timestamp="20201117 14:41:11.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.813" endtime="20201117 14:41:11.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.106" endtime="20201117 14:41:11.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.114" endtime="20201117 14:41:11.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.811" endtime="20201117 14:41:11.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.809" endtime="20201117 14:41:11.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.120" level="INFO">${RESULT} = [{'time': 0.019389764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7222000000000764e-05, 'source_diff': 1.7222000000000764e-05}, {'time': 0.019418736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.117" endtime="20201117 14:41:11.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.134" level="INFO">${ACCURACY} = {'time': [0.019389764, 0.019418736, 0.01944875, 0.01947575, 0.01950075, 0.01952775, 0.019555764, 0.019586764, 0.019613806, 0.019642764, 0.019670778, 0.019699833, 0.019729806, 0.019755778, 0.019778778,...</msg>
<status status="PASS" starttime="20201117 14:41:11.121" endtime="20201117 14:41:11.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.139" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.138" endtime="20201117 14:41:11.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.141" level="INFO">VALUE: [1.7222000000000764e-05, 1.7179999999998585e-05, 1.7722000000001265e-05, 1.731899999999828e-05, 1.7736000000000834e-05, 1.731899999999828e-05, 1.715299999999892e-05, 1.7957999999998475e-05, 1.7209000000000668e-05, 1.73889999999996e-05, 1.791699999999924e-05, 1.802700000000032e-05, 1.7737000000000308e-05, 1.7042000000001833e-05, 1.709700000000064e-05, 1.7277999999999044e-05, 1.7042000000001833e-05, 1.75829999999981e-05, 1.7207999999997725e-05, 1.7792000000002584e-05, 1.790299999999967e-05, 1.7249999999999904e-05, 1.762500000000028e-05, 1.801300000000075e-05, 1.7500000000000154e-05, 1.751300000000025e-05, 1.737500000000003e-05, 1.7180000000002055e-05, 1.713899999999935e-05, 1.786099999999749e-05, 1.75829999999981e-05, 1.783299999999835e-05, 1.7749999999996935e-05, 1.7236000000000334e-05, 1.804099999999989e-05, 1.737500000000003e-05, 1.729099999999914e-05, 1.7208000000001195e-05, 1.7736000000000834e-05, 1.7957999999998475e-05, 1.713899999999935e-05, 1.7791999999999114e-05, 1.7777999999999544e-05, 1.7277999999999044e-05, 1.7791999999999114e-05, 1.768100000000203e-05, 1.791699999999924e-05, 1.7084000000000543e-05, 1.7236000000000334e-05, 1.769499999999813e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.140" endtime="20201117 14:41:11.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.135" endtime="20201117 14:41:11.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.144" endtime="20201117 14:41:11.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.148" endtime="20201117 14:41:11.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.146" endtime="20201117 14:41:11.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.143" endtime="20201117 14:41:11.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.778" endtime="20201117 14:41:11.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.384" endtime="20201117 14:41:11.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.383" endtime="20201117 14:41:11.169"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.171" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.179" endtime="20201117 14:41:11.195"></status>
</kw>
<msg timestamp="20201117 14:41:11.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.178" endtime="20201117 14:41:11.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.196" endtime="20201117 14:41:11.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.199" endtime="20201117 14:41:11.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.175" endtime="20201117 14:41:11.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.173" endtime="20201117 14:41:11.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.208" endtime="20201117 14:41:11.491"></status>
</kw>
<msg timestamp="20201117 14:41:11.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.206" endtime="20201117 14:41:11.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.496" endtime="20201117 14:41:11.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.504" endtime="20201117 14:41:11.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.204" endtime="20201117 14:41:11.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.202" endtime="20201117 14:41:11.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.511" level="INFO">${RESULT} = [{'time': 0.022709778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8221999999998295e-05, 'source_diff': 1.8221999999998295e-05}, {'time': 0.022734764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.507" endtime="20201117 14:41:11.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.525" level="INFO">${ACCURACY} = {'time': [0.022709778, 0.022734764, 0.022766833, 0.022795778, 0.022820778, 0.022847792, 0.022878778, 0.022904792, 0.022929806, 0.022960806, 0.022992792, 0.023021806, 0.023050806, 0.023075806, 0.023099...</msg>
<status status="PASS" starttime="20201117 14:41:11.512" endtime="20201117 14:41:11.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.530" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.529" endtime="20201117 14:41:11.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.532" level="INFO">VALUE: [1.8221999999998295e-05, 1.893099999999981e-05, 1.8902000000001196e-05, 1.862499999999781e-05, 1.8500000000001154e-05, 1.8777999999997075e-05, 1.8749999999997935e-05, 1.8723000000001738e-05, 1.844499999999888e-05, 1.8305999999999184e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.8737000000001308e-05, 1.812500000000078e-05, 1.8416000000000265e-05, 1.8416000000000265e-05, 1.877700000000107e-05, 1.8943999999999905e-05, 1.8443999999999405e-05, 1.8485999999998115e-05, 1.895899999999895e-05, 1.887500000000153e-05, 1.8457999999998975e-05, 1.8250000000000904e-05, 1.8764000000000974e-05, 1.8693999999999655e-05, 1.8957999999999475e-05, 1.8235999999997865e-05, 1.836099999999799e-05, 1.845900000000192e-05, 1.836100000000146e-05, 1.8222000000001765e-05, 1.8334000000001793e-05, 1.806899999999903e-05, 1.893100000000328e-05, 1.836100000000146e-05, 1.869499999999913e-05, 1.836100000000146e-05, 1.816700000000296e-05, 1.843100000000278e-05, 1.809700000000164e-05, 1.82769999999971e-05, 1.9027999999997325e-05, 1.816699999999949e-05, 1.861099999999824e-05, 1.8597999999998144e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8055999999998934e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.531" endtime="20201117 14:41:11.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.526" endtime="20201117 14:41:11.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.535" endtime="20201117 14:41:11.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.539" endtime="20201117 14:41:11.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.537" endtime="20201117 14:41:11.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.534" endtime="20201117 14:41:11.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.172" endtime="20201117 14:41:11.559"></status>
</kw>
<msg timestamp="20201117 14:41:11.560" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.568" endtime="20201117 14:41:11.582"></status>
</kw>
<msg timestamp="20201117 14:41:11.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.566" endtime="20201117 14:41:11.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.584" endtime="20201117 14:41:11.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.586" endtime="20201117 14:41:11.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.564" endtime="20201117 14:41:11.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.562" endtime="20201117 14:41:11.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.596" endtime="20201117 14:41:11.883"></status>
</kw>
<msg timestamp="20201117 14:41:11.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.595" endtime="20201117 14:41:11.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.888" endtime="20201117 14:41:11.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.896" endtime="20201117 14:41:11.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.592" endtime="20201117 14:41:11.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.590" endtime="20201117 14:41:11.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.903" level="INFO">${RESULT} = [{'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.855499999999996e-05, 'source_diff': 1.855499999999996e-05}, {'time': 0.019342472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:11.900" endtime="20201117 14:41:11.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.916" level="INFO">${ACCURACY} = {'time': [0.019317486, 0.019342472, 0.019370486, 0.019400486, 0.019432486, 0.019461486, 0.019489486, 0.0195155, 0.019543542, 0.0195695, 0.0195955, 0.0196225, 0.019647514, 0.019677528, 0.019702528, 0.0...</msg>
<status status="PASS" starttime="20201117 14:41:11.904" endtime="20201117 14:41:11.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.921" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.920" endtime="20201117 14:41:11.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.923" level="INFO">VALUE: [1.855499999999996e-05, 1.865300000000042e-05, 1.8291999999999614e-05, 1.8694000000003125e-05, 1.883299999999935e-05, 1.886099999999849e-05, 1.816699999999949e-05, 1.868100000000303e-05, 1.866699999999999e-05, 1.8778000000000544e-05, 1.8235999999997865e-05, 1.9000000000001654e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.887500000000153e-05, 1.8250000000000904e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.893099999999981e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.8499999999997685e-05, 1.8528000000000294e-05, 1.866699999999999e-05, 1.844500000000235e-05, 1.8250000000000904e-05, 1.8112000000000683e-05, 1.877700000000107e-05, 1.80829999999986e-05, 1.8778000000000544e-05, 1.861100000000171e-05, 1.9000000000001654e-05, 1.8250000000000904e-05, 1.8166000000000015e-05, 1.8457999999998975e-05, 1.8208000000002195e-05, 1.8471999999998545e-05, 1.8901999999997726e-05, 1.859699999999867e-05, 1.8486000000001584e-05, 1.886099999999849e-05, 1.884699999999892e-05, 1.831899999999928e-05, 1.8485999999998115e-05, 1.866699999999999e-05, 1.8291999999999614e-05, 1.861099999999824e-05, 1.8541999999999864e-05, 1.890300000000067e-05, 1.8041999999999364e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.922" endtime="20201117 14:41:11.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.917" endtime="20201117 14:41:11.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.926" endtime="20201117 14:41:11.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.930" endtime="20201117 14:41:11.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.928" endtime="20201117 14:41:11.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.925" endtime="20201117 14:41:11.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.560" endtime="20201117 14:41:11.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.170" endtime="20201117 14:41:11.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.169" endtime="20201117 14:41:11.952"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.954" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.962" endtime="20201117 14:41:11.977"></status>
</kw>
<msg timestamp="20201117 14:41:11.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.961" endtime="20201117 14:41:11.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.978" endtime="20201117 14:41:11.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.981" endtime="20201117 14:41:11.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.958" endtime="20201117 14:41:11.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.956" endtime="20201117 14:41:11.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.990" endtime="20201117 14:41:12.276"></status>
</kw>
<msg timestamp="20201117 14:41:12.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.989" endtime="20201117 14:41:12.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.280" endtime="20201117 14:41:12.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.288" endtime="20201117 14:41:12.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.986" endtime="20201117 14:41:12.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.984" endtime="20201117 14:41:12.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.295" level="INFO">${RESULT} = [{'time': 0.022360458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9221999999999295e-05, 'source_diff': 1.9221999999999295e-05}, {'time': 0.022387458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:12.292" endtime="20201117 14:41:12.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.309" level="INFO">${ACCURACY} = {'time': [0.022360458, 0.022387458, 0.022415444, 0.022443458, 0.022471458, 0.022497472, 0.022526472, 0.022555458, 0.022584472, 0.022613472, 0.022643486, 0.022673514, 0.022699486, 0.022726486, 0.022756...</msg>
<status status="PASS" starttime="20201117 14:41:12.296" endtime="20201117 14:41:12.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.313" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.312" endtime="20201117 14:41:12.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.316" level="INFO">VALUE: [1.9221999999999295e-05, 1.904099999999742e-05, 1.934699999999942e-05, 1.934699999999942e-05, 1.95830000000001e-05, 1.9166000000001016e-05, 1.930499999999724e-05, 1.93890000000016e-05, 1.9416000000001266e-05, 1.988899999999863e-05, 1.956900000000053e-05, 1.918100000000006e-05, 1.9944000000000905e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.912500000000178e-05, 1.941699999999727e-05, 1.9806000000000684e-05, 1.9958000000000475e-05, 1.9999999999999185e-05, 1.9235999999998865e-05, 1.9820000000000254e-05, 1.9708000000000225e-05, 1.959699999999967e-05, 1.988899999999863e-05, 1.93890000000016e-05, 1.9820000000000254e-05, 1.972299999999927e-05, 1.9763999999998505e-05, 1.943100000000031e-05, 1.9235999999998865e-05, 1.9166000000001016e-05, 1.919499999999963e-05, 1.9387999999998656e-05, 1.952699999999835e-05, 1.943100000000031e-05, 2.0042000000001364e-05, 1.980500000000121e-05, 1.9721999999999795e-05, 1.9944000000000905e-05, 1.937499999999856e-05, 1.934700000000289e-05, 1.966700000000099e-05, 1.9999999999999185e-05, 1.9708000000000225e-05, 1.9916000000001766e-05, 1.9236000000002335e-05, 1.966700000000099e-05, 1.938899999999813e-05, 1.9513999999998255e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.314" endtime="20201117 14:41:12.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.310" endtime="20201117 14:41:12.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.319" endtime="20201117 14:41:12.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.322" endtime="20201117 14:41:12.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.321" endtime="20201117 14:41:12.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.317" endtime="20201117 14:41:12.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.955" endtime="20201117 14:41:12.343"></status>
</kw>
<msg timestamp="20201117 14:41:12.343" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.351" endtime="20201117 14:41:12.368"></status>
</kw>
<msg timestamp="20201117 14:41:12.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.350" endtime="20201117 14:41:12.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.370" endtime="20201117 14:41:12.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.373" endtime="20201117 14:41:12.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.347" endtime="20201117 14:41:12.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.345" endtime="20201117 14:41:12.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.383" endtime="20201117 14:41:12.669"></status>
</kw>
<msg timestamp="20201117 14:41:12.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.381" endtime="20201117 14:41:12.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.673" endtime="20201117 14:41:12.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.681" endtime="20201117 14:41:12.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.379" endtime="20201117 14:41:12.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.377" endtime="20201117 14:41:12.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.688" level="INFO">${RESULT} = [{'time': 0.020230917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9236000000002335e-05, 'source_diff': 1.9236000000002335e-05}, {'time': 0.020256903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:12.685" endtime="20201117 14:41:12.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.701" level="INFO">${ACCURACY} = {'time': [0.020230917, 0.020256903, 0.020286917, 0.020315917, 0.020342931, 0.020374917, 0.020405917, 0.020432944, 0.020458931, 0.020488944, 0.020520944, 0.020550944, 0.020582, 0.020612944, 0.020644958...</msg>
<status status="PASS" starttime="20201117 14:41:12.689" endtime="20201117 14:41:12.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.706" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.705" endtime="20201117 14:41:12.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.708" level="INFO">VALUE: [1.9236000000002335e-05, 1.9221999999999295e-05, 1.9598000000002613e-05, 1.9583999999999574e-05, 2.0000000000002655e-05, 1.9791999999997645e-05, 1.947299999999902e-05, 1.9721999999999795e-05, 1.9499999999998685e-05, 1.987499999999906e-05, 1.9721999999999795e-05, 1.9457999999999975e-05, 1.9694000000000655e-05, 1.9735999999999365e-05, 1.9916000000001766e-05, 1.9749999999998935e-05, 1.92769999999981e-05, 1.9457999999999975e-05, 2.0013999999998755e-05, 1.980499999999774e-05, 1.963900000000185e-05, 1.9972000000000045e-05, 1.9528000000001294e-05, 1.911100000000221e-05, 1.987499999999906e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9306000000000184e-05, 1.9514000000001724e-05, 1.913900000000135e-05, 1.9708000000000225e-05, 1.90829999999996e-05, 1.991699999999777e-05, 1.918100000000006e-05, 1.93890000000016e-05, 1.945899999999945e-05, 1.937500000000203e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.997300000000299e-05, 1.9500000000002154e-05, 1.9528000000001294e-05, 1.9749999999998935e-05, 1.9542000000000864e-05, 1.956900000000053e-05, 1.965299999999795e-05, 1.947300000000249e-05, 1.9735999999999365e-05, 1.931900000000028e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.707" endtime="20201117 14:41:12.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.702" endtime="20201117 14:41:12.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.711" endtime="20201117 14:41:12.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.715" endtime="20201117 14:41:12.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.713" endtime="20201117 14:41:12.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.710" endtime="20201117 14:41:12.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.344" endtime="20201117 14:41:12.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.953" endtime="20201117 14:41:12.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.952" endtime="20201117 14:41:12.736"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.738" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.747" endtime="20201117 14:41:12.763"></status>
</kw>
<msg timestamp="20201117 14:41:12.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.746" endtime="20201117 14:41:12.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.765" endtime="20201117 14:41:12.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.767" endtime="20201117 14:41:12.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.742" endtime="20201117 14:41:12.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.740" endtime="20201117 14:41:12.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.776" endtime="20201117 14:41:13.062"></status>
</kw>
<msg timestamp="20201117 14:41:13.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.775" endtime="20201117 14:41:13.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.066" endtime="20201117 14:41:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.074" endtime="20201117 14:41:13.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.772" endtime="20201117 14:41:13.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.770" endtime="20201117 14:41:13.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.081" level="INFO">${RESULT} = [{'time': 0.023362417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.047300000000002e-05, 'source_diff': 2.047300000000002e-05}, {'time': 0.023391389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.077" endtime="20201117 14:41:13.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.095" level="INFO">${ACCURACY} = {'time': [0.023362417, 0.023391389, 0.023424389, 0.023457417, 0.023487403, 0.023513403, 0.023543403, 0.023574403, 0.023606417, 0.023638431, 0.023665417, 0.023697431, 0.023729458, 0.023763444, 0.023793...</msg>
<status status="PASS" starttime="20201117 14:41:13.082" endtime="20201117 14:41:13.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.100" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.099" endtime="20201117 14:41:13.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.102" level="INFO">VALUE: [2.047300000000002e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.0792000000002114e-05, 2.0334000000000324e-05, 2.013899999999888e-05, 2.087500000000006e-05, 2.018100000000106e-05, 2.095900000000095e-05, 2.016700000000149e-05, 2.0347999999999894e-05, 2.063900000000285e-05, 2.0763999999999505e-05, 2.105500000000246e-05, 2.0542000000001864e-05, 2.033299999999738e-05, 2.0555999999997965e-05, 2.0458000000000975e-05, 2.0929999999998866e-05, 2.052700000000282e-05, 2.0457999999997506e-05, 2.0986000000000615e-05, 2.102700000000332e-05, 2.058299999999763e-05, 2.0707999999997756e-05, 2.0194000000001155e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.086100000000049e-05, 2.0749999999999935e-05, 2.006900000000103e-05, 2.0792000000002114e-05, 2.081900000000178e-05, 2.02090000000002e-05, 2.0277999999998575e-05, 2.033300000000085e-05, 2.0208000000000725e-05, 2.0249999999999435e-05, 2.037499999999956e-05, 2.0736000000000365e-05, 2.0306000000001184e-05, 2.0499999999999685e-05, 2.0763999999999505e-05, 2.1027999999999325e-05, 2.068100000000156e-05, 2.0763999999999505e-05, 2.0556000000001434e-05, 2.0278000000002044e-05, 2.0222000000000295e-05, 2.054099999999892e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.101" endtime="20201117 14:41:13.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.096" endtime="20201117 14:41:13.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.105" endtime="20201117 14:41:13.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.109" endtime="20201117 14:41:13.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.107" endtime="20201117 14:41:13.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.103" endtime="20201117 14:41:13.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.739" endtime="20201117 14:41:13.130"></status>
</kw>
<msg timestamp="20201117 14:41:13.130" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.138" endtime="20201117 14:41:13.153"></status>
</kw>
<msg timestamp="20201117 14:41:13.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.137" endtime="20201117 14:41:13.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.155" endtime="20201117 14:41:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.157" endtime="20201117 14:41:13.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.134" endtime="20201117 14:41:13.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.132" endtime="20201117 14:41:13.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.167" endtime="20201117 14:41:13.452"></status>
</kw>
<msg timestamp="20201117 14:41:13.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.165" endtime="20201117 14:41:13.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.456" endtime="20201117 14:41:13.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.464" endtime="20201117 14:41:13.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.163" endtime="20201117 14:41:13.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.161" endtime="20201117 14:41:13.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.471" level="INFO">${RESULT} = [{'time': 0.019750736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.084700000000092e-05, 'source_diff': 2.084700000000092e-05}, {'time': 0.019782681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.467" endtime="20201117 14:41:13.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.484" level="INFO">${ACCURACY} = {'time': [0.019750736, 0.019782681, 0.019813694, 0.019842694, 0.019874694, 0.019901694, 0.019934722, 0.019964708, 0.019996722, 0.020024722, 0.020057722, 0.020085722, 0.020117736, 0.020146722, 0.020177...</msg>
<status status="PASS" starttime="20201117 14:41:13.472" endtime="20201117 14:41:13.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.489" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.488" endtime="20201117 14:41:13.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.491" level="INFO">VALUE: [2.084700000000092e-05, 2.069500000000113e-05, 2.0222000000000295e-05, 2.011099999999974e-05, 2.0249999999999435e-05, 2.0166000000002016e-05, 2.0721999999997326e-05, 2.087500000000006e-05, 2.037500000000303e-05, 2.0693999999998186e-05, 2.0722000000000795e-05, 2.079099999999917e-05, 2.0444000000001405e-05, 2.0486000000000115e-05, 2.0444000000001405e-05, 2.04029999999987e-05, 2.015299999999845e-05, 2.038899999999913e-05, 2.093099999999834e-05, 2.0805999999998215e-05, 2.063899999999938e-05, 2.0042000000001364e-05, 2.0651999999999476e-05, 2.044499999999741e-05, 2.0791999999998645e-05, 2.0249999999999435e-05, 2.0598000000000144e-05, 2.1000000000000185e-05, 2.0472000000000545e-05, 2.0749999999999935e-05, 2.0111999999999214e-05, 2.0486000000000115e-05, 2.062499999999981e-05, 2.0778000000002544e-05, 2.084700000000092e-05, 2.098700000000009e-05, 2.0834000000000824e-05, 2.0249999999999435e-05, 2.0472000000000545e-05, 2.102699999999985e-05, 2.0222000000000295e-05, 2.0401999999999226e-05, 2.083300000000135e-05, 2.0222000000000295e-05, 2.033300000000085e-05, 2.0444000000001405e-05, 2.087500000000006e-05, 2.0528000000002294e-05, 2.036099999999999e-05, 2.1000000000000185e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.490" endtime="20201117 14:41:13.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.485" endtime="20201117 14:41:13.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.495" endtime="20201117 14:41:13.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.498" endtime="20201117 14:41:13.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.497" endtime="20201117 14:41:13.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.493" endtime="20201117 14:41:13.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.131" endtime="20201117 14:41:13.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.737" endtime="20201117 14:41:13.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.736" endtime="20201117 14:41:13.519"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.522" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.530" endtime="20201117 14:41:13.544"></status>
</kw>
<msg timestamp="20201117 14:41:13.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.528" endtime="20201117 14:41:13.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.546" endtime="20201117 14:41:13.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.548" endtime="20201117 14:41:13.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.526" endtime="20201117 14:41:13.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.524" endtime="20201117 14:41:13.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.557" endtime="20201117 14:41:13.843"></status>
</kw>
<msg timestamp="20201117 14:41:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.556" endtime="20201117 14:41:13.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.847" endtime="20201117 14:41:13.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.855" endtime="20201117 14:41:13.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.553" endtime="20201117 14:41:13.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.551" endtime="20201117 14:41:13.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.862" level="INFO">${RESULT} = [{'time': 0.021881833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.155499999999949e-05, 'source_diff': 2.155499999999949e-05}, {'time': 0.021910847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.858" endtime="20201117 14:41:13.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.875" level="INFO">${ACCURACY} = {'time': [0.021881833, 0.021910847, 0.021940847, 0.021971833, 0.021999847, 0.022027861, 0.022059847, 0.022090861, 0.022124861, 0.022152861, 0.022184875, 0.022216861, 0.022250875, 0.022285875, 0.022316...</msg>
<status status="PASS" starttime="20201117 14:41:13.863" endtime="20201117 14:41:13.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.880" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.879" endtime="20201117 14:41:13.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.882" level="INFO">VALUE: [2.155499999999949e-05, 2.204100000000042e-05, 2.10969999999977e-05, 2.12770000000001e-05, 2.1514000000000255e-05, 2.1999999999997716e-05, 2.1929999999999866e-05, 2.111100000000074e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.163900000000038e-05, 2.1429999999999366e-05, 2.162500000000081e-05, 2.1805999999999215e-05, 2.138900000000013e-05, 2.184699999999845e-05, 2.187500000000106e-05, 2.1500000000000685e-05, 2.161099999999777e-05, 2.1151999999999976e-05, 2.1069999999998035e-05, 2.1250000000000435e-05, 2.2013999999997286e-05, 2.112500000000031e-05, 2.141699999999927e-05, 2.1264000000000005e-05, 2.1848000000001394e-05, 2.1084000000001074e-05, 2.2014000000000755e-05, 2.2000000000001185e-05, 2.1680000000003086e-05, 2.169499999999866e-05, 2.1722000000001795e-05, 2.1137999999996937e-05, 2.1179999999999116e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.130499999999924e-05, 2.202700000000085e-05, 2.1971999999998576e-05, 2.19030000000002e-05, 2.1722000000001795e-05, 2.138900000000013e-05, 2.1429999999999366e-05, 2.115299999999945e-05, 2.1749999999997466e-05, 2.106900000000203e-05, 2.1207999999998256e-05, 2.1500000000000685e-05, 2.1222000000001295e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.881" endtime="20201117 14:41:13.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.876" endtime="20201117 14:41:13.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.886" endtime="20201117 14:41:13.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.889" endtime="20201117 14:41:13.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.888" endtime="20201117 14:41:13.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.884" endtime="20201117 14:41:13.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.522" endtime="20201117 14:41:13.910"></status>
</kw>
<msg timestamp="20201117 14:41:13.910" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.918" endtime="20201117 14:41:13.933"></status>
</kw>
<msg timestamp="20201117 14:41:13.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.917" endtime="20201117 14:41:13.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.935" endtime="20201117 14:41:13.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.937" endtime="20201117 14:41:13.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.914" endtime="20201117 14:41:13.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.912" endtime="20201117 14:41:13.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.947" endtime="20201117 14:41:14.234"></status>
</kw>
<msg timestamp="20201117 14:41:14.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.946" endtime="20201117 14:41:14.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.238" endtime="20201117 14:41:14.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.246" endtime="20201117 14:41:14.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.943" endtime="20201117 14:41:14.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.941" endtime="20201117 14:41:14.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.253" level="INFO">${RESULT} = [{'time': 0.019317667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1750000000000935e-05, 'source_diff': 2.1750000000000935e-05}, {'time': 0.019344653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:14.249" endtime="20201117 14:41:14.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.266" level="INFO">${ACCURACY} = {'time': [0.019317667, 0.019344653, 0.019373653, 0.019407653, 0.019441667, 0.019472667, 0.019503681, 0.019531708, 0.019561681, 0.019590681, 0.019619722, 0.019651694, 0.019684694, 0.019717722, 0.019745...</msg>
<status status="PASS" starttime="20201117 14:41:14.254" endtime="20201117 14:41:14.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.270" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.269" endtime="20201117 14:41:14.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.273" level="INFO">VALUE: [2.1750000000000935e-05, 2.113899999999988e-05, 2.1472000000001545e-05, 2.1722000000001795e-05, 2.1514000000000255e-05, 2.163900000000038e-05, 2.1805999999999215e-05, 2.188899999999716e-05, 2.116700000000249e-05, 2.19030000000002e-05, 2.205499999999999e-05, 2.111100000000074e-05, 2.1235999999997396e-05, 2.1250000000000435e-05, 2.187500000000106e-05, 2.1458000000001975e-05, 2.1750000000000935e-05, 2.105500000000246e-05, 2.1527999999999825e-05, 2.180500000000321e-05, 2.1222000000001295e-05, 2.180499999999974e-05, 2.1679999999999616e-05, 2.1721999999998326e-05, 2.2041999999999895e-05, 2.168099999999909e-05, 2.113899999999988e-05, 2.14029999999997e-05, 2.144499999999841e-05, 2.1972000000002045e-05, 2.1236000000000865e-05, 2.1750000000000935e-05, 2.1721999999998326e-05, 2.136100000000099e-05, 2.109700000000117e-05, 2.161100000000124e-05, 2.1541999999999395e-05, 2.162500000000081e-05, 2.109700000000117e-05, 2.1319999999998285e-05, 2.172300000000127e-05, 2.1165999999999546e-05, 2.1778000000000075e-05, 2.1236000000000865e-05, 2.173700000000084e-05, 2.1151999999999976e-05, 2.104099999999942e-05, 2.1652000000000476e-05, 2.1999999999997716e-05, 2.179100000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.271" endtime="20201117 14:41:14.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.267" endtime="20201117 14:41:14.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.281" endtime="20201117 14:41:14.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.285" endtime="20201117 14:41:14.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.283" endtime="20201117 14:41:14.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.279" endtime="20201117 14:41:14.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.911" endtime="20201117 14:41:14.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.520" endtime="20201117 14:41:14.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.520" endtime="20201117 14:41:14.306"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.308" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.316" endtime="20201117 14:41:14.332"></status>
</kw>
<msg timestamp="20201117 14:41:14.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.315" endtime="20201117 14:41:14.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.334" endtime="20201117 14:41:14.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.336" endtime="20201117 14:41:14.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.312" endtime="20201117 14:41:14.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.310" endtime="20201117 14:41:14.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.345" endtime="20201117 14:41:14.631"></status>
</kw>
<msg timestamp="20201117 14:41:14.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.344" endtime="20201117 14:41:14.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.635" endtime="20201117 14:41:14.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.643" endtime="20201117 14:41:14.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.341" endtime="20201117 14:41:14.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.340" endtime="20201117 14:41:14.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.650" level="INFO">${RESULT} = [{'time': 0.022616056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2292000000000145e-05, 'source_diff': 2.2292000000000145e-05}, {'time': 0.022650056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:14.647" endtime="20201117 14:41:14.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.665" level="INFO">${ACCURACY} = {'time': [0.022616056, 0.022650056, 0.022680056, 0.022712069, 0.022747056, 0.022778069, 0.022812069, 0.022843069, 0.022879083, 0.022914097, 0.022948097, 0.022978097, 0.023012097, 0.023046097, 0.023080...</msg>
<status status="PASS" starttime="20201117 14:41:14.651" endtime="20201117 14:41:14.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.669" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.668" endtime="20201117 14:41:14.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.672" level="INFO">VALUE: [2.2292000000000145e-05, 2.2611999999998245e-05, 2.245899999999898e-05, 2.234700000000242e-05, 2.294499999999991e-05, 2.304100000000142e-05, 2.2721999999999326e-05, 2.202700000000085e-05, 2.3014000000001755e-05, 2.2944000000000436e-05, 2.2707999999999756e-05, 2.254100000000092e-05, 2.2499999999998216e-05, 2.2416000000000796e-05, 2.2250000000001435e-05, 2.2764000000001505e-05, 2.2514000000001255e-05, 2.2749999999998466e-05, 2.2971999999999576e-05, 2.265299999999748e-05, 2.219500000000263e-05, 2.2764000000001505e-05, 2.284700000000292e-05, 2.2320000000002754e-05, 2.218099999999959e-05, 2.213900000000088e-05, 2.243099999999984e-05, 2.2514000000001255e-05, 2.3056000000000465e-05, 2.215300000000045e-05, 2.2736000000002365e-05, 2.2528000000000825e-05, 2.270899999999923e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.2264000000001005e-05, 2.222300000000177e-05, 2.2847999999998925e-05, 2.2221999999998826e-05, 2.236099999999852e-05, 2.234699999999895e-05, 2.2430000000000366e-05, 2.2930000000000866e-05, 2.2486000000002115e-05, 2.259700000000267e-05, 2.2401999999997757e-05, 2.2499999999998216e-05, 2.2334000000002324e-05, 2.2999999999998716e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.670" endtime="20201117 14:41:14.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.666" endtime="20201117 14:41:14.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.675" endtime="20201117 14:41:14.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.679" endtime="20201117 14:41:14.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.677" endtime="20201117 14:41:14.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.674" endtime="20201117 14:41:14.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.309" endtime="20201117 14:41:14.699"></status>
</kw>
<msg timestamp="20201117 14:41:14.700" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.708" endtime="20201117 14:41:14.723"></status>
</kw>
<msg timestamp="20201117 14:41:14.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.707" endtime="20201117 14:41:14.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.725" endtime="20201117 14:41:14.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.727" endtime="20201117 14:41:14.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.704" endtime="20201117 14:41:14.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.702" endtime="20201117 14:41:14.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.737" endtime="20201117 14:41:15.025"></status>
</kw>
<msg timestamp="20201117 14:41:15.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.736" endtime="20201117 14:41:15.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.029" endtime="20201117 14:41:15.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.038" endtime="20201117 14:41:15.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.733" endtime="20201117 14:41:15.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.731" endtime="20201117 14:41:15.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.046" level="INFO">${RESULT} = [{'time': 0.019545181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2569999999999535e-05, 'source_diff': 2.2569999999999535e-05}, {'time': 0.019576208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.042" endtime="20201117 14:41:15.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.059" level="INFO">${ACCURACY} = {'time': [0.019545181, 0.019576208, 0.019609194, 0.019638194, 0.019667194, 0.019699208, 0.019734264, 0.01976925, 0.019801208, 0.019830236, 0.019860236, 0.01989025, 0.019924236, 0.019954236, 0.01998323...</msg>
<status status="PASS" starttime="20201117 14:41:15.047" endtime="20201117 14:41:15.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.064" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.063" endtime="20201117 14:41:15.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.066" level="INFO">VALUE: [2.2569999999999535e-05, 2.213900000000088e-05, 2.262499999999834e-05, 2.2443999999999936e-05, 2.2971999999999576e-05, 2.281900000000031e-05, 2.2500000000001685e-05, 2.2943999999996967e-05, 2.231899999999981e-05, 2.3000000000002185e-05, 2.2485999999998646e-05, 2.256900000000006e-05, 2.2514000000001255e-05, 2.2542000000000395e-05, 2.2500000000001685e-05, 2.259700000000267e-05, 2.2707999999999756e-05, 2.2999999999998716e-05, 2.283299999999988e-05, 2.20969999999987e-05, 2.2069999999999035e-05, 2.293100000000034e-05, 2.2583999999999105e-05, 2.2513999999997786e-05, 2.211099999999827e-05, 2.288900000000163e-05, 2.2499999999998216e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.3042000000000895e-05, 2.248699999999812e-05, 2.2098000000001644e-05, 2.2762999999998562e-05, 2.295899999999948e-05, 2.2764000000001505e-05, 2.2443999999999936e-05, 2.2638000000001907e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.205499999999999e-05, 2.281900000000031e-05, 2.243099999999984e-05, 2.283299999999988e-05, 2.2735999999998896e-05, 2.279100000000117e-05, 2.211100000000174e-05, 2.254100000000092e-05, 2.2041999999999895e-05, 2.2721999999999326e-05, 2.2694000000000186e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.065" endtime="20201117 14:41:15.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.060" endtime="20201117 14:41:15.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.069" endtime="20201117 14:41:15.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.073" endtime="20201117 14:41:15.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.071" endtime="20201117 14:41:15.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.068" endtime="20201117 14:41:15.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.700" endtime="20201117 14:41:15.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.307" endtime="20201117 14:41:15.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.306" endtime="20201117 14:41:15.094"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.097" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.105" endtime="20201117 14:41:15.120"></status>
</kw>
<msg timestamp="20201117 14:41:15.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.103" endtime="20201117 14:41:15.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.122" endtime="20201117 14:41:15.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.124" endtime="20201117 14:41:15.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.101" endtime="20201117 14:41:15.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.098" endtime="20201117 14:41:15.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.134" endtime="20201117 14:41:15.419"></status>
</kw>
<msg timestamp="20201117 14:41:15.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.132" endtime="20201117 14:41:15.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.423" endtime="20201117 14:41:15.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.431" endtime="20201117 14:41:15.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.129" endtime="20201117 14:41:15.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.128" endtime="20201117 14:41:15.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.439" level="INFO">${RESULT} = [{'time': 0.022073875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.388899999999916e-05, 'source_diff': 2.388899999999916e-05}, {'time': 0.022104875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:15.435" endtime="20201117 14:41:15.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.452" level="INFO">${ACCURACY} = {'time': [0.022073875, 0.022104875, 0.022135889, 0.022165903, 0.022200903, 0.022235889, 0.022269903, 0.022302917, 0.022334917, 0.022370903, 0.022405931, 0.022440917, 0.022472917, 0.022507931, 0.022538...</msg>
<status status="PASS" starttime="20201117 14:41:15.440" endtime="20201117 14:41:15.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.457" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.456" endtime="20201117 14:41:15.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.459" level="INFO">VALUE: [2.388899999999916e-05, 2.3986000000000146e-05, 2.3791999999998176e-05, 2.3514000000002255e-05, 2.3514000000002255e-05, 2.3263999999998536e-05, 2.344500000000041e-05, 2.3083999999999605e-05, 2.3042000000000895e-05, 2.3235999999999396e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.3513999999998786e-05, 2.393099999999787e-05, 2.343100000000084e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.3485999999999646e-05, 2.358300000000063e-05, 2.3499999999999216e-05, 2.3972000000000576e-05, 2.341700000000127e-05, 2.312499999999884e-05, 2.3749999999999466e-05, 2.3679999999998147e-05, 2.3986000000000146e-05, 2.355500000000149e-05, 2.3485999999999646e-05, 2.3722000000000326e-05, 2.3763999999999036e-05, 2.35970000000002e-05, 2.3944000000001436e-05, 2.3694000000001186e-05, 2.386100000000002e-05, 2.3278000000001575e-05, 2.4028000000002325e-05, 2.393100000000134e-05, 2.3320000000000285e-05, 2.308300000000013e-05, 2.4014000000002755e-05, 2.3972000000000576e-05, 2.3792000000001645e-05, 2.381900000000131e-05, 2.3250000000002435e-05, 2.3972000000000576e-05, 2.381900000000131e-05, 2.394499999999744e-05, 2.344500000000041e-05, 2.3999999999999716e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.458" endtime="20201117 14:41:15.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.453" endtime="20201117 14:41:15.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.462" endtime="20201117 14:41:15.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.466" endtime="20201117 14:41:15.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.464" endtime="20201117 14:41:15.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.460" endtime="20201117 14:41:15.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.097" endtime="20201117 14:41:15.486"></status>
</kw>
<msg timestamp="20201117 14:41:15.486" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.495" endtime="20201117 14:41:15.510"></status>
</kw>
<msg timestamp="20201117 14:41:15.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.493" endtime="20201117 14:41:15.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.512" endtime="20201117 14:41:15.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.514" endtime="20201117 14:41:15.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.491" endtime="20201117 14:41:15.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.488" endtime="20201117 14:41:15.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.524" endtime="20201117 14:41:15.811"></status>
</kw>
<msg timestamp="20201117 14:41:15.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.523" endtime="20201117 14:41:15.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.816" endtime="20201117 14:41:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.824" endtime="20201117 14:41:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.520" endtime="20201117 14:41:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.518" endtime="20201117 14:41:15.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.831" level="INFO">${RESULT} = [{'time': 0.019336722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.01936875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:15.828" endtime="20201117 14:41:15.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.844" level="INFO">${ACCURACY} = {'time': [0.019336722, 0.01936875, 0.019402736, 0.019438736, 0.01947075, 0.01950675, 0.01954075, 0.019576764, 0.019606764, 0.019643792, 0.019673778, 0.019708778, 0.019740778, 0.019776778, 0.019806792,...</msg>
<status status="PASS" starttime="20201117 14:41:15.832" endtime="20201117 14:41:15.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.849" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.848" endtime="20201117 14:41:15.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.851" level="INFO">VALUE: [2.35970000000002e-05, 2.3264000000002005e-05, 2.35970000000002e-05, 2.3750000000002935e-05, 2.3986000000000146e-05, 2.3249999999998966e-05, 2.34169999999978e-05, 2.3958000000001006e-05, 2.315299999999798e-05, 2.3735999999999896e-05, 2.319500000000016e-05, 2.3513999999998786e-05, 2.3472000000000076e-05, 2.319499999999669e-05, 2.3499999999999216e-05, 2.336099999999952e-05, 2.370900000000023e-05, 2.3320000000000285e-05, 2.3527999999998356e-05, 2.4013999999999286e-05, 2.370900000000023e-05, 2.3820000000000785e-05, 2.3776999999999132e-05, 2.3276999999998632e-05, 2.3207999999996787e-05, 2.380500000000174e-05, 2.3957999999997537e-05, 2.3165999999998077e-05, 2.3458000000000506e-05, 2.3193999999997217e-05, 2.3194000000000686e-05, 2.3542000000001395e-05, 2.3208000000000256e-05, 2.3499999999999216e-05, 2.336099999999952e-05, 2.3708000000000756e-05, 2.3500000000002685e-05, 2.4014000000002755e-05, 2.3042000000000895e-05, 2.3791999999998176e-05, 2.3235999999999396e-05, 2.381900000000131e-05, 2.313900000000188e-05, 2.3291999999997676e-05, 2.315300000000145e-05, 2.3820000000000785e-05, 2.3056000000000465e-05, 2.3306000000000715e-05, 2.320899999999973e-05, 2.3777999999998606e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.850" endtime="20201117 14:41:15.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.845" endtime="20201117 14:41:15.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.854" endtime="20201117 14:41:15.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.858" endtime="20201117 14:41:15.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.856" endtime="20201117 14:41:15.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.853" endtime="20201117 14:41:15.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.487" endtime="20201117 14:41:15.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.095" endtime="20201117 14:41:15.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.095" endtime="20201117 14:41:15.879"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.881" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.890" endtime="20201117 14:41:15.907"></status>
</kw>
<msg timestamp="20201117 14:41:15.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.888" endtime="20201117 14:41:15.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.908" endtime="20201117 14:41:15.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.911" endtime="20201117 14:41:15.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.885" endtime="20201117 14:41:15.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.883" endtime="20201117 14:41:15.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.920" endtime="20201117 14:41:16.204"></status>
</kw>
<msg timestamp="20201117 14:41:16.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.919" endtime="20201117 14:41:16.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.208" endtime="20201117 14:41:16.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.217" endtime="20201117 14:41:16.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.916" endtime="20201117 14:41:16.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.914" endtime="20201117 14:41:16.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.223" level="INFO">${RESULT} = [{'time': 0.023017458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4680000000002617e-05, 'source_diff': 2.4680000000002617e-05}, {'time': 0.023051458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:16.220" endtime="20201117 14:41:16.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.238" level="INFO">${ACCURACY} = {'time': [0.023017458, 0.023051458, 0.023083458, 0.023117458, 0.023152472, 0.023185486, 0.023223486, 0.023260472, 0.023295514, 0.023328486, 0.023360486, 0.023394486, 0.0234285, 0.023463542, 0.0234955,...</msg>
<status status="PASS" starttime="20201117 14:41:16.224" endtime="20201117 14:41:16.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.242" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.241" endtime="20201117 14:41:16.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.245" level="INFO">VALUE: [2.4680000000002617e-05, 2.4750000000000466e-05, 2.5000000000000716e-05, 2.484700000000145e-05, 2.438899999999966e-05, 2.4292000000002145e-05, 2.4750000000000466e-05, 2.4249999999999966e-05, 2.487500000000059e-05, 2.4764000000000036e-05, 2.4304999999998772e-05, 2.4832999999998412e-05, 2.463899999999991e-05, 2.418100000000159e-05, 2.4693999999998717e-05, 2.5014000000000286e-05, 2.416699999999855e-05, 2.4750000000000466e-05, 2.461100000000077e-05, 2.4860999999997552e-05, 2.415299999999898e-05, 2.4500000000000216e-05, 2.493099999999887e-05, 2.445900000000098e-05, 2.495900000000148e-05, 2.4236000000000396e-05, 2.5041999999999426e-05, 2.473700000000037e-05, 2.4179999999998647e-05, 2.4764000000000036e-05, 2.4180000000002116e-05, 2.462500000000034e-05, 2.412499999999984e-05, 2.5000000000000716e-05, 2.4902000000000257e-05, 2.4194000000001686e-05, 2.4236000000000396e-05, 2.4194000000001686e-05, 2.4208000000001256e-05, 2.4290999999999202e-05, 2.4554999999999022e-05, 2.49169999999993e-05, 2.4208000000001256e-05, 2.4791999999999176e-05, 2.466700000000252e-05, 2.4957999999998537e-05, 2.4458000000001506e-05, 2.493099999999887e-05, 2.4915999999999827e-05, 2.4332999999997912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.243" endtime="20201117 14:41:16.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.239" endtime="20201117 14:41:16.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.248" endtime="20201117 14:41:16.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.251" endtime="20201117 14:41:16.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.250" endtime="20201117 14:41:16.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.246" endtime="20201117 14:41:16.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.882" endtime="20201117 14:41:16.272"></status>
</kw>
<msg timestamp="20201117 14:41:16.272" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.281" endtime="20201117 14:41:16.297"></status>
</kw>
<msg timestamp="20201117 14:41:16.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.279" endtime="20201117 14:41:16.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.298" endtime="20201117 14:41:16.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.301" endtime="20201117 14:41:16.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.277" endtime="20201117 14:41:16.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.274" endtime="20201117 14:41:16.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.311" endtime="20201117 14:41:16.597"></status>
</kw>
<msg timestamp="20201117 14:41:16.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.309" endtime="20201117 14:41:16.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.601" endtime="20201117 14:41:16.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.610" endtime="20201117 14:41:16.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.307" endtime="20201117 14:41:16.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.305" endtime="20201117 14:41:16.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.616" level="INFO">${RESULT} = [{'time': 0.019466778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4320000000001285e-05, 'source_diff': 2.4320000000001285e-05}, {'time': 0.019501764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:16.613" endtime="20201117 14:41:16.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.630" level="INFO">${ACCURACY} = {'time': [0.019466778, 0.019501764, 0.019533764, 0.019565778, 0.019601778, 0.019635778, 0.019672792, 0.019704806, 0.019736792, 0.019769806, 0.019801806, 0.019832819, 0.019870819, 0.019907861, 0.019939...</msg>
<status status="PASS" starttime="20201117 14:41:16.617" endtime="20201117 14:41:16.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.634" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.633" endtime="20201117 14:41:16.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.637" level="INFO">VALUE: [2.4320000000001285e-05, 2.4820000000001785e-05, 2.4207999999997787e-05, 2.4471999999997607e-05, 2.44169999999988e-05, 2.4569999999998066e-05, 2.4486000000000646e-05, 2.5041999999999426e-05, 2.4986000000001146e-05, 2.4584000000001105e-05, 2.419500000000116e-05, 2.4513000000000312e-05, 2.484700000000145e-05, 2.4750000000000466e-05, 2.4486000000000646e-05, 2.434700000000095e-05, 2.4415999999999327e-05, 2.4304999999998772e-05, 2.4290999999999202e-05, 2.404100000000242e-05, 2.4790999999999702e-05, 2.4527999999999356e-05, 2.4429999999998897e-05, 2.4832999999998412e-05, 2.4388000000000187e-05, 2.5027999999999856e-05, 2.4971999999998107e-05, 2.4429999999998897e-05, 2.447300000000055e-05, 2.415299999999898e-05, 2.445900000000098e-05, 2.493100000000234e-05, 2.4791999999999176e-05, 2.4598000000000675e-05, 2.5054999999999522e-05, 2.4098000000000175e-05, 2.490299999999973e-05, 2.465299999999948e-05, 2.4320000000001285e-05, 2.413899999999941e-05, 2.4806000000002215e-05, 2.4527999999999356e-05, 2.495899999999801e-05, 2.4665999999999577e-05, 2.4764000000000036e-05, 2.4527999999999356e-05, 2.4652000000000007e-05, 2.493099999999887e-05, 2.437500000000009e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.635" endtime="20201117 14:41:16.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.631" endtime="20201117 14:41:16.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.640" endtime="20201117 14:41:16.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.643" endtime="20201117 14:41:16.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.642" endtime="20201117 14:41:16.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.638" endtime="20201117 14:41:16.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.273" endtime="20201117 14:41:16.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.880" endtime="20201117 14:41:16.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.879" endtime="20201117 14:41:16.664"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.667" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.675" endtime="20201117 14:41:16.691"></status>
</kw>
<msg timestamp="20201117 14:41:16.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.674" endtime="20201117 14:41:16.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.692" endtime="20201117 14:41:16.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.695" endtime="20201117 14:41:16.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.671" endtime="20201117 14:41:16.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.669" endtime="20201117 14:41:16.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.704" endtime="20201117 14:41:16.990"></status>
</kw>
<msg timestamp="20201117 14:41:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.702" endtime="20201117 14:41:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.994" endtime="20201117 14:41:17.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.002" endtime="20201117 14:41:17.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.700" endtime="20201117 14:41:17.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.698" endtime="20201117 14:41:17.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.009" level="INFO">${RESULT} = [{'time': 0.022275764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5735999999998427e-05, 'source_diff': 2.5735999999998427e-05}, {'time': 0.022313778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:17.005" endtime="20201117 14:41:17.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.022" level="INFO">${ACCURACY} = {'time': [0.022275764, 0.022313778, 0.022348778, 0.022380778, 0.022417861, 0.022455806, 0.022489792, 0.022521806, 0.022559819, 0.022598819, 0.022631819, 0.022669903, 0.022700819, 0.022735847, 0.022769...</msg>
<status status="PASS" starttime="20201117 14:41:17.010" endtime="20201117 14:41:17.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.027" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.026" endtime="20201117 14:41:17.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.029" level="INFO">VALUE: [2.5735999999998427e-05, 2.5749999999997997e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.5333999999998386e-05, 2.6028000000000856e-05, 2.537499999999762e-05, 2.5096999999998232e-05, 2.5818999999999842e-05, 2.508300000000213e-05, 2.5334000000001855e-05, 2.5179999999999647e-05, 2.587500000000159e-05, 2.5360999999998052e-05, 2.59170000000003e-05, 2.5901999999997788e-05, 2.5277000000000632e-05, 2.5750000000001466e-05, 2.540300000000023e-05, 2.5763999999997567e-05, 2.534700000000195e-05, 2.5221999999998357e-05, 2.6000000000001716e-05, 2.5764000000001036e-05, 2.5556000000002965e-05, 2.5514000000000786e-05, 2.5528000000000356e-05, 2.5957999999999537e-05, 2.593100000000334e-05, 2.5305999999999246e-05, 2.5833999999998886e-05, 2.538900000000066e-05, 2.5624999999997872e-05, 2.4999999999997247e-05, 2.52230000000013e-05, 2.5805999999999746e-05, 2.519500000000216e-05, 2.594499999999944e-05, 2.516699999999955e-05, 2.512499999999737e-05, 2.5777000000001132e-05, 2.519499999999869e-05, 2.5750000000001466e-05, 2.5902000000001257e-05, 2.5596999999998732e-05, 2.5721999999998857e-05, 2.5596999999998732e-05, 2.5971999999999107e-05, 2.5930000000000397e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.028" endtime="20201117 14:41:17.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.023" endtime="20201117 14:41:17.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.032" endtime="20201117 14:41:17.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.036" endtime="20201117 14:41:17.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.034" endtime="20201117 14:41:17.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.031" endtime="20201117 14:41:17.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.667" endtime="20201117 14:41:17.057"></status>
</kw>
<msg timestamp="20201117 14:41:17.057" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.065" endtime="20201117 14:41:17.081"></status>
</kw>
<msg timestamp="20201117 14:41:17.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.064" endtime="20201117 14:41:17.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.082" endtime="20201117 14:41:17.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.085" endtime="20201117 14:41:17.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.061" endtime="20201117 14:41:17.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.059" endtime="20201117 14:41:17.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.095" endtime="20201117 14:41:17.380"></status>
</kw>
<msg timestamp="20201117 14:41:17.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.093" endtime="20201117 14:41:17.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.384" endtime="20201117 14:41:17.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.393" endtime="20201117 14:41:17.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.091" endtime="20201117 14:41:17.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.089" endtime="20201117 14:41:17.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.399" level="INFO">${RESULT} = [{'time': 0.019356542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5348000000001425e-05, 'source_diff': 2.5348000000001425e-05}, {'time': 0.019394542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:17.396" endtime="20201117 14:41:17.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.413" level="INFO">${ACCURACY} = {'time': [0.019356542, 0.019394542, 0.019428542, 0.019460597, 0.019495569, 0.019533556, 0.019565556, 0.019602583, 0.019641583, 0.019676569, 0.019712611, 0.019746583, 0.019782583, 0.019819583, 0.019853...</msg>
<status status="PASS" starttime="20201117 14:41:17.400" endtime="20201117 14:41:17.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.417" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.416" endtime="20201117 14:41:17.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.420" level="INFO">VALUE: [2.5348000000001425e-05, 2.595899999999901e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.537500000000109e-05, 2.590300000000073e-05, 2.519500000000216e-05, 2.5277000000000632e-05, 2.5832999999999412e-05, 2.5555000000000022e-05, 2.54169999999998e-05, 2.5250000000000966e-05, 2.5429999999999897e-05, 2.5652000000001007e-05, 2.5721999999998857e-05, 2.6042000000000426e-05, 2.538900000000066e-05, 2.563900000000091e-05, 2.5957999999999537e-05, 2.566700000000005e-05, 2.5180000000003117e-05, 2.511100000000127e-05, 2.5834000000002355e-05, 2.511100000000127e-05, 2.520899999999826e-05, 2.5320000000002285e-05, 2.5736000000001896e-05, 2.5764000000001036e-05, 2.5846999999998982e-05, 2.519499999999869e-05, 2.5541999999999926e-05, 2.5818999999999842e-05, 2.5874999999998122e-05, 2.512500000000084e-05, 2.519499999999869e-05, 2.6027000000001382e-05, 2.537499999999762e-05, 2.5334000000001855e-05, 2.584700000000245e-05, 2.515299999999998e-05, 2.5291000000000202e-05, 2.540300000000023e-05, 2.590300000000073e-05, 2.5791000000000702e-05, 2.5457999999999037e-05, 2.588900000000116e-05, 2.5222000000001826e-05, 2.5514000000000786e-05, 2.5318999999999342e-05, 2.5110999999997802e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.418" endtime="20201117 14:41:17.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.414" endtime="20201117 14:41:17.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.423" endtime="20201117 14:41:17.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.427" endtime="20201117 14:41:17.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.425" endtime="20201117 14:41:17.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.422" endtime="20201117 14:41:17.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.058" endtime="20201117 14:41:17.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.666" endtime="20201117 14:41:17.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.665" endtime="20201117 14:41:17.448"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.450" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.458" endtime="20201117 14:41:17.474"></status>
</kw>
<msg timestamp="20201117 14:41:17.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.457" endtime="20201117 14:41:17.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.476" endtime="20201117 14:41:17.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.478" endtime="20201117 14:41:17.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.454" endtime="20201117 14:41:17.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.452" endtime="20201117 14:41:17.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.487" endtime="20201117 14:41:17.773"></status>
</kw>
<msg timestamp="20201117 14:41:17.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.486" endtime="20201117 14:41:17.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.777" endtime="20201117 14:41:17.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.786" endtime="20201117 14:41:17.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.483" endtime="20201117 14:41:17.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.481" endtime="20201117 14:41:17.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.792" level="INFO">${RESULT} = [{'time': 0.022618583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6471999999999607e-05, 'source_diff': 2.6471999999999607e-05}, {'time': 0.022651583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:17.789" endtime="20201117 14:41:17.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.807" level="INFO">${ACCURACY} = {'time': [0.022618583, 0.022651583, 0.022685583, 0.022719597, 0.022756625, 0.022791583, 0.022828653, 0.022868597, 0.022901611, 0.022940611, 0.022974611, 0.023009611, 0.023044625, 0.023078625, 0.023111...</msg>
<status status="PASS" starttime="20201117 14:41:17.793" endtime="20201117 14:41:17.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.811" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.810" endtime="20201117 14:41:17.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.814" level="INFO">VALUE: [2.6471999999999607e-05, 2.6471999999999607e-05, 2.6276999999998163e-05, 2.6569000000000592e-05, 2.690299999999826e-05, 2.6027000000001382e-05, 2.69170000000013e-05, 2.6999999999999247e-05, 2.6444000000000467e-05, 2.6777999999998137e-05, 2.6679999999997678e-05, 2.6583000000000162e-05, 2.6972000000000107e-05, 2.6999999999999247e-05, 2.6721999999999857e-05, 2.6500000000002216e-05, 2.638899999999819e-05, 2.6833000000000412e-05, 2.6458000000000037e-05, 2.6805000000001272e-05, 2.6235999999998927e-05, 2.638900000000166e-05, 2.638899999999819e-05, 2.6097999999998706e-05, 2.7028000000001856e-05, 2.6680000000001147e-05, 2.620900000000273e-05, 2.6999999999999247e-05, 2.623700000000187e-05, 2.6958000000000537e-05, 2.6860999999999552e-05, 2.6637999999998968e-05, 2.6750000000002466e-05, 2.6805000000001272e-05, 2.6374999999998622e-05, 2.6471999999999607e-05, 2.6096999999999232e-05, 2.6999999999999247e-05, 2.7028000000001856e-05, 2.640300000000123e-05, 2.6542000000000926e-05, 2.6944000000000967e-05, 2.688900000000216e-05, 2.6583000000000162e-05, 2.6610999999999302e-05, 2.6499999999998747e-05, 2.693100000000087e-05, 2.6221999999999357e-05, 2.6999999999999247e-05, 2.6707999999996818e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.812" endtime="20201117 14:41:17.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.808" endtime="20201117 14:41:17.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.817" endtime="20201117 14:41:17.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.821" endtime="20201117 14:41:17.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.819" endtime="20201117 14:41:17.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.816" endtime="20201117 14:41:17.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.451" endtime="20201117 14:41:17.842"></status>
</kw>
<msg timestamp="20201117 14:41:17.842" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.850" endtime="20201117 14:41:17.865"></status>
</kw>
<msg timestamp="20201117 14:41:17.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.849" endtime="20201117 14:41:17.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.867" endtime="20201117 14:41:17.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.869" endtime="20201117 14:41:17.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.846" endtime="20201117 14:41:17.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.844" endtime="20201117 14:41:17.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.879" endtime="20201117 14:41:18.165"></status>
</kw>
<msg timestamp="20201117 14:41:18.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.878" endtime="20201117 14:41:18.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.169" endtime="20201117 14:41:18.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.177" endtime="20201117 14:41:18.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.875" endtime="20201117 14:41:18.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.873" endtime="20201117 14:41:18.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.184" level="INFO">${RESULT} = [{'time': 0.019519792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.620900000000273e-05, 'source_diff': 2.620900000000273e-05}, {'time': 0.019553792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:18.180" endtime="20201117 14:41:18.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.197" level="INFO">${ACCURACY} = {'time': [0.019519792, 0.019553792, 0.019589806, 0.019622806, 0.019659806, 0.019695833, 0.019733819, 0.019769806, 0.019804819, 0.019841819, 0.019877819, 0.019916847, 0.019948833, 0.019987833, 0.020021...</msg>
<status status="PASS" starttime="20201117 14:41:18.185" endtime="20201117 14:41:18.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.202" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.201" endtime="20201117 14:41:18.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.204" level="INFO">VALUE: [2.620900000000273e-05, 2.6278000000001106e-05, 2.666700000000105e-05, 2.6263999999998067e-05, 2.6874999999999122e-05, 2.6846999999999982e-05, 2.6485999999999177e-05, 2.638900000000166e-05, 2.6250000000001966e-05, 2.6180000000000647e-05, 2.6388000000002187e-05, 2.6264000000001536e-05, 2.6110999999998802e-05, 2.6430000000000897e-05, 2.6665999999998108e-05, 2.6401999999998288e-05, 2.613899999999794e-05, 2.6471999999999607e-05, 2.6319000000000342e-05, 2.6055000000000522e-05, 2.6235999999998927e-05, 2.6319000000000342e-05, 2.6292000000000676e-05, 2.6764000000002036e-05, 2.6305999999996776e-05, 2.619499999999969e-05, 2.686100000000302e-05, 2.6721999999999857e-05, 2.6972000000000107e-05, 2.6985999999999677e-05, 2.645899999999951e-05, 2.6888999999998692e-05, 2.6194000000000217e-05, 2.638900000000166e-05, 2.672299999999933e-05, 2.6263999999998067e-05, 2.6278000000001106e-05, 2.668100000000062e-05, 2.619499999999969e-05, 2.6277000000001632e-05, 2.6749999999998997e-05, 2.6458000000000037e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.638900000000166e-05, 2.7111999999999276e-05, 2.6583000000000162e-05, 2.6028000000000856e-05, 2.6416000000001327e-05, 2.6332999999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.203" endtime="20201117 14:41:18.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.198" endtime="20201117 14:41:18.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.208" endtime="20201117 14:41:18.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.211" endtime="20201117 14:41:18.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.209" endtime="20201117 14:41:18.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.206" endtime="20201117 14:41:18.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.843" endtime="20201117 14:41:18.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.449" endtime="20201117 14:41:18.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.448" endtime="20201117 14:41:18.232"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.235" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.243" endtime="20201117 14:41:18.259"></status>
</kw>
<msg timestamp="20201117 14:41:18.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.241" endtime="20201117 14:41:18.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.260" endtime="20201117 14:41:18.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.263" endtime="20201117 14:41:18.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.239" endtime="20201117 14:41:18.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.237" endtime="20201117 14:41:18.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.272" endtime="20201117 14:41:18.557"></status>
</kw>
<msg timestamp="20201117 14:41:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.270" endtime="20201117 14:41:18.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.561" endtime="20201117 14:41:18.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.569" endtime="20201117 14:41:18.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.268" endtime="20201117 14:41:18.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.266" endtime="20201117 14:41:18.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.576" level="INFO">${RESULT} = [{'time': 0.022235125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7208000000000787e-05, 'source_diff': 2.7208000000000787e-05}, {'time': 0.022270111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:18.573" endtime="20201117 14:41:18.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.590" level="INFO">${ACCURACY} = {'time': [0.022235125, 0.022270111, 0.022311125, 0.022345125, 0.022381125, 0.022420125, 0.022455125, 0.022493139, 0.022529181, 0.022570153, 0.022605139, 0.022646167, 0.022685153, 0.022724153, 0.022765...</msg>
<status status="PASS" starttime="20201117 14:41:18.577" endtime="20201117 14:41:18.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.594" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.593" endtime="20201117 14:41:18.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.597" level="INFO">VALUE: [2.7208000000000787e-05, 2.8013999999999817e-05, 2.7847000000000982e-05, 2.7444000000001467e-05, 2.712500000000284e-05, 2.7193999999997748e-05, 2.7791999999998707e-05, 2.7611000000000302e-05, 2.740299999999876e-05, 2.7833999999997416e-05, 2.8013999999999817e-05, 2.7749999999999997e-05, 2.7861000000000552e-05, 2.7499999999999747e-05, 2.7763999999999567e-05, 2.748699999999965e-05, 2.794499999999797e-05, 2.7651999999999538e-05, 2.772300000000033e-05, 2.8041999999998957e-05, 2.7665999999999108e-05, 2.7693999999998248e-05, 2.7346999999997013e-05, 2.7637999999999968e-05, 2.7554999999998553e-05, 2.7569000000001592e-05, 2.7652000000003008e-05, 2.716700000000155e-05, 2.7472000000000607e-05, 2.7458000000001037e-05, 2.7222000000000357e-05, 2.7207999999997318e-05, 2.7707999999997818e-05, 2.7430000000001897e-05, 2.79170000000023e-05, 2.7305999999997776e-05, 2.7249999999999497e-05, 2.7736000000000427e-05, 2.743100000000137e-05, 2.712500000000284e-05, 2.8055000000002522e-05, 2.7485999999996708e-05, 2.793100000000187e-05, 2.7556000000001496e-05, 2.744500000000094e-05, 2.7056000000000996e-05, 2.7333000000000912e-05, 2.719500000000069e-05, 2.7124999999999372e-05, 2.8000000000000247e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.595" endtime="20201117 14:41:18.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.590" endtime="20201117 14:41:18.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.600" endtime="20201117 14:41:18.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.603" endtime="20201117 14:41:18.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.602" endtime="20201117 14:41:18.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.598" endtime="20201117 14:41:18.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.235" endtime="20201117 14:41:18.624"></status>
</kw>
<msg timestamp="20201117 14:41:18.624" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.632" endtime="20201117 14:41:18.648"></status>
</kw>
<msg timestamp="20201117 14:41:18.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.631" endtime="20201117 14:41:18.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.650" endtime="20201117 14:41:18.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.652" endtime="20201117 14:41:18.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.628" endtime="20201117 14:41:18.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.626" endtime="20201117 14:41:18.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.662" endtime="20201117 14:41:18.948"></status>
</kw>
<msg timestamp="20201117 14:41:18.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.660" endtime="20201117 14:41:18.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019269917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.952" endtime="20201117 14:41:18.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.961" endtime="20201117 14:41:18.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.658" endtime="20201117 14:41:18.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.656" endtime="20201117 14:41:18.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.967" level="INFO">${RESULT} = [{'time': 0.019297667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7749999999999997e-05, 'source_diff': 2.7749999999999997e-05}, {'time': 0.019333667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:18.964" endtime="20201117 14:41:18.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.981" level="INFO">${ACCURACY} = {'time': [0.019297667, 0.019333667, 0.019370681, 0.019407681, 0.019444694, 0.019478694, 0.019518694, 0.019554778, 0.019589722, 0.019627722, 0.019664722, 0.019699708, 0.019733722, 0.019773736, 0.019813...</msg>
<status status="PASS" starttime="20201117 14:41:18.968" endtime="20201117 14:41:18.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.985" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.984" endtime="20201117 14:41:18.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.988" level="INFO">VALUE: [2.7749999999999997e-05, 2.797299999999711e-05, 2.7570000000001066e-05, 2.7888999999999692e-05, 2.7776999999999663e-05, 2.7250000000002966e-05, 2.7957999999998068e-05, 2.716699999999808e-05, 2.7527999999998887e-05, 2.7388999999999192e-05, 2.7304999999998303e-05, 2.7651999999999538e-05, 2.7457999999997568e-05, 2.7694000000001717e-05, 2.7068999999997623e-05, 2.74170000000018e-05, 2.7777999999999137e-05, 2.8041999999998957e-05, 2.7222000000000357e-05, 2.7875000000000122e-05, 2.740299999999876e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7915999999999358e-05, 2.7388999999999192e-05, 2.718099999999765e-05, 2.7611000000000302e-05, 2.7070000000000566e-05, 2.719500000000069e-05, 2.795900000000101e-05, 2.768099999999815e-05, 2.7291000000002202e-05, 2.748699999999965e-05, 2.7486000000000177e-05, 2.7554999999998553e-05, 2.7374999999999622e-05, 2.7806000000001746e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.7930000000002397e-05, 2.715300000000198e-05, 2.7347000000000482e-05, 2.7486000000000177e-05, 2.7778000000002606e-05, 2.7777999999999137e-05, 2.7972000000001107e-05, 2.7347000000000482e-05, 2.788900000000316e-05, 2.7986000000000677e-05, 2.7514000000002786e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.986" endtime="20201117 14:41:18.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.982" endtime="20201117 14:41:18.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.991" endtime="20201117 14:41:18.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.994" endtime="20201117 14:41:19.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.993" endtime="20201117 14:41:19.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.989" endtime="20201117 14:41:19.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.625" endtime="20201117 14:41:19.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.233" endtime="20201117 14:41:19.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.232" endtime="20201117 14:41:19.016"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.018" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.026" endtime="20201117 14:41:19.042"></status>
</kw>
<msg timestamp="20201117 14:41:19.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.025" endtime="20201117 14:41:19.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.044" endtime="20201117 14:41:19.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.046" endtime="20201117 14:41:19.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.022" endtime="20201117 14:41:19.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.020" endtime="20201117 14:41:19.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.056" endtime="20201117 14:41:19.342"></status>
</kw>
<msg timestamp="20201117 14:41:19.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.054" endtime="20201117 14:41:19.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.346" endtime="20201117 14:41:19.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.354" endtime="20201117 14:41:19.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.052" endtime="20201117 14:41:19.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.049" endtime="20201117 14:41:19.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.361" level="INFO">${RESULT} = [{'time': 0.022737042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.822299999999736e-05, 'source_diff': 2.822299999999736e-05}, {'time': 0.022775056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.357" endtime="20201117 14:41:19.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.375" level="INFO">${ACCURACY} = {'time': [0.022737042, 0.022775056, 0.022809069, 0.022845069, 0.022881069, 0.022922069, 0.022957069, 0.022999083, 0.023035083, 0.023074083, 0.023115097, 0.023151097, 0.023186097, 0.023224097, 0.023262...</msg>
<status status="PASS" starttime="20201117 14:41:19.362" endtime="20201117 14:41:19.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.380" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.379" endtime="20201117 14:41:19.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.382" level="INFO">VALUE: [2.822299999999736e-05, 2.8402999999999762e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8429999999999428e-05, 2.8985999999998208e-05, 2.8666000000000108e-05, 2.8902000000000788e-05, 2.9000000000001247e-05, 2.8457999999998568e-05, 2.8929999999999928e-05, 2.8791000000000233e-05, 2.8750000000000997e-05, 2.8540999999999983e-05, 2.8068999999998623e-05, 2.8250000000000497e-05, 2.868099999999915e-05, 2.8097000000001232e-05, 2.8985999999998208e-05, 2.8846999999998513e-05, 2.8221999999997888e-05, 2.894499999999897e-05, 2.8402999999999762e-05, 2.8305999999998777e-05, 2.841699999999933e-05, 2.8084000000001136e-05, 2.8236000000000927e-05, 2.898700000000115e-05, 2.894499999999897e-05, 2.822300000000083e-05, 2.8791999999999707e-05, 2.8929999999999928e-05, 2.8070000000001566e-05, 2.8611000000001302e-05, 2.8485999999997708e-05, 2.8500000000000747e-05, 2.8847000000001982e-05, 2.8500000000000747e-05, 2.8222000000001357e-05, 2.8957999999999068e-05, 2.8179999999999178e-05, 2.8568999999999123e-05, 2.8389000000000192e-05, 2.87370000000009e-05, 2.8791999999999707e-05, 2.8318999999998873e-05, 2.8486000000001177e-05, 2.8985999999998208e-05, 2.8889000000000692e-05, 2.8485999999997708e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.381" endtime="20201117 14:41:19.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.376" endtime="20201117 14:41:19.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.386" endtime="20201117 14:41:19.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.389" endtime="20201117 14:41:19.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.387" endtime="20201117 14:41:19.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.384" endtime="20201117 14:41:19.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.019" endtime="20201117 14:41:19.410"></status>
</kw>
<msg timestamp="20201117 14:41:19.410" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.418" endtime="20201117 14:41:19.434"></status>
</kw>
<msg timestamp="20201117 14:41:19.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.417" endtime="20201117 14:41:19.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.436" endtime="20201117 14:41:19.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.443" endtime="20201117 14:41:19.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.414" endtime="20201117 14:41:19.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.412" endtime="20201117 14:41:19.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.453" endtime="20201117 14:41:19.738"></status>
</kw>
<msg timestamp="20201117 14:41:19.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.451" endtime="20201117 14:41:19.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019356792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.742" endtime="20201117 14:41:19.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.751" endtime="20201117 14:41:19.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.449" endtime="20201117 14:41:19.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.447" endtime="20201117 14:41:19.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.757" level="INFO">${RESULT} = [{'time': 0.019356792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8306000000002246e-05, 'source_diff': 2.8306000000002246e-05}, {'time': 0.019396806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:19.754" endtime="20201117 14:41:19.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.771" level="INFO">${ACCURACY} = {'time': [0.019356792, 0.019396806, 0.019436819, 0.019474806, 0.019510806, 0.019550819, 0.019590833, 0.019625847, 0.019663833, 0.019699833, 0.019739847, 0.019780861, 0.019820875, 0.019855847, 0.019894...</msg>
<status status="PASS" starttime="20201117 14:41:19.758" endtime="20201117 14:41:19.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.775" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.774" endtime="20201117 14:41:19.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.778" level="INFO">VALUE: [2.8306000000002246e-05, 2.816699999999908e-05, 2.8180000000002647e-05, 2.8291999999999207e-05, 2.8069999999998096e-05, 2.8194000000002217e-05, 2.8749999999997528e-05, 2.8179999999999178e-05, 2.8832999999998943e-05, 2.8304999999999303e-05, 2.8722000000001857e-05, 2.8957999999999068e-05, 2.8264000000000067e-05, 2.8375000000000622e-05, 2.8889000000000692e-05, 2.8500000000000747e-05, 2.8666999999999582e-05, 2.8860999999998083e-05, 2.9040999999997014e-05, 2.8596999999998263e-05, 2.8291999999999207e-05, 2.9014000000000817e-05, 2.866700000000305e-05, 2.8889000000000692e-05, 2.8625000000000872e-05, 2.845899999999804e-05, 2.818100000000212e-05, 2.8472000000001607e-05, 2.89309999999994e-05, 2.869499999999872e-05, 2.8791000000000233e-05, 2.8750000000000997e-05, 2.894499999999897e-05, 2.8527999999999887e-05, 2.8165999999999608e-05, 2.8415999999999858e-05, 2.8583000000002162e-05, 2.9000000000001247e-05, 2.8972000000002107e-05, 2.8097000000001232e-05, 2.8542000000002926e-05, 2.8540999999999983e-05, 2.8570000000002066e-05, 2.8360999999997583e-05, 2.8736000000001427e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8389000000000192e-05, 2.8639000000000442e-05, 2.9000000000001247e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.776" endtime="20201117 14:41:19.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.771" endtime="20201117 14:41:19.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.781" endtime="20201117 14:41:19.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.784" endtime="20201117 14:41:19.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.782" endtime="20201117 14:41:19.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.779" endtime="20201117 14:41:19.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.411" endtime="20201117 14:41:19.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.017" endtime="20201117 14:41:19.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.016" endtime="20201117 14:41:19.805"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.808" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.816" endtime="20201117 14:41:19.832"></status>
</kw>
<msg timestamp="20201117 14:41:19.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.815" endtime="20201117 14:41:19.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.833" endtime="20201117 14:41:19.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.836" endtime="20201117 14:41:19.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.812" endtime="20201117 14:41:19.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.810" endtime="20201117 14:41:19.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.845" endtime="20201117 14:41:20.131"></status>
</kw>
<msg timestamp="20201117 14:41:20.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.843" endtime="20201117 14:41:20.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.135" endtime="20201117 14:41:20.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.143" endtime="20201117 14:41:20.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.841" endtime="20201117 14:41:20.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.839" endtime="20201117 14:41:20.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.150" level="INFO">${RESULT} = [{'time': 0.022322542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9889000000001692e-05, 'source_diff': 2.9889000000001692e-05}, {'time': 0.022362542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:20.147" endtime="20201117 14:41:20.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.164" level="INFO">${ACCURACY} = {'time': [0.022322542, 0.022362542, 0.022398542, 0.022437528, 0.022477528, 0.022516528, 0.022556542, 0.022595542, 0.022632542, 0.022672556, 0.022708556, 0.022745639, 0.022788569, 0.022827597, 0.022865...</msg>
<status status="PASS" starttime="20201117 14:41:20.151" endtime="20201117 14:41:20.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.168" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.167" endtime="20201117 14:41:20.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.171" level="INFO">VALUE: [2.9889000000001692e-05, 2.94309999999999e-05, 2.9889000000001692e-05, 2.9639000000001442e-05, 2.9221999999998888e-05, 2.9389000000001192e-05, 2.9860999999999083e-05, 2.9569999999999597e-05, 2.969499999999972e-05, 2.9931000000000402e-05, 2.9667000000000582e-05, 2.9486000000002177e-05, 2.9944000000000498e-05, 2.9514000000001317e-05, 2.9499999999998278e-05, 2.9694000000000248e-05, 2.9569000000000123e-05, 2.9097000000002232e-05, 2.9318999999999873e-05, 2.9902999999997792e-05, 2.9735999999998958e-05, 2.9749999999998528e-05, 2.9249999999998028e-05, 2.9208000000002787e-05, 2.9278000000000637e-05, 2.9944000000000498e-05, 2.9082999999999193e-05, 2.9931000000000402e-05, 2.919499999999922e-05, 2.9749999999998528e-05, 2.9096999999998763e-05, 2.9569999999999597e-05, 2.9264000000001067e-05, 2.9235999999998458e-05, 2.9263999999997597e-05, 2.9403000000000762e-05, 2.9708000000003287e-05, 2.9292000000000207e-05, 2.9402999999997292e-05, 2.9277999999997167e-05, 2.9819000000000373e-05, 2.9471999999999138e-05, 2.9860999999999083e-05, 3.0014000000001817e-05, 2.9790999999997764e-05, 2.9305000000000303e-05, 2.9499999999998278e-05, 2.9610999999998833e-05, 2.9930000000000928e-05, 2.9153000000000512e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.169" endtime="20201117 14:41:20.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.164" endtime="20201117 14:41:20.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.174" endtime="20201117 14:41:20.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.177" endtime="20201117 14:41:20.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.176" endtime="20201117 14:41:20.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.172" endtime="20201117 14:41:20.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.808" endtime="20201117 14:41:20.198"></status>
</kw>
<msg timestamp="20201117 14:41:20.199" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.207" endtime="20201117 14:41:20.222"></status>
</kw>
<msg timestamp="20201117 14:41:20.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.205" endtime="20201117 14:41:20.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.223" endtime="20201117 14:41:20.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.226" endtime="20201117 14:41:20.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.203" endtime="20201117 14:41:20.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.200" endtime="20201117 14:41:20.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.236" endtime="20201117 14:41:20.522"></status>
</kw>
<msg timestamp="20201117 14:41:20.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019262833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019292028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.234" endtime="20201117 14:41:20.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019262833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019292028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.526" endtime="20201117 14:41:20.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.534" endtime="20201117 14:41:20.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.232" endtime="20201117 14:41:20.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.230" endtime="20201117 14:41:20.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.541" level="INFO">${RESULT} = [{'time': 0.019292028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.919499999999922e-05, 'source_diff': 2.919499999999922e-05}, {'time': 0.019334056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.537" endtime="20201117 14:41:20.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.554" level="INFO">${ACCURACY} = {'time': [0.019292028, 0.019334056, 0.019373, 0.019409028, 0.019448069, 0.019486014, 0.019524028, 0.019560042, 0.019601028, 0.019637069, 0.019674042, 0.019716042, 0.019756056, 0.019798056, 0.019837069...</msg>
<status status="PASS" starttime="20201117 14:41:20.542" endtime="20201117 14:41:20.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.559" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.558" endtime="20201117 14:41:20.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.561" level="INFO">VALUE: [2.919499999999922e-05, 2.948699999999818e-05, 2.9083000000002662e-05, 2.918099999999965e-05, 2.9804999999997334e-05, 2.9028000000000387e-05, 2.9583999999999167e-05, 2.9167000000000082e-05, 2.94309999999999e-05, 2.9500000000001747e-05, 2.9681000000000152e-05, 2.9235999999998458e-05, 2.918099999999965e-05, 2.9764000000001567e-05, 2.9346999999999013e-05, 2.9680000000000678e-05, 2.9360999999998583e-05, 2.9860999999999083e-05, 3.0026999999998444e-05, 2.9068999999999623e-05, 2.9096999999998763e-05, 2.9180000000000178e-05, 2.9610999999998833e-05, 2.9541000000000983e-05, 2.9764000000001567e-05, 2.9583999999999167e-05, 2.9624999999998403e-05, 2.9888999999998223e-05, 2.9819999999999847e-05, 2.9652999999997542e-05, 3.0027999999997917e-05, 2.9874999999998653e-05, 3.0000000000002247e-05, 2.9528000000000887e-05, 2.9902999999997792e-05, 2.9917000000000832e-05, 2.9999999999998778e-05, 2.9639000000001442e-05, 2.9556000000000027e-05, 2.9153000000000512e-05, 2.9416999999996862e-05, 2.9874999999998653e-05, 2.9930000000000928e-05, 2.9958000000000068e-05, 2.9290999999997264e-05, 2.9262999999998124e-05, 2.9263999999997597e-05, 2.9889000000001692e-05, 2.9471999999999138e-05, 2.9861000000002552e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.560" endtime="20201117 14:41:20.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.555" endtime="20201117 14:41:20.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.565" endtime="20201117 14:41:20.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.568" endtime="20201117 14:41:20.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.567" endtime="20201117 14:41:20.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.563" endtime="20201117 14:41:20.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.199" endtime="20201117 14:41:20.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.806" endtime="20201117 14:41:20.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.806" endtime="20201117 14:41:20.589"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.592" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.600" endtime="20201117 14:41:20.618"></status>
</kw>
<msg timestamp="20201117 14:41:20.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.598" endtime="20201117 14:41:20.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.619" endtime="20201117 14:41:20.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.622" endtime="20201117 14:41:20.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.596" endtime="20201117 14:41:20.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.594" endtime="20201117 14:41:20.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.631" endtime="20201117 14:41:20.916"></status>
</kw>
<msg timestamp="20201117 14:41:20.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.629" endtime="20201117 14:41:20.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.920" endtime="20201117 14:41:20.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.928" endtime="20201117 14:41:20.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.627" endtime="20201117 14:41:20.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.625" endtime="20201117 14:41:20.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.935" level="INFO">${RESULT} = [{'time': 0.023589681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.101400000000282e-05, 'source_diff': 3.101400000000282e-05}, {'time': 0.023632639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.932" endtime="20201117 14:41:20.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.950" level="INFO">${ACCURACY} = {'time': [0.023589681, 0.023632639, 0.023673625, 0.023714625, 0.023757653, 0.023796639, 0.023839694, 0.023878708, 0.023920653, 0.023960653, 0.024000667, 0.024037694, 0.024076681, 0.024113708, 0.024156...</msg>
<status status="PASS" starttime="20201117 14:41:20.936" endtime="20201117 14:41:20.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.955" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.954" endtime="20201117 14:41:20.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.957" level="INFO">VALUE: [3.101400000000282e-05, 3.0235999999999458e-05, 3.083300000000094e-05, 3.0431000000000902e-05, 3.07639999999991e-05, 3.05700000000006e-05, 3.0361000000003052e-05, 3.1026999999999444e-05, 3.0167000000001082e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.017999999999771e-05, 3.048699999999918e-05, 3.0221999999999888e-05, 3.0070000000000097e-05, 3.07370000000029e-05, 3.070799999999735e-05, 3.099999999999978e-05, 3.0776999999999194e-05, 3.016599999999814e-05, 3.086100000000008e-05, 3.0292000000001207e-05, 3.0347000000000013e-05, 3.0096999999999763e-05, 3.0194000000000748e-05, 3.0472000000000138e-05, 3.099999999999978e-05, 3.0166999999997612e-05, 3.0110999999999333e-05, 3.072199999999692e-05, 3.098600000000021e-05, 3.072200000000039e-05, 3.10700000000011e-05, 3.073599999999996e-05, 3.045900000000004e-05, 3.084700000000051e-05, 3.0847999999999987e-05, 3.088899999999922e-05, 3.088799999999975e-05, 3.072200000000039e-05, 3.091600000000236e-05, 3.09449999999975e-05, 3.0111000000002802e-05, 3.0152000000002038e-05, 3.091600000000236e-05, 3.0374999999999153e-05, 3.055500000000155e-05, 3.0374999999999153e-05, 3.1098000000000237e-05, 3.079100000000223e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.956" endtime="20201117 14:41:20.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.951" endtime="20201117 14:41:20.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.961" endtime="20201117 14:41:20.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.964" endtime="20201117 14:41:20.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.962" endtime="20201117 14:41:20.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.959" endtime="20201117 14:41:20.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.592" endtime="20201117 14:41:20.985"></status>
</kw>
<msg timestamp="20201117 14:41:20.985" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.993" endtime="20201117 14:41:21.009"></status>
</kw>
<msg timestamp="20201117 14:41:21.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.992" endtime="20201117 14:41:21.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.010" endtime="20201117 14:41:21.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.013" endtime="20201117 14:41:21.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.989" endtime="20201117 14:41:21.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.987" endtime="20201117 14:41:21.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.023" endtime="20201117 14:41:21.308"></status>
</kw>
<msg timestamp="20201117 14:41:21.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.021" endtime="20201117 14:41:21.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.312" endtime="20201117 14:41:21.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.320" endtime="20201117 14:41:21.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.019" endtime="20201117 14:41:21.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.017" endtime="20201117 14:41:21.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.327" level="INFO">${RESULT} = [{'time': 0.019374056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0499999999999278e-05, 'source_diff': 3.0499999999999278e-05}, {'time': 0.019418042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:21.324" endtime="20201117 14:41:21.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.340" level="INFO">${ACCURACY} = {'time': [0.019374056, 0.019418042, 0.019458056, 0.019501083, 0.019538056, 0.019580097, 0.019620069, 0.019658069, 0.019701083, 0.019745083, 0.019785083, 0.019826111, 0.019864111, 0.019908111, 0.019947...</msg>
<status status="PASS" starttime="20201117 14:41:21.328" endtime="20201117 14:41:21.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.345" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.344" endtime="20201117 14:41:21.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.348" level="INFO">VALUE: [3.0499999999999278e-05, 3.098600000000021e-05, 3.082000000000085e-05, 3.0472000000000138e-05, 3.044500000000047e-05, 3.088900000000269e-05, 3.099999999999978e-05, 3.0069000000000623e-05, 3.072200000000039e-05, 3.07639999999991e-05, 3.040199999999882e-05, 3.0221999999999888e-05, 3.056900000000112e-05, 3.077799999999867e-05, 3.07639999999991e-05, 3.084700000000051e-05, 3.0096999999999763e-05, 3.066699999999811e-05, 3.0403000000001762e-05, 3.09310000000014e-05, 3.086100000000008e-05, 3.065299999999854e-05, 3.0055999999997057e-05, 3.044500000000047e-05, 3.052799999999842e-05, 3.073599999999996e-05, 3.0249999999999028e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.090299999999879e-05, 3.041599999999839e-05, 3.0347000000000013e-05, 3.09579999999976e-05, 3.038799999999925e-05, 3.0485999999999708e-05, 3.098600000000021e-05, 3.0554999999998084e-05, 3.0139000000001942e-05, 3.0069000000000623e-05, 3.0167000000001082e-05, 3.0416000000001858e-05, 3.0083000000000193e-05, 3.0554999999998084e-05, 3.0444000000000998e-05, 3.097200000000064e-05, 3.0832999999997474e-05, 3.097200000000064e-05, 3.055600000000103e-05, 3.0166999999997612e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.346" endtime="20201117 14:41:21.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.342" endtime="20201117 14:41:21.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.351" endtime="20201117 14:41:21.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.354" endtime="20201117 14:41:21.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.353" endtime="20201117 14:41:21.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.349" endtime="20201117 14:41:21.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.986" endtime="20201117 14:41:21.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.590" endtime="20201117 14:41:21.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.590" endtime="20201117 14:41:21.376"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.378" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.386" endtime="20201117 14:41:21.402"></status>
</kw>
<msg timestamp="20201117 14:41:21.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.385" endtime="20201117 14:41:21.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.403" endtime="20201117 14:41:21.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.406" endtime="20201117 14:41:21.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.382" endtime="20201117 14:41:21.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.380" endtime="20201117 14:41:21.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.415" endtime="20201117 14:41:21.700"></status>
</kw>
<msg timestamp="20201117 14:41:21.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.414" endtime="20201117 14:41:21.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.704" endtime="20201117 14:41:21.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.712" endtime="20201117 14:41:21.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.411" endtime="20201117 14:41:21.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.409" endtime="20201117 14:41:21.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.719" level="INFO">${RESULT} = [{'time': 0.021830806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.118100000000165e-05, 'source_diff': 3.118100000000165e-05}, {'time': 0.021868806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:21.716" endtime="20201117 14:41:21.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.732" level="INFO">${ACCURACY} = {'time': [0.021830806, 0.021868806, 0.021910833, 0.021952819, 0.021996847, 0.022039861, 0.022079833, 0.022121861, 0.022158903, 0.022198847, 0.022240847, 0.022279861, 0.022321861, 0.022365889, 0.022403...</msg>
<status status="PASS" starttime="20201117 14:41:21.720" endtime="20201117 14:41:21.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.737" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.736" endtime="20201117 14:41:21.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.739" level="INFO">VALUE: [3.118100000000165e-05, 3.123699999999993e-05, 3.111100000000033e-05, 3.140199999999982e-05, 3.197200000000164e-05, 3.190299999999979e-05, 3.17640000000001e-05, 3.140299999999929e-05, 3.123600000000046e-05, 3.197200000000164e-05, 3.161100000000083e-05, 3.13050000000023e-05, 3.141699999999886e-05, 3.180599999999881e-05, 3.12639999999996e-05, 3.123599999999699e-05, 3.14579999999981e-05, 3.19579999999986e-05, 3.198600000000121e-05, 3.163899999999997e-05, 3.166699999999911e-05, 3.122200000000089e-05, 3.14310000000019e-05, 3.132000000000135e-05, 3.1098000000000237e-05, 3.115199999999957e-05, 3.179199999999924e-05, 3.16250000000004e-05, 3.151399999999985e-05, 3.138800000000025e-05, 3.1304999999998834e-05, 3.194399999999903e-05, 3.198600000000121e-05, 3.148600000000071e-05, 3.138899999999972e-05, 3.159700000000126e-05, 3.177799999999967e-05, 3.174999999999706e-05, 3.115299999999904e-05, 3.180599999999881e-05, 3.12639999999996e-05, 3.15700000000016e-05, 3.104199999999849e-05, 3.191699999999936e-05, 3.1860999999997613e-05, 3.1082999999997724e-05, 3.163899999999997e-05, 3.151399999999985e-05, 3.17640000000001e-05, 3.19449999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.738" endtime="20201117 14:41:21.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.733" endtime="20201117 14:41:21.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.742" endtime="20201117 14:41:21.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.746" endtime="20201117 14:41:21.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.744" endtime="20201117 14:41:21.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.741" endtime="20201117 14:41:21.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.378" endtime="20201117 14:41:21.767"></status>
</kw>
<msg timestamp="20201117 14:41:21.767" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.775" endtime="20201117 14:41:21.790"></status>
</kw>
<msg timestamp="20201117 14:41:21.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.774" endtime="20201117 14:41:21.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.791" endtime="20201117 14:41:21.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.794" endtime="20201117 14:41:21.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.771" endtime="20201117 14:41:21.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.769" endtime="20201117 14:41:21.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.804" endtime="20201117 14:41:22.089"></status>
</kw>
<msg timestamp="20201117 14:41:22.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.802" endtime="20201117 14:41:22.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.093" endtime="20201117 14:41:22.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.102" endtime="20201117 14:41:22.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.800" endtime="20201117 14:41:22.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.798" endtime="20201117 14:41:22.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.108" level="INFO">${RESULT} = [{'time': 0.019290819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.148600000000071e-05, 'source_diff': 3.148600000000071e-05}, {'time': 0.019332833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.105" endtime="20201117 14:41:22.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.122" level="INFO">${ACCURACY} = {'time': [0.019290819, 0.019332833, 0.019377861, 0.019421847, 0.019459833, 0.019500847, 0.019544903, 0.019584861, 0.019623861, 0.019665875, 0.019709875, 0.019753889, 0.019792875, 0.019833889, 0.019871...</msg>
<status status="PASS" starttime="20201117 14:41:22.109" endtime="20201117 14:41:22.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.126" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.125" endtime="20201117 14:41:22.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.129" level="INFO">VALUE: [3.148600000000071e-05, 3.145800000000157e-05, 3.1832999999998474e-05, 3.144399999999853e-05, 3.190200000000032e-05, 3.131900000000187e-05, 3.129199999999874e-05, 3.1096999999997293e-05, 3.197199999999817e-05, 3.1318999999998404e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.201400000000035e-05, 3.11249999999999e-05, 3.120900000000079e-05, 3.10700000000011e-05, 3.122200000000089e-05, 3.132000000000135e-05, 3.183399999999795e-05, 3.119500000000122e-05, 3.170799999999835e-05, 3.187500000000065e-05, 3.154199999999899e-05, 3.168099999999868e-05, 3.169499999999825e-05, 3.111099999999686e-05, 3.19440000000025e-05, 3.172199999999792e-05, 3.17640000000001e-05, 3.119400000000175e-05, 3.165299999999954e-05, 3.116599999999914e-05, 3.167999999999921e-05, 3.136100000000058e-05, 3.118100000000165e-05, 3.147199999999767e-05, 3.113899999999947e-05, 3.129200000000221e-05, 3.122200000000089e-05, 3.17640000000001e-05, 3.122199999999742e-05, 3.175000000000053e-05, 3.197200000000164e-05, 3.150000000000028e-05, 3.191700000000283e-05, 3.120899999999732e-05, 3.182000000000185e-05, 3.150000000000028e-05, 3.165300000000301e-05, 3.167999999999921e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.127" endtime="20201117 14:41:22.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.123" endtime="20201117 14:41:22.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.132" endtime="20201117 14:41:22.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.135" endtime="20201117 14:41:22.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.134" endtime="20201117 14:41:22.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.130" endtime="20201117 14:41:22.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.767" endtime="20201117 14:41:22.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.377" endtime="20201117 14:41:22.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.376" endtime="20201117 14:41:22.157"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.159" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.167" endtime="20201117 14:41:22.183"></status>
</kw>
<msg timestamp="20201117 14:41:22.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.166" endtime="20201117 14:41:22.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.185" endtime="20201117 14:41:22.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.187" endtime="20201117 14:41:22.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.163" endtime="20201117 14:41:22.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.161" endtime="20201117 14:41:22.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.197" endtime="20201117 14:41:22.482"></status>
</kw>
<msg timestamp="20201117 14:41:22.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.195" endtime="20201117 14:41:22.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.487" endtime="20201117 14:41:22.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.495" endtime="20201117 14:41:22.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.192" endtime="20201117 14:41:22.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.190" endtime="20201117 14:41:22.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.501" level="INFO">${RESULT} = [{'time': 0.022644125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.300000000000178e-05, 'source_diff': 3.300000000000178e-05}, {'time': 0.022688139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.498" endtime="20201117 14:41:22.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.516" level="INFO">${ACCURACY} = {'time': [0.022644125, 0.022688139, 0.022729139, 0.022769139, 0.022808139, 0.022853153, 0.022894167, 0.022936167, 0.022980167, 0.023022181, 0.023066167, 0.023105194, 0.023147208, 0.023185194, 0.023224...</msg>
<status status="PASS" starttime="20201117 14:41:22.502" endtime="20201117 14:41:22.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.520" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.519" endtime="20201117 14:41:22.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.523" level="INFO">VALUE: [3.300000000000178e-05, 3.291700000000036e-05, 3.2346999999998544e-05, 3.248600000000171e-05, 3.218100000000265e-05, 3.20700000000021e-05, 3.254199999999999e-05, 3.209800000000124e-05, 3.219499999999875e-05, 3.241699999999986e-05, 3.266700000000011e-05, 3.224999999999756e-05, 3.2832999999999474e-05, 3.222199999999842e-05, 3.219399999999928e-05, 3.209700000000176e-05, 3.219399999999928e-05, 3.2277000000000694e-05, 3.261100000000183e-05, 3.2527000000000944e-05, 3.275000000000153e-05, 3.217999999999971e-05, 3.227800000000017e-05, 3.2068999999999154e-05, 3.225000000000103e-05, 3.2832999999999474e-05, 3.255599999999956e-05, 3.298599999999874e-05, 3.298599999999874e-05, 3.288900000000122e-05, 3.222200000000189e-05, 3.295899999999907e-05, 3.27779999999972e-05, 3.2138999999997e-05, 3.302800000000092e-05, 3.27640000000011e-05, 3.247299999999814e-05, 3.24579999999991e-05, 3.240200000000082e-05, 3.2068999999999154e-05, 3.2555000000000084e-05, 3.290200000000132e-05, 3.288900000000122e-05, 3.223600000000146e-05, 3.2318999999999404e-05, 3.2068999999999154e-05, 3.272199999999892e-05, 3.2790999999997295e-05, 3.240300000000029e-05, 3.2332999999998974e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.521" endtime="20201117 14:41:22.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.517" endtime="20201117 14:41:22.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.526" endtime="20201117 14:41:22.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.529" endtime="20201117 14:41:22.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.528" endtime="20201117 14:41:22.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.524" endtime="20201117 14:41:22.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.159" endtime="20201117 14:41:22.550"></status>
</kw>
<msg timestamp="20201117 14:41:22.550" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.559" endtime="20201117 14:41:22.573"></status>
</kw>
<msg timestamp="20201117 14:41:22.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.557" endtime="20201117 14:41:22.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.575" endtime="20201117 14:41:22.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.578" endtime="20201117 14:41:22.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.554" endtime="20201117 14:41:22.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.552" endtime="20201117 14:41:22.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.588" endtime="20201117 14:41:22.873"></status>
</kw>
<msg timestamp="20201117 14:41:22.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.586" endtime="20201117 14:41:22.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.877" endtime="20201117 14:41:22.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.886" endtime="20201117 14:41:22.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.584" endtime="20201117 14:41:22.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.582" endtime="20201117 14:41:22.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.892" level="INFO">${RESULT} = [{'time': 0.019345319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.215200000000057e-05, 'source_diff': 3.215200000000057e-05}, {'time': 0.019388375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.889" endtime="20201117 14:41:22.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.906" level="INFO">${ACCURACY} = {'time': [0.019345319, 0.019388375, 0.019432333, 0.019476319, 0.019515333, 0.019556333, 0.019598347, 0.019638361, 0.019680347, 0.019722347, 0.019767361, 0.019807361, 0.019851361, 0.019896375, 0.019934...</msg>
<status status="PASS" starttime="20201117 14:41:22.893" endtime="20201117 14:41:22.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.911" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.909" endtime="20201117 14:41:22.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.913" level="INFO">VALUE: [3.215200000000057e-05, 3.294400000000003e-05, 3.29579999999996e-05, 3.269399999999978e-05, 3.273599999999849e-05, 3.2318999999999404e-05, 3.2318999999999404e-05, 3.252800000000042e-05, 3.236100000000158e-05, 3.231900000000287e-05, 3.270799999999935e-05, 3.270799999999935e-05, 3.22640000000006e-05, 3.272200000000239e-05, 3.215300000000004e-05, 3.268099999999968e-05, 3.297199999999917e-05, 3.24310000000029e-05, 3.291700000000036e-05, 3.279200000000024e-05, 3.266700000000011e-05, 3.273599999999849e-05, 3.295899999999907e-05, 3.2444999999999e-05, 3.298700000000168e-05, 3.300000000000178e-05, 3.240300000000029e-05, 3.2568999999999654e-05, 3.215200000000057e-05, 3.213799999999753e-05, 3.208300000000219e-05, 3.2068999999999154e-05, 3.266600000000064e-05, 3.272200000000239e-05, 3.219399999999928e-05, 3.301400000000135e-05, 3.2555000000000084e-05, 3.2096999999998294e-05, 3.2832999999999474e-05, 3.223599999999799e-05, 3.269399999999978e-05, 3.301400000000135e-05, 3.218099999999918e-05, 3.286100000000208e-05, 3.225000000000103e-05, 3.290300000000079e-05, 3.245900000000204e-05, 3.2846999999999044e-05, 3.283399999999895e-05, 3.238900000000072e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.912" endtime="20201117 14:41:22.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.907" endtime="20201117 14:41:22.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.917" endtime="20201117 14:41:22.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.920" endtime="20201117 14:41:22.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.919" endtime="20201117 14:41:22.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.915" endtime="20201117 14:41:22.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.551" endtime="20201117 14:41:22.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.158" endtime="20201117 14:41:22.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.157" endtime="20201117 14:41:22.941"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.944" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.952" endtime="20201117 14:41:22.969"></status>
</kw>
<msg timestamp="20201117 14:41:22.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.951" endtime="20201117 14:41:22.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.971" endtime="20201117 14:41:22.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.973" endtime="20201117 14:41:22.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.948" endtime="20201117 14:41:22.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.946" endtime="20201117 14:41:22.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.982" endtime="20201117 14:41:23.268"></status>
</kw>
<msg timestamp="20201117 14:41:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.981" endtime="20201117 14:41:23.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.272" endtime="20201117 14:41:23.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.280" endtime="20201117 14:41:23.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.978" endtime="20201117 14:41:23.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.977" endtime="20201117 14:41:23.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.287" level="INFO">${RESULT} = [{'time': 0.023090542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.341699999999739e-05, 'source_diff': 3.341699999999739e-05}, {'time': 0.023137528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.284" endtime="20201117 14:41:23.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.300" level="INFO">${ACCURACY} = {'time': [0.023090542, 0.023137528, 0.023179528, 0.023220542, 0.023265556, 0.023310542, 0.023351556, 0.023398569, 0.023445556, 0.023485569, 0.023526597, 0.023572611, 0.023615597, 0.023656667, 0.023700...</msg>
<status status="PASS" starttime="20201117 14:41:23.288" endtime="20201117 14:41:23.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.305" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.304" endtime="20201117 14:41:23.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.307" level="INFO">VALUE: [3.341699999999739e-05, 3.382000000000038e-05, 3.404200000000149e-05, 3.345899999999957e-05, 3.324999999999856e-05, 3.384799999999952e-05, 3.354199999999752e-05, 3.3763000000002624e-05, 3.382000000000038e-05, 3.366600000000164e-05, 3.3541000000001514e-05, 3.341700000000086e-05, 3.3832999999997004e-05, 3.329200000000074e-05, 3.3860999999999614e-05, 3.31250000000019e-05, 3.3860999999999614e-05, 3.36250000000024e-05, 3.341700000000086e-05, 3.395799999999713e-05, 3.382000000000038e-05, 3.397200000000017e-05, 3.355600000000056e-05, 3.372199999999992e-05, 3.32640000000016e-05, 3.399999999999931e-05, 3.3388999999998253e-05, 3.397299999999964e-05, 3.323700000000193e-05, 3.343099999999696e-05, 3.383399999999995e-05, 3.349999999999881e-05, 3.397200000000017e-05, 3.37640000000021e-05, 3.369400000000078e-05, 3.3569000000000654e-05, 3.336100000000258e-05, 3.323599999999899e-05, 3.3124999999998433e-05, 3.3445e-05, 3.319400000000028e-05, 3.3790999999998295e-05, 3.3319000000000404e-05, 3.344399999999706e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.3833000000000474e-05, 3.394400000000103e-05, 3.298600000000221e-05, 3.401400000000235e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.306" endtime="20201117 14:41:23.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.301" endtime="20201117 14:41:23.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.310" endtime="20201117 14:41:23.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.314" endtime="20201117 14:41:23.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.312" endtime="20201117 14:41:23.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.309" endtime="20201117 14:41:23.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.944" endtime="20201117 14:41:23.335"></status>
</kw>
<msg timestamp="20201117 14:41:23.335" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.344" endtime="20201117 14:41:23.359"></status>
</kw>
<msg timestamp="20201117 14:41:23.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.342" endtime="20201117 14:41:23.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.361" endtime="20201117 14:41:23.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.363" endtime="20201117 14:41:23.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.339" endtime="20201117 14:41:23.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.337" endtime="20201117 14:41:23.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.373" endtime="20201117 14:41:23.659"></status>
</kw>
<msg timestamp="20201117 14:41:23.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:23.372" endtime="20201117 14:41:23.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:23.663" endtime="20201117 14:41:23.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.671" endtime="20201117 14:41:23.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.369" endtime="20201117 14:41:23.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.368" endtime="20201117 14:41:23.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.678" level="INFO">${RESULT} = [{'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.369400000000078e-05, 'source_diff': 3.369400000000078e-05}, {'time': 0.019856639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.675" endtime="20201117 14:41:23.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.691" level="INFO">${ACCURACY} = {'time': [0.019811694, 0.019856639, 0.019896667, 0.019940639, 0.019983653, 0.020027653, 0.020071653, 0.020110653, 0.020150667, 0.020196681, 0.020238722, 0.020279681, 0.020324681, 0.020371694, 0.020414...</msg>
<status status="PASS" starttime="20201117 14:41:23.679" endtime="20201117 14:41:23.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.696" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.695" endtime="20201117 14:41:23.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.698" level="INFO">VALUE: [3.369400000000078e-05, 3.349999999999881e-05, 3.369500000000025e-05, 3.390299999999832e-05, 3.379200000000124e-05, 3.369500000000025e-05, 3.315299999999757e-05, 3.3138999999998e-05, 3.351400000000185e-05, 3.348700000000218e-05, 3.341600000000139e-05, 3.402800000000192e-05, 3.347299999999914e-05, 3.370800000000035e-05, 3.3319000000000404e-05, 3.3276999999998225e-05, 3.344400000000053e-05, 3.399999999999931e-05, 3.3319000000000404e-05, 3.338900000000172e-05, 3.39580000000006e-05, 3.338900000000172e-05, 3.352799999999795e-05, 3.3124999999998433e-05, 3.402799999999845e-05, 3.318100000000018e-05, 3.341700000000086e-05, 3.393100000000093e-05, 3.39450000000005e-05, 3.375000000000253e-05, 3.369500000000025e-05, 3.393100000000093e-05, 3.390300000000179e-05, 3.341700000000086e-05, 3.343100000000043e-05, 3.370899999999982e-05, 3.4040999999998545e-05, 3.316700000000061e-05, 3.363900000000197e-05, 3.370800000000035e-05, 3.372199999999992e-05, 3.3541000000001514e-05, 3.393000000000146e-05, 3.370800000000035e-05, 3.338900000000172e-05, 3.373599999999949e-05, 3.3555000000001084e-05, 3.313900000000147e-05, 3.3833000000000474e-05, 3.3346999999999544e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.697" endtime="20201117 14:41:23.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.692" endtime="20201117 14:41:23.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.702" endtime="20201117 14:41:23.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.706" endtime="20201117 14:41:23.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.704" endtime="20201117 14:41:23.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.700" endtime="20201117 14:41:23.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.336" endtime="20201117 14:41:23.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.942" endtime="20201117 14:41:23.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.942" endtime="20201117 14:41:23.727"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.729" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.737" endtime="20201117 14:41:23.753"></status>
</kw>
<msg timestamp="20201117 14:41:23.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.736" endtime="20201117 14:41:23.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.755" endtime="20201117 14:41:23.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.757" endtime="20201117 14:41:23.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.733" endtime="20201117 14:41:23.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.731" endtime="20201117 14:41:23.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.766" endtime="20201117 14:41:24.052"></status>
</kw>
<msg timestamp="20201117 14:41:24.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.765" endtime="20201117 14:41:24.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.056" endtime="20201117 14:41:24.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.064" endtime="20201117 14:41:24.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.762" endtime="20201117 14:41:24.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.761" endtime="20201117 14:41:24.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.071" level="INFO">${RESULT} = [{'time': 0.022682694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4319000000001404e-05, 'source_diff': 3.4319000000001404e-05}, {'time': 0.022725708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:24.068" endtime="20201117 14:41:24.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.086" level="INFO">${ACCURACY} = {'time': [0.022682694, 0.022725708, 0.022771722, 0.022816736, 0.022863722, 0.022907736, 0.022947736, 0.022988736, 0.02303275, 0.02307375, 0.023120819, 0.023161764, 0.023204764, 0.023252833, 0.02329677...</msg>
<status status="PASS" starttime="20201117 14:41:24.072" endtime="20201117 14:41:24.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.090" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.089" endtime="20201117 14:41:24.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.093" level="INFO">VALUE: [3.4319000000001404e-05, 3.4833000000001474e-05, 3.420800000000085e-05, 3.447200000000067e-05, 3.473600000000049e-05, 3.4319000000001404e-05, 3.416699999999814e-05, 3.470799999999788e-05, 3.441700000000186e-05, 3.451399999999938e-05, 3.4555000000002084e-05, 3.498600000000074e-05, 3.404199999999802e-05, 3.4888999999999754e-05, 3.4652999999999073e-05, 3.447200000000067e-05, 3.438900000000272e-05, 3.473599999999702e-05, 3.4402999999998823e-05, 3.424999999999956e-05, 3.409799999999977e-05, 3.447300000000014e-05, 3.484799999999705e-05, 3.494400000000203e-05, 3.422200000000042e-05, 3.4861000000000614e-05, 3.491599999999942e-05, 3.423599999999999e-05, 3.469399999999831e-05, 3.47779999999992e-05, 3.420800000000085e-05, 3.4097000000000294e-05, 3.415300000000204e-05, 3.502799999999945e-05, 3.451399999999938e-05, 3.423599999999999e-05, 3.469500000000125e-05, 3.427800000000217e-05, 3.473599999999702e-05, 3.493100000000193e-05, 3.416700000000161e-05, 3.415300000000204e-05, 3.444499999999753e-05, 3.409800000000324e-05, 3.4388999999999253e-05, 3.500000000000031e-05, 3.449999999999981e-05, 3.416700000000161e-05, 3.4055000000001584e-05, 3.476399999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.091" endtime="20201117 14:41:24.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.087" endtime="20201117 14:41:24.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.096" endtime="20201117 14:41:24.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.100" endtime="20201117 14:41:24.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.098" endtime="20201117 14:41:24.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.094" endtime="20201117 14:41:24.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.730" endtime="20201117 14:41:24.120"></status>
</kw>
<msg timestamp="20201117 14:41:24.121" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.129" endtime="20201117 14:41:24.144"></status>
</kw>
<msg timestamp="20201117 14:41:24.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.127" endtime="20201117 14:41:24.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.146" endtime="20201117 14:41:24.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.148" endtime="20201117 14:41:24.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.125" endtime="20201117 14:41:24.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.123" endtime="20201117 14:41:24.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.158" endtime="20201117 14:41:24.444"></status>
</kw>
<msg timestamp="20201117 14:41:24.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019502708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.157" endtime="20201117 14:41:24.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019502708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.448" endtime="20201117 14:41:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.456" endtime="20201117 14:41:24.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.154" endtime="20201117 14:41:24.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.152" endtime="20201117 14:41:24.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.463" level="INFO">${RESULT} = [{'time': 0.019502708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4847000000001044e-05, 'source_diff': 3.4847000000001044e-05}, {'time': 0.019544722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:24.459" endtime="20201117 14:41:24.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.476" level="INFO">${ACCURACY} = {'time': [0.019502708, 0.019544722, 0.019591722, 0.019633736, 0.019680736, 0.019722736, 0.019769736, 0.01981575, 0.019855764, 0.019896792, 0.019942778, 0.019982778, 0.020024792, 0.020067819, 0.0201117...</msg>
<status status="PASS" starttime="20201117 14:41:24.464" endtime="20201117 14:41:24.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.481" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.480" endtime="20201117 14:41:24.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.483" level="INFO">VALUE: [3.4847000000001044e-05, 3.468000000000221e-05, 3.423599999999999e-05, 3.444399999999806e-05, 3.491700000000236e-05, 3.49580000000016e-05, 3.467999999999874e-05, 3.424999999999956e-05, 3.415300000000204e-05, 3.443100000000143e-05, 3.4445000000001e-05, 3.419500000000075e-05, 3.472300000000039e-05, 3.4333000000000974e-05, 3.40840000000002e-05, 3.4512999999999905e-05, 3.422299999999989e-05, 3.476399999999963e-05, 3.491699999999889e-05, 3.49580000000016e-05, 3.4388999999999253e-05, 3.420799999999738e-05, 3.4512999999999905e-05, 3.4374999999999684e-05, 3.494400000000203e-05, 3.4318999999997934e-05, 3.495799999999813e-05, 3.4569000000001654e-05, 3.42640000000026e-05, 3.444400000000153e-05, 3.49719999999977e-05, 3.47779999999992e-05, 3.47779999999992e-05, 3.4861000000000614e-05, 3.4138999999999003e-05, 3.429200000000174e-05, 3.49580000000016e-05, 3.429199999999827e-05, 3.468100000000168e-05, 3.418100000000118e-05, 3.4624999999999934e-05, 3.4652999999999073e-05, 3.407000000000063e-05, 3.500000000000031e-05, 3.416700000000161e-05, 3.4097000000000294e-05, 3.443000000000196e-05, 3.423599999999999e-05, 3.4611000000000364e-05, 3.444399999999806e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.482" endtime="20201117 14:41:24.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.477" endtime="20201117 14:41:24.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.492" endtime="20201117 14:41:24.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.496" endtime="20201117 14:41:24.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.494" endtime="20201117 14:41:24.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.491" endtime="20201117 14:41:24.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.121" endtime="20201117 14:41:24.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.728" endtime="20201117 14:41:24.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.727" endtime="20201117 14:41:24.517"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.519" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.528" endtime="20201117 14:41:24.543"></status>
</kw>
<msg timestamp="20201117 14:41:24.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.526" endtime="20201117 14:41:24.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.545" endtime="20201117 14:41:24.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.547" endtime="20201117 14:41:24.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.523" endtime="20201117 14:41:24.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.521" endtime="20201117 14:41:24.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.556" endtime="20201117 14:41:24.841"></status>
</kw>
<msg timestamp="20201117 14:41:24.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.555" endtime="20201117 14:41:24.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.846" endtime="20201117 14:41:24.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.854" endtime="20201117 14:41:24.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.552" endtime="20201117 14:41:24.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.551" endtime="20201117 14:41:24.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.860" level="INFO">${RESULT} = [{'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5402999999999823e-05, 'source_diff': 3.5402999999999823e-05}, {'time': 0.021842153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:24.857" endtime="20201117 14:41:24.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.874" level="INFO">${ACCURACY} = {'time': [0.021800139, 0.021842153, 0.021886153, 0.021931153, 0.021979167, 0.022021167, 0.022065181, 0.022109194, 0.022158194, 0.022201181, 0.022248208, 0.022296194, 0.022341208, 0.022389222, 0.022438...</msg>
<status status="PASS" starttime="20201117 14:41:24.861" endtime="20201117 14:41:24.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.878" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.877" endtime="20201117 14:41:24.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.881" level="INFO">VALUE: [3.5402999999999823e-05, 3.543099999999896e-05, 3.505599999999859e-05, 3.5374999999997214e-05, 3.526400000000013e-05, 3.5639000000000504e-05, 3.504199999999902e-05, 3.5277000000000225e-05, 3.5777000000000725e-05, 3.552799999999995e-05, 3.5276999999996755e-05, 3.595799999999913e-05, 3.5847000000002044e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.592999999999999e-05, 3.5389000000000254e-05, 3.5804999999999865e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.524999999999709e-05, 3.601399999999741e-05, 3.572199999999845e-05, 3.576400000000063e-05, 3.554199999999952e-05, 3.572200000000192e-05, 3.573599999999802e-05, 3.533400000000145e-05, 3.570900000000182e-05, 3.5666999999999643e-05, 3.554199999999952e-05, 3.557000000000213e-05, 3.520800000000185e-05, 3.567999999999974e-05, 3.5110999999997394e-05, 3.513800000000053e-05, 3.567999999999974e-05, 3.544399999999906e-05, 3.566600000000017e-05, 3.5875000000001184e-05, 3.5804999999999865e-05, 3.52779999999997e-05, 3.574999999999759e-05, 3.519500000000175e-05, 3.52779999999997e-05, 3.5818999999999435e-05, 3.594499999999903e-05, 3.59580000000026e-05, 3.522199999999795e-05, 3.579199999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.879" endtime="20201117 14:41:24.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.875" endtime="20201117 14:41:24.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.885" endtime="20201117 14:41:24.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.888" endtime="20201117 14:41:24.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.886" endtime="20201117 14:41:24.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.883" endtime="20201117 14:41:24.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.520" endtime="20201117 14:41:24.909"></status>
</kw>
<msg timestamp="20201117 14:41:24.909" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.917" endtime="20201117 14:41:24.932"></status>
</kw>
<msg timestamp="20201117 14:41:24.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.916" endtime="20201117 14:41:24.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.934" endtime="20201117 14:41:24.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.936" endtime="20201117 14:41:24.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.913" endtime="20201117 14:41:24.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.911" endtime="20201117 14:41:24.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.947" endtime="20201117 14:41:25.233"></status>
</kw>
<msg timestamp="20201117 14:41:25.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.946" endtime="20201117 14:41:25.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.238" endtime="20201117 14:41:25.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.246" endtime="20201117 14:41:25.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.943" endtime="20201117 14:41:25.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.941" endtime="20201117 14:41:25.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.252" level="INFO">${RESULT} = [{'time': 0.019364889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5097000000001294e-05, 'source_diff': 3.5097000000001294e-05}, {'time': 0.019406861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:25.249" endtime="20201117 14:41:25.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.266" level="INFO">${ACCURACY} = {'time': [0.019364889, 0.019406861, 0.019453875, 0.019501875, 0.019547917, 0.019594917, 0.019643889, 0.019687917, 0.019734903, 0.019777903, 0.019821944, 0.019862972, 0.019910944, 0.019958944, 0.020002...</msg>
<status status="PASS" starttime="20201117 14:41:25.253" endtime="20201117 14:41:25.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.271" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.270" endtime="20201117 14:41:25.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.273" level="INFO">VALUE: [3.5097000000001294e-05, 3.5125000000000434e-05, 3.574999999999759e-05, 3.5916999999999893e-05, 3.523600000000099e-05, 3.575000000000106e-05, 3.604200000000002e-05, 3.529199999999927e-05, 3.570900000000182e-05, 3.568099999999921e-05, 3.594399999999956e-05, 3.526400000000013e-05, 3.594399999999956e-05, 3.538800000000078e-05, 3.547300000000114e-05, 3.5111000000000864e-05, 3.5111000000000864e-05, 3.54719999999982e-05, 3.602799999999698e-05, 3.519399999999881e-05, 3.57780000000002e-05, 3.573600000000149e-05, 3.5096999999997824e-05, 3.5611000000001364e-05, 3.575000000000106e-05, 3.5139000000000004e-05, 3.557000000000213e-05, 3.545799999999863e-05, 3.5916999999999893e-05, 3.52779999999997e-05, 3.57780000000002e-05, 3.5361000000001114e-05, 3.519500000000175e-05, 3.523600000000099e-05, 3.5402999999999823e-05, 3.5639000000000504e-05, 3.533400000000145e-05, 3.573700000000096e-05, 3.523700000000046e-05, 3.5610999999997894e-05, 3.5568999999999185e-05, 3.572200000000192e-05, 3.57780000000002e-05, 3.570799999999888e-05, 3.572199999999845e-05, 3.566600000000017e-05, 3.529199999999927e-05, 3.526400000000013e-05, 3.598599999999827e-05, 3.576400000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.272" endtime="20201117 14:41:25.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.267" endtime="20201117 14:41:25.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.276" endtime="20201117 14:41:25.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.280" endtime="20201117 14:41:25.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.278" endtime="20201117 14:41:25.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.275" endtime="20201117 14:41:25.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.910" endtime="20201117 14:41:25.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.518" endtime="20201117 14:41:25.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.517" endtime="20201117 14:41:25.301"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.303" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.311" endtime="20201117 14:41:25.328"></status>
</kw>
<msg timestamp="20201117 14:41:25.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.310" endtime="20201117 14:41:25.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.330" endtime="20201117 14:41:25.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.332" endtime="20201117 14:41:25.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.307" endtime="20201117 14:41:25.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.305" endtime="20201117 14:41:25.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.341" endtime="20201117 14:41:25.626"></status>
</kw>
<msg timestamp="20201117 14:41:25.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.340" endtime="20201117 14:41:25.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.630" endtime="20201117 14:41:25.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.638" endtime="20201117 14:41:25.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.337" endtime="20201117 14:41:25.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.335" endtime="20201117 14:41:25.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.645" level="INFO">${RESULT} = [{'time': 0.022870528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6639000000001504e-05, 'source_diff': 3.6639000000001504e-05}, {'time': 0.022913514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:25.642" endtime="20201117 14:41:25.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.660" level="INFO">${ACCURACY} = {'time': [0.022870528, 0.022913514, 0.022957542, 0.023007528, 0.023050542, 0.023096556, 0.023143542, 0.023191556, 0.023236611, 0.023284556, 0.023332569, 0.023382569, 0.023426611, 0.023469583, 0.023517...</msg>
<status status="PASS" starttime="20201117 14:41:25.646" endtime="20201117 14:41:25.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.664" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.663" endtime="20201117 14:41:25.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.667" level="INFO">VALUE: [3.6639000000001504e-05, 3.672199999999945e-05, 3.652800000000095e-05, 3.679200000000077e-05, 3.6639000000001504e-05, 3.655600000000009e-05, 3.6360999999998644e-05, 3.6681000000000213e-05, 3.654200000000052e-05, 3.6903000000001324e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.645799999999963e-05, 3.6888999999998284e-05, 3.643000000000049e-05, 3.6804999999997395e-05, 3.6667000000000644e-05, 3.669400000000031e-05, 3.6917000000000894e-05, 3.708399999999973e-05, 3.650000000000181e-05, 3.6360999999998644e-05, 3.6152999999997104e-05, 3.64719999999992e-05, 3.6903000000001324e-05, 3.69719999999997e-05, 3.700000000000231e-05, 3.694500000000003e-05, 3.615199999999763e-05, 3.6389000000001254e-05, 3.6805000000000865e-05, 3.686199999999862e-05, 3.606999999999916e-05, 3.6527000000001475e-05, 3.66520000000016e-05, 3.6013000000001405e-05, 3.645799999999963e-05, 3.694400000000056e-05, 3.6888999999998284e-05, 3.672199999999945e-05, 3.695800000000013e-05, 3.650000000000181e-05, 3.6917000000000894e-05, 3.6610999999998894e-05, 3.6889000000001754e-05, 3.6569000000000185e-05, 3.6681000000000213e-05, 3.6111000000001864e-05, 3.6138999999997534e-05, 3.676400000000163e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.665" endtime="20201117 14:41:25.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.661" endtime="20201117 14:41:25.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.670" endtime="20201117 14:41:25.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.673" endtime="20201117 14:41:25.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.672" endtime="20201117 14:41:25.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.668" endtime="20201117 14:41:25.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.304" endtime="20201117 14:41:25.694"></status>
</kw>
<msg timestamp="20201117 14:41:25.694" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.702" endtime="20201117 14:41:25.718"></status>
</kw>
<msg timestamp="20201117 14:41:25.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.701" endtime="20201117 14:41:25.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.720" endtime="20201117 14:41:25.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.722" endtime="20201117 14:41:25.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.698" endtime="20201117 14:41:25.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.696" endtime="20201117 14:41:25.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.732" endtime="20201117 14:41:26.018"></status>
</kw>
<msg timestamp="20201117 14:41:26.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019394486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.730" endtime="20201117 14:41:26.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019394486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.022" endtime="20201117 14:41:26.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.031" endtime="20201117 14:41:26.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.728" endtime="20201117 14:41:26.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.726" endtime="20201117 14:41:26.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.037" level="INFO">${RESULT} = [{'time': 0.019430792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.630599999999984e-05, 'source_diff': 3.630599999999984e-05}, {'time': 0.019474806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.034" endtime="20201117 14:41:26.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.051" level="INFO">${ACCURACY} = {'time': [0.019430792, 0.019474806, 0.019521778, 0.019570806, 0.019616792, 0.019660806, 0.019703806, 0.019747806, 0.019794833, 0.019840847, 0.019884819, 0.019934847, 0.019979861, 0.020028833, 0.020073...</msg>
<status status="PASS" starttime="20201117 14:41:26.038" endtime="20201117 14:41:26.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.055" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.054" endtime="20201117 14:41:26.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.058" level="INFO">VALUE: [3.630599999999984e-05, 3.698700000000221e-05, 3.6110999999998394e-05, 3.69589999999996e-05, 3.6889000000001754e-05, 3.652800000000095e-05, 3.684800000000252e-05, 3.655600000000009e-05, 3.647200000000267e-05, 3.6403000000000824e-05, 3.66520000000016e-05, 3.6804999999997395e-05, 3.6569000000000185e-05, 3.693000000000099e-05, 3.67780000000012e-05, 3.6389000000001254e-05, 3.6138999999997534e-05, 3.6583000000003224e-05, 3.704200000000102e-05, 3.6610999999998894e-05, 3.6819000000000435e-05, 3.670899999999935e-05, 3.6138999999997534e-05, 3.620799999999938e-05, 3.6417000000000394e-05, 3.67780000000012e-05, 3.606999999999916e-05, 3.694500000000003e-05, 3.6888999999998284e-05, 3.676400000000163e-05, 3.675000000000206e-05, 3.609800000000177e-05, 3.624999999999809e-05, 3.643000000000049e-05, 3.669400000000031e-05, 3.6846999999999575e-05, 3.6569000000000185e-05, 3.6068999999999685e-05, 3.6375000000001684e-05, 3.695800000000013e-05, 3.672200000000292e-05, 3.626400000000113e-05, 3.6667000000000644e-05, 3.677799999999773e-05, 3.704199999999755e-05, 3.6096999999998824e-05, 3.676399999999816e-05, 3.6332999999999505e-05, 3.6388999999997784e-05, 3.626400000000113e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.056" endtime="20201117 14:41:26.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.052" endtime="20201117 14:41:26.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.061" endtime="20201117 14:41:26.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.064" endtime="20201117 14:41:26.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.063" endtime="20201117 14:41:26.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.059" endtime="20201117 14:41:26.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.695" endtime="20201117 14:41:26.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.302" endtime="20201117 14:41:26.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.301" endtime="20201117 14:41:26.085"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.088" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.096" endtime="20201117 14:41:26.111"></status>
</kw>
<msg timestamp="20201117 14:41:26.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.094" endtime="20201117 14:41:26.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.113" endtime="20201117 14:41:26.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.116" endtime="20201117 14:41:26.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.092" endtime="20201117 14:41:26.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.090" endtime="20201117 14:41:26.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.125" endtime="20201117 14:41:26.410"></status>
</kw>
<msg timestamp="20201117 14:41:26.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.123" endtime="20201117 14:41:26.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.414" endtime="20201117 14:41:26.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.422" endtime="20201117 14:41:26.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.121" endtime="20201117 14:41:26.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.119" endtime="20201117 14:41:26.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.429" level="INFO">${RESULT} = [{'time': 0.021738208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7624999999999464e-05, 'source_diff': 3.7624999999999464e-05}, {'time': 0.021785208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.426" endtime="20201117 14:41:26.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.442" level="INFO">${ACCURACY} = {'time': [0.021738208, 0.021785208, 0.021829208, 0.021875222, 0.021924222, 0.021970236, 0.022018319, 0.02206825, 0.02211425, 0.02215825, 0.022203264, 0.022248292, 0.022294292, 0.022340278, 0.022387292...</msg>
<status status="PASS" starttime="20201117 14:41:26.430" endtime="20201117 14:41:26.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.447" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.446" endtime="20201117 14:41:26.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.449" level="INFO">VALUE: [3.7624999999999464e-05, 3.716600000000167e-05, 3.745800000000063e-05, 3.724999999999909e-05, 3.773600000000002e-05, 3.779200000000177e-05, 3.788799999999981e-05, 3.729200000000127e-05, 3.79859999999968e-05, 3.7417000000001394e-05, 3.748599999999977e-05, 3.802799999999898e-05, 3.776399999999916e-05, 3.730600000000084e-05, 3.752799999999848e-05, 3.720899999999985e-05, 3.7624999999999464e-05, 3.7888999999999284e-05, 3.8041000000002545e-05, 3.797300000000017e-05, 3.801400000000288e-05, 3.799999999999984e-05, 3.724999999999909e-05, 3.800000000000331e-05, 3.790199999999938e-05, 3.740199999999888e-05, 3.744400000000106e-05, 3.767999999999827e-05, 3.7388999999998784e-05, 3.7833000000001005e-05, 3.7389000000002254e-05, 3.7833000000001005e-05, 3.74590000000001e-05, 3.79720000000007e-05, 3.705600000000059e-05, 3.781999999999744e-05, 3.777799999999873e-05, 3.8054999999998645e-05, 3.733399999999998e-05, 3.743000000000149e-05, 3.708399999999973e-05, 3.7569000000001185e-05, 3.7277000000002225e-05, 3.763799999999956e-05, 3.799999999999984e-05, 3.7762999999999686e-05, 3.7861000000000145e-05, 3.718000000000124e-05, 3.769400000000131e-05, 3.776400000000263e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.448" endtime="20201117 14:41:26.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.443" endtime="20201117 14:41:26.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.453" endtime="20201117 14:41:26.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.456" endtime="20201117 14:41:26.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.454" endtime="20201117 14:41:26.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.451" endtime="20201117 14:41:26.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.088" endtime="20201117 14:41:26.477"></status>
</kw>
<msg timestamp="20201117 14:41:26.477" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.485" endtime="20201117 14:41:26.501"></status>
</kw>
<msg timestamp="20201117 14:41:26.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.484" endtime="20201117 14:41:26.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.502" endtime="20201117 14:41:26.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.505" endtime="20201117 14:41:26.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.481" endtime="20201117 14:41:26.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.479" endtime="20201117 14:41:26.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.515" endtime="20201117 14:41:26.801"></status>
</kw>
<msg timestamp="20201117 14:41:26.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.514" endtime="20201117 14:41:26.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.805" endtime="20201117 14:41:26.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.813" endtime="20201117 14:41:26.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.511" endtime="20201117 14:41:26.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.510" endtime="20201117 14:41:26.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.820" level="INFO">${RESULT} = [{'time': 0.019332625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.774999999999959e-05, 'source_diff': 3.774999999999959e-05}, {'time': 0.019377653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.816" endtime="20201117 14:41:26.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.833" level="INFO">${ACCURACY} = {'time': [0.019332625, 0.019377653, 0.019427667, 0.019473681, 0.019518653, 0.019566681, 0.019617667, 0.019663681, 0.019709694, 0.019755694, 0.019802694, 0.019847708, 0.019895708, 0.019942722, 0.019988...</msg>
<status status="PASS" starttime="20201117 14:41:26.821" endtime="20201117 14:41:26.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.837" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.836" endtime="20201117 14:41:26.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.840" level="INFO">VALUE: [3.774999999999959e-05, 3.77780000000022e-05, 3.70979999999993e-05, 3.7388999999998784e-05, 3.770900000000035e-05, 3.7166999999997674e-05, 3.783399999999701e-05, 3.777799999999873e-05, 3.713799999999906e-05, 3.7305000000001365e-05, 3.7568999999997715e-05, 3.7568999999997715e-05, 3.7625000000002934e-05, 3.7360999999999644e-05, 3.7527000000002475e-05, 3.743000000000149e-05, 3.794400000000156e-05, 3.722199999999995e-05, 3.7110999999999394e-05, 3.77919999999983e-05, 3.722199999999995e-05, 3.749999999999934e-05, 3.769400000000131e-05, 3.729200000000127e-05, 3.722199999999995e-05, 3.7624999999999464e-05, 3.7167000000001144e-05, 3.7166999999997674e-05, 3.751399999999891e-05, 3.7110999999999394e-05, 3.7667000000001644e-05, 3.750000000000281e-05, 3.8054999999998645e-05, 3.7861000000000145e-05, 3.7791000000002295e-05, 3.793000000000199e-05, 3.795800000000113e-05, 3.724999999999909e-05, 3.799999999999984e-05, 3.791600000000242e-05, 3.799999999999984e-05, 3.749999999999934e-05, 3.802799999999898e-05, 3.7597000000000325e-05, 3.752799999999848e-05, 3.7888999999999284e-05, 3.769400000000131e-05, 3.720799999999691e-05, 3.708399999999973e-05, 3.774999999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.839" endtime="20201117 14:41:26.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.834" endtime="20201117 14:41:26.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.843" endtime="20201117 14:41:26.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.846" endtime="20201117 14:41:26.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.845" endtime="20201117 14:41:26.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.841" endtime="20201117 14:41:26.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.478" endtime="20201117 14:41:26.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.087" endtime="20201117 14:41:26.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.086" endtime="20201117 14:41:26.868"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.870" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.879" endtime="20201117 14:41:26.895"></status>
</kw>
<msg timestamp="20201117 14:41:26.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.877" endtime="20201117 14:41:26.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.896" endtime="20201117 14:41:26.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.899" endtime="20201117 14:41:26.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.874" endtime="20201117 14:41:26.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.872" endtime="20201117 14:41:26.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.908" endtime="20201117 14:41:27.194"></status>
</kw>
<msg timestamp="20201117 14:41:27.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.906" endtime="20201117 14:41:27.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.199" endtime="20201117 14:41:27.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.207" endtime="20201117 14:41:27.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.904" endtime="20201117 14:41:27.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.902" endtime="20201117 14:41:27.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.213" level="INFO">${RESULT} = [{'time': 0.023171875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.823600000000052e-05, 'source_diff': 3.823600000000052e-05}, {'time': 0.023222875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.210" endtime="20201117 14:41:27.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.228" level="INFO">${ACCURACY} = {'time': [0.023171875, 0.023222875, 0.023270875, 0.023319889, 0.023369903, 0.023418917, 0.023468889, 0.023514944, 0.023563958, 0.023613944, 0.023657931, 0.023703917, 0.023749931, 0.023798931, 0.023849...</msg>
<status status="PASS" starttime="20201117 14:41:27.214" endtime="20201117 14:41:27.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.233" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.232" endtime="20201117 14:41:27.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.235" level="INFO">VALUE: [3.823600000000052e-05, 3.820800000000138e-05, 3.880599999999887e-05, 3.8430999999998494e-05, 3.876400000000016e-05, 3.8695000000001784e-05, 3.820800000000138e-05, 3.89859999999978e-05, 3.8625000000000465e-05, 3.848600000000077e-05, 3.8124999999999964e-05, 3.829200000000227e-05, 3.825000000000009e-05, 3.8902999999999854e-05, 3.8917000000002894e-05, 3.826399999999966e-05, 3.817999999999877e-05, 3.895799999999866e-05, 3.8861000000001145e-05, 3.8068999999998215e-05, 3.826399999999966e-05, 3.833400000000098e-05, 3.851399999999991e-05, 3.8958999999998134e-05, 3.844400000000206e-05, 3.8597000000001325e-05, 3.823600000000052e-05, 3.798600000000027e-05, 3.820800000000138e-05, 3.850000000000034e-05, 3.8916999999999424e-05, 3.872199999999798e-05, 3.898600000000127e-05, 3.8111000000000395e-05, 3.897300000000117e-05, 3.8459000000001103e-05, 3.9096999999998355e-05, 3.86659999999997e-05, 3.897199999999823e-05, 3.8832999999998535e-05, 3.8069000000001685e-05, 3.840199999999988e-05, 3.8375000000000214e-05, 3.869400000000231e-05, 3.8875000000000715e-05, 3.9111000000001395e-05, 3.8804999999999396e-05, 3.854199999999905e-05, 3.8818999999998965e-05, 3.8625000000000465e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.234" endtime="20201117 14:41:27.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.229" endtime="20201117 14:41:27.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.238" endtime="20201117 14:41:27.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.241" endtime="20201117 14:41:27.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.240" endtime="20201117 14:41:27.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.237" endtime="20201117 14:41:27.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.871" endtime="20201117 14:41:27.263"></status>
</kw>
<msg timestamp="20201117 14:41:27.263" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.271" endtime="20201117 14:41:27.287"></status>
</kw>
<msg timestamp="20201117 14:41:27.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.270" endtime="20201117 14:41:27.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.289" endtime="20201117 14:41:27.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.291" endtime="20201117 14:41:27.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.267" endtime="20201117 14:41:27.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.265" endtime="20201117 14:41:27.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.301" endtime="20201117 14:41:27.586"></status>
</kw>
<msg timestamp="20201117 14:41:27.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.300" endtime="20201117 14:41:27.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.591" endtime="20201117 14:41:27.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.599" endtime="20201117 14:41:27.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.297" endtime="20201117 14:41:27.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.295" endtime="20201117 14:41:27.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.606" level="INFO">${RESULT} = [{'time': 0.019740389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8431000000001964e-05, 'source_diff': 3.8431000000001964e-05}, {'time': 0.019791375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:27.602" endtime="20201117 14:41:27.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.619" level="INFO">${ACCURACY} = {'time': [0.019740389, 0.019791375, 0.019836375, 0.019882389, 0.019928389, 0.019976389, 0.020024403, 0.020070403, 0.020114403, 0.020161417, 0.020206431, 0.020252417, 0.020299431, 0.020349472, 0.020400...</msg>
<status status="PASS" starttime="20201117 14:41:27.607" endtime="20201117 14:41:27.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.623" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.622" endtime="20201117 14:41:27.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.626" level="INFO">VALUE: [3.8431000000001964e-05, 3.870799999999841e-05, 3.873600000000102e-05, 3.851399999999991e-05, 3.8945000000002034e-05, 3.805600000000159e-05, 3.8846999999998105e-05, 3.808400000000073e-05, 3.8124999999999964e-05, 3.8124999999999964e-05, 3.8445000000001534e-05, 3.901400000000041e-05, 3.804199999999855e-05, 3.842999999999902e-05, 3.900000000000084e-05, 3.870799999999841e-05, 3.84720000000012e-05, 3.891599999999995e-05, 3.845799999999816e-05, 3.904199999999955e-05, 3.8610999999997425e-05, 3.894399999999909e-05, 3.823600000000052e-05, 3.897199999999823e-05, 3.850000000000034e-05, 3.847199999999773e-05, 3.852799999999948e-05, 3.8694999999998314e-05, 3.857000000000166e-05, 3.8695000000001784e-05, 3.8652999999999604e-05, 3.8194999999997814e-05, 3.894399999999909e-05, 3.825000000000009e-05, 3.8597000000001325e-05, 3.850000000000034e-05, 3.802800000000245e-05, 3.8138999999999534e-05, 3.8695000000001784e-05, 3.873600000000102e-05, 3.822200000000095e-05, 3.8124999999999964e-05, 3.842999999999902e-05, 3.8166999999998674e-05, 3.8388999999999784e-05, 3.902799999999998e-05, 3.8875000000000715e-05, 3.876400000000016e-05, 3.8888999999996815e-05, 3.850000000000034e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.624" endtime="20201117 14:41:27.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.620" endtime="20201117 14:41:27.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.629" endtime="20201117 14:41:27.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.633" endtime="20201117 14:41:27.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.631" endtime="20201117 14:41:27.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.628" endtime="20201117 14:41:27.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.264" endtime="20201117 14:41:27.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.869" endtime="20201117 14:41:27.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.868" endtime="20201117 14:41:27.654"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.656" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.665" endtime="20201117 14:41:27.681"></status>
</kw>
<msg timestamp="20201117 14:41:27.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.663" endtime="20201117 14:41:27.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.682" endtime="20201117 14:41:27.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.685" endtime="20201117 14:41:27.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.660" endtime="20201117 14:41:27.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.658" endtime="20201117 14:41:27.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.694" endtime="20201117 14:41:27.979"></status>
</kw>
<msg timestamp="20201117 14:41:27.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.692" endtime="20201117 14:41:27.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.984" endtime="20201117 14:41:27.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.992" endtime="20201117 14:41:27.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.690" endtime="20201117 14:41:27.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.688" endtime="20201117 14:41:27.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.999" level="INFO">${RESULT} = [{'time': 0.021886569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.948600000000177e-05, 'source_diff': 3.948600000000177e-05}, {'time': 0.021936597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.996" endtime="20201117 14:41:27.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.012" level="INFO">${ACCURACY} = {'time': [0.021886569, 0.021936597, 0.021985569, 0.022033583, 0.022083583, 0.022135583, 0.022183597, 0.022231597, 0.022284611, 0.022331625, 0.022378625, 0.022430639, 0.022482625, 0.022531639, 0.022577...</msg>
<status status="PASS" starttime="20201117 14:41:28.000" endtime="20201117 14:41:28.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.017" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.016" endtime="20201117 14:41:28.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.019" level="INFO">VALUE: [3.948600000000177e-05, 3.917999999999977e-05, 3.9568999999999716e-05, 3.9832999999999535e-05, 3.9846999999999105e-05, 3.923600000000152e-05, 3.949999999999787e-05, 3.949999999999787e-05, 3.997199999999923e-05, 3.92919999999998e-05, 3.945799999999916e-05, 3.931999999999894e-05, 3.9667000000000174e-05, 3.9846999999999105e-05, 3.9416999999999924e-05, 3.976399999999769e-05, 3.909799999999783e-05, 3.9903000000000854e-05, 3.9153000000000104e-05, 3.9652999999997135e-05, 3.9611000000001895e-05, 3.9846999999999105e-05, 3.948700000000124e-05, 3.915200000000063e-05, 3.990200000000138e-05, 3.9041000000000076e-05, 3.919399999999934e-05, 3.9374999999997745e-05, 3.970800000000288e-05, 4.004200000000055e-05, 3.974999999999812e-05, 3.92919999999998e-05, 3.948600000000177e-05, 3.9805000000000396e-05, 3.924999999999762e-05, 3.9694999999999314e-05, 3.9875000000001715e-05, 3.9610999999998425e-05, 3.9195000000002284e-05, 3.9667000000000174e-05, 3.948600000000177e-05, 4.000000000000184e-05, 3.9361000000001645e-05, 3.9875000000001715e-05, 3.932000000000241e-05, 3.919399999999934e-05, 3.9263000000001186e-05, 3.9082999999998785e-05, 3.9318999999999465e-05, 3.94859999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.018" endtime="20201117 14:41:28.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.013" endtime="20201117 14:41:28.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.023" endtime="20201117 14:41:28.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.027" endtime="20201117 14:41:28.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.025" endtime="20201117 14:41:28.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.021" endtime="20201117 14:41:28.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.657" endtime="20201117 14:41:28.047"></status>
</kw>
<msg timestamp="20201117 14:41:28.048" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.056" endtime="20201117 14:41:28.073"></status>
</kw>
<msg timestamp="20201117 14:41:28.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.054" endtime="20201117 14:41:28.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.075" endtime="20201117 14:41:28.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.077" endtime="20201117 14:41:28.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.052" endtime="20201117 14:41:28.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.050" endtime="20201117 14:41:28.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.087" endtime="20201117 14:41:28.374"></status>
</kw>
<msg timestamp="20201117 14:41:28.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.086" endtime="20201117 14:41:28.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.378" endtime="20201117 14:41:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.386" endtime="20201117 14:41:28.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.083" endtime="20201117 14:41:28.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.081" endtime="20201117 14:41:28.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.392" level="INFO">${RESULT} = [{'time': 0.019393306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.001399999999794e-05, 'source_diff': 4.001399999999794e-05}, {'time': 0.019442333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.389" endtime="20201117 14:41:28.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.406" level="INFO">${ACCURACY} = {'time': [0.019393306, 0.019442333, 0.019493319, 0.019540347, 0.019589389, 0.019635333, 0.019682333, 0.019731361, 0.019778347, 0.019829347, 0.019875361, 0.019922375, 0.019968389, 0.020021389, 0.020070...</msg>
<status status="PASS" starttime="20201117 14:41:28.393" endtime="20201117 14:41:28.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.410" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.409" endtime="20201117 14:41:28.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.413" level="INFO">VALUE: [4.001399999999794e-05, 3.9568999999999716e-05, 3.9874999999998245e-05, 3.9541000000000576e-05, 3.9346999999998605e-05, 3.998600000000227e-05, 3.920799999999891e-05, 3.952800000000048e-05, 3.968000000000027e-05, 3.9875000000001715e-05, 3.950000000000134e-05, 3.980599999999987e-05, 3.920799999999891e-05, 3.9846999999999105e-05, 3.9097000000001825e-05, 3.9694999999999314e-05, 3.9416999999999924e-05, 4.004200000000055e-05, 3.9639000000001035e-05, 3.9194999999998814e-05, 3.981999999999944e-05, 4.000000000000184e-05, 3.95980000000018e-05, 3.925000000000109e-05, 3.91660000000002e-05, 3.917999999999977e-05, 3.9291000000000326e-05, 3.9874999999998245e-05, 3.999999999999837e-05, 4.001399999999794e-05, 4.0040999999997606e-05, 3.9790999999997356e-05, 3.917999999999977e-05, 3.9111000000001395e-05, 3.905599999999912e-05, 3.973600000000202e-05, 3.9096999999998355e-05, 3.920799999999891e-05, 3.970799999999941e-05, 3.9625000000001465e-05, 3.92919999999998e-05, 3.933400000000198e-05, 3.907000000000216e-05, 3.9874999999998245e-05, 3.951400000000091e-05, 4.0040999999997606e-05, 3.9708999999998884e-05, 3.993000000000052e-05, 3.94720000000022e-05, 3.9791000000000826e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.411" endtime="20201117 14:41:28.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.407" endtime="20201117 14:41:28.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.416" endtime="20201117 14:41:28.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.420" endtime="20201117 14:41:28.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.418" endtime="20201117 14:41:28.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.415" endtime="20201117 14:41:28.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.048" endtime="20201117 14:41:28.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.655" endtime="20201117 14:41:28.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.654" endtime="20201117 14:41:28.441"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.443" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.451" endtime="20201117 14:41:28.468"></status>
</kw>
<msg timestamp="20201117 14:41:28.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.450" endtime="20201117 14:41:28.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.470" endtime="20201117 14:41:28.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.472" endtime="20201117 14:41:28.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.447" endtime="20201117 14:41:28.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.445" endtime="20201117 14:41:28.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.481" endtime="20201117 14:41:28.766"></status>
</kw>
<msg timestamp="20201117 14:41:28.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.480" endtime="20201117 14:41:28.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.770" endtime="20201117 14:41:28.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.778" endtime="20201117 14:41:28.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.477" endtime="20201117 14:41:28.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.475" endtime="20201117 14:41:28.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.785" level="INFO">${RESULT} = [{'time': 0.022744181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0944999999997095e-05, 'source_diff': 4.0944999999997095e-05}, {'time': 0.022793194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:28.782" endtime="20201117 14:41:28.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.800" level="INFO">${ACCURACY} = {'time': [0.022744181, 0.022793194, 0.022846194, 0.022898222, 0.022945222, 0.022992236, 0.023039222, 0.023091306, 0.02313925, 0.023191236, 0.023238236, 0.02329025, 0.023342264, 0.023395264, 0.02344726...</msg>
<status status="PASS" starttime="20201117 14:41:28.786" endtime="20201117 14:41:28.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.804" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.803" endtime="20201117 14:41:28.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.807" level="INFO">VALUE: [4.0944999999997095e-05, 4.074999999999912e-05, 4.070800000000041e-05, 4.049999999999887e-05, 4.068000000000127e-05, 4.095800000000066e-05, 4.020799999999991e-05, 4.034799999999908e-05, 4.073599999999955e-05, 4.043000000000102e-05, 4.049999999999887e-05, 4.0916999999997955e-05, 4.0917000000001424e-05, 4.095800000000066e-05, 4.0680999999997275e-05, 4.0541000000001576e-05, 4.083400000000001e-05, 4.077800000000173e-05, 4.080600000000087e-05, 4.006999999999969e-05, 4.077799999999826e-05, 4.091599999999848e-05, 4.0375000000002215e-05, 4.091600000000195e-05, 4.073599999999955e-05, 4.069399999999737e-05, 4.023599999999905e-05, 4.077799999999826e-05, 4.048600000000277e-05, 4.0333000000000035e-05, 4.002800000000098e-05, 4.0054999999997176e-05, 4.044399999999712e-05, 4.101399999999894e-05, 4.095800000000066e-05, 4.029199999999733e-05, 4.022199999999948e-05, 4.0208999999999384e-05, 4.022200000000295e-05, 4.0930999999997525e-05, 4.0777000000002256e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.007000000000316e-05, 4.045800000000016e-05, 4.041600000000145e-05, 4.044400000000059e-05, 4.0319000000000466e-05, 4.047199999999973e-05, 4.020799999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.805" endtime="20201117 14:41:28.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.801" endtime="20201117 14:41:28.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.810" endtime="20201117 14:41:28.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.814" endtime="20201117 14:41:28.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.812" endtime="20201117 14:41:28.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.809" endtime="20201117 14:41:28.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.444" endtime="20201117 14:41:28.835"></status>
</kw>
<msg timestamp="20201117 14:41:28.835" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.843" endtime="20201117 14:41:28.859"></status>
</kw>
<msg timestamp="20201117 14:41:28.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.841" endtime="20201117 14:41:28.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.861" endtime="20201117 14:41:28.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.863" endtime="20201117 14:41:28.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.839" endtime="20201117 14:41:28.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.837" endtime="20201117 14:41:28.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.873" endtime="20201117 14:41:29.159"></status>
</kw>
<msg timestamp="20201117 14:41:29.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.871" endtime="20201117 14:41:29.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.163" endtime="20201117 14:41:29.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.171" endtime="20201117 14:41:29.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.869" endtime="20201117 14:41:29.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.867" endtime="20201117 14:41:29.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.178" level="INFO">${RESULT} = [{'time': 0.019683694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.070800000000041e-05, 'source_diff': 4.070800000000041e-05}, {'time': 0.019735681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.175" endtime="20201117 14:41:29.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.191" level="INFO">${ACCURACY} = {'time': [0.019683694, 0.019735681, 0.019786681, 0.019838708, 0.019888694, 0.019939722, 0.019990722, 0.020042736, 0.020090722, 0.020137722, 0.020186736, 0.020234736, 0.02028575, 0.020337778, 0.0203857...</msg>
<status status="PASS" starttime="20201117 14:41:29.179" endtime="20201117 14:41:29.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.196" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.195" endtime="20201117 14:41:29.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.199" level="INFO">VALUE: [4.070800000000041e-05, 4.0181000000000244e-05, 4.0917000000001424e-05, 4.0526999999998536e-05, 4.0096999999999355e-05, 4.068000000000127e-05, 4.0652999999998135e-05, 4.076399999999869e-05, 4.027799999999776e-05, 4.041600000000145e-05, 4.0847000000000105e-05, 4.072199999999998e-05, 4.0931000000000994e-05, 4.101400000000241e-05, 4.047199999999973e-05, 4.008399999999926e-05, 4.052800000000148e-05, 4.07920000000013e-05, 4.042999999999755e-05, 4.102800000000198e-05, 4.052800000000148e-05, 4.063799999999909e-05, 4.0445000000000064e-05, 4.027799999999776e-05, 4.0638999999998565e-05, 4.0610999999999425e-05, 4.044400000000059e-05, 4.0874999999999245e-05, 4.0818999999997496e-05, 4.01660000000012e-05, 4.0833000000000536e-05, 4.0847000000000105e-05, 4.020799999999991e-05, 4.099999999999937e-05, 4.04859999999993e-05, 4.08059999999974e-05, 4.104200000000155e-05, 4.081999999999697e-05, 4.084799999999958e-05, 4.0181000000000244e-05, 4.031999999999994e-05, 4.077800000000173e-05, 4.052800000000148e-05, 4.077799999999826e-05, 4.0762999999999217e-05, 4.0374999999998745e-05, 4.0417000000000924e-05, 4.040199999999841e-05, 4.047199999999973e-05, 4.0568999999997246e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.198" endtime="20201117 14:41:29.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.193" endtime="20201117 14:41:29.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.202" endtime="20201117 14:41:29.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.205" endtime="20201117 14:41:29.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.204" endtime="20201117 14:41:29.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.200" endtime="20201117 14:41:29.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.835" endtime="20201117 14:41:29.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.442" endtime="20201117 14:41:29.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.441" endtime="20201117 14:41:29.227"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.229" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.237" endtime="20201117 14:41:29.253"></status>
</kw>
<msg timestamp="20201117 14:41:29.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.236" endtime="20201117 14:41:29.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.254" endtime="20201117 14:41:29.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.257" endtime="20201117 14:41:29.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.233" endtime="20201117 14:41:29.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.231" endtime="20201117 14:41:29.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.266" endtime="20201117 14:41:29.551"></status>
</kw>
<msg timestamp="20201117 14:41:29.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.264" endtime="20201117 14:41:29.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.555" endtime="20201117 14:41:29.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.563" endtime="20201117 14:41:29.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.262" endtime="20201117 14:41:29.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.260" endtime="20201117 14:41:29.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.574" level="INFO">${RESULT} = [{'time': 0.021820764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1180999999997775e-05, 'source_diff': 4.1180999999997775e-05}, {'time': 0.021870736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:29.571" endtime="20201117 14:41:29.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.588" level="INFO">${ACCURACY} = {'time': [0.021820764, 0.021870736, 0.021920764, 0.021969764, 0.02202175, 0.022075778, 0.022125764, 0.022176847, 0.022230778, 0.022281792, 0.022330806, 0.022383806, 0.022435819, 0.022486806, 0.0225398...</msg>
<status status="PASS" starttime="20201117 14:41:29.575" endtime="20201117 14:41:29.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.592" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.591" endtime="20201117 14:41:29.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.595" level="INFO">VALUE: [4.1180999999997775e-05, 4.176400000000316e-05, 4.202799999999951e-05, 4.177799999999926e-05, 4.144399999999812e-05, 4.123600000000005e-05, 4.1110999999999925e-05, 4.141599999999898e-05, 4.1695000000001314e-05, 4.1653000000002605e-05, 4.180600000000187e-05, 4.1987000000000274e-05, 4.194399999999862e-05, 4.158400000000076e-05, 4.191599999999948e-05, 4.198599999999733e-05, 4.1526999999999537e-05, 4.126400000000266e-05, 4.1888999999999815e-05, 4.197199999999776e-05, 4.152799999999901e-05, 4.1082999999997316e-05, 4.170800000000141e-05, 4.120800000000091e-05, 4.127799999999876e-05, 4.1902999999999385e-05, 4.175000000000012e-05, 4.1097000000000355e-05, 4.126399999999919e-05, 4.1680999999998275e-05, 4.126400000000266e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.102800000000198e-05, 4.200000000000037e-05, 4.1695000000001314e-05, 4.1374999999999745e-05, 4.1262999999999717e-05, 4.1124999999999495e-05, 4.1416999999998455e-05, 4.145800000000116e-05, 4.1790999999999356e-05, 4.204200000000255e-05, 4.124999999999962e-05, 4.1069000000001216e-05, 4.172200000000098e-05, 4.14860000000003e-05, 4.126399999999919e-05, 4.19860000000008e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.593" endtime="20201117 14:41:29.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.589" endtime="20201117 14:41:29.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.598" endtime="20201117 14:41:29.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.601" endtime="20201117 14:41:29.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.600" endtime="20201117 14:41:29.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.596" endtime="20201117 14:41:29.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.230" endtime="20201117 14:41:29.622"></status>
</kw>
<msg timestamp="20201117 14:41:29.622" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.631" endtime="20201117 14:41:29.646"></status>
</kw>
<msg timestamp="20201117 14:41:29.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.629" endtime="20201117 14:41:29.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.648" endtime="20201117 14:41:29.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.650" endtime="20201117 14:41:29.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.626" endtime="20201117 14:41:29.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.624" endtime="20201117 14:41:29.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.660" endtime="20201117 14:41:29.946"></status>
</kw>
<msg timestamp="20201117 14:41:29.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019324028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.658" endtime="20201117 14:41:29.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019324028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.950" endtime="20201117 14:41:29.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.959" endtime="20201117 14:41:29.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.656" endtime="20201117 14:41:29.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.654" endtime="20201117 14:41:29.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.965" level="INFO">${RESULT} = [{'time': 0.019365944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.191599999999948e-05, 'source_diff': 4.191599999999948e-05}, {'time': 0.019420944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.962" endtime="20201117 14:41:29.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.979" level="INFO">${ACCURACY} = {'time': [0.019365944, 0.019420944, 0.019469958, 0.019522972, 0.019571958, 0.019619972, 0.019674972, 0.019726986, 0.019780986, 0.019828, 0.019882, 0.019934, 0.019985028, 0.020033028, 0.020081014, 0.02...</msg>
<status status="PASS" starttime="20201117 14:41:29.966" endtime="20201117 14:41:29.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.983" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.982" endtime="20201117 14:41:29.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.986" level="INFO">VALUE: [4.191599999999948e-05, 4.1804999999998926e-05, 4.2040999999999606e-05, 4.172200000000098e-05, 4.1526999999999537e-05, 4.19860000000008e-05, 4.198599999999733e-05, 4.169399999999837e-05, 4.1554999999998676e-05, 4.120799999999744e-05, 4.172200000000098e-05, 4.145800000000116e-05, 4.198599999999733e-05, 4.1403000000002355e-05, 4.1624999999999995e-05, 4.1931000000001994e-05, 4.1222999999999954e-05, 4.124999999999962e-05, 4.152799999999901e-05, 4.1737000000000024e-05, 4.11799999999983e-05, 4.118000000000177e-05, 4.175000000000012e-05, 4.145799999999769e-05, 4.1776999999999787e-05, 4.1083000000000786e-05, 4.127800000000223e-05, 4.147200000000073e-05, 4.1944999999998095e-05, 4.1874999999996776e-05, 4.147200000000073e-05, 4.1597000000000856e-05, 4.202799999999951e-05, 4.1694999999997845e-05, 4.1430999999998025e-05, 4.123600000000005e-05, 4.127799999999876e-05, 4.102800000000198e-05, 4.173600000000055e-05, 4.1917000000002425e-05, 4.182000000000144e-05, 4.195800000000166e-05, 4.1388999999999315e-05, 4.14860000000003e-05, 4.151400000000291e-05, 4.200000000000037e-05, 4.1624999999999995e-05, 4.1332999999997566e-05, 4.1554999999998676e-05, 4.118000000000177e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.984" endtime="20201117 14:41:29.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.980" endtime="20201117 14:41:29.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.989" endtime="20201117 14:41:29.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.992" endtime="20201117 14:41:30.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.991" endtime="20201117 14:41:30.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.987" endtime="20201117 14:41:30.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.623" endtime="20201117 14:41:30.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.228" endtime="20201117 14:41:30.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.227" endtime="20201117 14:41:30.014"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.016" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.025" endtime="20201117 14:41:30.042"></status>
</kw>
<msg timestamp="20201117 14:41:30.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.023" endtime="20201117 14:41:30.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.044" endtime="20201117 14:41:30.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.046" endtime="20201117 14:41:30.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.021" endtime="20201117 14:41:30.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.019" endtime="20201117 14:41:30.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.056" endtime="20201117 14:41:30.342"></status>
</kw>
<msg timestamp="20201117 14:41:30.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023800056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.054" endtime="20201117 14:41:30.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023800056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.346" endtime="20201117 14:41:30.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.355" endtime="20201117 14:41:30.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.052" endtime="20201117 14:41:30.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.050" endtime="20201117 14:41:30.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.361" level="INFO">${RESULT} = [{'time': 0.023800056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2402999999999885e-05, 'source_diff': 4.2402999999999885e-05}, {'time': 0.023850056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:30.358" endtime="20201117 14:41:30.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.376" level="INFO">${ACCURACY} = {'time': [0.023800056, 0.023850056, 0.023902097, 0.023952083, 0.024003097, 0.024052083, 0.024107097, 0.024156097, 0.024210097, 0.024263167, 0.024315111, 0.024368125, 0.024418153, 0.024469139, 0.024522...</msg>
<status status="PASS" starttime="20201117 14:41:30.362" endtime="20201117 14:41:30.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.380" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.379" endtime="20201117 14:41:30.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.383" level="INFO">VALUE: [4.2402999999999885e-05, 4.2195000000001814e-05, 4.242999999999955e-05, 4.2318999999998996e-05, 4.2055000000002646e-05, 4.2624999999997526e-05, 4.2804999999999926e-05, 4.291600000000048e-05, 4.225000000000062e-05, 4.2916999999999955e-05, 4.279199999999983e-05, 4.2431000000002494e-05, 4.304200000000008e-05, 4.273600000000155e-05, 4.2152999999999635e-05, 4.247200000000173e-05, 4.2818999999999496e-05, 4.251400000000044e-05, 4.206999999999822e-05, 4.283399999999854e-05, 4.2889000000000815e-05, 4.301300000000147e-05, 4.2082999999998316e-05, 4.215200000000016e-05, 4.298599999999833e-05, 4.277800000000026e-05, 4.223600000000105e-05, 4.2804999999999926e-05, 4.276400000000069e-05, 4.2916999999999955e-05, 4.219400000000234e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.223600000000105e-05, 4.2458999999998165e-05, 4.222200000000148e-05, 4.2625000000000995e-05, 4.226400000000019e-05, 4.2916999999999955e-05, 4.2195000000001814e-05, 4.2388999999996846e-05, 4.2666999999999705e-05, 4.225000000000062e-05, 4.2319000000002466e-05, 4.2625000000000995e-05, 4.222199999999801e-05, 4.305599999999965e-05, 4.2832999999999066e-05, 4.2361000000001175e-05, 4.276400000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.381" endtime="20201117 14:41:30.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.377" endtime="20201117 14:41:30.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.386" endtime="20201117 14:41:30.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.389" endtime="20201117 14:41:30.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.388" endtime="20201117 14:41:30.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.384" endtime="20201117 14:41:30.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.017" endtime="20201117 14:41:30.410"></status>
</kw>
<msg timestamp="20201117 14:41:30.410" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.419" endtime="20201117 14:41:30.434"></status>
</kw>
<msg timestamp="20201117 14:41:30.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.417" endtime="20201117 14:41:30.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.435" endtime="20201117 14:41:30.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.438" endtime="20201117 14:41:30.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.415" endtime="20201117 14:41:30.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.412" endtime="20201117 14:41:30.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.448" endtime="20201117 14:41:30.733"></status>
</kw>
<msg timestamp="20201117 14:41:30.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.447" endtime="20201117 14:41:30.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.737" endtime="20201117 14:41:30.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.746" endtime="20201117 14:41:30.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.444" endtime="20201117 14:41:30.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.442" endtime="20201117 14:41:30.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.752" level="INFO">${RESULT} = [{'time': 0.019368333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276400000000069e-05, 'source_diff': 4.276400000000069e-05}, {'time': 0.019418319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.749" endtime="20201117 14:41:30.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.766" level="INFO">${ACCURACY} = {'time': [0.019368333, 0.019418319, 0.019471403, 0.019526333, 0.019581375, 0.019632347, 0.019682361, 0.019733444, 0.019788375, 0.019843375, 0.019893389, 0.019943389, 0.019996431, 0.020047403, 0.020101...</msg>
<status status="PASS" starttime="20201117 14:41:30.753" endtime="20201117 14:41:30.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.770" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.769" endtime="20201117 14:41:30.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.772" level="INFO">VALUE: [4.276400000000069e-05, 4.2290999999999856e-05, 4.29860000000018e-05, 4.272199999999851e-05, 4.269400000000284e-05, 4.2125000000000495e-05, 4.279199999999983e-05, 4.244399999999912e-05, 4.272200000000198e-05, 4.223600000000105e-05, 4.2445000000002064e-05, 4.2680999999999275e-05, 4.2944999999999095e-05, 4.2346999999998136e-05, 4.2804999999999926e-05, 4.2222999999997485e-05, 4.251399999999697e-05, 4.2181000000002244e-05, 4.2958999999998665e-05, 4.2166999999999205e-05, 4.2694999999998845e-05, 4.2554999999999676e-05, 4.238799999999737e-05, 4.304200000000008e-05, 4.2375000000000745e-05, 4.298599999999833e-05, 4.2069000000002216e-05, 4.229199999999933e-05, 4.300000000000137e-05, 4.226400000000019e-05, 4.283399999999854e-05, 4.2930999999999525e-05, 4.294399999999962e-05, 4.2389000000000315e-05, 4.231999999999847e-05, 4.28059999999994e-05, 4.252800000000001e-05, 4.2723000000001454e-05, 4.205600000000212e-05, 4.270799999999894e-05, 4.2888999999997346e-05, 4.275000000000112e-05, 4.216599999999973e-05, 4.2277000000000287e-05, 4.2610999999997956e-05, 4.273600000000155e-05, 4.2139000000000065e-05, 4.276400000000069e-05, 4.227799999999976e-05, 4.2541000000000107e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.771" endtime="20201117 14:41:30.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.766" endtime="20201117 14:41:30.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.776" endtime="20201117 14:41:30.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.779" endtime="20201117 14:41:30.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.777" endtime="20201117 14:41:30.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.774" endtime="20201117 14:41:30.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.411" endtime="20201117 14:41:30.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.015" endtime="20201117 14:41:30.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.014" endtime="20201117 14:41:30.800"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.802" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.811" endtime="20201117 14:41:30.827"></status>
</kw>
<msg timestamp="20201117 14:41:30.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.810" endtime="20201117 14:41:30.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.828" endtime="20201117 14:41:30.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.831" endtime="20201117 14:41:30.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.807" endtime="20201117 14:41:30.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.805" endtime="20201117 14:41:30.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.840" endtime="20201117 14:41:31.126"></status>
</kw>
<msg timestamp="20201117 14:41:31.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.838" endtime="20201117 14:41:31.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.130" endtime="20201117 14:41:31.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.139" endtime="20201117 14:41:31.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.836" endtime="20201117 14:41:31.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.834" endtime="20201117 14:41:31.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.145" level="INFO">${RESULT} = [{'time': 0.022347431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.306999999999922e-05, 'source_diff': 4.306999999999922e-05}, {'time': 0.022400431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.142" endtime="20201117 14:41:31.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.159" level="INFO">${ACCURACY} = {'time': [0.022347431, 0.022400431, 0.022451444, 0.022502458, 0.022552458, 0.022607472, 0.022662458, 0.022716472, 0.022772486, 0.022828486, 0.022883514, 0.0229375, 0.022992514, 0.0230445, 0.023101514,...</msg>
<status status="PASS" starttime="20201117 14:41:31.146" endtime="20201117 14:41:31.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.163" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.162" endtime="20201117 14:41:31.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.166" level="INFO">VALUE: [4.306999999999922e-05, 4.3652999999997666e-05, 4.3318999999999996e-05, 4.326400000000119e-05, 4.327700000000129e-05, 4.398599999999933e-05, 4.326400000000119e-05, 4.369400000000037e-05, 4.350000000000187e-05, 4.324999999999815e-05, 4.3194999999999345e-05, 4.3653000000001135e-05, 4.352799999999754e-05, 4.352799999999754e-05, 4.395800000000019e-05, 4.391599999999801e-05, 4.324999999999815e-05, 4.3860999999999206e-05, 4.375000000000212e-05, 4.377800000000126e-05, 4.3973000000002704e-05, 4.393000000000105e-05, 4.3875000000002246e-05, 4.3055000000000176e-05, 4.398599999999933e-05, 4.31800000000003e-05, 4.402700000000204e-05, 4.327799999999729e-05, 4.3861000000002676e-05, 4.392999999999758e-05, 4.3555000000000677e-05, 4.3889000000001815e-05, 4.350000000000187e-05, 4.3986999999998805e-05, 4.347200000000273e-05, 4.3638999999998096e-05, 4.3153000000000635e-05, 4.376399999999822e-05, 4.3959000000003134e-05, 4.33059999999999e-05, 4.3916999999997486e-05, 4.3487000000001774e-05, 4.3237000000001524e-05, 4.388800000000234e-05, 4.3860999999999206e-05, 4.3068999999999746e-05, 4.36939999999969e-05, 4.348599999999883e-05, 4.3555000000000677e-05, 4.3582999999999816e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.164" endtime="20201117 14:41:31.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.160" endtime="20201117 14:41:31.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.169" endtime="20201117 14:41:31.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.172" endtime="20201117 14:41:31.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.171" endtime="20201117 14:41:31.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.167" endtime="20201117 14:41:31.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.803" endtime="20201117 14:41:31.193"></status>
</kw>
<msg timestamp="20201117 14:41:31.194" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.202" endtime="20201117 14:41:31.219"></status>
</kw>
<msg timestamp="20201117 14:41:31.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.200" endtime="20201117 14:41:31.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.221" endtime="20201117 14:41:31.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.223" endtime="20201117 14:41:31.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.198" endtime="20201117 14:41:31.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.196" endtime="20201117 14:41:31.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.233" endtime="20201117 14:41:31.519"></status>
</kw>
<msg timestamp="20201117 14:41:31.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.231" endtime="20201117 14:41:31.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.523" endtime="20201117 14:41:31.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.531" endtime="20201117 14:41:31.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.229" endtime="20201117 14:41:31.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.227" endtime="20201117 14:41:31.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.538" level="INFO">${RESULT} = [{'time': 0.019792014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3596999999999386e-05, 'source_diff': 4.3596999999999386e-05}, {'time': 0.019846, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:31.535" endtime="20201117 14:41:31.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.551" level="INFO">${ACCURACY} = {'time': [0.019792014, 0.019846, 0.019897028, 0.019953014, 0.020006028, 0.020062042, 0.020117042, 0.020174042, 0.020228042, 0.020283056, 0.020337056, 0.020393083, 0.020446083, 0.020499097, 0.020552083...</msg>
<status status="PASS" starttime="20201117 14:41:31.539" endtime="20201117 14:41:31.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.556" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.555" endtime="20201117 14:41:31.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.558" level="INFO">VALUE: [4.3596999999999386e-05, 4.3167000000000205e-05, 4.376400000000169e-05, 4.327800000000076e-05, 4.3167000000000205e-05, 4.376399999999822e-05, 4.34860000000023e-05, 4.374999999999865e-05, 4.3139000000001065e-05, 4.350000000000187e-05, 4.3931000000000525e-05, 4.3555000000000677e-05, 4.3111000000001926e-05, 4.3153000000000635e-05, 4.3569000000000246e-05, 4.319399999999987e-05, 4.373599999999908e-05, 4.3068999999999746e-05, 4.3819000000000496e-05, 4.319399999999987e-05, 4.326400000000119e-05, 4.3903000000001385e-05, 4.3610999999998956e-05, 4.373599999999908e-05, 4.305599999999965e-05, 4.307000000000269e-05, 4.3082999999999316e-05, 4.383400000000301e-05, 4.404200000000108e-05, 4.31120000000014e-05, 4.376400000000169e-05, 4.397199999999976e-05, 4.345799999999969e-05, 4.36800000000008e-05, 4.327800000000076e-05, 4.376399999999822e-05, 4.3124999999998026e-05, 4.393000000000105e-05, 4.36800000000008e-05, 4.375000000000212e-05, 4.3082999999999316e-05, 4.33059999999999e-05, 4.323600000000205e-05, 4.3902999999997916e-05, 4.3889000000001815e-05, 4.3638999999998096e-05, 4.3194999999999345e-05, 4.3417000000000455e-05, 4.376400000000169e-05, 4.377700000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.557" endtime="20201117 14:41:31.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.552" endtime="20201117 14:41:31.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.562" endtime="20201117 14:41:31.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.565" endtime="20201117 14:41:31.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.564" endtime="20201117 14:41:31.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.560" endtime="20201117 14:41:31.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.194" endtime="20201117 14:41:31.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.801" endtime="20201117 14:41:31.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.800" endtime="20201117 14:41:31.586"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.589" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.597" endtime="20201117 14:41:31.614"></status>
</kw>
<msg timestamp="20201117 14:41:31.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.595" endtime="20201117 14:41:31.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.615" endtime="20201117 14:41:31.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.618" endtime="20201117 14:41:31.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.593" endtime="20201117 14:41:31.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.591" endtime="20201117 14:41:31.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.627" endtime="20201117 14:41:31.912"></status>
</kw>
<msg timestamp="20201117 14:41:31.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.625" endtime="20201117 14:41:31.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.916" endtime="20201117 14:41:31.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.924" endtime="20201117 14:41:31.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.623" endtime="20201117 14:41:31.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.621" endtime="20201117 14:41:31.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.931" level="INFO">${RESULT} = [{'time': 0.022732792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4959000000000665e-05, 'source_diff': 4.4959000000000665e-05}, {'time': 0.022785806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:31.928" endtime="20201117 14:41:31.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.946" level="INFO">${ACCURACY} = {'time': [0.022732792, 0.022785806, 0.022838819, 0.022893806, 0.022950806, 0.023001806, 0.023052875, 0.023105819, 0.023160833, 0.023212833, 0.023266861, 0.023318847, 0.023370847, 0.023422861, 0.023475...</msg>
<status status="PASS" starttime="20201117 14:41:31.932" endtime="20201117 14:41:31.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.950" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.949" endtime="20201117 14:41:31.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.953" level="INFO">VALUE: [4.4959000000000665e-05, 4.504199999999861e-05, 4.474999999999965e-05, 4.4888999999999346e-05, 4.427800000000176e-05, 4.4431000000001025e-05, 4.423599999999958e-05, 4.4055000000001177e-05, 4.4388999999998846e-05, 4.474999999999965e-05, 4.4569000000001247e-05, 4.444400000000112e-05, 4.4069000000000746e-05, 4.454199999999811e-05, 4.4819000000001497e-05, 4.4638999999999096e-05, 4.429200000000133e-05, 4.4360999999999706e-05, 4.44860000000033e-05, 4.43060000000009e-05, 4.483400000000054e-05, 4.433400000000004e-05, 4.4861000000000206e-05, 4.4959000000000665e-05, 4.476399999999922e-05, 4.407000000000022e-05, 4.504099999999914e-05, 4.465199999999919e-05, 4.49999999999999e-05, 4.4319000000000996e-05, 4.4917000000001955e-05, 4.43060000000009e-05, 4.501400000000294e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.4874999999999776e-05, 4.469400000000137e-05, 4.4110999999999456e-05, 4.498600000000033e-05, 4.4861000000000206e-05, 4.480499999999846e-05, 4.4653000000002135e-05, 4.4653000000002135e-05, 4.423599999999958e-05, 4.4110999999999456e-05, 4.459799999999986e-05, 4.495800000000119e-05, 4.422200000000001e-05, 4.469400000000137e-05, 4.419400000000087e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.951" endtime="20201117 14:41:31.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.947" endtime="20201117 14:41:31.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.956" endtime="20201117 14:41:31.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.960" endtime="20201117 14:41:31.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.958" endtime="20201117 14:41:31.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.955" endtime="20201117 14:41:31.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.589" endtime="20201117 14:41:31.981"></status>
</kw>
<msg timestamp="20201117 14:41:31.981" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.989" endtime="20201117 14:41:32.005"></status>
</kw>
<msg timestamp="20201117 14:41:32.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.988" endtime="20201117 14:41:32.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.007" endtime="20201117 14:41:32.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.009" endtime="20201117 14:41:32.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.985" endtime="20201117 14:41:32.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.983" endtime="20201117 14:41:32.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.019" endtime="20201117 14:41:32.305"></status>
</kw>
<msg timestamp="20201117 14:41:32.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.018" endtime="20201117 14:41:32.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.309" endtime="20201117 14:41:32.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.318" endtime="20201117 14:41:32.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.015" endtime="20201117 14:41:32.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.013" endtime="20201117 14:41:32.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.324" level="INFO">${RESULT} = [{'time': 0.019567097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.441599999999851e-05, 'source_diff': 4.441599999999851e-05}, {'time': 0.019623139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.321" endtime="20201117 14:41:32.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.338" level="INFO">${ACCURACY} = {'time': [0.019567097, 0.019623139, 0.019675111, 0.019727125, 0.019778111, 0.019835139, 0.019887139, 0.019942167, 0.019993139, 0.020045153, 0.020099153, 0.020151167, 0.020207181, 0.020263167, 0.020319...</msg>
<status status="PASS" starttime="20201117 14:41:32.325" endtime="20201117 14:41:32.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.342" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.341" endtime="20201117 14:41:32.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.345" level="INFO">VALUE: [4.441599999999851e-05, 4.501400000000294e-05, 4.4916999999998486e-05, 4.469400000000137e-05, 4.41800000000013e-05, 4.501400000000294e-05, 4.43060000000009e-05, 4.4695000000000845e-05, 4.4931000000001525e-05, 4.448599999999983e-05, 4.4639000000002566e-05, 4.4695000000000845e-05, 4.4959000000000665e-05, 4.4973000000000235e-05, 4.49999999999999e-05, 4.4874999999999776e-05, 4.497200000000076e-05, 4.419400000000087e-05, 4.480500000000193e-05, 4.4902999999998916e-05, 4.470800000000094e-05, 4.4555000000001677e-05, 4.427799999999829e-05, 4.451399999999897e-05, 4.4819000000001497e-05, 4.4222999999999485e-05, 4.4416999999997986e-05, 4.4431000000001025e-05, 4.476399999999922e-05, 4.483400000000054e-05, 4.451399999999897e-05, 4.486099999999674e-05, 4.473600000000008e-05, 4.429099999999839e-05, 4.452699999999907e-05, 4.44999999999994e-05, 4.405499999999771e-05, 4.479100000000236e-05, 4.49999999999999e-05, 4.476399999999922e-05, 4.4416999999997986e-05, 4.4833000000001066e-05, 4.405499999999771e-05, 4.424999999999915e-05, 4.4374999999999276e-05, 4.470800000000094e-05, 4.4624999999999526e-05, 4.455600000000115e-05, 4.504199999999861e-05, 4.483400000000054e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.343" endtime="20201117 14:41:32.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.338" endtime="20201117 14:41:32.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.348" endtime="20201117 14:41:32.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.352" endtime="20201117 14:41:32.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.350" endtime="20201117 14:41:32.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.347" endtime="20201117 14:41:32.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.981" endtime="20201117 14:41:32.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.588" endtime="20201117 14:41:32.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.587" endtime="20201117 14:41:32.373"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.375" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.383" endtime="20201117 14:41:32.399"></status>
</kw>
<msg timestamp="20201117 14:41:32.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.382" endtime="20201117 14:41:32.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.400" endtime="20201117 14:41:32.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.403" endtime="20201117 14:41:32.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.379" endtime="20201117 14:41:32.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.377" endtime="20201117 14:41:32.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.412" endtime="20201117 14:41:32.696"></status>
</kw>
<msg timestamp="20201117 14:41:32.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.410" endtime="20201117 14:41:32.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.701" endtime="20201117 14:41:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.709" endtime="20201117 14:41:32.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.408" endtime="20201117 14:41:32.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.406" endtime="20201117 14:41:32.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.716" level="INFO">${RESULT} = [{'time': 0.021891042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5972999999997766e-05, 'source_diff': 4.5972999999997766e-05}, {'time': 0.021946042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:32.712" endtime="20201117 14:41:32.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.729" level="INFO">${ACCURACY} = {'time': [0.021891042, 0.021946042, 0.021999042, 0.022056056, 0.022108056, 0.022161056, 0.022215069, 0.022272069, 0.022328125, 0.022382153, 0.022440097, 0.022494097, 0.022547111, 0.022606139, 0.022663...</msg>
<status status="PASS" starttime="20201117 14:41:32.717" endtime="20201117 14:41:32.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.734" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.732" endtime="20201117 14:41:32.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.736" level="INFO">VALUE: [4.5972999999997766e-05, 4.5652999999999666e-05, 4.602800000000004e-05, 4.5875000000000776e-05, 4.5931000000002525e-05, 4.576399999999675e-05, 4.60000000000009e-05, 4.541599999999951e-05, 4.5431000000002025e-05, 4.5388999999999846e-05, 4.56939999999989e-05, 4.5111000000000456e-05, 4.527800000000276e-05, 4.5833000000002067e-05, 4.520799999999797e-05, 4.504199999999861e-05, 4.5319999999998e-05, 4.58199999999985e-05, 4.5639000000000096e-05, 4.559800000000086e-05, 4.554200000000258e-05, 4.5695000000001845e-05, 4.5639000000000096e-05, 4.5667000000002705e-05, 4.572200000000151e-05, 4.51800000000023e-05, 4.525000000000015e-05, 4.595799999999872e-05, 4.591600000000001e-05, 4.544399999999865e-05, 4.58190000000025e-05, 4.569400000000237e-05, 4.5666999999999236e-05, 4.547199999999779e-05, 4.554199999999911e-05, 4.570799999999847e-05, 4.576400000000022e-05, 4.5180999999998306e-05, 4.5681000000002275e-05, 4.575000000000065e-05, 4.552700000000007e-05, 4.526399999999972e-05, 4.602800000000004e-05, 4.5902999999999916e-05, 4.5417000000002455e-05, 4.595800000000219e-05, 4.556899999999878e-05, 4.520800000000144e-05, 4.51939999999984e-05, 4.554199999999911e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.735" endtime="20201117 14:41:32.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.730" endtime="20201117 14:41:32.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.740" endtime="20201117 14:41:32.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.743" endtime="20201117 14:41:32.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.741" endtime="20201117 14:41:32.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.738" endtime="20201117 14:41:32.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.376" endtime="20201117 14:41:32.764"></status>
</kw>
<msg timestamp="20201117 14:41:32.764" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.772" endtime="20201117 14:41:32.788"></status>
</kw>
<msg timestamp="20201117 14:41:32.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.771" endtime="20201117 14:41:32.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.790" endtime="20201117 14:41:32.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.792" endtime="20201117 14:41:32.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.768" endtime="20201117 14:41:32.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.766" endtime="20201117 14:41:32.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.802" endtime="20201117 14:41:33.087"></status>
</kw>
<msg timestamp="20201117 14:41:33.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.801" endtime="20201117 14:41:33.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.091" endtime="20201117 14:41:33.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.099" endtime="20201117 14:41:33.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.798" endtime="20201117 14:41:33.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.796" endtime="20201117 14:41:33.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.106" level="INFO">${RESULT} = [{'time': 0.019344097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5583000000001817e-05, 'source_diff': 4.5583000000001817e-05}, {'time': 0.019401069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:33.102" endtime="20201117 14:41:33.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.119" level="INFO">${ACCURACY} = {'time': [0.019344097, 0.019401069, 0.019456083, 0.019508097, 0.019562083, 0.019614097, 0.019671083, 0.019730111, 0.019786111, 0.019841125, 0.019896111, 0.019953139, 0.020011125, 0.020070153, 0.020122...</msg>
<status status="PASS" starttime="20201117 14:41:33.107" endtime="20201117 14:41:33.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.124" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.123" endtime="20201117 14:41:33.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.127" level="INFO">VALUE: [4.5583000000001817e-05, 4.55130000000005e-05, 4.590200000000044e-05, 4.5902999999999916e-05, 4.5319000000001997e-05, 4.523600000000058e-05, 4.567999999999933e-05, 4.601400000000047e-05, 4.545799999999822e-05, 4.5153000000002635e-05, 4.5333000000001566e-05, 4.5931000000002525e-05, 4.547200000000126e-05, 4.5861000000001206e-05, 4.5680999999998806e-05, 4.5625000000000526e-05, 4.536099999999724e-05, 4.5403000000002885e-05, 4.5902999999999916e-05, 4.5972999999997766e-05, 4.55000000000004e-05, 4.5902999999999916e-05, 4.60000000000009e-05, 4.5569000000002247e-05, 4.505499999999871e-05, 4.523599999999711e-05, 4.597200000000176e-05, 4.5347000000001136e-05, 4.504099999999914e-05, 4.572200000000151e-05, 4.536099999999724e-05, 4.5152999999999166e-05, 4.523600000000058e-05, 4.579199999999936e-05, 4.5388999999999846e-05, 4.506999999999775e-05, 4.582000000000197e-05, 4.573600000000108e-05, 4.58060000000024e-05, 4.5875000000000776e-05, 4.602800000000004e-05, 4.5416999999998986e-05, 4.516600000000273e-05, 4.591600000000001e-05, 4.525000000000015e-05, 4.51800000000023e-05, 4.584699999999817e-05, 4.5375000000000276e-05, 4.573599999999761e-05, 4.594399999999915e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.125" endtime="20201117 14:41:33.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.120" endtime="20201117 14:41:33.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.130" endtime="20201117 14:41:33.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.133" endtime="20201117 14:41:33.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.132" endtime="20201117 14:41:33.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.128" endtime="20201117 14:41:33.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.765" endtime="20201117 14:41:33.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.374" endtime="20201117 14:41:33.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.373" endtime="20201117 14:41:33.154"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.157" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.165" endtime="20201117 14:41:33.182"></status>
</kw>
<msg timestamp="20201117 14:41:33.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.163" endtime="20201117 14:41:33.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.183" endtime="20201117 14:41:33.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.186" endtime="20201117 14:41:33.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.161" endtime="20201117 14:41:33.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.159" endtime="20201117 14:41:33.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.195" endtime="20201117 14:41:33.479"></status>
</kw>
<msg timestamp="20201117 14:41:33.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.193" endtime="20201117 14:41:33.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.483" endtime="20201117 14:41:33.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.491" endtime="20201117 14:41:33.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.191" endtime="20201117 14:41:33.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.189" endtime="20201117 14:41:33.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.499" level="INFO">${RESULT} = [{'time': 0.022818111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6166999999999736e-05, 'source_diff': 4.6166999999999736e-05}, {'time': 0.022874139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:33.495" endtime="20201117 14:41:33.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.513" level="INFO">${ACCURACY} = {'time': [0.022818111, 0.022874139, 0.022929139, 0.022985194, 0.023044139, 0.023104139, 0.023163208, 0.023218167, 0.023270181, 0.023324181, 0.023379181, 0.023434194, 0.023490194, 0.023542194, 0.023599...</msg>
<status status="PASS" starttime="20201117 14:41:33.500" endtime="20201117 14:41:33.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.518" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.517" endtime="20201117 14:41:33.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.520" level="INFO">VALUE: [4.6166999999999736e-05, 4.6153000000000166e-05, 4.630599999999943e-05, 4.615200000000069e-05, 4.625000000000115e-05, 4.68329999999996e-05, 4.6375000000001276e-05, 4.6973000000002235e-05, 4.6139000000000596e-05, 4.6944999999999626e-05, 4.6736999999998086e-05, 4.63329999999991e-05, 4.70269999999981e-05, 4.605499999999971e-05, 4.617999999999983e-05, 4.6389000000000846e-05, 4.690299999999745e-05, 4.626400000000072e-05, 4.630499999999996e-05, 4.65000000000014e-05, 4.672199999999904e-05, 4.6347000000002136e-05, 4.655599999999968e-05, 4.676400000000122e-05, 4.613899999999713e-05, 4.680599999999993e-05, 4.6973000000002235e-05, 4.630599999999943e-05, 4.6889000000001346e-05, 4.6416999999999986e-05, 4.620799999999897e-05, 4.606999999999875e-05, 4.694400000000015e-05, 4.670799999999947e-05, 4.705500000000071e-05, 4.668000000000033e-05, 4.70000000000019e-05, 4.672199999999904e-05, 4.695799999999972e-05, 4.655599999999968e-05, 4.6972999999998766e-05, 4.659699999999892e-05, 4.670799999999947e-05, 4.679200000000036e-05, 4.602800000000004e-05, 4.6430999999999556e-05, 4.629199999999986e-05, 4.6195000000002345e-05, 4.698599999999886e-05, 4.6473000000001735e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.519" endtime="20201117 14:41:33.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.514" endtime="20201117 14:41:33.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.523" endtime="20201117 14:41:33.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.527" endtime="20201117 14:41:33.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.525" endtime="20201117 14:41:33.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.522" endtime="20201117 14:41:33.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.157" endtime="20201117 14:41:33.547"></status>
</kw>
<msg timestamp="20201117 14:41:33.548" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.556" endtime="20201117 14:41:33.572"></status>
</kw>
<msg timestamp="20201117 14:41:33.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.554" endtime="20201117 14:41:33.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.573" endtime="20201117 14:41:33.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.576" endtime="20201117 14:41:33.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.552" endtime="20201117 14:41:33.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.550" endtime="20201117 14:41:33.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.586" endtime="20201117 14:41:33.870"></status>
</kw>
<msg timestamp="20201117 14:41:33.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019251597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.584" endtime="20201117 14:41:33.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019251597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.874" endtime="20201117 14:41:33.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.883" endtime="20201117 14:41:33.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.581" endtime="20201117 14:41:33.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.580" endtime="20201117 14:41:33.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.890" level="INFO">${RESULT} = [{'time': 0.019298431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.683400000000254e-05, 'source_diff': 4.683400000000254e-05}, {'time': 0.019357417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.886" endtime="20201117 14:41:33.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.903" level="INFO">${ACCURACY} = {'time': [0.019298431, 0.019357417, 0.019417431, 0.019473431, 0.019529486, 0.019588458, 0.019642458, 0.019701472, 0.019755472, 0.019813472, 0.0198685, 0.0199265, 0.0199815, 0.020037514, 0.020094528, 0...</msg>
<status status="PASS" starttime="20201117 14:41:33.891" endtime="20201117 14:41:33.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.907" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.906" endtime="20201117 14:41:33.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.910" level="INFO">VALUE: [4.683400000000254e-05, 4.6472999999998266e-05, 4.7013999999998e-05, 4.656999999999925e-05, 4.613899999999713e-05, 4.695799999999972e-05, 4.679100000000089e-05, 4.6083000000002317e-05, 4.677800000000079e-05, 4.643000000000008e-05, 4.677800000000079e-05, 4.644399999999965e-05, 4.612499999999756e-05, 4.611099999999799e-05, 4.6611000000001956e-05, 4.6931000000000056e-05, 4.654200000000011e-05, 4.6111000000001456e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.670799999999947e-05, 4.65000000000014e-05, 4.649999999999793e-05, 4.68329999999996e-05, 4.65000000000014e-05, 4.656899999999978e-05, 4.625000000000115e-05, 4.661099999999849e-05, 4.6403000000000416e-05, 4.655500000000021e-05, 4.686099999999874e-05, 4.648600000000183e-05, 4.658299999999935e-05, 4.634699999999867e-05, 4.6625000000001526e-05, 4.705600000000018e-05, 4.623599999999811e-05, 4.702800000000104e-05, 4.687499999999831e-05, 4.63060000000029e-05, 4.6708999999998946e-05, 4.626300000000125e-05, 4.663899999999763e-05, 4.66939999999999e-05, 4.698600000000233e-05, 4.699999999999843e-05, 4.679100000000089e-05, 4.672199999999904e-05, 4.6875000000001776e-05, 4.662499999999806e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.909" endtime="20201117 14:41:33.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.904" endtime="20201117 14:41:33.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.913" endtime="20201117 14:41:33.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.917" endtime="20201117 14:41:33.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.915" endtime="20201117 14:41:33.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.911" endtime="20201117 14:41:33.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.548" endtime="20201117 14:41:33.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.155" endtime="20201117 14:41:33.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.155" endtime="20201117 14:41:33.938"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.940" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.948" endtime="20201117 14:41:33.965"></status>
</kw>
<msg timestamp="20201117 14:41:33.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.947" endtime="20201117 14:41:33.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.966" endtime="20201117 14:41:33.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.969" endtime="20201117 14:41:33.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.944" endtime="20201117 14:41:33.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.942" endtime="20201117 14:41:33.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.978" endtime="20201117 14:41:34.263"></status>
</kw>
<msg timestamp="20201117 14:41:34.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.977" endtime="20201117 14:41:34.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.268" endtime="20201117 14:41:34.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.276" endtime="20201117 14:41:34.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.974" endtime="20201117 14:41:34.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.972" endtime="20201117 14:41:34.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.282" level="INFO">${RESULT} = [{'time': 0.021908347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722200000000301e-05, 'source_diff': 4.722200000000301e-05}, {'time': 0.021968361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.279" endtime="20201117 14:41:34.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.296" level="INFO">${ACCURACY} = {'time': [0.021908347, 0.021968361, 0.022026375, 0.022081389, 0.022137403, 0.022194389, 0.022251389, 0.022309403, 0.022369417, 0.022428417, 0.022482417, 0.022540431, 0.0225965, 0.022656444, 0.02271544...</msg>
<status status="PASS" starttime="20201117 14:41:34.283" endtime="20201117 14:41:34.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.300" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.299" endtime="20201117 14:41:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.303" level="INFO">VALUE: [4.722200000000301e-05, 4.777799999999832e-05, 4.722199999999954e-05, 4.773599999999961e-05, 4.7139000000001596e-05, 4.711099999999899e-05, 4.705600000000018e-05, 4.71529999999977e-05, 4.749999999999893e-05, 4.724999999999868e-05, 4.773599999999961e-05, 4.790299999999845e-05, 4.71529999999977e-05, 4.745800000000022e-05, 4.793000000000158e-05, 4.724999999999868e-05, 4.774999999999918e-05, 4.798599999999986e-05, 4.719399999999693e-05, 4.747199999999979e-05, 4.7153000000001166e-05, 4.729200000000086e-05, 4.776400000000222e-05, 4.766699999999777e-05, 4.7903000000001916e-05, 4.777800000000179e-05, 4.7458999999999696e-05, 4.804199999999814e-05, 4.713899999999813e-05, 4.755600000000068e-05, 4.751400000000197e-05, 4.777699999999885e-05, 4.736199999999871e-05, 4.791600000000201e-05, 4.767999999999786e-05, 4.76529999999982e-05, 4.76940000000009e-05, 4.743000000000108e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.744400000000065e-05, 4.791699999999802e-05, 4.749999999999893e-05, 4.7208999999999446e-05, 4.723600000000258e-05, 4.7695000000000376e-05, 4.708399999999932e-05, 4.7945000000000626e-05, 4.706999999999975e-05, 4.7987000000002805e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.302" endtime="20201117 14:41:34.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.297" endtime="20201117 14:41:34.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.306" endtime="20201117 14:41:34.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.309" endtime="20201117 14:41:34.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.308" endtime="20201117 14:41:34.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.304" endtime="20201117 14:41:34.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.941" endtime="20201117 14:41:34.330"></status>
</kw>
<msg timestamp="20201117 14:41:34.330" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.339" endtime="20201117 14:41:34.355"></status>
</kw>
<msg timestamp="20201117 14:41:34.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.337" endtime="20201117 14:41:34.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.357" endtime="20201117 14:41:34.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.360" endtime="20201117 14:41:34.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.335" endtime="20201117 14:41:34.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.332" endtime="20201117 14:41:34.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.370" endtime="20201117 14:41:34.655"></status>
</kw>
<msg timestamp="20201117 14:41:34.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:34.368" endtime="20201117 14:41:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:34.659" endtime="20201117 14:41:34.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.668" endtime="20201117 14:41:34.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.366" endtime="20201117 14:41:34.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.364" endtime="20201117 14:41:34.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.676" level="INFO">${RESULT} = [{'time': 0.01940025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.752800000000154e-05, 'source_diff': 4.752800000000154e-05}, {'time': 0.019458264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:34.672" endtime="20201117 14:41:34.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.690" level="INFO">${ACCURACY} = {'time': [0.01940025, 0.019458264, 0.019514292, 0.019569278, 0.019627278, 0.019681292, 0.019737319, 0.019792333, 0.019845306, 0.019905389, 0.019965333, 0.020025319, 0.020083347, 0.020142389, 0.0201963...</msg>
<status status="PASS" starttime="20201117 14:41:34.677" endtime="20201117 14:41:34.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.695" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.694" endtime="20201117 14:41:34.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.697" level="INFO">VALUE: [4.752800000000154e-05, 4.7681000000000806e-05, 4.7695000000000376e-05, 4.788899999999888e-05, 4.7445000000000126e-05, 4.738899999999838e-05, 4.711099999999899e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.759699999999992e-05, 4.748599999999936e-05, 4.80269999999991e-05, 4.759699999999992e-05, 4.7431000000000556e-05, 4.71940000000004e-05, 4.763899999999863e-05, 4.724999999999868e-05, 4.7417000000000986e-05, 4.712499999999856e-05, 4.73330000000001e-05, 4.770800000000047e-05, 4.784799999999964e-05, 4.774999999999918e-05, 4.791699999999802e-05, 4.7708999999999946e-05, 4.722199999999954e-05, 4.726400000000172e-05, 4.763899999999863e-05, 4.755500000000121e-05, 4.752700000000207e-05, 4.734699999999967e-05, 4.779099999999842e-05, 4.758300000000035e-05, 4.780600000000093e-05, 4.724999999999868e-05, 4.7139000000001596e-05, 4.762499999999906e-05, 4.726400000000172e-05, 4.795800000000072e-05, 4.770800000000047e-05, 4.7458999999999696e-05, 4.761099999999949e-05, 4.801400000000247e-05, 4.752799999999807e-05, 4.793099999999759e-05, 4.7972999999999766e-05, 4.799999999999943e-05, 4.709699999999942e-05, 4.776400000000222e-05, 4.718000000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.696" endtime="20201117 14:41:34.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.691" endtime="20201117 14:41:34.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.700" endtime="20201117 14:41:34.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.704" endtime="20201117 14:41:34.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.702" endtime="20201117 14:41:34.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.699" endtime="20201117 14:41:34.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.331" endtime="20201117 14:41:34.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.939" endtime="20201117 14:41:34.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.938" endtime="20201117 14:41:34.725"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.727" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.736" endtime="20201117 14:41:34.754"></status>
</kw>
<msg timestamp="20201117 14:41:34.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.734" endtime="20201117 14:41:34.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.756" endtime="20201117 14:41:34.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.758" endtime="20201117 14:41:34.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.731" endtime="20201117 14:41:34.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.729" endtime="20201117 14:41:34.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.767" endtime="20201117 14:41:35.053"></status>
</kw>
<msg timestamp="20201117 14:41:35.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.766" endtime="20201117 14:41:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.058" endtime="20201117 14:41:35.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.066" endtime="20201117 14:41:35.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.763" endtime="20201117 14:41:35.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.761" endtime="20201117 14:41:35.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.072" level="INFO">${RESULT} = [{'time': 0.023198472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8403000000002416e-05, 'source_diff': 4.8403000000002416e-05}, {'time': 0.023254472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:35.069" endtime="20201117 14:41:35.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.088" level="INFO">${ACCURACY} = {'time': [0.023198472, 0.023254472, 0.023311486, 0.023371486, 0.023432528, 0.023493542, 0.0235515, 0.023608514, 0.023666528, 0.023722528, 0.023781556, 0.023840569, 0.023898556, 0.023953583, 0.02400956...</msg>
<status status="PASS" starttime="20201117 14:41:35.073" endtime="20201117 14:41:35.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.093" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.092" endtime="20201117 14:41:35.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.096" level="INFO">VALUE: [4.8403000000002416e-05, 4.851400000000297e-05, 4.877799999999932e-05, 4.862500000000006e-05, 4.827800000000229e-05, 4.848600000000036e-05, 4.881899999999856e-05, 4.812499999999956e-05, 4.811099999999999e-05, 4.852799999999907e-05, 4.868099999999834e-05, 4.841599999999904e-05, 4.8320000000001e-05, 4.865199999999972e-05, 4.904100000000314e-05, 4.872200000000104e-05, 4.829099999999892e-05, 4.847199999999732e-05, 4.831899999999806e-05, 4.895799999999825e-05, 4.858400000000082e-05, 4.895799999999825e-05, 4.876399999999975e-05, 4.861100000000049e-05, 4.827799999999882e-05, 4.902799999999957e-05, 4.8958999999997727e-05, 4.890299999999945e-05, 4.892999999999911e-05, 4.837499999999981e-05, 4.8723000000000516e-05, 4.8945000000001626e-05, 4.856899999999831e-05, 4.866699999999877e-05, 4.886100000000074e-05, 4.822200000000054e-05, 4.833299999999763e-05, 4.870800000000147e-05, 4.898600000000086e-05, 4.842999999999861e-05, 4.892999999999911e-05, 4.8153000000002166e-05, 4.881900000000203e-05, 4.816699999999827e-05, 4.888899999999988e-05, 4.861100000000049e-05, 4.8709000000000946e-05, 4.823600000000011e-05, 4.825000000000315e-05, 4.840299999999895e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.095" endtime="20201117 14:41:35.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.089" endtime="20201117 14:41:35.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.099" endtime="20201117 14:41:35.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.103" endtime="20201117 14:41:35.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.101" endtime="20201117 14:41:35.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.098" endtime="20201117 14:41:35.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.728" endtime="20201117 14:41:35.124"></status>
</kw>
<msg timestamp="20201117 14:41:35.124" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.133" endtime="20201117 14:41:35.149"></status>
</kw>
<msg timestamp="20201117 14:41:35.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.131" endtime="20201117 14:41:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.150" endtime="20201117 14:41:35.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.153" endtime="20201117 14:41:35.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.129" endtime="20201117 14:41:35.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.127" endtime="20201117 14:41:35.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.163" endtime="20201117 14:41:35.449"></status>
</kw>
<msg timestamp="20201117 14:41:35.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.161" endtime="20201117 14:41:35.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.453" endtime="20201117 14:41:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.461" endtime="20201117 14:41:35.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.159" endtime="20201117 14:41:35.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.157" endtime="20201117 14:41:35.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.468" level="INFO">${RESULT} = [{'time': 0.019926181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8737000000000086e-05, 'source_diff': 4.8737000000000086e-05}, {'time': 0.019981181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:35.465" endtime="20201117 14:41:35.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.481" level="INFO">${ACCURACY} = {'time': [0.019926181, 0.019981181, 0.020038181, 0.020096208, 0.020156194, 0.020216208, 0.020274222, 0.020335222, 0.020390236, 0.02044525, 0.020500236, 0.020561264, 0.020622264, 0.020683264, 0.0207382...</msg>
<status status="PASS" starttime="20201117 14:41:35.469" endtime="20201117 14:41:35.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.486" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.485" endtime="20201117 14:41:35.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.488" level="INFO">VALUE: [4.8737000000000086e-05, 4.862500000000006e-05, 4.8972999999997296e-05, 4.841600000000251e-05, 4.890199999999997e-05, 4.817999999999836e-05, 4.83330000000011e-05, 4.873600000000061e-05, 4.872199999999757e-05, 4.8653000000002666e-05, 4.843000000000208e-05, 4.849999999999993e-05, 4.904200000000261e-05, 4.900000000000043e-05, 4.887500000000031e-05, 4.902799999999957e-05, 4.890299999999945e-05, 4.8209000000000446e-05, 4.8959000000001196e-05, 4.844400000000165e-05, 4.809799999999989e-05, 4.8487000000003305e-05, 4.894400000000215e-05, 4.813899999999913e-05, 4.879099999999942e-05, 4.874999999999671e-05, 4.9014e-05, 4.907000000000175e-05, 4.826399999999925e-05, 4.8181000000001306e-05, 4.8959000000001196e-05, 4.820800000000097e-05, 4.898600000000086e-05, 4.848600000000036e-05, 4.8209000000000446e-05, 4.8681000000001806e-05, 4.8695000000001376e-05, 4.9014e-05, 4.849999999999993e-05, 4.845800000000122e-05, 4.905600000000218e-05, 4.863899999999963e-05, 4.870800000000147e-05, 4.863899999999963e-05, 4.862500000000006e-05, 4.813899999999913e-05, 4.879099999999942e-05, 4.902799999999957e-05, 4.812499999999956e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.487" endtime="20201117 14:41:35.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.482" endtime="20201117 14:41:35.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.492" endtime="20201117 14:41:35.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.495" endtime="20201117 14:41:35.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.494" endtime="20201117 14:41:35.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.490" endtime="20201117 14:41:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.125" endtime="20201117 14:41:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.726" endtime="20201117 14:41:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.725" endtime="20201117 14:41:35.517"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.519" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.527" endtime="20201117 14:41:35.545"></status>
</kw>
<msg timestamp="20201117 14:41:35.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.526" endtime="20201117 14:41:35.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.546" endtime="20201117 14:41:35.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.549" endtime="20201117 14:41:35.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.523" endtime="20201117 14:41:35.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.521" endtime="20201117 14:41:35.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.558" endtime="20201117 14:41:35.843"></status>
</kw>
<msg timestamp="20201117 14:41:35.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.556" endtime="20201117 14:41:35.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.848" endtime="20201117 14:41:35.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.856" endtime="20201117 14:41:35.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.554" endtime="20201117 14:41:35.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.552" endtime="20201117 14:41:35.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.862" level="INFO">${RESULT} = [{'time': 0.021896097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.925000000000068e-05, 'source_diff': 4.925000000000068e-05}, {'time': 0.021954097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.859" endtime="20201117 14:41:35.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.876" level="INFO">${ACCURACY} = {'time': [0.021896097, 0.021954097, 0.022015097, 0.022071125, 0.022133111, 0.022189125, 0.022250125, 0.022306181, 0.022364194, 0.022421139, 0.022480181, 0.022539167, 0.022595167, 0.022654194, 0.022716...</msg>
<status status="PASS" starttime="20201117 14:41:35.863" endtime="20201117 14:41:35.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.880" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.879" endtime="20201117 14:41:35.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.883" level="INFO">VALUE: [4.925000000000068e-05, 4.948599999999789e-05, 4.991600000000054e-05, 4.993099999999959e-05, 4.930499999999949e-05, 4.963900000000063e-05, 4.998599999999839e-05, 4.979199999999989e-05, 4.983299999999913e-05, 4.926400000000025e-05, 4.984799999999817e-05, 4.904199999999914e-05, 4.974999999999771e-05, 4.940200000000047e-05, 4.951399999999703e-05, 4.945799999999875e-05, 4.990300000000045e-05, 4.93330000000021e-05, 4.908300000000185e-05, 4.922200000000154e-05, 4.944399999999918e-05, 4.944400000000265e-05, 4.927799999999982e-05, 5.002800000000057e-05, 4.991700000000002e-05, 4.991700000000002e-05, 5.002800000000057e-05, 4.925000000000068e-05, 4.948599999999789e-05, 4.916699999999927e-05, 4.919499999999841e-05, 4.916699999999927e-05, 4.9458999999998227e-05, 4.976400000000075e-05, 4.961100000000149e-05, 4.987499999999784e-05, 4.987500000000131e-05, 4.941699999999952e-05, 4.936100000000124e-05, 5.004200000000014e-05, 4.983299999999913e-05, 4.961100000000149e-05, 4.968000000000333e-05, 4.956899999999931e-05, 4.965299999999673e-05, 4.994499999999916e-05, 4.990300000000045e-05, 4.973599999999814e-05, 4.966699999999977e-05, 4.912500000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.881" endtime="20201117 14:41:35.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.877" endtime="20201117 14:41:35.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.886" endtime="20201117 14:41:35.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.890" endtime="20201117 14:41:35.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.888" endtime="20201117 14:41:35.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.885" endtime="20201117 14:41:35.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.520" endtime="20201117 14:41:35.911"></status>
</kw>
<msg timestamp="20201117 14:41:35.911" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.919" endtime="20201117 14:41:35.934"></status>
</kw>
<msg timestamp="20201117 14:41:35.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.918" endtime="20201117 14:41:35.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.936" endtime="20201117 14:41:35.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.938" endtime="20201117 14:41:35.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.915" endtime="20201117 14:41:35.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.913" endtime="20201117 14:41:35.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.948" endtime="20201117 14:41:36.234"></status>
</kw>
<msg timestamp="20201117 14:41:36.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.947" endtime="20201117 14:41:36.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.238" endtime="20201117 14:41:36.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.246" endtime="20201117 14:41:36.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.944" endtime="20201117 14:41:36.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.942" endtime="20201117 14:41:36.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.253" level="INFO">${RESULT} = [{'time': 0.019403014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.991700000000002e-05, 'source_diff': 4.991700000000002e-05}, {'time': 0.019462014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.249" endtime="20201117 14:41:36.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.266" level="INFO">${ACCURACY} = {'time': [0.019403014, 0.019462014, 0.019518056, 0.019576056, 0.019638056, 0.019694056, 0.019752056, 0.019808069, 0.019868139, 0.019927069, 0.019988083, 0.020050097, 0.020110097, 0.020173111, 0.020229...</msg>
<status status="PASS" starttime="20201117 14:41:36.254" endtime="20201117 14:41:36.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.270" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.269" endtime="20201117 14:41:36.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.273" level="INFO">VALUE: [4.991700000000002e-05, 4.963900000000063e-05, 4.927799999999982e-05, 5.002800000000057e-05, 4.925000000000068e-05, 4.962500000000106e-05, 4.95140000000005e-05, 4.913800000000065e-05, 4.995799999999925e-05, 4.983299999999913e-05, 4.966600000000029e-05, 4.95140000000005e-05, 4.955499999999974e-05, 4.976400000000075e-05, 4.942999999999961e-05, 4.961099999999802e-05, 4.970800000000247e-05, 4.926400000000025e-05, 4.970899999999848e-05, 4.909699999999795e-05, 4.963900000000063e-05, 4.979100000000042e-05, 4.9723000000001516e-05, 4.981999999999903e-05, 4.937500000000081e-05, 4.913900000000013e-05, 4.983299999999913e-05, 5.00270000000011e-05, 4.925000000000068e-05, 4.954100000000017e-05, 4.9707999999999e-05, 4.92079999999985e-05, 4.994399999999968e-05, 4.980599999999946e-05, 4.995799999999925e-05, 4.998599999999839e-05, 4.926400000000025e-05, 4.955599999999921e-05, 4.977800000000032e-05, 4.976400000000075e-05, 4.969499999999891e-05, 4.929199999999939e-05, 4.973599999999814e-05, 4.906900000000228e-05, 4.979099999999695e-05, 4.9887999999997934e-05, 4.944399999999918e-05, 4.934700000000167e-05, 4.919399999999893e-05, 5.007000000000275e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.271" endtime="20201117 14:41:36.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.267" endtime="20201117 14:41:36.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.276" endtime="20201117 14:41:36.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.280" endtime="20201117 14:41:36.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.278" endtime="20201117 14:41:36.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.275" endtime="20201117 14:41:36.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.911" endtime="20201117 14:41:36.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.518" endtime="20201117 14:41:36.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.517" endtime="20201117 14:41:36.301"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.303" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.311" endtime="20201117 14:41:36.330"></status>
</kw>
<msg timestamp="20201117 14:41:36.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.310" endtime="20201117 14:41:36.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.331" endtime="20201117 14:41:36.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.334" endtime="20201117 14:41:36.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.307" endtime="20201117 14:41:36.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.305" endtime="20201117 14:41:36.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.343" endtime="20201117 14:41:36.628"></status>
</kw>
<msg timestamp="20201117 14:41:36.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.341" endtime="20201117 14:41:36.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.632" endtime="20201117 14:41:36.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.640" endtime="20201117 14:41:36.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.339" endtime="20201117 14:41:36.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.337" endtime="20201117 14:41:36.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.647" level="INFO">${RESULT} = [{'time': 0.023078028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.022199999999907e-05, 'source_diff': 5.022199999999907e-05}, {'time': 0.023137056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.643" endtime="20201117 14:41:36.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.661" level="INFO">${ACCURACY} = {'time': [0.023078028, 0.023137056, 0.023194042, 0.023252111, 0.023310111, 0.023370083, 0.023430083, 0.023493097, 0.023554097, 0.023617097, 0.023679111, 0.023738125, 0.023795111, 0.023858125, 0.023918...</msg>
<status status="PASS" starttime="20201117 14:41:36.648" endtime="20201117 14:41:36.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.666" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.665" endtime="20201117 14:41:36.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.669" level="INFO">VALUE: [5.022199999999907e-05, 5.009799999999842e-05, 5.093100000000059e-05, 5.054200000000064e-05, 5.012500000000156e-05, 5.031900000000006e-05, 5.0902000000001973e-05, 5.054100000000117e-05, 5.06530000000012e-05, 5.095800000000025e-05, 5.083300000000013e-05, 5.079199999999742e-05, 5.097199999999982e-05, 5.025000000000168e-05, 5.056999999999978e-05, 5.012500000000156e-05, 5.059699999999945e-05, 5.044499999999966e-05, 5.01530000000007e-05, 5.076400000000175e-05, 5.045899999999923e-05, 5.045799999999975e-05, 5.062499999999859e-05, 5.027700000000135e-05, 5.047199999999932e-05, 5.022200000000254e-05, 5.051399999999803e-05, 5.050000000000193e-05, 5.095899999999973e-05, 5.0708e-05, 5.063900000000163e-05, 5.074999999999871e-05, 5.025000000000168e-05, 5.069499999999991e-05, 5.076399999999828e-05, 5.059799999999892e-05, 5.098600000000286e-05, 5.072299999999905e-05, 5.03339999999991e-05, 5.0887999999998934e-05, 5.019499999999941e-05, 5.0708e-05, 5.0138000000001653e-05, 5.048599999999889e-05, 5.079099999999795e-05, 5.011100000000199e-05, 5.01530000000007e-05, 5.095800000000025e-05, 5.02079999999995e-05, 5.106999999999681e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.667" endtime="20201117 14:41:36.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.662" endtime="20201117 14:41:36.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.672" endtime="20201117 14:41:36.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.675" endtime="20201117 14:41:36.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.674" endtime="20201117 14:41:36.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.670" endtime="20201117 14:41:36.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.304" endtime="20201117 14:41:36.696"></status>
</kw>
<msg timestamp="20201117 14:41:36.696" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.704" endtime="20201117 14:41:36.721"></status>
</kw>
<msg timestamp="20201117 14:41:36.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.703" endtime="20201117 14:41:36.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.722" endtime="20201117 14:41:36.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.725" endtime="20201117 14:41:36.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.700" endtime="20201117 14:41:36.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.698" endtime="20201117 14:41:36.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.735" endtime="20201117 14:41:37.020"></status>
</kw>
<msg timestamp="20201117 14:41:37.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.733" endtime="20201117 14:41:37.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019335931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.024" endtime="20201117 14:41:37.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.032" endtime="20201117 14:41:37.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.730" endtime="20201117 14:41:37.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.729" endtime="20201117 14:41:37.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.039" level="INFO">${RESULT} = [{'time': 0.019386875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.094400000000068e-05, 'source_diff': 5.094400000000068e-05}, {'time': 0.019447889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.036" endtime="20201117 14:41:37.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.052" level="INFO">${ACCURACY} = {'time': [0.019386875, 0.019447889, 0.019509889, 0.019569903, 0.019632903, 0.019694931, 0.019756917, 0.019812917, 0.019872958, 0.019931931, 0.019989944, 0.020052958, 0.020111958, 0.020174042, 0.020233...</msg>
<status status="PASS" starttime="20201117 14:41:37.040" endtime="20201117 14:41:37.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.057" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.056" endtime="20201117 14:41:37.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.060" level="INFO">VALUE: [5.094400000000068e-05, 5.087499999999884e-05, 5.06669999999973e-05, 5.030599999999996e-05, 5.073599999999914e-05, 5.088899999999841e-05, 5.045899999999923e-05, 5.018099999999984e-05, 5.106900000000081e-05, 5.09729999999993e-05, 5.0401999999998004e-05, 5.068000000000086e-05, 5.051399999999803e-05, 5.03339999999991e-05, 5.059699999999945e-05, 5.086100000000274e-05, 5.058299999999988e-05, 5.107000000000028e-05, 5.105600000000071e-05, 5.061099999999902e-05, 5.033400000000257e-05, 5.061100000000249e-05, 5.047199999999932e-05, 5.104200000000114e-05, 5.03469999999992e-05, 5.087500000000231e-05, 5.044499999999966e-05, 5.093100000000059e-05, 5.004200000000014e-05, 5.079099999999795e-05, 5.068000000000086e-05, 5.076400000000175e-05, 5.091700000000102e-05, 5.011100000000199e-05, 5.056900000000031e-05, 5.048599999999889e-05, 5.054199999999717e-05, 5.03469999999992e-05, 5.083300000000013e-05, 5.012500000000156e-05, 5.006999999999928e-05, 5.01530000000007e-05, 5.024999999999821e-05, 5.06530000000012e-05, 5.026399999999778e-05, 5.080600000000046e-05, 5.083300000000013e-05, 5.0708e-05, 5.027700000000135e-05, 5.05140000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.058" endtime="20201117 14:41:37.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.054" endtime="20201117 14:41:37.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.063" endtime="20201117 14:41:37.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.066" endtime="20201117 14:41:37.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.065" endtime="20201117 14:41:37.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.061" endtime="20201117 14:41:37.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.697" endtime="20201117 14:41:37.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.302" endtime="20201117 14:41:37.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.301" endtime="20201117 14:41:37.087"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.090" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.098" endtime="20201117 14:41:37.114"></status>
</kw>
<msg timestamp="20201117 14:41:37.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.096" endtime="20201117 14:41:37.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.116" endtime="20201117 14:41:37.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.118" endtime="20201117 14:41:37.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.094" endtime="20201117 14:41:37.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.092" endtime="20201117 14:41:37.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.128" endtime="20201117 14:41:37.413"></status>
</kw>
<msg timestamp="20201117 14:41:37.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.127" endtime="20201117 14:41:37.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.417" endtime="20201117 14:41:37.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.426" endtime="20201117 14:41:37.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.124" endtime="20201117 14:41:37.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.122" endtime="20201117 14:41:37.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.433" level="INFO">${RESULT} = [{'time': 0.021752667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.115299999999823e-05, 'source_diff': 5.115299999999823e-05}, {'time': 0.021816667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.429" endtime="20201117 14:41:37.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.446" level="INFO">${ACCURACY} = {'time': [0.021752667, 0.021816667, 0.021877681, 0.021937681, 0.021995694, 0.022053694, 0.022116736, 0.02217475, 0.022236722, 0.022298736, 0.022356736, 0.022420736, 0.022478792, 0.02254275, 0.02260479...</msg>
<status status="PASS" starttime="20201117 14:41:37.434" endtime="20201117 14:41:37.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.451" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.450" endtime="20201117 14:41:37.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.453" level="INFO">VALUE: [5.115299999999823e-05, 5.179200000000189e-05, 5.18340000000006e-05, 5.157000000000078e-05, 5.119400000000093e-05, 5.1415999999998574e-05, 5.152800000000207e-05, 5.144400000000118e-05, 5.169400000000143e-05, 5.186100000000027e-05, 5.127799999999835e-05, 5.201399999999953e-05, 5.143100000000109e-05, 5.169400000000143e-05, 5.141699999999805e-05, 5.147200000000032e-05, 5.163899999999916e-05, 5.155499999999827e-05, 5.173600000000014e-05, 5.109799999999942e-05, 5.145899999999676e-05, 5.186199999999974e-05, 5.1207999999997034e-05, 5.10409999999982e-05, 5.198600000000039e-05, 5.108300000000038e-05, 5.15140000000025e-05, 5.134699999999673e-05, 5.140300000000195e-05, 5.112499999999909e-05, 5.124999999999921e-05, 5.168100000000134e-05, 5.145899999999676e-05, 5.180599999999799e-05, 5.127799999999835e-05, 5.105600000000071e-05, 5.122299999999955e-05, 5.1943999999998214e-05, 5.199999999999996e-05, 5.180500000000199e-05, 5.193000000000211e-05, 5.145800000000075e-05, 5.1429999999998144e-05, 5.159700000000045e-05, 5.1665999999998824e-05, 5.112499999999909e-05, 5.136099999999977e-05, 5.115299999999823e-05, 5.169500000000091e-05, 5.111099999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.452" endtime="20201117 14:41:37.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.447" endtime="20201117 14:41:37.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.456" endtime="20201117 14:41:37.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.460" endtime="20201117 14:41:37.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.458" endtime="20201117 14:41:37.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.455" endtime="20201117 14:41:37.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.090" endtime="20201117 14:41:37.480"></status>
</kw>
<msg timestamp="20201117 14:41:37.481" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.489" endtime="20201117 14:41:37.506"></status>
</kw>
<msg timestamp="20201117 14:41:37.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.487" endtime="20201117 14:41:37.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.508" endtime="20201117 14:41:37.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.510" endtime="20201117 14:41:37.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.485" endtime="20201117 14:41:37.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.483" endtime="20201117 14:41:37.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.520" endtime="20201117 14:41:37.805"></status>
</kw>
<msg timestamp="20201117 14:41:37.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.519" endtime="20201117 14:41:37.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.809" endtime="20201117 14:41:37.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.818" endtime="20201117 14:41:37.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.516" endtime="20201117 14:41:37.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.514" endtime="20201117 14:41:37.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.825" level="INFO">${RESULT} = [{'time': 0.019381264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181999999999756e-05, 'source_diff': 5.181999999999756e-05}, {'time': 0.019441222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.821" endtime="20201117 14:41:37.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.838" level="INFO">${ACCURACY} = {'time': [0.019381264, 0.019441222, 0.019506222, 0.019567236, 0.019629236, 0.019693264, 0.01975025, 0.019808264, 0.019872278, 0.019935292, 0.019995278, 0.020059292, 0.020121306, 0.020179306, 0.0202383...</msg>
<status status="PASS" starttime="20201117 14:41:37.826" endtime="20201117 14:41:37.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.842" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.841" endtime="20201117 14:41:37.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.845" level="INFO">VALUE: [5.181999999999756e-05, 5.127800000000182e-05, 5.183300000000113e-05, 5.181899999999809e-05, 5.140300000000195e-05, 5.124999999999921e-05, 5.109699999999995e-05, 5.148599999999989e-05, 5.204199999999867e-05, 5.122299999999955e-05, 5.195899999999726e-05, 5.176399999999928e-05, 5.120899999999998e-05, 5.144500000000066e-05, 5.177800000000232e-05, 5.151300000000303e-05, 5.130499999999802e-05, 5.201399999999953e-05, 5.204199999999867e-05, 5.126399999999878e-05, 5.173600000000014e-05, 5.111099999999952e-05, 5.163900000000263e-05, 5.180599999999799e-05, 5.12080000000005e-05, 5.176400000000275e-05, 5.122200000000007e-05, 5.170900000000048e-05, 5.154200000000164e-05, 5.109799999999942e-05, 5.173600000000014e-05, 5.122200000000007e-05, 5.105600000000071e-05, 5.181899999999809e-05, 5.156899999999784e-05, 5.119400000000093e-05, 5.174999999999971e-05, 5.111099999999952e-05, 5.138899999999891e-05, 5.123599999999964e-05, 5.1708000000001e-05, 5.133300000000063e-05, 5.18340000000006e-05, 5.173600000000014e-05, 5.195800000000125e-05, 5.144500000000066e-05, 5.125000000000268e-05, 5.169400000000143e-05, 5.116700000000127e-05, 5.173699999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.843" endtime="20201117 14:41:37.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.839" endtime="20201117 14:41:37.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.848" endtime="20201117 14:41:37.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.851" endtime="20201117 14:41:37.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.850" endtime="20201117 14:41:37.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.846" endtime="20201117 14:41:37.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.481" endtime="20201117 14:41:37.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.089" endtime="20201117 14:41:37.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.088" endtime="20201117 14:41:37.872"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.875" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.883" endtime="20201117 14:41:37.901"></status>
</kw>
<msg timestamp="20201117 14:41:37.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.881" endtime="20201117 14:41:37.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.902" endtime="20201117 14:41:37.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.905" endtime="20201117 14:41:37.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.879" endtime="20201117 14:41:37.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.877" endtime="20201117 14:41:37.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.914" endtime="20201117 14:41:38.200"></status>
</kw>
<msg timestamp="20201117 14:41:38.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.913" endtime="20201117 14:41:38.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.204" endtime="20201117 14:41:38.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.212" endtime="20201117 14:41:38.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.910" endtime="20201117 14:41:38.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.908" endtime="20201117 14:41:38.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.219" level="INFO">${RESULT} = [{'time': 0.022630347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2471999999997854e-05, 'source_diff': 5.2471999999997854e-05}, {'time': 0.022694361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:38.216" endtime="20201117 14:41:38.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.234" level="INFO">${ACCURACY} = {'time': [0.022630347, 0.022694361, 0.022757361, 0.022815361, 0.022877375, 0.022936375, 0.022996389, 0.023059389, 0.023123417, 0.023182403, 0.023240403, 0.023300417, 0.023363417, 0.023422431, 0.023481...</msg>
<status status="PASS" starttime="20201117 14:41:38.220" endtime="20201117 14:41:38.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.238" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.237" endtime="20201117 14:41:38.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.241" level="INFO">VALUE: [5.2471999999997854e-05, 5.290299999999998e-05, 5.23470000000012e-05, 5.21669999999988e-05, 5.26669999999993e-05, 5.2207999999998034e-05, 5.280599999999899e-05, 5.2457999999998284e-05, 5.290299999999998e-05, 5.222200000000107e-05, 5.215299999999923e-05, 5.207000000000128e-05, 5.286100000000127e-05, 5.227799999999935e-05, 5.2429999999999144e-05, 5.226399999999978e-05, 5.2207999999998034e-05, 5.2957999999998784e-05, 5.2165999999999324e-05, 5.25409999999997e-05, 5.261099999999755e-05, 5.273600000000114e-05, 5.283299999999866e-05, 5.230600000000196e-05, 5.218100000000184e-05, 5.212500000000009e-05, 5.205599999999824e-05, 5.241700000000252e-05, 5.236100000000077e-05, 5.231999999999806e-05, 5.286200000000074e-05, 5.280499999999952e-05, 5.25409999999997e-05, 5.2165999999999324e-05, 5.248600000000089e-05, 5.298600000000139e-05, 5.2902000000000504e-05, 5.248600000000089e-05, 5.30280000000001e-05, 5.2957999999998784e-05, 5.248600000000089e-05, 5.222200000000107e-05, 5.276400000000028e-05, 5.21530000000027e-05, 5.205599999999824e-05, 5.301400000000053e-05, 5.243099999999862e-05, 5.233399999999763e-05, 5.294499999999869e-05, 5.258400000000135e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.239" endtime="20201117 14:41:38.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.235" endtime="20201117 14:41:38.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.244" endtime="20201117 14:41:38.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.247" endtime="20201117 14:41:38.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.246" endtime="20201117 14:41:38.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.242" endtime="20201117 14:41:38.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.875" endtime="20201117 14:41:38.268"></status>
</kw>
<msg timestamp="20201117 14:41:38.268" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.276" endtime="20201117 14:41:38.293"></status>
</kw>
<msg timestamp="20201117 14:41:38.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.275" endtime="20201117 14:41:38.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.294" endtime="20201117 14:41:38.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.297" endtime="20201117 14:41:38.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.272" endtime="20201117 14:41:38.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.270" endtime="20201117 14:41:38.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.307" endtime="20201117 14:41:38.593"></status>
</kw>
<msg timestamp="20201117 14:41:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.306" endtime="20201117 14:41:38.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.597" endtime="20201117 14:41:38.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.605" endtime="20201117 14:41:38.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.303" endtime="20201117 14:41:38.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.301" endtime="20201117 14:41:38.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.612" level="INFO">${RESULT} = [{'time': 0.019561889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2707999999998534e-05, 'source_diff': 5.2707999999998534e-05}, {'time': 0.019619861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:38.608" endtime="20201117 14:41:38.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.625" level="INFO">${ACCURACY} = {'time': [0.019561889, 0.019619861, 0.019683875, 0.019748889, 0.019811889, 0.019871903, 0.019933903, 0.019991917, 0.020051917, 0.020113972, 0.020174944, 0.020237931, 0.020302958, 0.020364944, 0.020429...</msg>
<status status="PASS" starttime="20201117 14:41:38.613" endtime="20201117 14:41:38.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.629" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.628" endtime="20201117 14:41:38.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.632" level="INFO">VALUE: [5.2707999999998534e-05, 5.2207999999998034e-05, 5.268099999999887e-05, 5.2457999999998284e-05, 5.240299999999948e-05, 5.255599999999874e-05, 5.280599999999899e-05, 5.212500000000009e-05, 5.276400000000028e-05, 5.222200000000107e-05, 5.227699999999988e-05, 5.28340000000016e-05, 5.206899999999834e-05, 5.2402000000000004e-05, 5.231900000000206e-05, 5.277799999999985e-05, 5.225000000000021e-05, 5.2916000000000074e-05, 5.280500000000299e-05, 5.2707999999998534e-05, 5.227799999999935e-05, 5.2971999999998354e-05, 5.23470000000012e-05, 5.254200000000264e-05, 5.241699999999905e-05, 5.300000000000096e-05, 5.225000000000021e-05, 5.236100000000077e-05, 5.223600000000064e-05, 5.2165999999999324e-05, 5.211099999999705e-05, 5.25409999999997e-05, 5.259699999999798e-05, 5.2999999999997494e-05, 5.288900000000041e-05, 5.254199999999917e-05, 5.233300000000163e-05, 5.281999999999856e-05, 5.229199999999892e-05, 5.295899999999826e-05, 5.250000000000046e-05, 5.254199999999917e-05, 5.263900000000016e-05, 5.255599999999874e-05, 5.259700000000145e-05, 5.265299999999973e-05, 5.219499999999794e-05, 5.212500000000009e-05, 5.2665999999999824e-05, 5.233300000000163e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.630" endtime="20201117 14:41:38.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.626" endtime="20201117 14:41:38.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.635" endtime="20201117 14:41:38.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.638" endtime="20201117 14:41:38.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.637" endtime="20201117 14:41:38.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.633" endtime="20201117 14:41:38.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.269" endtime="20201117 14:41:38.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.874" endtime="20201117 14:41:38.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.873" endtime="20201117 14:41:38.660"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.662" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.671" endtime="20201117 14:41:38.686"></status>
</kw>
<msg timestamp="20201117 14:41:38.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.669" endtime="20201117 14:41:38.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.688" endtime="20201117 14:41:38.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.690" endtime="20201117 14:41:38.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.666" endtime="20201117 14:41:38.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.664" endtime="20201117 14:41:38.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.699" endtime="20201117 14:41:38.985"></status>
</kw>
<msg timestamp="20201117 14:41:38.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.698" endtime="20201117 14:41:38.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.989" endtime="20201117 14:41:38.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.997" endtime="20201117 14:41:38.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.695" endtime="20201117 14:41:38.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.694" endtime="20201117 14:41:39.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.004" level="INFO">${RESULT} = [{'time': 0.022351139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.344499999999919e-05, 'source_diff': 5.344499999999919e-05}, {'time': 0.022416167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.001" endtime="20201117 14:41:39.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.017" level="INFO">${ACCURACY} = {'time': [0.022351139, 0.022416167, 0.022478167, 0.022540167, 0.022601181, 0.022661181, 0.022725194, 0.022787194, 0.022847194, 0.022911208, 0.022973208, 0.023035236, 0.023098222, 0.023160236, 0.023221...</msg>
<status status="PASS" starttime="20201117 14:41:39.005" endtime="20201117 14:41:39.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.022" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.021" endtime="20201117 14:41:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.024" level="INFO">VALUE: [5.344499999999919e-05, 5.351400000000103e-05, 5.306999999999881e-05, 5.383399999999913e-05, 5.323700000000112e-05, 5.395899999999926e-05, 5.3902000000001504e-05, 5.348600000000189e-05, 5.373600000000214e-05, 5.383299999999966e-05, 5.356899999999984e-05, 5.330500000000002e-05, 5.365300000000073e-05, 5.35280000000006e-05, 5.390300000000098e-05, 5.313899999999719e-05, 5.351400000000103e-05, 5.350000000000146e-05, 5.312500000000109e-05, 5.3915999999997605e-05, 5.377800000000085e-05, 5.355599999999974e-05, 5.325000000000121e-05, 5.308399999999838e-05, 5.370899999999901e-05, 5.330500000000002e-05, 5.33609999999983e-05, 5.377800000000085e-05, 5.356899999999984e-05, 5.326400000000078e-05, 5.3235999999998174e-05, 5.3499999999997994e-05, 5.306899999999934e-05, 5.31669999999998e-05, 5.312500000000109e-05, 5.333300000000263e-05, 5.3735999999998674e-05, 5.35280000000006e-05, 5.318099999999937e-05, 5.381999999999956e-05, 5.35280000000006e-05, 5.311199999999752e-05, 5.329100000000045e-05, 5.35410000000007e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.3193999999999464e-05, 5.36670000000003e-05, 5.334699999999873e-05, 5.3971999999999354e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.023" endtime="20201117 14:41:39.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.018" endtime="20201117 14:41:39.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.027" endtime="20201117 14:41:39.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.031" endtime="20201117 14:41:39.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.029" endtime="20201117 14:41:39.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.026" endtime="20201117 14:41:39.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.662" endtime="20201117 14:41:39.052"></status>
</kw>
<msg timestamp="20201117 14:41:39.052" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.060" endtime="20201117 14:41:39.076"></status>
</kw>
<msg timestamp="20201117 14:41:39.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.059" endtime="20201117 14:41:39.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.078" endtime="20201117 14:41:39.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.080" endtime="20201117 14:41:39.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.056" endtime="20201117 14:41:39.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.054" endtime="20201117 14:41:39.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.090" endtime="20201117 14:41:39.375"></status>
</kw>
<msg timestamp="20201117 14:41:39.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.089" endtime="20201117 14:41:39.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.380" endtime="20201117 14:41:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.388" endtime="20201117 14:41:39.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.086" endtime="20201117 14:41:39.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.084" endtime="20201117 14:41:39.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.394" level="INFO">${RESULT} = [{'time': 0.019732264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.387499999999837e-05, 'source_diff': 5.387499999999837e-05}, {'time': 0.019798278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.391" endtime="20201117 14:41:39.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.408" level="INFO">${ACCURACY} = {'time': [0.019732264, 0.019798278, 0.019862278, 0.019923292, 0.019983306, 0.020050306, 0.020115306, 0.020178319, 0.020241347, 0.020305333, 0.020368333, 0.020435375, 0.020501361, 0.020565361, 0.020632...</msg>
<status status="PASS" starttime="20201117 14:41:39.395" endtime="20201117 14:41:39.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.412" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.411" endtime="20201117 14:41:39.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.415" level="INFO">VALUE: [5.387499999999837e-05, 5.370899999999901e-05, 5.322200000000207e-05, 5.395899999999926e-05, 5.387499999999837e-05, 5.40280000000011e-05, 5.343099999999962e-05, 5.3388000000001434e-05, 5.40410000000012e-05, 5.3179999999999894e-05, 5.305499999999977e-05, 5.387499999999837e-05, 5.3944000000000214e-05, 5.341700000000005e-05, 5.383299999999966e-05, 5.348600000000189e-05, 5.3249999999997744e-05, 5.358399999999888e-05, 5.313899999999719e-05, 5.361100000000202e-05, 5.338900000000091e-05, 5.361100000000202e-05, 5.384800000000217e-05, 5.380499999999705e-05, 5.3637999999998215e-05, 5.322200000000207e-05, 5.3513999999997564e-05, 5.337500000000134e-05, 5.383299999999966e-05, 5.39730000000023e-05, 5.391700000000055e-05, 5.325000000000121e-05, 5.3957999999999784e-05, 5.313900000000066e-05, 5.3235999999998174e-05, 5.380599999999999e-05, 5.401400000000153e-05, 5.338899999999744e-05, 5.33340000000021e-05, 5.323699999999765e-05, 5.3637999999998215e-05, 5.395899999999926e-05, 5.400000000000196e-05, 5.352700000000113e-05, 5.327700000000088e-05, 5.3944000000000214e-05, 5.311100000000152e-05, 5.3430000000000144e-05, 5.315300000000023e-05, 5.356899999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.413" endtime="20201117 14:41:39.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.409" endtime="20201117 14:41:39.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.418" endtime="20201117 14:41:39.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.422" endtime="20201117 14:41:39.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.420" endtime="20201117 14:41:39.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.416" endtime="20201117 14:41:39.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.053" endtime="20201117 14:41:39.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.661" endtime="20201117 14:41:39.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.660" endtime="20201117 14:41:39.443"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.445" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.453" endtime="20201117 14:41:39.472"></status>
</kw>
<msg timestamp="20201117 14:41:39.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.452" endtime="20201117 14:41:39.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.473" endtime="20201117 14:41:39.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.476" endtime="20201117 14:41:39.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.449" endtime="20201117 14:41:39.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.447" endtime="20201117 14:41:39.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.485" endtime="20201117 14:41:39.770"></status>
</kw>
<msg timestamp="20201117 14:41:39.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:39.483" endtime="20201117 14:41:39.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:39.774" endtime="20201117 14:41:39.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.782" endtime="20201117 14:41:39.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.481" endtime="20201117 14:41:39.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.479" endtime="20201117 14:41:39.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.789" level="INFO">${RESULT} = [{'time': 0.02267625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431899999999712e-05, 'source_diff': 5.431899999999712e-05}, {'time': 0.02274225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:39.785" endtime="20201117 14:41:39.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.803" level="INFO">${ACCURACY} = {'time': [0.02267625, 0.02274225, 0.022806236, 0.02286725, 0.02293425, 0.022997306, 0.023061292, 0.023127278, 0.023194306, 0.023262292, 0.023324306, 0.023390306, 0.023455403, 0.023516319, 0.023579347,...</msg>
<status status="PASS" starttime="20201117 14:41:39.790" endtime="20201117 14:41:39.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.808" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.807" endtime="20201117 14:41:39.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.810" level="INFO">VALUE: [5.431899999999712e-05, 5.438899999999844e-05, 5.412500000000209e-05, 5.4263999999998314e-05, 5.4777999999998384e-05, 5.415299999999776e-05, 5.443100000000062e-05, 5.4485999999999424e-05, 5.426400000000178e-05, 5.5013999999999064e-05, 5.445899999999976e-05, 5.438899999999844e-05, 5.4999999999999494e-05, 5.4666000000001824e-05, 5.479100000000195e-05, 5.4235999999999174e-05, 5.429100000000145e-05, 5.41670000000008e-05, 5.427800000000135e-05, 5.412499999999862e-05, 5.466699999999783e-05, 5.4235999999999174e-05, 5.4471999999999854e-05, 5.4985999999999924e-05, 5.4749999999999244e-05, 5.440300000000148e-05, 5.476400000000228e-05, 5.44730000000028e-05, 5.405600000000024e-05, 5.48609999999998e-05, 5.433300000000016e-05, 5.483300000000066e-05, 5.4527999999998134e-05, 5.4263999999998314e-05, 5.4915999999998605e-05, 5.484700000000023e-05, 5.4458000000000284e-05, 5.41670000000008e-05, 5.427800000000135e-05, 5.4527999999998134e-05, 5.462499999999912e-05, 5.43479999999992e-05, 5.406999999999981e-05, 5.409799999999895e-05, 5.495900000000026e-05, 5.477699999999891e-05, 5.4999999999999494e-05, 5.477699999999891e-05, 5.405500000000077e-05, 5.4694000000000964e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.809" endtime="20201117 14:41:39.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.804" endtime="20201117 14:41:39.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.819" endtime="20201117 14:41:39.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.823" endtime="20201117 14:41:39.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.821" endtime="20201117 14:41:39.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.818" endtime="20201117 14:41:39.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.446" endtime="20201117 14:41:39.844"></status>
</kw>
<msg timestamp="20201117 14:41:39.844" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.852" endtime="20201117 14:41:39.869"></status>
</kw>
<msg timestamp="20201117 14:41:39.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.851" endtime="20201117 14:41:39.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.871" endtime="20201117 14:41:39.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.873" endtime="20201117 14:41:39.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.848" endtime="20201117 14:41:39.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.846" endtime="20201117 14:41:39.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.883" endtime="20201117 14:41:40.168"></status>
</kw>
<msg timestamp="20201117 14:41:40.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019328792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.882" endtime="20201117 14:41:40.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019328792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.172" endtime="20201117 14:41:40.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.180" endtime="20201117 14:41:40.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.879" endtime="20201117 14:41:40.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.877" endtime="20201117 14:41:40.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.187" level="INFO">${RESULT} = [{'time': 0.019328792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.491700000000155e-05, 'source_diff': 5.491700000000155e-05}, {'time': 0.019396778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.184" endtime="20201117 14:41:40.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.200" level="INFO">${ACCURACY} = {'time': [0.019328792, 0.019396778, 0.019460819, 0.019522792, 0.019584819, 0.019645806, 0.019712847, 0.019773819, 0.019839847, 0.019904847, 0.019968903, 0.020028861, 0.020090875, 0.020152875, 0.020212...</msg>
<status status="PASS" starttime="20201117 14:41:40.188" endtime="20201117 14:41:40.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.205" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.204" endtime="20201117 14:41:40.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.207" level="INFO">VALUE: [5.491700000000155e-05, 5.482000000000056e-05, 5.433300000000016e-05, 5.443100000000062e-05, 5.4972000000000354e-05, 5.447299999999933e-05, 5.4249999999998744e-05, 5.425000000000221e-05, 5.4972000000000354e-05, 5.463899999999869e-05, 5.445899999999976e-05, 5.4208000000000034e-05, 5.426400000000178e-05, 5.493100000000112e-05, 5.411100000000252e-05, 5.438899999999844e-05, 5.438899999999844e-05, 5.493100000000112e-05, 5.473600000000314e-05, 5.4944000000001214e-05, 5.422300000000255e-05, 5.486199999999927e-05, 5.482000000000056e-05, 5.454099999999823e-05, 5.4443999999997245e-05, 5.483300000000066e-05, 5.501400000000253e-05, 5.412499999999862e-05, 5.430500000000102e-05, 5.491700000000155e-05, 5.479200000000142e-05, 5.490299999999851e-05, 5.4458000000000284e-05, 5.4985999999999924e-05, 5.461099999999955e-05, 5.4749999999999244e-05, 5.418100000000037e-05, 5.455600000000074e-05, 5.457000000000031e-05, 5.44869999999989e-05, 5.4471999999999854e-05, 5.4513999999998564e-05, 5.461099999999955e-05, 5.408300000000338e-05, 5.487499999999937e-05, 5.4208000000000034e-05, 5.415300000000123e-05, 5.455500000000127e-05, 5.4513999999998564e-05, 5.4958000000000784e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.206" endtime="20201117 14:41:40.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.201" endtime="20201117 14:41:40.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.211" endtime="20201117 14:41:40.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.214" endtime="20201117 14:41:40.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.213" endtime="20201117 14:41:40.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.209" endtime="20201117 14:41:40.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.845" endtime="20201117 14:41:40.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.444" endtime="20201117 14:41:40.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.443" endtime="20201117 14:41:40.236"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.238" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.246" endtime="20201117 14:41:40.264"></status>
</kw>
<msg timestamp="20201117 14:41:40.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.245" endtime="20201117 14:41:40.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.265" endtime="20201117 14:41:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.268" endtime="20201117 14:41:40.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.242" endtime="20201117 14:41:40.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.240" endtime="20201117 14:41:40.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.277" endtime="20201117 14:41:40.562"></status>
</kw>
<msg timestamp="20201117 14:41:40.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.275" endtime="20201117 14:41:40.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.566" endtime="20201117 14:41:40.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.575" endtime="20201117 14:41:40.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.272" endtime="20201117 14:41:40.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.271" endtime="20201117 14:41:40.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.581" level="INFO">${RESULT} = [{'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527800000000235e-05, 'source_diff': 5.527800000000235e-05}, {'time': 0.022616528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.578" endtime="20201117 14:41:40.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.595" level="INFO">${ACCURACY} = {'time': [0.022550514, 0.022616528, 0.022684514, 0.022747528, 0.022816528, 0.022884556, 0.022949556, 0.023014556, 0.023076569, 0.023140569, 0.023204597, 0.023271583, 0.023338611, 0.023404597, 0.023467...</msg>
<status status="PASS" starttime="20201117 14:41:40.582" endtime="20201117 14:41:40.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.599" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.598" endtime="20201117 14:41:40.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.602" level="INFO">VALUE: [5.527800000000235e-05, 5.570900000000101e-05, 5.5791999999998954e-05, 5.5486000000000424e-05, 5.6000000000000494e-05, 5.595900000000126e-05, 5.586200000000027e-05, 5.533399999999716e-05, 5.527700000000288e-05, 5.5986000000000924e-05, 5.6027999999999634e-05, 5.5221999999997134e-05, 5.5693999999998495e-05, 5.583299999999819e-05, 5.5222000000000604e-05, 5.5486000000000424e-05, 5.558300000000141e-05, 5.5971999999997885e-05, 5.518100000000137e-05, 5.554200000000217e-05, 5.5486000000000424e-05, 5.508400000000038e-05, 5.58480000000007e-05, 5.5013999999999064e-05, 5.526299999999984e-05, 5.561100000000055e-05, 5.5208000000001034e-05, 5.588899999999994e-05, 5.5944000000002214e-05, 5.5179999999998425e-05, 5.587500000000037e-05, 5.5763999999999814e-05, 5.6041999999999204e-05, 5.5750000000000244e-05, 5.513900000000266e-05, 5.5486000000000424e-05, 5.6014000000000064e-05, 5.581999999999809e-05, 5.569499999999797e-05, 5.543099999999815e-05, 5.572300000000058e-05, 5.583300000000166e-05, 5.5207999999997565e-05, 5.5651999999999785e-05, 5.5902000000000035e-05, 5.561100000000055e-05, 5.534699999999726e-05, 5.593100000000212e-05, 5.515300000000223e-05, 5.595899999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.600" endtime="20201117 14:41:40.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.596" endtime="20201117 14:41:40.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.605" endtime="20201117 14:41:40.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.609" endtime="20201117 14:41:40.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.607" endtime="20201117 14:41:40.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.604" endtime="20201117 14:41:40.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.239" endtime="20201117 14:41:40.629"></status>
</kw>
<msg timestamp="20201117 14:41:40.630" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.638" endtime="20201117 14:41:40.656"></status>
</kw>
<msg timestamp="20201117 14:41:40.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.636" endtime="20201117 14:41:40.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.657" endtime="20201117 14:41:40.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.660" endtime="20201117 14:41:40.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.634" endtime="20201117 14:41:40.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.632" endtime="20201117 14:41:40.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.670" endtime="20201117 14:41:40.955"></status>
</kw>
<msg timestamp="20201117 14:41:40.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.668" endtime="20201117 14:41:40.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.959" endtime="20201117 14:41:40.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.967" endtime="20201117 14:41:40.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.666" endtime="20201117 14:41:40.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.664" endtime="20201117 14:41:40.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.974" level="INFO">${RESULT} = [{'time': 0.019481014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.529200000000192e-05, 'source_diff': 5.529200000000192e-05}, {'time': 0.019546042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.971" endtime="20201117 14:41:40.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.987" level="INFO">${ACCURACY} = {'time': [0.019481014, 0.019546042, 0.019614028, 0.019676042, 0.019744042, 0.019806056, 0.019870069, 0.019932083, 0.019995097, 0.020057083, 0.020119097, 0.020181097, 0.020247111, 0.020311181, 0.020373...</msg>
<status status="PASS" starttime="20201117 14:41:40.975" endtime="20201117 14:41:40.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.992" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.991" endtime="20201117 14:41:40.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.995" level="INFO">VALUE: [5.529200000000192e-05, 5.532000000000106e-05, 5.570899999999754e-05, 5.5736000000000674e-05, 5.597300000000083e-05, 5.588899999999994e-05, 5.561100000000055e-05, 5.588899999999994e-05, 5.5458000000001284e-05, 5.5736000000000674e-05, 5.584699999999776e-05, 5.586099999999733e-05, 5.538900000000291e-05, 5.561200000000002e-05, 5.5443999999998245e-05, 5.529200000000192e-05, 5.5750000000000244e-05, 5.56809999999984e-05, 5.531999999999759e-05, 5.6014000000000064e-05, 5.562500000000012e-05, 5.547300000000033e-05, 5.506999999999734e-05, 5.562500000000012e-05, 5.5208000000001034e-05, 5.6014000000000064e-05, 5.583300000000166e-05, 5.583299999999819e-05, 5.590299999999951e-05, 5.5694000000001964e-05, 5.590299999999951e-05, 5.518100000000137e-05, 5.509700000000048e-05, 5.5499999999999994e-05, 5.5457999999997815e-05, 5.51670000000018e-05, 5.537499999999987e-05, 5.538899999999944e-05, 5.543099999999815e-05, 5.509700000000048e-05, 5.532000000000106e-05, 5.509700000000048e-05, 5.5499999999999994e-05, 5.5166000000002324e-05, 5.579099999999948e-05, 5.5486000000000424e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.5194000000001464e-05, 5.5986000000000924e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.994" endtime="20201117 14:41:40.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.989" endtime="20201117 14:41:40.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.998" endtime="20201117 14:41:40.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.001" endtime="20201117 14:41:41.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.000" endtime="20201117 14:41:41.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.996" endtime="20201117 14:41:41.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.630" endtime="20201117 14:41:41.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.237" endtime="20201117 14:41:41.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.236" endtime="20201117 14:41:41.023"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.025" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.033" endtime="20201117 14:41:41.051"></status>
</kw>
<msg timestamp="20201117 14:41:41.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.032" endtime="20201117 14:41:41.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.052" endtime="20201117 14:41:41.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.055" endtime="20201117 14:41:41.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.029" endtime="20201117 14:41:41.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.027" endtime="20201117 14:41:41.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.064" endtime="20201117 14:41:41.350"></status>
</kw>
<msg timestamp="20201117 14:41:41.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.062" endtime="20201117 14:41:41.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.355" endtime="20201117 14:41:41.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.363" endtime="20201117 14:41:41.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.060" endtime="20201117 14:41:41.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.058" endtime="20201117 14:41:41.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.370" level="INFO">${RESULT} = [{'time': 0.022866889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6736000000001674e-05, 'source_diff': 5.6736000000001674e-05}, {'time': 0.022931903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:41.366" endtime="20201117 14:41:41.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.384" level="INFO">${ACCURACY} = {'time': [0.022866889, 0.022931903, 0.022998903, 0.023064958, 0.023134917, 0.023202958, 0.023272931, 0.023340958, 0.023405944, 0.023475986, 0.023542972, 0.023611986, 0.023682069, 0.023743986, 0.023814...</msg>
<status status="PASS" starttime="20201117 14:41:41.371" endtime="20201117 14:41:41.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.389" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.388" endtime="20201117 14:41:41.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.391" level="INFO">VALUE: [5.6736000000001674e-05, 5.658399999999841e-05, 5.644500000000219e-05, 5.658299999999894e-05, 5.6736000000001674e-05, 5.6901999999997566e-05, 5.6791999999999954e-05, 5.6693999999999495e-05, 5.65549999999998e-05, 5.6778000000000384e-05, 5.65549999999998e-05, 5.680500000000005e-05, 5.686099999999833e-05, 5.6208000000002034e-05, 5.6777999999996914e-05, 5.6457999999998815e-05, 5.6457999999998815e-05, 5.659699999999851e-05, 5.61809999999989e-05, 5.66809999999994e-05, 5.673699999999768e-05, 5.665300000000026e-05, 5.6555999999999274e-05, 5.679100000000048e-05, 5.683299999999919e-05, 5.612500000000062e-05, 5.6985999999998455e-05, 5.6999999999998024e-05, 5.6971999999998885e-05, 5.65549999999998e-05, 5.662500000000112e-05, 5.688900000000094e-05, 5.633400000000163e-05, 5.6735999999998205e-05, 5.6055999999998773e-05, 5.6791999999999954e-05, 5.609799999999748e-05, 5.6778000000000384e-05, 5.634699999999826e-05, 5.608299999999844e-05, 5.6457999999998815e-05, 5.629099999999998e-05, 5.6165999999999855e-05, 5.634699999999826e-05, 5.688900000000094e-05, 5.6250000000000744e-05, 5.6986000000001924e-05, 5.6541999999999704e-05, 5.6708000000002534e-05, 5.668100000000287e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.390" endtime="20201117 14:41:41.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.385" endtime="20201117 14:41:41.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.395" endtime="20201117 14:41:41.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.398" endtime="20201117 14:41:41.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.396" endtime="20201117 14:41:41.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.393" endtime="20201117 14:41:41.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.026" endtime="20201117 14:41:41.419"></status>
</kw>
<msg timestamp="20201117 14:41:41.419" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.427" endtime="20201117 14:41:41.444"></status>
</kw>
<msg timestamp="20201117 14:41:41.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.426" endtime="20201117 14:41:41.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.445" endtime="20201117 14:41:41.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.448" endtime="20201117 14:41:41.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.423" endtime="20201117 14:41:41.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.421" endtime="20201117 14:41:41.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.458" endtime="20201117 14:41:41.744"></status>
</kw>
<msg timestamp="20201117 14:41:41.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.456" endtime="20201117 14:41:41.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.748" endtime="20201117 14:41:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.757" endtime="20201117 14:41:41.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.454" endtime="20201117 14:41:41.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.452" endtime="20201117 14:41:41.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.763" level="INFO">${RESULT} = [{'time': 0.019409208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.683299999999919e-05, 'source_diff': 5.683299999999919e-05}, {'time': 0.019473222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.760" endtime="20201117 14:41:41.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.777" level="INFO">${ACCURACY} = {'time': [0.019409208, 0.019473222, 0.019540264, 0.019604236, 0.019667278, 0.01973225, 0.019796278, 0.019862264, 0.019925292, 0.019988278, 0.020055306, 0.020119292, 0.020185319, 0.020251319, 0.0203183...</msg>
<status status="PASS" starttime="20201117 14:41:41.764" endtime="20201117 14:41:41.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.781" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.780" endtime="20201117 14:41:41.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.784" level="INFO">VALUE: [5.683299999999919e-05, 5.679099999999701e-05, 5.6736000000001674e-05, 5.6707999999999065e-05, 5.7014000000001064e-05, 5.6514000000000564e-05, 5.6222000000001604e-05, 5.687500000000137e-05, 5.688900000000094e-05, 5.684700000000223e-05, 5.623699999999718e-05, 5.7014000000001064e-05, 5.661100000000155e-05, 5.608300000000191e-05, 5.680500000000005e-05, 5.6500000000000994e-05, 5.688899999999747e-05, 5.6693999999999495e-05, 5.63610000000013e-05, 5.606899999999887e-05, 5.637500000000087e-05, 5.6943999999999745e-05, 5.643099999999915e-05, 5.6514000000000564e-05, 5.697299999999836e-05, 5.6541999999999704e-05, 5.644500000000219e-05, 5.608400000000138e-05, 5.6027999999999634e-05, 5.630600000000249e-05, 5.6250000000000744e-05, 5.6165999999999855e-05, 5.686099999999833e-05, 5.6957999999999315e-05, 5.6471999999998385e-05, 5.665300000000026e-05, 5.65549999999998e-05, 5.6499999999997524e-05, 5.6264000000000314e-05, 5.606899999999887e-05, 5.6222000000001604e-05, 5.6791999999999954e-05, 5.695900000000226e-05, 5.6250000000000744e-05, 5.66809999999994e-05, 5.647299999999786e-05, 5.695900000000226e-05, 5.638900000000044e-05, 5.680500000000005e-05, 5.7042000000000204e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.782" endtime="20201117 14:41:41.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.778" endtime="20201117 14:41:41.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.787" endtime="20201117 14:41:41.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.790" endtime="20201117 14:41:41.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.789" endtime="20201117 14:41:41.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.785" endtime="20201117 14:41:41.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.420" endtime="20201117 14:41:41.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.024" endtime="20201117 14:41:41.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.023" endtime="20201117 14:41:41.811"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.814" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.822" endtime="20201117 14:41:41.840"></status>
</kw>
<msg timestamp="20201117 14:41:41.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.820" endtime="20201117 14:41:41.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.841" endtime="20201117 14:41:41.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.844" endtime="20201117 14:41:41.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.818" endtime="20201117 14:41:41.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.816" endtime="20201117 14:41:41.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.853" endtime="20201117 14:41:42.139"></status>
</kw>
<msg timestamp="20201117 14:41:42.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.852" endtime="20201117 14:41:42.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.143" endtime="20201117 14:41:42.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.151" endtime="20201117 14:41:42.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.849" endtime="20201117 14:41:42.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.847" endtime="20201117 14:41:42.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.158" level="INFO">${RESULT} = [{'time': 0.021728347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7165999999997386e-05, 'source_diff': 5.7165999999997386e-05}, {'time': 0.021793292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:42.154" endtime="20201117 14:41:42.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.171" level="INFO">${ACCURACY} = {'time': [0.021728347, 0.021793292, 0.021858306, 0.021927306, 0.021992319, 0.022055319, 0.022124333, 0.022193333, 0.022259361, 0.022327375, 0.022395361, 0.022460389, 0.022527375, 0.022592403, 0.022657...</msg>
<status status="PASS" starttime="20201117 14:41:42.159" endtime="20201117 14:41:42.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.176" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.175" endtime="20201117 14:41:42.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.178" level="INFO">VALUE: [5.7165999999997386e-05, 5.766699999999736e-05, 5.8000000000002494e-05, 5.743100000000015e-05, 5.7694000000000495e-05, 5.7138000000001715e-05, 5.7471999999999385e-05, 5.7971999999999885e-05, 5.736099999999883e-05, 5.716700000000033e-05, 5.791699999999761e-05, 5.7569999999999844e-05, 5.756900000000037e-05, 5.7569999999999844e-05, 5.7249999999998274e-05, 5.797299999999936e-05, 5.7055999999999774e-05, 5.7999999999999025e-05, 5.7264000000001314e-05, 5.777700000000191e-05, 5.7193999999999995e-05, 5.7721999999999635e-05, 5.790299999999804e-05, 5.7735999999999205e-05, 5.7749999999998775e-05, 5.711099999999858e-05, 5.7472000000002854e-05, 5.76810000000004e-05, 5.765300000000126e-05, 5.7249999999998274e-05, 5.762499999999865e-05, 5.720900000000251e-05, 5.7055999999999774e-05, 5.772299999999911e-05, 5.7999999999999025e-05, 5.719499999999947e-05, 5.7735999999999205e-05, 5.7721999999999635e-05, 5.761099999999908e-05, 5.736099999999883e-05, 5.730500000000055e-05, 5.7694000000000495e-05, 5.7457999999999815e-05, 5.7278000000000884e-05, 5.7306000000000024e-05, 5.7820000000000094e-05, 5.783300000000019e-05, 5.7277999999997414e-05, 5.7833999999999663e-05, 5.7999999999999025e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.177" endtime="20201117 14:41:42.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.172" endtime="20201117 14:41:42.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.181" endtime="20201117 14:41:42.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.185" endtime="20201117 14:41:42.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.183" endtime="20201117 14:41:42.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.180" endtime="20201117 14:41:42.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.814" endtime="20201117 14:41:42.206"></status>
</kw>
<msg timestamp="20201117 14:41:42.206" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.215" endtime="20201117 14:41:42.231"></status>
</kw>
<msg timestamp="20201117 14:41:42.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.213" endtime="20201117 14:41:42.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.233" endtime="20201117 14:41:42.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.236" endtime="20201117 14:41:42.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.211" endtime="20201117 14:41:42.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.208" endtime="20201117 14:41:42.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.246" endtime="20201117 14:41:42.531"></status>
</kw>
<msg timestamp="20201117 14:41:42.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.244" endtime="20201117 14:41:42.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.536" endtime="20201117 14:41:42.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.544" endtime="20201117 14:41:42.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.242" endtime="20201117 14:41:42.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.240" endtime="20201117 14:41:42.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.550" level="INFO">${RESULT} = [{'time': 0.019513292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791700000000108e-05, 'source_diff': 5.791700000000108e-05}, {'time': 0.019579306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.547" endtime="20201117 14:41:42.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.564" level="INFO">${ACCURACY} = {'time': [0.019513292, 0.019579306, 0.019649306, 0.019716319, 0.019780333, 0.019845333, 0.019912347, 0.019978347, 0.020043347, 0.020107361, 0.020173389, 0.020238375, 0.020303389, 0.020371389, 0.020439...</msg>
<status status="PASS" starttime="20201117 14:41:42.551" endtime="20201117 14:41:42.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.568" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.567" endtime="20201117 14:41:42.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.571" level="INFO">VALUE: [5.791700000000108e-05, 5.79870000000024e-05, 5.769499999999997e-05, 5.734699999999926e-05, 5.7985999999999455e-05, 5.708299999999944e-05, 5.711100000000205e-05, 5.7485999999998955e-05, 5.7471999999999385e-05, 5.7485999999998955e-05, 5.715300000000076e-05, 5.7235999999998705e-05, 5.7222000000002604e-05, 5.715300000000076e-05, 5.78749999999989e-05, 5.7055999999999774e-05, 5.7528000000001134e-05, 5.745899999999929e-05, 5.73610000000023e-05, 5.7306000000000024e-05, 5.711099999999858e-05, 5.7735999999999205e-05, 5.7721999999999635e-05, 5.7249999999998274e-05, 5.7278000000000884e-05, 5.7680000000000925e-05, 5.7735999999999205e-05, 5.7457999999999815e-05, 5.731900000000012e-05, 5.733299999999969e-05, 5.745899999999929e-05, 5.7333999999999163e-05, 5.711100000000205e-05, 5.7999999999999025e-05, 5.783300000000019e-05, 5.781900000000062e-05, 5.7193999999999995e-05, 5.7901999999998566e-05, 5.708299999999944e-05, 5.7749999999998775e-05, 5.765300000000126e-05, 5.7736000000002674e-05, 5.788900000000194e-05, 5.7292000000000454e-05, 5.7500000000001994e-05, 5.790300000000151e-05, 5.788899999999847e-05, 5.788900000000194e-05, 5.78749999999989e-05, 5.761100000000255e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.569" endtime="20201117 14:41:42.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.565" endtime="20201117 14:41:42.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.574" endtime="20201117 14:41:42.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.577" endtime="20201117 14:41:42.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.576" endtime="20201117 14:41:42.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.572" endtime="20201117 14:41:42.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.207" endtime="20201117 14:41:42.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.812" endtime="20201117 14:41:42.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.812" endtime="20201117 14:41:42.598"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.601" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.609" endtime="20201117 14:41:42.627"></status>
</kw>
<msg timestamp="20201117 14:41:42.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.608" endtime="20201117 14:41:42.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.628" endtime="20201117 14:41:42.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.631" endtime="20201117 14:41:42.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.605" endtime="20201117 14:41:42.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.603" endtime="20201117 14:41:42.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.640" endtime="20201117 14:41:42.925"></status>
</kw>
<msg timestamp="20201117 14:41:42.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.638" endtime="20201117 14:41:42.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.929" endtime="20201117 14:41:42.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.938" endtime="20201117 14:41:42.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.636" endtime="20201117 14:41:42.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.634" endtime="20201117 14:41:42.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.944" level="INFO">${RESULT} = [{'time': 0.023420889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.81810000000009e-05, 'source_diff': 5.81810000000009e-05}, {'time': 0.023489903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:42.941" endtime="20201117 14:41:42.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.959" level="INFO">${ACCURACY} = {'time': [0.023420889, 0.023489903, 0.023554889, 0.023624903, 0.023688931, 0.023755917, 0.023827944, 0.023895931, 0.023959944, 0.024029944, 0.024097958, 0.024169958, 0.024240986, 0.024310986, 0.024376...</msg>
<status status="PASS" starttime="20201117 14:41:42.945" endtime="20201117 14:41:42.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.963" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.962" endtime="20201117 14:41:42.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.966" level="INFO">VALUE: [5.81810000000009e-05, 5.844500000000072e-05, 5.843099999999768e-05, 5.8749999999999775e-05, 5.813899999999872e-05, 5.897300000000036e-05, 5.879099999999901e-05, 5.816699999999786e-05, 5.811099999999958e-05, 5.8166000000001855e-05, 5.813899999999872e-05, 5.881899999999815e-05, 5.8736000000000205e-05, 5.8986000000000455e-05, 5.8222000000000135e-05, 5.8694000000001495e-05, 5.868099999999793e-05, 5.8278000000001884e-05, 5.8555999999997804e-05, 5.819500000000047e-05, 5.866700000000183e-05, 5.811099999999958e-05, 5.812500000000262e-05, 5.8277999999998414e-05, 5.9000000000000025e-05, 5.8637999999999746e-05, 5.9070000000001344e-05, 5.9000000000000025e-05, 5.8805999999998054e-05, 5.9014000000003064e-05, 5.8222000000000135e-05, 5.8485999999999955e-05, 5.877700000000291e-05, 5.8972000000000885e-05, 5.8958000000001315e-05, 5.863899999999922e-05, 5.811099999999958e-05, 5.8791999999998484e-05, 5.8222000000000135e-05, 5.8542000000001704e-05, 5.901300000000012e-05, 5.9042000000002204e-05, 5.9000000000000025e-05, 5.8958000000001315e-05, 5.863899999999922e-05, 5.815299999999829e-05, 5.830500000000155e-05, 5.833300000000069e-05, 5.8541999999998234e-05, 5.8722000000000635e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.964" endtime="20201117 14:41:42.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.960" endtime="20201117 14:41:42.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.969" endtime="20201117 14:41:42.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.972" endtime="20201117 14:41:42.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.971" endtime="20201117 14:41:42.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.967" endtime="20201117 14:41:42.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.601" endtime="20201117 14:41:42.993"></status>
</kw>
<msg timestamp="20201117 14:41:42.994" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.002" endtime="20201117 14:41:43.019"></status>
</kw>
<msg timestamp="20201117 14:41:43.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.000" endtime="20201117 14:41:43.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.021" endtime="20201117 14:41:43.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.023" endtime="20201117 14:41:43.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.998" endtime="20201117 14:41:43.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.996" endtime="20201117 14:41:43.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.033" endtime="20201117 14:41:43.318"></status>
</kw>
<msg timestamp="20201117 14:41:43.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.032" endtime="20201117 14:41:43.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.323" endtime="20201117 14:41:43.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.331" endtime="20201117 14:41:43.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.029" endtime="20201117 14:41:43.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.027" endtime="20201117 14:41:43.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.337" level="INFO">${RESULT} = [{'time': 0.019793819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.812499999999915e-05, 'source_diff': 5.812499999999915e-05}, {'time': 0.019863806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.334" endtime="20201117 14:41:43.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.351" level="INFO">${ACCURACY} = {'time': [0.019793819, 0.019863806, 0.019932833, 0.020002833, 0.020067931, 0.020135861, 0.020206847, 0.020274875, 0.020342861, 0.020408889, 0.020474875, 0.020540889, 0.020611903, 0.020682917, 0.020754...</msg>
<status status="PASS" starttime="20201117 14:41:43.338" endtime="20201117 14:41:43.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.355" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.354" endtime="20201117 14:41:43.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.358" level="INFO">VALUE: [5.812499999999915e-05, 5.86810000000014e-05, 5.813900000000219e-05, 5.8680000000001925e-05, 5.8249999999999275e-05, 5.9014000000003064e-05, 5.8485999999999955e-05, 5.858300000000094e-05, 5.8763999999999345e-05, 5.8527999999998664e-05, 5.8499999999999525e-05, 5.8320000000000594e-05, 5.893100000000165e-05, 5.820900000000004e-05, 5.8792000000001954e-05, 5.895899999999732e-05, 5.8722000000000635e-05, 5.8736000000000205e-05, 5.879099999999901e-05, 5.8665999999998886e-05, 5.8499999999999525e-05, 5.830500000000155e-05, 5.841700000000158e-05, 5.8235999999999705e-05, 5.838900000000244e-05, 5.809700000000001e-05, 5.8777999999998914e-05, 5.841700000000158e-05, 5.820900000000004e-05, 5.8471999999996915e-05, 5.8820000000001094e-05, 5.847299999999986e-05, 5.902699999999969e-05, 5.88619999999998e-05, 5.851300000000309e-05, 5.830499999999808e-05, 5.8500000000002994e-05, 5.861100000000008e-05, 5.8458000000000815e-05, 5.861100000000008e-05, 5.840299999999854e-05, 5.8943999999998276e-05, 5.8235999999999705e-05, 5.886100000000033e-05, 5.886100000000033e-05, 5.8778000000002384e-05, 5.8819999999997624e-05, 5.8083999999999913e-05, 5.848699999999943e-05, 5.8472000000000385e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.356" endtime="20201117 14:41:43.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.352" endtime="20201117 14:41:43.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.361" endtime="20201117 14:41:43.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.365" endtime="20201117 14:41:43.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.363" endtime="20201117 14:41:43.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.360" endtime="20201117 14:41:43.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.994" endtime="20201117 14:41:43.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.599" endtime="20201117 14:41:43.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.599" endtime="20201117 14:41:43.386"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.388" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.397" endtime="20201117 14:41:43.414"></status>
</kw>
<msg timestamp="20201117 14:41:43.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.395" endtime="20201117 14:41:43.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.415" endtime="20201117 14:41:43.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.418" endtime="20201117 14:41:43.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.392" endtime="20201117 14:41:43.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.390" endtime="20201117 14:41:43.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.427" endtime="20201117 14:41:43.712"></status>
</kw>
<msg timestamp="20201117 14:41:43.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.425" endtime="20201117 14:41:43.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.716" endtime="20201117 14:41:43.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.724" endtime="20201117 14:41:43.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.423" endtime="20201117 14:41:43.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.421" endtime="20201117 14:41:43.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.731" level="INFO">${RESULT} = [{'time': 0.022566972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9736000000001205e-05, 'source_diff': 5.9736000000001205e-05}, {'time': 0.022632986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:43.728" endtime="20201117 14:41:43.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.744" level="INFO">${ACCURACY} = {'time': [0.022566972, 0.022632986, 0.022702986, 0.022771028, 0.022839042, 0.02291, 0.022979014, 0.023049028, 0.023119042, 0.023186028, 0.023252056, 0.023322069, 0.023389056, 0.023457069, 0.023529069,...</msg>
<status status="PASS" starttime="20201117 14:41:43.732" endtime="20201117 14:41:43.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.749" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.748" endtime="20201117 14:41:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.751" level="INFO">VALUE: [5.9736000000001205e-05, 5.9458000000001815e-05, 5.965299999999979e-05, 5.9291999999998984e-05, 6.0000000000001025e-05, 5.9486000000000955e-05, 5.940299999999954e-05, 5.940299999999954e-05, 5.9305999999998554e-05, 5.9472000000001385e-05, 5.968099999999893e-05, 5.961100000000108e-05, 5.943099999999868e-05, 5.952700000000019e-05, 5.9207999999998095e-05, 5.9151999999999816e-05, 5.9444000000002245e-05, 5.9764000000000345e-05, 5.941699999999911e-05, 5.930499999999908e-05, 5.9721999999998165e-05, 5.944499999999825e-05, 5.9236000000000705e-05, 5.990300000000004e-05, 6.0028000000000165e-05, 5.922300000000061e-05, 5.986100000000133e-05, 5.933299999999822e-05, 5.933299999999822e-05, 5.912499999999668e-05, 6.004100000000026e-05, 5.9430000000002675e-05, 5.954099999999976e-05, 5.9763999999996875e-05, 5.941700000000258e-05, 5.9693999999999026e-05, 6.0013999999997125e-05, 5.9236000000000705e-05, 6.0014000000000595e-05, 5.9848000000001234e-05, 5.9764000000000345e-05, 6.0028000000000165e-05, 5.9166000000002855e-05, 5.930500000000255e-05, 5.9652000000000316e-05, 5.9916000000000136e-05, 5.954099999999976e-05, 5.911100000000058e-05, 5.930499999999908e-05, 5.9485999999997485e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.750" endtime="20201117 14:41:43.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.745" endtime="20201117 14:41:43.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.755" endtime="20201117 14:41:43.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.758" endtime="20201117 14:41:43.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.757" endtime="20201117 14:41:43.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.753" endtime="20201117 14:41:43.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.389" endtime="20201117 14:41:43.779"></status>
</kw>
<msg timestamp="20201117 14:41:43.779" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.788" endtime="20201117 14:41:43.806"></status>
</kw>
<msg timestamp="20201117 14:41:43.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.786" endtime="20201117 14:41:43.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.807" endtime="20201117 14:41:43.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.810" endtime="20201117 14:41:43.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.783" endtime="20201117 14:41:43.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.781" endtime="20201117 14:41:43.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.820" endtime="20201117 14:41:44.106"></status>
</kw>
<msg timestamp="20201117 14:41:44.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01947725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:43.818" endtime="20201117 14:41:44.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01947725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.110" endtime="20201117 14:41:44.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.118" endtime="20201117 14:41:44.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.816" endtime="20201117 14:41:44.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.814" endtime="20201117 14:41:44.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.125" level="INFO">${RESULT} = [{'time': 0.01947725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958300000000194e-05, 'source_diff': 5.958300000000194e-05}, {'time': 0.019546264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:44.122" endtime="20201117 14:41:44.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.138" level="INFO">${ACCURACY} = {'time': [0.01947725, 0.019546264, 0.019618278, 0.019685292, 0.019755292, 0.019826292, 0.019898306, 0.019964319, 0.020030306, 0.020098319, 0.020170319, 0.020242333, 0.020310361, 0.020378347, 0.0204453...</msg>
<status status="PASS" starttime="20201117 14:41:44.126" endtime="20201117 14:41:44.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.143" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.142" endtime="20201117 14:41:44.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.145" level="INFO">VALUE: [5.958300000000194e-05, 5.9056000000001774e-05, 5.9971999999998415e-05, 5.947300000000086e-05, 5.9598000000000984e-05, 5.944499999999825e-05, 5.9570000000001844e-05, 5.9638000000000746e-05, 5.947300000000086e-05, 5.927699999999994e-05, 5.9443999999998776e-05, 5.9958000000002315e-05, 6.005499999999983e-05, 5.9750000000000775e-05, 5.9457999999998346e-05, 5.916700000000233e-05, 5.9471999999997915e-05, 5.984700000000176e-05, 5.965299999999979e-05, 6.0028000000000165e-05, 5.9749999999997305e-05, 5.947300000000086e-05, 5.9985999999997985e-05, 5.9958000000002315e-05, 5.911100000000058e-05, 5.904099999999926e-05, 5.980499999999958e-05, 5.98750000000009e-05, 5.9972000000001885e-05, 5.909699999999754e-05, 5.9194000000001995e-05, 5.909700000000101e-05, 5.963900000000022e-05, 5.9485999999997485e-05, 5.983299999999872e-05, 5.913899999999972e-05, 5.993100000000265e-05, 5.9499999999997055e-05, 5.979100000000001e-05, 5.9652000000000316e-05, 5.969500000000197e-05, 5.9236000000000705e-05, 5.912500000000015e-05, 5.933300000000169e-05, 5.936100000000083e-05, 5.9514000000000095e-05, 6.0041999999999734e-05, 5.9042000000002204e-05, 5.9555999999998804e-05, 5.9541999999999234e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.144" endtime="20201117 14:41:44.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.139" endtime="20201117 14:41:44.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.149" endtime="20201117 14:41:44.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.152" endtime="20201117 14:41:44.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.151" endtime="20201117 14:41:44.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.147" endtime="20201117 14:41:44.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.780" endtime="20201117 14:41:44.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.387" endtime="20201117 14:41:44.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.386" endtime="20201117 14:41:44.173"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.176" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.184" endtime="20201117 14:41:44.203"></status>
</kw>
<msg timestamp="20201117 14:41:44.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.182" endtime="20201117 14:41:44.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.205" endtime="20201117 14:41:44.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.207" endtime="20201117 14:41:44.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.180" endtime="20201117 14:41:44.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.178" endtime="20201117 14:41:44.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.217" endtime="20201117 14:41:44.503"></status>
</kw>
<msg timestamp="20201117 14:41:44.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.215" endtime="20201117 14:41:44.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.507" endtime="20201117 14:41:44.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.515" endtime="20201117 14:41:44.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.212" endtime="20201117 14:41:44.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.210" endtime="20201117 14:41:44.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.522" level="INFO">${RESULT} = [{'time': 0.022783722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0707999999999596e-05, 'source_diff': 6.0707999999999596e-05}, {'time': 0.022850708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:44.518" endtime="20201117 14:41:44.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.536" level="INFO">${ACCURACY} = {'time': [0.022783722, 0.022850708, 0.022920722, 0.022993736, 0.023060736, 0.02312975, 0.023197764, 0.023270833, 0.023338778, 0.023406778, 0.023479792, 0.023546806, 0.023615819, 0.023685806, 0.0237548...</msg>
<status status="PASS" starttime="20201117 14:41:44.522" endtime="20201117 14:41:44.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.541" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.540" endtime="20201117 14:41:44.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.544" level="INFO">VALUE: [6.0707999999999596e-05, 6.0236000000001705e-05, 6.065300000000079e-05, 6.080500000000058e-05, 6.0429999999996736e-05, 6.036100000000183e-05, 6.0735999999998735e-05, 6.0736000000002205e-05, 6.0722000000002635e-05, 6.0083999999998444e-05, 6.0319999999999124e-05, 6.0194999999999e-05, 6.080500000000058e-05, 6.0778000000000915e-05, 6.081900000000015e-05, 6.0694000000000026e-05, 6.0151999999997346e-05, 6.0777999999997445e-05, 6.0971999999999416e-05, 6.065300000000079e-05, 6.043099999999968e-05, 6.058300000000294e-05, 6.0722000000002635e-05, 6.0985999999998985e-05, 6.03889999999975e-05, 6.0611999999998084e-05, 6.0901999999998097e-05, 6.0570000000002844e-05, 6.0833999999999194e-05, 6.0430000000000206e-05, 6.084699999999929e-05, 6.062500000000165e-05, 6.102700000000169e-05, 6.0985999999998985e-05, 6.038900000000097e-05, 6.088900000000147e-05, 6.0471999999998916e-05, 6.0485999999998485e-05, 6.0735999999998735e-05, 6.0736000000002205e-05, 6.0721999999999166e-05, 6.022300000000161e-05, 6.038900000000097e-05, 6.0137999999997777e-05, 6.0097999999998014e-05, 6.0888999999998e-05, 6.086100000000233e-05, 6.034699999999879e-05, 6.090300000000104e-05, 6.0222000000002135e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.542" endtime="20201117 14:41:44.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.537" endtime="20201117 14:41:44.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.547" endtime="20201117 14:41:44.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.550" endtime="20201117 14:41:44.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.549" endtime="20201117 14:41:44.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.545" endtime="20201117 14:41:44.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.176" endtime="20201117 14:41:44.571"></status>
</kw>
<msg timestamp="20201117 14:41:44.571" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.579" endtime="20201117 14:41:44.597"></status>
</kw>
<msg timestamp="20201117 14:41:44.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.578" endtime="20201117 14:41:44.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.599" endtime="20201117 14:41:44.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.601" endtime="20201117 14:41:44.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.575" endtime="20201117 14:41:44.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.573" endtime="20201117 14:41:44.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.611" endtime="20201117 14:41:44.898"></status>
</kw>
<msg timestamp="20201117 14:41:44.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.610" endtime="20201117 14:41:44.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.902" endtime="20201117 14:41:44.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.910" endtime="20201117 14:41:44.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.607" endtime="20201117 14:41:44.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.605" endtime="20201117 14:41:44.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.917" level="INFO">${RESULT} = [{'time': 0.01943325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0264000000000845e-05, 'source_diff': 6.0264000000000845e-05}, {'time': 0.01950425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:44.914" endtime="20201117 14:41:44.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.930" level="INFO">${ACCURACY} = {'time': [0.01943325, 0.01950425, 0.019577236, 0.01964425, 0.01971425, 0.019785264, 0.019852333, 0.019921278, 0.019988292, 0.020057319, 0.020128292, 0.020195375, 0.020266319, 0.020336319, 0.020406333,...</msg>
<status status="PASS" starttime="20201117 14:41:44.918" endtime="20201117 14:41:44.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.941" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.940" endtime="20201117 14:41:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.943" level="INFO">VALUE: [6.0264000000000845e-05, 6.091700000000061e-05, 6.0930000000000706e-05, 6.0277999999996945e-05, 6.0555999999999804e-05, 6.093100000000018e-05, 6.033299999999922e-05, 6.061100000000208e-05, 6.095900000000279e-05, 6.0944000000000276e-05, 6.0888999999998e-05, 6.0555999999999804e-05, 6.0472000000002385e-05, 6.083299999999972e-05, 6.033299999999922e-05, 6.012500000000115e-05, 6.0777999999997445e-05, 6.0235999999998235e-05, 6.1013999999998125e-05, 6.0514000000001095e-05, 6.090300000000104e-05, 6.086100000000233e-05, 6.0041999999999734e-05, 6.040300000000054e-05, 6.084700000000276e-05, 6.011099999999811e-05, 6.058299999999947e-05, 6.00689999999994e-05, 6.0151999999997346e-05, 6.0457999999999346e-05, 6.0278000000000415e-05, 6.054100000000076e-05, 6.058299999999947e-05, 6.011099999999811e-05, 6.036099999999836e-05, 6.070899999999907e-05, 6.0541999999996765e-05, 6.0235999999998235e-05, 6.0249999999997805e-05, 6.0083999999998444e-05, 6.0749999999998305e-05, 6.1014000000001595e-05, 6.0430000000000206e-05, 6.0055999999999304e-05, 6.08750000000019e-05, 6.0680000000000456e-05, 6.0250000000001275e-05, 6.066700000000036e-05, 6.05689999999999e-05, 6.0944000000000276e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.942" endtime="20201117 14:41:44.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.937" endtime="20201117 14:41:44.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.946" endtime="20201117 14:41:44.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.950" endtime="20201117 14:41:44.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.948" endtime="20201117 14:41:44.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.945" endtime="20201117 14:41:44.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.572" endtime="20201117 14:41:44.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.175" endtime="20201117 14:41:44.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.174" endtime="20201117 14:41:44.971"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.974" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.982" endtime="20201117 14:41:44.999"></status>
</kw>
<msg timestamp="20201117 14:41:45.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.980" endtime="20201117 14:41:45.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.001" endtime="20201117 14:41:45.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.003" endtime="20201117 14:41:45.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.978" endtime="20201117 14:41:45.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.976" endtime="20201117 14:41:45.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.012" endtime="20201117 14:41:45.298"></status>
</kw>
<msg timestamp="20201117 14:41:45.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.011" endtime="20201117 14:41:45.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.302" endtime="20201117 14:41:45.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.310" endtime="20201117 14:41:45.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.008" endtime="20201117 14:41:45.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.007" endtime="20201117 14:41:45.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.317" level="INFO">${RESULT} = [{'time': 0.022755417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.198599999999999e-05, 'source_diff': 6.198599999999999e-05}, {'time': 0.022830417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.314" endtime="20201117 14:41:45.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.331" level="INFO">${ACCURACY} = {'time': [0.022755417, 0.022830417, 0.022905431, 0.022980444, 0.023049444, 0.023118458, 0.023189472, 0.023263486, 0.0233355, 0.0234095, 0.023478514, 0.0235485, 0.023622514, 0.023693528, 0.023762542, 0...</msg>
<status status="PASS" starttime="20201117 14:41:45.318" endtime="20201117 14:41:45.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.335" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.334" endtime="20201117 14:41:45.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.338" level="INFO">VALUE: [6.198599999999999e-05, 6.176399999999888e-05, 6.176399999999888e-05, 6.184700000000029e-05, 6.179099999999854e-05, 6.12360000000027e-05, 6.115299999999782e-05, 6.15690000000009e-05, 6.147199999999992e-05, 6.184700000000029e-05, 6.155599999999734e-05, 6.199999999999956e-05, 6.148599999999949e-05, 6.158399999999994e-05, 6.173599999999974e-05, 6.122299999999914e-05, 6.202800000000216e-05, 6.173599999999974e-05, 6.148599999999949e-05, 6.173599999999974e-05, 6.202700000000269e-05, 6.148599999999949e-05, 6.168000000000146e-05, 6.163900000000222e-05, 6.20279999999987e-05, 6.152800000000166e-05, 6.15560000000008e-05, 6.133300000000022e-05, 6.191700000000161e-05, 6.155599999999734e-05, 6.126399999999838e-05, 6.126400000000184e-05, 6.197299999999989e-05, 6.15140000000021e-05, 6.197200000000042e-05, 6.17499999999993e-05, 6.148599999999949e-05, 6.17499999999993e-05, 6.155500000000133e-05, 6.152800000000166e-05, 6.113899999999825e-05, 6.190299999999857e-05, 6.134699999999979e-05, 6.201399999999913e-05, 6.186099999999986e-05, 6.112500000000215e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.120899999999957e-05, 6.134699999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.336" endtime="20201117 14:41:45.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.332" endtime="20201117 14:41:45.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.341" endtime="20201117 14:41:45.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.344" endtime="20201117 14:41:45.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.343" endtime="20201117 14:41:45.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.339" endtime="20201117 14:41:45.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.974" endtime="20201117 14:41:45.365"></status>
</kw>
<msg timestamp="20201117 14:41:45.365" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.373" endtime="20201117 14:41:45.391"></status>
</kw>
<msg timestamp="20201117 14:41:45.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.372" endtime="20201117 14:41:45.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.393" endtime="20201117 14:41:45.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.395" endtime="20201117 14:41:45.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.369" endtime="20201117 14:41:45.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.367" endtime="20201117 14:41:45.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.405" endtime="20201117 14:41:45.690"></status>
</kw>
<msg timestamp="20201117 14:41:45.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019239278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019300694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.404" endtime="20201117 14:41:45.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019239278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019300694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.694" endtime="20201117 14:41:45.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.702" endtime="20201117 14:41:45.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.401" endtime="20201117 14:41:45.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.400" endtime="20201117 14:41:45.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.709" level="INFO">${RESULT} = [{'time': 0.019300694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.141600000000164e-05, 'source_diff': 6.141600000000164e-05}, {'time': 0.019371708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.706" endtime="20201117 14:41:45.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.722" level="INFO">${ACCURACY} = {'time': [0.019300694, 0.019371708, 0.019441694, 0.019513694, 0.019585708, 0.019653722, 0.019726736, 0.019796736, 0.01986975, 0.019940764, 0.020014792, 0.020086764, 0.020153778, 0.020222778, 0.0202947...</msg>
<status status="PASS" starttime="20201117 14:41:45.710" endtime="20201117 14:41:45.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.727" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.726" endtime="20201117 14:41:45.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.729" level="INFO">VALUE: [6.141600000000164e-05, 6.115200000000182e-05, 6.12629999999989e-05, 6.13750000000024e-05, 6.118000000000096e-05, 6.117999999999749e-05, 6.116700000000086e-05, 6.20279999999987e-05, 6.19439999999978e-05, 6.136099999999936e-05, 6.18340000000002e-05, 6.161099999999961e-05, 6.122199999999967e-05, 6.172200000000017e-05, 6.162499999999918e-05, 6.170900000000007e-05, 6.152699999999872e-05, 6.195800000000085e-05, 6.198599999999999e-05, 6.113899999999825e-05, 6.161099999999961e-05, 6.154199999999777e-05, 6.137499999999893e-05, 6.125000000000227e-05, 6.119399999999706e-05, 6.136099999999936e-05, 6.172200000000017e-05, 6.140200000000207e-05, 6.144500000000025e-05, 6.132000000000012e-05, 6.145899999999982e-05, 6.159799999999951e-05, 6.181900000000115e-05, 6.166599999999842e-05, 6.167999999999799e-05, 6.133300000000022e-05, 6.20279999999987e-05, 6.166700000000136e-05, 6.15560000000008e-05, 6.148600000000295e-05, 6.119400000000053e-05, 6.20279999999987e-05, 6.15560000000008e-05, 6.188900000000247e-05, 6.130600000000055e-05, 6.148599999999949e-05, 6.172299999999964e-05, 6.136199999999883e-05, 6.188799999999953e-05, 6.152700000000219e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.728" endtime="20201117 14:41:45.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.723" endtime="20201117 14:41:45.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.732" endtime="20201117 14:41:45.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.736" endtime="20201117 14:41:45.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.734" endtime="20201117 14:41:45.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.731" endtime="20201117 14:41:45.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.366" endtime="20201117 14:41:45.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.972" endtime="20201117 14:41:45.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.971" endtime="20201117 14:41:45.757"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.759" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.768" endtime="20201117 14:41:45.786"></status>
</kw>
<msg timestamp="20201117 14:41:45.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.766" endtime="20201117 14:41:45.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.788" endtime="20201117 14:41:45.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.790" endtime="20201117 14:41:45.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.764" endtime="20201117 14:41:45.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.761" endtime="20201117 14:41:45.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.800" endtime="20201117 14:41:46.085"></status>
</kw>
<msg timestamp="20201117 14:41:46.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.798" endtime="20201117 14:41:46.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.089" endtime="20201117 14:41:46.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.097" endtime="20201117 14:41:46.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.795" endtime="20201117 14:41:46.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.793" endtime="20201117 14:41:46.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.104" level="INFO">${RESULT} = [{'time': 0.022762972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.248600000000049e-05, 'source_diff': 6.248600000000049e-05}, {'time': 0.022831972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.101" endtime="20201117 14:41:46.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.119" level="INFO">${ACCURACY} = {'time': [0.022762972, 0.022831972, 0.022904986, 0.022973986, 0.023047, 0.023117, 0.023188056, 0.023256028, 0.023329028, 0.023404042, 0.023477056, 0.023549069, 0.023624056, 0.023695069, 0.023767083, 0...</msg>
<status status="PASS" starttime="20201117 14:41:46.105" endtime="20201117 14:41:46.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.123" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.122" endtime="20201117 14:41:46.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.126" level="INFO">VALUE: [6.248600000000049e-05, 6.251399999999963e-05, 6.29439999999988e-05, 6.219399999999806e-05, 6.215300000000229e-05, 6.223600000000024e-05, 6.28479999999973e-05, 6.218100000000143e-05, 6.211100000000011e-05, 6.20560000000013e-05, 6.240299999999907e-05, 6.213799999999978e-05, 6.207000000000087e-05, 6.301300000000065e-05, 6.258300000000147e-05, 6.295899999999785e-05, 6.226399999999938e-05, 6.287500000000043e-05, 6.269399999999856e-05, 6.27080000000016e-05, 6.266700000000236e-05, 6.28340000000012e-05, 6.23889999999995e-05, 6.213899999999925e-05, 6.265299999999932e-05, 6.233399999999722e-05, 6.22499999999998e-05, 6.280500000000258e-05, 6.277699999999997e-05, 6.262500000000018e-05, 6.243100000000168e-05, 6.254200000000223e-05, 6.298600000000099e-05, 6.255599999999834e-05, 6.208300000000097e-05, 6.291699999999914e-05, 6.247200000000092e-05, 6.233300000000122e-05, 6.294500000000175e-05, 6.222200000000067e-05, 6.207000000000087e-05, 6.298700000000046e-05, 6.268000000000246e-05, 6.277699999999997e-05, 6.295800000000185e-05, 6.277799999999945e-05, 6.215299999999882e-05, 6.211100000000011e-05, 6.25690000000019e-05, 6.305599999999884e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.124" endtime="20201117 14:41:46.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.119" endtime="20201117 14:41:46.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.129" endtime="20201117 14:41:46.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.132" endtime="20201117 14:41:46.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.131" endtime="20201117 14:41:46.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.127" endtime="20201117 14:41:46.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.760" endtime="20201117 14:41:46.153"></status>
</kw>
<msg timestamp="20201117 14:41:46.153" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.161" endtime="20201117 14:41:46.178"></status>
</kw>
<msg timestamp="20201117 14:41:46.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.160" endtime="20201117 14:41:46.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.180" endtime="20201117 14:41:46.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.182" endtime="20201117 14:41:46.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.157" endtime="20201117 14:41:46.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.155" endtime="20201117 14:41:46.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.193" endtime="20201117 14:41:46.478"></status>
</kw>
<msg timestamp="20201117 14:41:46.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.191" endtime="20201117 14:41:46.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.483" endtime="20201117 14:41:46.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.491" endtime="20201117 14:41:46.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.189" endtime="20201117 14:41:46.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.187" endtime="20201117 14:41:46.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.497" level="INFO">${RESULT} = [{'time': 0.019779528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.308400000000144e-05, 'source_diff': 6.308400000000144e-05}, {'time': 0.019853472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.494" endtime="20201117 14:41:46.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.511" level="INFO">${ACCURACY} = {'time': [0.019779528, 0.019853472, 0.019923458, 0.0199935, 0.020061486, 0.020131486, 0.020202514, 0.020273514, 0.020348514, 0.020420528, 0.020493528, 0.020563542, 0.020634542, 0.020705556, 0.02077956...</msg>
<status status="PASS" starttime="20201117 14:41:46.498" endtime="20201117 14:41:46.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.515" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.514" endtime="20201117 14:41:46.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.518" level="INFO">VALUE: [6.308400000000144e-05, 6.216599999999892e-05, 6.230500000000208e-05, 6.251399999999963e-05, 6.215299999999882e-05, 6.298600000000099e-05, 6.279200000000248e-05, 6.230599999999809e-05, 6.248600000000049e-05, 6.266699999999889e-05, 6.286100000000086e-05, 6.248600000000049e-05, 6.276399999999988e-05, 6.229199999999852e-05, 6.22629999999999e-05, 6.276399999999988e-05, 6.24439999999983e-05, 6.258300000000147e-05, 6.286099999999739e-05, 6.279099999999954e-05, 6.27219999999977e-05, 6.250000000000006e-05, 6.263899999999975e-05, 6.222200000000067e-05, 6.227799999999895e-05, 6.304199999999927e-05, 6.23889999999995e-05, 6.298600000000099e-05, 6.25560000000018e-05, 6.27080000000016e-05, 6.244400000000178e-05, 6.222200000000067e-05, 6.251399999999963e-05, 6.261100000000061e-05, 6.212499999999968e-05, 6.204199999999827e-05, 6.297199999999795e-05, 6.280599999999859e-05, 6.284700000000129e-05, 6.213900000000272e-05, 6.241699999999864e-05, 6.240299999999907e-05, 6.293099999999871e-05, 6.227799999999895e-05, 6.291699999999914e-05, 6.266599999999942e-05, 6.266599999999942e-05, 6.290299999999957e-05, 6.234700000000079e-05, 6.284699999999782e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.516" endtime="20201117 14:41:46.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.512" endtime="20201117 14:41:46.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.521" endtime="20201117 14:41:46.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.524" endtime="20201117 14:41:46.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.523" endtime="20201117 14:41:46.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.519" endtime="20201117 14:41:46.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.154" endtime="20201117 14:41:46.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.758" endtime="20201117 14:41:46.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.757" endtime="20201117 14:41:46.546"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.548" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.556" endtime="20201117 14:41:46.574"></status>
</kw>
<msg timestamp="20201117 14:41:46.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.555" endtime="20201117 14:41:46.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.576" endtime="20201117 14:41:46.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.578" endtime="20201117 14:41:46.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.552" endtime="20201117 14:41:46.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.550" endtime="20201117 14:41:46.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.587" endtime="20201117 14:41:46.872"></status>
</kw>
<msg timestamp="20201117 14:41:46.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.586" endtime="20201117 14:41:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.876" endtime="20201117 14:41:46.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.884" endtime="20201117 14:41:46.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.583" endtime="20201117 14:41:46.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.581" endtime="20201117 14:41:46.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.891" level="INFO">${RESULT} = [{'time': 0.022287083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.323599999999777e-05, 'source_diff': 6.323599999999777e-05}, {'time': 0.022360069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.887" endtime="20201117 14:41:46.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.904" level="INFO">${ACCURACY} = {'time': [0.022287083, 0.022360069, 0.022433083, 0.022503111, 0.022579111, 0.022651111, 0.022725125, 0.022798125, 0.022869139, 0.022942181, 0.023015153, 0.023085167, 0.023161167, 0.023233194, 0.023306...</msg>
<status status="PASS" starttime="20201117 14:41:46.892" endtime="20201117 14:41:46.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.908" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.907" endtime="20201117 14:41:46.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.911" level="INFO">VALUE: [6.323599999999777e-05, 6.37630000000014e-05, 6.3889000000001e-05, 6.37219999999987e-05, 6.395799999999938e-05, 6.395800000000285e-05, 6.336099999999789e-05, 6.388899999999753e-05, 6.320799999999863e-05, 6.344499999999878e-05, 6.381999999999916e-05, 6.387500000000143e-05, 6.37500000000013e-05, 6.348599999999802e-05, 6.309699999999807e-05, 6.342999999999974e-05, 6.329100000000004e-05, 6.333299999999875e-05, 6.326400000000038e-05, 6.304099999999979e-05, 6.372200000000217e-05, 6.40699999999994e-05, 6.377800000000045e-05, 6.384699999999882e-05, 6.366699999999989e-05, 6.3889000000001e-05, 6.327799999999995e-05, 6.348700000000096e-05, 6.372299999999817e-05, 6.398700000000146e-05, 6.331900000000265e-05, 6.373600000000174e-05, 6.329100000000004e-05, 6.374999999999784e-05, 6.384699999999882e-05, 6.379200000000002e-05, 6.330599999999909e-05, 6.363900000000075e-05, 6.380599999999959e-05, 6.383399999999873e-05, 6.311100000000111e-05, 6.336100000000136e-05, 6.35699999999989e-05, 6.373600000000174e-05, 6.363899999999728e-05, 6.39020000000011e-05, 6.338800000000103e-05, 6.315299999999982e-05, 6.363900000000075e-05, 6.380500000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.910" endtime="20201117 14:41:46.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.905" endtime="20201117 14:41:46.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.914" endtime="20201117 14:41:46.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.917" endtime="20201117 14:41:46.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.916" endtime="20201117 14:41:46.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.912" endtime="20201117 14:41:46.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.548" endtime="20201117 14:41:46.939"></status>
</kw>
<msg timestamp="20201117 14:41:46.939" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.947" endtime="20201117 14:41:46.965"></status>
</kw>
<msg timestamp="20201117 14:41:46.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.946" endtime="20201117 14:41:46.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.967" endtime="20201117 14:41:46.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.969" endtime="20201117 14:41:46.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.943" endtime="20201117 14:41:46.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.941" endtime="20201117 14:41:46.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.979" endtime="20201117 14:41:47.264"></status>
</kw>
<msg timestamp="20201117 14:41:47.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:46.978" endtime="20201117 14:41:47.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:47.269" endtime="20201117 14:41:47.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.277" endtime="20201117 14:41:47.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.975" endtime="20201117 14:41:47.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.973" endtime="20201117 14:41:47.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.284" level="INFO">${RESULT} = [{'time': 0.020767278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.377800000000045e-05, 'source_diff': 6.377800000000045e-05}, {'time': 0.020840292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.280" endtime="20201117 14:41:47.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.297" level="INFO">${ACCURACY} = {'time': [0.020767278, 0.020840292, 0.020917306, 0.020987292, 0.021063306, 0.021135361, 0.021211319, 0.021284403, 0.021361333, 0.021434347, 0.021510361, 0.021582444, 0.021651375, 0.021721375, 0.021797...</msg>
<status status="PASS" starttime="20201117 14:41:47.285" endtime="20201117 14:41:47.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.301" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.300" endtime="20201117 14:41:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.304" level="INFO">VALUE: [6.377800000000045e-05, 6.383399999999873e-05, 6.380599999999959e-05, 6.337500000000093e-05, 6.398700000000146e-05, 6.333299999999875e-05, 6.37219999999987e-05, 6.370900000000207e-05, 6.376400000000088e-05, 6.3582999999999e-05, 6.32219999999982e-05, 6.330499999999961e-05, 6.319399999999906e-05, 6.341699999999964e-05, 6.307000000000187e-05, 6.369499999999903e-05, 6.370900000000207e-05, 6.37639999999974e-05, 6.362500000000118e-05, 6.400000000000156e-05, 6.311100000000111e-05, 6.34439999999993e-05, 6.384699999999882e-05, 6.402700000000122e-05, 6.379200000000002e-05, 6.331899999999918e-05, 6.311100000000111e-05, 6.345799999999888e-05, 6.348599999999802e-05, 6.327799999999995e-05, 6.354199999999977e-05, 6.383399999999873e-05, 6.386100000000186e-05, 6.386099999999839e-05, 6.327700000000047e-05, 6.331899999999918e-05, 6.387499999999796e-05, 6.32639999999969e-05, 6.367999999999999e-05, 6.376400000000088e-05, 6.313900000000025e-05, 6.404200000000027e-05, 6.37500000000013e-05, 6.400000000000156e-05, 6.401400000000113e-05, 6.315299999999982e-05, 6.398600000000199e-05, 6.398599999999852e-05, 6.37219999999987e-05, 6.390300000000057e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.302" endtime="20201117 14:41:47.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.298" endtime="20201117 14:41:47.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.308" endtime="20201117 14:41:47.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.311" endtime="20201117 14:41:47.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.309" endtime="20201117 14:41:47.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.305" endtime="20201117 14:41:47.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.939" endtime="20201117 14:41:47.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.547" endtime="20201117 14:41:47.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.546" endtime="20201117 14:41:47.332"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.335" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.343" endtime="20201117 14:41:47.362"></status>
</kw>
<msg timestamp="20201117 14:41:47.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.341" endtime="20201117 14:41:47.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.363" endtime="20201117 14:41:47.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.366" endtime="20201117 14:41:47.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.339" endtime="20201117 14:41:47.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.337" endtime="20201117 14:41:47.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.375" endtime="20201117 14:41:47.660"></status>
</kw>
<msg timestamp="20201117 14:41:47.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.373" endtime="20201117 14:41:47.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.664" endtime="20201117 14:41:47.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.672" endtime="20201117 14:41:47.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.371" endtime="20201117 14:41:47.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.369" endtime="20201117 14:41:47.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.679" level="INFO">${RESULT} = [{'time': 0.022894875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459699999999957e-05, 'source_diff': 6.459699999999957e-05}, {'time': 0.022971806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.675" endtime="20201117 14:41:47.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.693" level="INFO">${ACCURACY} = {'time': [0.022894875, 0.022971806, 0.023042806, 0.023115833, 0.023191819, 0.023267833, 0.023339847, 0.023417861, 0.023488917, 0.023565875, 0.023641875, 0.023717889, 0.023792958, 0.023869917, 0.023945...</msg>
<status status="PASS" starttime="20201117 14:41:47.679" endtime="20201117 14:41:47.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.698" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.697" endtime="20201117 14:41:47.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.700" level="INFO">VALUE: [6.459699999999957e-05, 6.422300000000214e-05, 6.472299999999917e-05, 6.4276999999998e-05, 6.447199999999945e-05, 6.465200000000185e-05, 6.420799999999963e-05, 6.500000000000256e-05, 6.42500000000018e-05, 6.47219999999997e-05, 6.491700000000114e-05, 6.468100000000046e-05, 6.495800000000038e-05, 6.429200000000052e-05, 6.45280000000012e-05, 6.445899999999935e-05, 6.48479999999993e-05, 6.451299999999868e-05, 6.426299999999843e-05, 6.422200000000267e-05, 6.420799999999963e-05, 6.455499999999739e-05, 6.451399999999816e-05, 6.436099999999889e-05, 6.473599999999927e-05, 6.448600000000249e-05, 6.501400000000213e-05, 6.495899999999985e-05, 6.437500000000193e-05, 6.47500000000023e-05, 6.42219999999992e-05, 6.469500000000003e-05, 6.4583e-05, 6.423599999999877e-05, 6.493000000000124e-05, 6.4276999999998e-05, 6.480500000000111e-05, 6.451400000000163e-05, 6.461099999999914e-05, 6.431900000000018e-05, 6.47219999999997e-05, 6.484800000000276e-05, 6.484699999999982e-05, 6.431900000000018e-05, 6.461199999999861e-05, 6.424999999999834e-05, 6.44440000000003e-05, 6.484699999999982e-05, 6.470800000000013e-05, 6.426400000000138e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.699" endtime="20201117 14:41:47.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.694" endtime="20201117 14:41:47.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.704" endtime="20201117 14:41:47.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.707" endtime="20201117 14:41:47.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.705" endtime="20201117 14:41:47.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.702" endtime="20201117 14:41:47.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.335" endtime="20201117 14:41:47.728"></status>
</kw>
<msg timestamp="20201117 14:41:47.728" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.736" endtime="20201117 14:41:47.755"></status>
</kw>
<msg timestamp="20201117 14:41:47.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.735" endtime="20201117 14:41:47.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.756" endtime="20201117 14:41:47.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.759" endtime="20201117 14:41:47.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.732" endtime="20201117 14:41:47.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.730" endtime="20201117 14:41:47.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.769" endtime="20201117 14:41:48.055"></status>
</kw>
<msg timestamp="20201117 14:41:48.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.767" endtime="20201117 14:41:48.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.059" endtime="20201117 14:41:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.067" endtime="20201117 14:41:48.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.765" endtime="20201117 14:41:48.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.763" endtime="20201117 14:41:48.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.073" level="INFO">${RESULT} = [{'time': 0.019382819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.44440000000003e-05, 'source_diff': 6.44440000000003e-05}, {'time': 0.019453806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:48.070" endtime="20201117 14:41:48.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.087" level="INFO">${ACCURACY} = {'time': [0.019382819, 0.019453806, 0.019525861, 0.019598833, 0.019671833, 0.019745847, 0.019822847, 0.019892861, 0.019966903, 0.020042889, 0.020118903, 0.020191889, 0.020264972, 0.020340917, 0.020413...</msg>
<status status="PASS" starttime="20201117 14:41:48.074" endtime="20201117 14:41:48.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.091" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.090" endtime="20201117 14:41:48.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.094" level="INFO">VALUE: [6.44440000000003e-05, 6.490300000000157e-05, 6.506899999999746e-05, 6.47219999999997e-05, 6.479099999999807e-05, 6.418000000000049e-05, 6.498599999999952e-05, 6.415300000000082e-05, 6.468100000000046e-05, 6.495800000000038e-05, 6.498599999999952e-05, 6.405599999999984e-05, 6.505499999999789e-05, 6.498599999999952e-05, 6.405599999999984e-05, 6.409699999999907e-05, 6.495899999999985e-05, 6.498599999999952e-05, 6.405500000000036e-05, 6.434700000000279e-05, 6.501400000000213e-05, 6.412499999999821e-05, 6.423599999999877e-05, 6.505600000000084e-05, 6.493100000000071e-05, 6.412499999999821e-05, 6.472299999999917e-05, 6.498599999999952e-05, 6.47089999999996e-05, 6.441700000000064e-05, 6.463899999999828e-05, 6.480500000000111e-05, 6.431900000000018e-05, 6.415199999999788e-05, 6.448599999999902e-05, 6.437499999999846e-05, 6.455499999999739e-05, 6.495799999999691e-05, 6.468100000000046e-05, 6.42089999999991e-05, 6.491700000000114e-05, 6.444499999999978e-05, 6.408399999999898e-05, 6.482000000000016e-05, 6.493100000000071e-05, 6.494500000000028e-05, 6.420799999999963e-05, 6.441600000000117e-05, 6.465199999999838e-05, 6.456900000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.092" endtime="20201117 14:41:48.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.088" endtime="20201117 14:41:48.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.097" endtime="20201117 14:41:48.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.101" endtime="20201117 14:41:48.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.099" endtime="20201117 14:41:48.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.096" endtime="20201117 14:41:48.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.729" endtime="20201117 14:41:48.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.333" endtime="20201117 14:41:48.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.333" endtime="20201117 14:41:48.122"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.124" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.132" endtime="20201117 14:41:48.150"></status>
</kw>
<msg timestamp="20201117 14:41:48.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.131" endtime="20201117 14:41:48.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.151" endtime="20201117 14:41:48.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.154" endtime="20201117 14:41:48.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.128" endtime="20201117 14:41:48.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.126" endtime="20201117 14:41:48.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.163" endtime="20201117 14:41:48.448"></status>
</kw>
<msg timestamp="20201117 14:41:48.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.161" endtime="20201117 14:41:48.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.453" endtime="20201117 14:41:48.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.461" endtime="20201117 14:41:48.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.159" endtime="20201117 14:41:48.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.157" endtime="20201117 14:41:48.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.467" level="INFO">${RESULT} = [{'time': 0.021907069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.561100000000014e-05, 'source_diff': 6.561100000000014e-05}, {'time': 0.021984042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.464" endtime="20201117 14:41:48.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.481" level="INFO">${ACCURACY} = {'time': [0.021907069, 0.021984042, 0.022057069, 0.022133056, 0.022208069, 0.022280083, 0.022354083, 0.022429097, 0.022507111, 0.022580125, 0.022652167, 0.022727125, 0.022801153, 0.022878167, 0.022950...</msg>
<status status="PASS" starttime="20201117 14:41:48.468" endtime="20201117 14:41:48.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.485" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.484" endtime="20201117 14:41:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.488" level="INFO">VALUE: [6.561100000000014e-05, 6.572300000000017e-05, 6.600000000000009e-05, 6.562500000000318e-05, 6.561100000000014e-05, 6.59159999999992e-05, 6.552699999999925e-05, 6.583299999999778e-05, 6.555499999999839e-05, 6.501399999999866e-05, 6.577800000000245e-05, 6.513900000000225e-05, 6.577800000000245e-05, 6.545900000000035e-05, 6.590300000000257e-05, 6.544500000000078e-05, 6.579200000000202e-05, 6.523699999999924e-05, 6.574999999999984e-05, 6.595800000000138e-05, 6.562499999999971e-05, 6.552799999999873e-05, 6.576400000000288e-05, 6.530600000000109e-05, 6.523600000000324e-05, 6.52220000000002e-05, 6.595799999999791e-05, 6.520800000000063e-05, 6.545900000000035e-05, 6.57220000000007e-05, 6.572300000000017e-05, 6.549999999999959e-05, 6.545900000000035e-05, 6.586100000000039e-05, 6.581900000000168e-05, 6.586100000000039e-05, 6.556900000000143e-05, 6.545800000000088e-05, 6.581900000000168e-05, 6.538899999999903e-05, 6.530499999999814e-05, 6.523600000000324e-05, 6.605600000000184e-05, 6.52639999999989e-05, 6.559800000000005e-05, 6.566699999999842e-05, 6.595800000000138e-05, 6.534700000000032e-05, 6.552699999999925e-05, 6.594399999999834e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.486" endtime="20201117 14:41:48.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.482" endtime="20201117 14:41:48.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.491" endtime="20201117 14:41:48.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.495" endtime="20201117 14:41:48.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.493" endtime="20201117 14:41:48.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.490" endtime="20201117 14:41:48.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.125" endtime="20201117 14:41:48.515"></status>
</kw>
<msg timestamp="20201117 14:41:48.516" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.524" endtime="20201117 14:41:48.541"></status>
</kw>
<msg timestamp="20201117 14:41:48.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.522" endtime="20201117 14:41:48.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.542" endtime="20201117 14:41:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.545" endtime="20201117 14:41:48.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.520" endtime="20201117 14:41:48.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.518" endtime="20201117 14:41:48.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.555" endtime="20201117 14:41:48.841"></status>
</kw>
<msg timestamp="20201117 14:41:48.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.553" endtime="20201117 14:41:48.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.845" endtime="20201117 14:41:48.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.853" endtime="20201117 14:41:48.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.551" endtime="20201117 14:41:48.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.549" endtime="20201117 14:41:48.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.860" level="INFO">${RESULT} = [{'time': 0.019569833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.597199999999748e-05, 'source_diff': 6.597199999999748e-05}, {'time': 0.019643875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.857" endtime="20201117 14:41:48.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.873" level="INFO">${ACCURACY} = {'time': [0.019569833, 0.019643875, 0.019718847, 0.019792861, 0.019866861, 0.019939889, 0.020017875, 0.020093958, 0.020166889, 0.020244917, 0.020317931, 0.020391917, 0.020465931, 0.020540958, 0.020614...</msg>
<status status="PASS" starttime="20201117 14:41:48.861" endtime="20201117 14:41:48.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.878" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.877" endtime="20201117 14:41:48.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.880" level="INFO">VALUE: [6.597199999999748e-05, 6.60280000000027e-05, 6.574999999999984e-05, 6.509700000000007e-05, 6.531900000000118e-05, 6.593099999999824e-05, 6.524999999999934e-05, 6.573600000000027e-05, 6.595800000000138e-05, 6.52500000000028e-05, 6.522299999999967e-05, 6.598600000000052e-05, 6.57639999999994e-05, 6.543000000000174e-05, 6.506900000000093e-05, 6.531900000000118e-05, 6.605499999999889e-05, 6.526400000000238e-05, 6.555499999999839e-05, 6.512499999999921e-05, 6.586099999999692e-05, 6.580600000000159e-05, 6.583300000000125e-05, 6.52639999999989e-05, 6.588899999999953e-05, 6.55700000000009e-05, 6.555499999999839e-05, 6.602799999999923e-05, 6.527799999999848e-05, 6.524999999999934e-05, 6.531900000000118e-05, 6.542999999999827e-05, 6.550000000000306e-05, 6.548600000000002e-05, 6.598599999999705e-05, 6.518100000000096e-05, 6.574999999999984e-05, 6.57639999999994e-05, 6.561100000000014e-05, 6.588899999999953e-05, 6.536199999999937e-05, 6.568100000000146e-05, 6.588800000000006e-05, 6.524999999999934e-05, 6.566599999999895e-05, 6.520800000000063e-05, 6.598599999999705e-05, 6.570800000000113e-05, 6.511099999999964e-05, 6.513899999999878e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.879" endtime="20201117 14:41:48.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.874" endtime="20201117 14:41:48.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.884" endtime="20201117 14:41:48.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.887" endtime="20201117 14:41:48.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.886" endtime="20201117 14:41:48.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.882" endtime="20201117 14:41:48.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.516" endtime="20201117 14:41:48.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.123" endtime="20201117 14:41:48.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.122" endtime="20201117 14:41:48.908"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.911" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.919" endtime="20201117 14:41:48.937"></status>
</kw>
<msg timestamp="20201117 14:41:48.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.917" endtime="20201117 14:41:48.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.938" endtime="20201117 14:41:48.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.941" endtime="20201117 14:41:48.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.915" endtime="20201117 14:41:48.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.912" endtime="20201117 14:41:48.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.950" endtime="20201117 14:41:49.233"></status>
</kw>
<msg timestamp="20201117 14:41:49.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.948" endtime="20201117 14:41:49.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.237" endtime="20201117 14:41:49.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.246" endtime="20201117 14:41:49.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.946" endtime="20201117 14:41:49.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.944" endtime="20201117 14:41:49.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.253" level="INFO">${RESULT} = [{'time': 0.022669111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.613899999999978e-05, 'source_diff': 6.613899999999978e-05}, {'time': 0.022742056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.249" endtime="20201117 14:41:49.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.267" level="INFO">${ACCURACY} = {'time': [0.022669111, 0.022742056, 0.022821056, 0.022901083, 0.022974069, 0.023047111, 0.023122125, 0.023199111, 0.023278111, 0.023357111, 0.023431125, 0.023509194, 0.023586153, 0.023666167, 0.023740...</msg>
<status status="PASS" starttime="20201117 14:41:49.254" endtime="20201117 14:41:49.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.272" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.271" endtime="20201117 14:41:49.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.274" level="INFO">VALUE: [6.613899999999978e-05, 6.625000000000034e-05, 6.625000000000034e-05, 6.706899999999946e-05, 6.62220000000012e-05, 6.697199999999848e-05, 6.706899999999946e-05, 6.636100000000089e-05, 6.694399999999934e-05, 6.667999999999952e-05, 6.67640000000004e-05, 6.673600000000127e-05, 6.618099999999849e-05, 6.697299999999795e-05, 6.677799999999998e-05, 6.695899999999838e-05, 6.60700000000014e-05, 6.6583000000002e-05, 6.641699999999917e-05, 6.623600000000077e-05, 6.681899999999921e-05, 6.631899999999871e-05, 6.698599999999805e-05, 6.675000000000084e-05, 6.684700000000182e-05, 6.613899999999978e-05, 6.694500000000228e-05, 6.612500000000021e-05, 6.613899999999978e-05, 6.67090000000016e-05, 6.674999999999737e-05, 6.64029999999996e-05, 6.670799999999866e-05, 6.644399999999884e-05, 6.638900000000003e-05, 6.687499999999749e-05, 6.697199999999848e-05, 6.702800000000023e-05, 6.702800000000023e-05, 6.695799999999891e-05, 6.695899999999838e-05, 6.688900000000053e-05, 6.62229999999972e-05, 6.627800000000295e-05, 6.617999999999902e-05, 6.680500000000311e-05, 6.648599999999755e-05, 6.672199999999823e-05, 6.695799999999891e-05, 6.680499999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.273" endtime="20201117 14:41:49.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.268" endtime="20201117 14:41:49.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.277" endtime="20201117 14:41:49.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.281" endtime="20201117 14:41:49.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.279" endtime="20201117 14:41:49.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.276" endtime="20201117 14:41:49.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.911" endtime="20201117 14:41:49.302"></status>
</kw>
<msg timestamp="20201117 14:41:49.302" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.310" endtime="20201117 14:41:49.328"></status>
</kw>
<msg timestamp="20201117 14:41:49.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.309" endtime="20201117 14:41:49.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.330" endtime="20201117 14:41:49.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.332" endtime="20201117 14:41:49.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.306" endtime="20201117 14:41:49.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.304" endtime="20201117 14:41:49.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.342" endtime="20201117 14:41:49.628"></status>
</kw>
<msg timestamp="20201117 14:41:49.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020689542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.341" endtime="20201117 14:41:49.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020689542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.632" endtime="20201117 14:41:49.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.640" endtime="20201117 14:41:49.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.338" endtime="20201117 14:41:49.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.336" endtime="20201117 14:41:49.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.647" level="INFO">${RESULT} = [{'time': 0.020689542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.702799999999676e-05, 'source_diff': 6.702799999999676e-05}, {'time': 0.020762569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.644" endtime="20201117 14:41:49.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.660" level="INFO">${ACCURACY} = {'time': [0.020689542, 0.020762569, 0.020840569, 0.020917569, 0.020992597, 0.021065639, 0.021139597, 0.021215625, 0.021293611, 0.021370625, 0.021448653, 0.021526639, 0.021603667, 0.021676681, 0.021750...</msg>
<status status="PASS" starttime="20201117 14:41:49.648" endtime="20201117 14:41:49.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.665" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.664" endtime="20201117 14:41:49.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.667" level="INFO">VALUE: [6.702799999999676e-05, 6.623600000000077e-05, 6.669399999999909e-05, 6.692999999999977e-05, 6.606900000000193e-05, 6.632000000000166e-05, 6.62220000000012e-05, 6.631899999999871e-05, 6.692999999999977e-05, 6.638900000000003e-05, 6.697200000000195e-05, 6.615299999999935e-05, 6.687500000000096e-05, 6.693099999999924e-05, 6.679200000000302e-05, 6.694500000000228e-05, 6.67640000000004e-05, 6.690199999999716e-05, 6.667999999999952e-05, 6.675000000000084e-05, 6.647199999999798e-05, 6.695800000000238e-05, 6.60830000000015e-05, 6.691699999999967e-05, 6.618099999999849e-05, 6.615299999999935e-05, 6.698600000000152e-05, 6.655600000000234e-05, 6.627799999999948e-05, 6.62220000000012e-05, 6.631899999999871e-05, 6.641699999999917e-05, 6.69160000000002e-05, 6.601399999999966e-05, 6.613899999999978e-05, 6.687500000000096e-05, 6.625000000000034e-05, 6.619399999999859e-05, 6.67359999999978e-05, 6.681999999999869e-05, 6.693099999999924e-05, 6.702800000000023e-05, 6.65700000000019e-05, 6.679199999999955e-05, 6.666699999999942e-05, 6.697200000000195e-05, 6.604099999999932e-05, 6.684699999999835e-05, 6.690200000000063e-05, 6.64029999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.666" endtime="20201117 14:41:49.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.661" endtime="20201117 14:41:49.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.671" endtime="20201117 14:41:49.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.674" endtime="20201117 14:41:49.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.672" endtime="20201117 14:41:49.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.669" endtime="20201117 14:41:49.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.303" endtime="20201117 14:41:49.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.909" endtime="20201117 14:41:49.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.909" endtime="20201117 14:41:49.695"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.698" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.706" endtime="20201117 14:41:49.722"></status>
</kw>
<msg timestamp="20201117 14:41:49.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.704" endtime="20201117 14:41:49.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.724" endtime="20201117 14:41:49.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.726" endtime="20201117 14:41:49.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.702" endtime="20201117 14:41:49.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.700" endtime="20201117 14:41:49.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.736" endtime="20201117 14:41:50.021"></status>
</kw>
<msg timestamp="20201117 14:41:50.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.734" endtime="20201117 14:41:50.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.026" endtime="20201117 14:41:50.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.034" endtime="20201117 14:41:50.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.731" endtime="20201117 14:41:50.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.730" endtime="20201117 14:41:50.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.040" level="INFO">${RESULT} = [{'time': 0.021827403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.751399999999769e-05, 'source_diff': 6.751399999999769e-05}, {'time': 0.021908417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.037" endtime="20201117 14:41:50.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.054" level="INFO">${ACCURACY} = {'time': [0.021827403, 0.021908417, 0.021984403, 0.022059431, 0.022136431, 0.022209431, 0.022287431, 0.022366458, 0.022446458, 0.022520458, 0.022599472, 0.0226785, 0.0227535, 0.0228285, 0.022903514, 0...</msg>
<status status="PASS" starttime="20201117 14:41:50.041" endtime="20201117 14:41:50.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.058" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.057" endtime="20201117 14:41:50.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.061" level="INFO">VALUE: [6.751399999999769e-05, 6.779200000000055e-05, 6.776399999999794e-05, 6.773700000000174e-05, 6.75700000000029e-05, 6.72090000000021e-05, 6.719499999999906e-05, 6.751399999999769e-05, 6.708299999999903e-05, 6.79160000000012e-05, 6.751399999999769e-05, 6.77640000000014e-05, 6.752800000000073e-05, 6.72640000000009e-05, 6.772199999999923e-05, 6.775000000000184e-05, 6.802800000000123e-05, 6.729200000000005e-05, 6.715299999999688e-05, 6.748600000000202e-05, 6.744399999999984e-05, 6.797199999999948e-05, 6.749999999999812e-05, 6.750000000000159e-05, 6.724999999999787e-05, 6.784699999999935e-05, 6.718000000000002e-05, 6.709700000000207e-05, 6.743099999999974e-05, 6.75969999999991e-05, 6.737500000000146e-05, 6.765300000000085e-05, 6.766700000000042e-05, 6.766700000000042e-05, 6.766600000000095e-05, 6.715200000000088e-05, 6.762499999999824e-05, 6.741700000000017e-05, 6.77220000000027e-05, 6.748599999999855e-05, 6.777800000000098e-05, 6.715300000000035e-05, 6.749999999999812e-05, 6.750000000000159e-05, 6.793100000000024e-05, 6.748599999999855e-05, 6.7277000000001e-05, 6.752799999999726e-05, 6.75969999999991e-05, 6.791599999999773e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.059" endtime="20201117 14:41:50.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.055" endtime="20201117 14:41:50.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.064" endtime="20201117 14:41:50.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.067" endtime="20201117 14:41:50.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.066" endtime="20201117 14:41:50.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.062" endtime="20201117 14:41:50.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.698" endtime="20201117 14:41:50.088"></status>
</kw>
<msg timestamp="20201117 14:41:50.088" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.097" endtime="20201117 14:41:50.115"></status>
</kw>
<msg timestamp="20201117 14:41:50.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.095" endtime="20201117 14:41:50.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.116" endtime="20201117 14:41:50.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.119" endtime="20201117 14:41:50.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.092" endtime="20201117 14:41:50.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.090" endtime="20201117 14:41:50.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.129" endtime="20201117 14:41:50.415"></status>
</kw>
<msg timestamp="20201117 14:41:50.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.128" endtime="20201117 14:41:50.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.419" endtime="20201117 14:41:50.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.428" endtime="20201117 14:41:50.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.125" endtime="20201117 14:41:50.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.123" endtime="20201117 14:41:50.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.434" level="INFO">${RESULT} = [{'time': 0.019397111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.77220000000027e-05, 'source_diff': 6.77220000000027e-05}, {'time': 0.019477111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:50.431" endtime="20201117 14:41:50.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.448" level="INFO">${ACCURACY} = {'time': [0.019397111, 0.019477111, 0.019557181, 0.019637139, 0.019717167, 0.019790222, 0.019866167, 0.019940167, 0.020014181, 0.020087181, 0.020165208, 0.020240222, 0.020316208, 0.020391236, 0.020464...</msg>
<status status="PASS" starttime="20201117 14:41:50.435" endtime="20201117 14:41:50.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.452" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.451" endtime="20201117 14:41:50.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.455" level="INFO">VALUE: [6.77220000000027e-05, 6.72359999999983e-05, 6.725000000000134e-05, 6.732000000000266e-05, 6.747300000000192e-05, 6.718000000000002e-05, 6.779200000000055e-05, 6.786100000000239e-05, 6.790299999999763e-05, 6.720899999999863e-05, 6.794400000000034e-05, 6.708299999999903e-05, 6.758299999999953e-05, 6.744399999999984e-05, 6.720799999999916e-05, 6.794400000000034e-05, 6.751400000000116e-05, 6.749999999999812e-05, 6.77640000000014e-05, 6.720799999999916e-05, 6.706999999999894e-05, 6.733400000000223e-05, 6.719499999999906e-05, 6.804100000000132e-05, 6.79160000000012e-05, 6.738799999999809e-05, 6.765300000000085e-05, 6.743000000000027e-05, 6.772199999999923e-05, 6.741700000000017e-05, 6.729200000000005e-05, 6.768099999999999e-05, 6.795899999999938e-05, 6.765300000000085e-05, 6.72640000000009e-05, 6.715300000000035e-05, 6.77359999999988e-05, 6.750000000000159e-05, 6.740199999999766e-05, 6.725000000000134e-05, 6.804099999999785e-05, 6.726399999999744e-05, 6.719399999999959e-05, 6.79169999999972e-05, 6.801399999999819e-05, 6.724999999999787e-05, 6.720799999999916e-05, 6.780599999999665e-05, 6.779200000000055e-05, 6.744499999999931e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.453" endtime="20201117 14:41:50.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.449" endtime="20201117 14:41:50.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.458" endtime="20201117 14:41:50.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.461" endtime="20201117 14:41:50.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.460" endtime="20201117 14:41:50.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.456" endtime="20201117 14:41:50.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.089" endtime="20201117 14:41:50.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.696" endtime="20201117 14:41:50.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.696" endtime="20201117 14:41:50.482"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.485" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.493" endtime="20201117 14:41:50.513"></status>
</kw>
<msg timestamp="20201117 14:41:50.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.492" endtime="20201117 14:41:50.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.514" endtime="20201117 14:41:50.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.517" endtime="20201117 14:41:50.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.489" endtime="20201117 14:41:50.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.487" endtime="20201117 14:41:50.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.526" endtime="20201117 14:41:50.812"></status>
</kw>
<msg timestamp="20201117 14:41:50.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.524" endtime="20201117 14:41:50.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024308653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.816" endtime="20201117 14:41:50.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.824" endtime="20201117 14:41:50.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.522" endtime="20201117 14:41:50.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.520" endtime="20201117 14:41:50.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.831" level="INFO">${RESULT} = [{'time': 0.024308653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8584e-05, 'source_diff': 6.8584e-05}, {'time': 0.024387667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.816699999999745e-...</msg>
<status status="PASS" starttime="20201117 14:41:50.828" endtime="20201117 14:41:50.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.845" level="INFO">${ACCURACY} = {'time': [0.024308653, 0.024387667, 0.024464681, 0.024543681, 0.024624736, 0.024701694, 0.024782694, 0.024862708, 0.024941736, 0.025023722, 0.025104736, 0.02518475, 0.025265764, 0.025343778, 0.0254217...</msg>
<status status="PASS" starttime="20201117 14:41:50.832" endtime="20201117 14:41:50.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.850" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.849" endtime="20201117 14:41:50.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.852" level="INFO">VALUE: [6.8584e-05, 6.816699999999745e-05, 6.83619999999989e-05, 6.815300000000135e-05, 6.837500000000246e-05, 6.897200000000048e-05, 6.868000000000152e-05, 6.874999999999937e-05, 6.84299999999978e-05, 6.895800000000091e-05, 6.879199999999808e-05, 6.874999999999937e-05, 6.845800000000041e-05, 6.884700000000035e-05, 6.880599999999765e-05, 6.890299999999863e-05, 6.879200000000155e-05, 6.887499999999949e-05, 6.883299999999731e-05, 6.833300000000028e-05, 6.84299999999978e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.836099999999942e-05, 6.898600000000005e-05, 6.897299999999995e-05, 6.895800000000091e-05, 6.825000000000234e-05, 6.832000000000019e-05, 6.883400000000026e-05, 6.836099999999942e-05, 6.833300000000028e-05, 6.820899999999963e-05, 6.829199999999758e-05, 6.847199999999998e-05, 6.877800000000198e-05, 6.863899999999881e-05, 6.822199999999973e-05, 6.822199999999973e-05, 6.82640000000019e-05, 6.816700000000092e-05, 6.854199999999783e-05, 6.843100000000074e-05, 6.869499999999709e-05, 6.819500000000006e-05, 6.902699999999928e-05, 6.813800000000231e-05, 6.881900000000121e-05, 6.813899999999831e-05, 6.833300000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.851" endtime="20201117 14:41:50.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.846" endtime="20201117 14:41:50.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.856" endtime="20201117 14:41:50.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.859" endtime="20201117 14:41:50.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.857" endtime="20201117 14:41:50.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.854" endtime="20201117 14:41:50.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.485" endtime="20201117 14:41:50.880"></status>
</kw>
<msg timestamp="20201117 14:41:50.880" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.889" endtime="20201117 14:41:50.906"></status>
</kw>
<msg timestamp="20201117 14:41:50.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.887" endtime="20201117 14:41:50.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.908" endtime="20201117 14:41:50.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.910" endtime="20201117 14:41:50.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.885" endtime="20201117 14:41:50.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.882" endtime="20201117 14:41:50.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.920" endtime="20201117 14:41:51.206"></status>
</kw>
<msg timestamp="20201117 14:41:51.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:50.919" endtime="20201117 14:41:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:51.210" endtime="20201117 14:41:51.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.218" endtime="20201117 14:41:51.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.916" endtime="20201117 14:41:51.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.914" endtime="20201117 14:41:51.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.225" level="INFO">${RESULT} = [{'time': 0.01985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898600000000005e-05, 'source_diff': 6.898600000000005e-05}, {'time': 0.019929042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201117 14:41:51.221" endtime="20201117 14:41:51.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.238" level="INFO">${ACCURACY} = {'time': [0.01985, 0.019929042, 0.020008042, 0.020087028, 0.020164056, 0.020245042, 0.020326069, 0.020406083, 0.020488069, 0.020562083, 0.020640097, 0.020717097, 0.020793111, 0.020869125, 0.020945125,...</msg>
<status status="PASS" starttime="20201117 14:41:51.226" endtime="20201117 14:41:51.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.243" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.242" endtime="20201117 14:41:51.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.245" level="INFO">VALUE: [6.898600000000005e-05, 6.89030000000021e-05, 6.886099999999992e-05, 6.894500000000081e-05, 6.806999999999994e-05, 6.855600000000087e-05, 6.87909999999986e-05, 6.822199999999973e-05, 6.898600000000005e-05, 6.815199999999841e-05, 6.834699999999985e-05, 6.852800000000173e-05, 6.869400000000109e-05, 6.82359999999993e-05, 6.816699999999745e-05, 6.832000000000019e-05, 6.884700000000035e-05, 6.845899999999988e-05, 6.827699999999853e-05, 6.85970000000001e-05, 6.861199999999915e-05, 6.900000000000309e-05, 6.843000000000127e-05, 6.822199999999973e-05, 6.831900000000071e-05, 6.833300000000028e-05, 6.881900000000121e-05, 6.808300000000003e-05, 6.836099999999942e-05, 6.874999999999937e-05, 6.888899999999906e-05, 6.882000000000069e-05, 6.82359999999993e-05, 6.872300000000317e-05, 6.80969999999996e-05, 6.834699999999985e-05, 6.89160000000022e-05, 6.830499999999767e-05, 6.890200000000263e-05, 6.816599999999798e-05, 6.847199999999998e-05, 6.895800000000091e-05, 6.849999999999912e-05, 6.845899999999988e-05, 6.833300000000028e-05, 6.843100000000074e-05, 6.876299999999946e-05, 6.893100000000124e-05, 6.834799999999933e-05, 6.851299999999921e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.244" endtime="20201117 14:41:51.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.239" endtime="20201117 14:41:51.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.249" endtime="20201117 14:41:51.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.252" endtime="20201117 14:41:51.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.251" endtime="20201117 14:41:51.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.247" endtime="20201117 14:41:51.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.881" endtime="20201117 14:41:51.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.483" endtime="20201117 14:41:51.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.483" endtime="20201117 14:41:51.273"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.276" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.284" endtime="20201117 14:41:51.302"></status>
</kw>
<msg timestamp="20201117 14:41:51.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.282" endtime="20201117 14:41:51.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.304" endtime="20201117 14:41:51.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.307" endtime="20201117 14:41:51.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.280" endtime="20201117 14:41:51.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.278" endtime="20201117 14:41:51.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.316" endtime="20201117 14:41:51.601"></status>
</kw>
<msg timestamp="20201117 14:41:51.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.314" endtime="20201117 14:41:51.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.605" endtime="20201117 14:41:51.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.614" endtime="20201117 14:41:51.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.311" endtime="20201117 14:41:51.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.310" endtime="20201117 14:41:51.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.620" level="INFO">${RESULT} = [{'time': 0.021940167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.995900000000138e-05, 'source_diff': 6.995900000000138e-05}, {'time': 0.022017181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.617" endtime="20201117 14:41:51.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.633" level="INFO">${ACCURACY} = {'time': [0.021940167, 0.022017181, 0.022094167, 0.022172181, 0.022254194, 0.022335278, 0.022411208, 0.022489208, 0.022566222, 0.022646236, 0.02272825, 0.022810264, 0.022886333, 0.022968306, 0.0230483...</msg>
<status status="PASS" starttime="20201117 14:41:51.621" endtime="20201117 14:41:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.638" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.637" endtime="20201117 14:41:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.640" level="INFO">VALUE: [6.995900000000138e-05, 6.993099999999877e-05, 6.97230000000007e-05, 6.976399999999994e-05, 6.955500000000239e-05, 6.998600000000105e-05, 6.924999999999987e-05, 6.951399999999969e-05, 6.927799999999901e-05, 6.938899999999956e-05, 6.999999999999715e-05, 6.90970000000006e-05, 6.998599999999758e-05, 6.983400000000126e-05, 6.970900000000113e-05, 6.955600000000187e-05, 6.915299999999888e-05, 6.956900000000196e-05, 6.917999999999855e-05, 6.980499999999917e-05, 6.92360000000003e-05, 6.998600000000105e-05, 6.994399999999887e-05, 6.948600000000055e-05, 6.908299999999756e-05, 6.944499999999784e-05, 6.975000000000037e-05, 6.937499999999999e-05, 6.990299999999963e-05, 6.952799999999926e-05, 6.975000000000037e-05, 6.981999999999822e-05, 6.934700000000085e-05, 6.948600000000055e-05, 6.94299999999988e-05, 6.981899999999874e-05, 6.967999999999905e-05, 6.965300000000285e-05, 6.913900000000278e-05, 6.988900000000006e-05, 6.952699999999978e-05, 6.993100000000224e-05, 6.912499999999974e-05, 6.908300000000103e-05, 6.967999999999905e-05, 6.965299999999938e-05, 6.981899999999874e-05, 6.948600000000055e-05, 6.975000000000037e-05, 6.991599999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.639" endtime="20201117 14:41:51.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.634" endtime="20201117 14:41:51.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.644" endtime="20201117 14:41:51.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.648" endtime="20201117 14:41:51.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.646" endtime="20201117 14:41:51.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.642" endtime="20201117 14:41:51.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.276" endtime="20201117 14:41:51.668"></status>
</kw>
<msg timestamp="20201117 14:41:51.668" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.677" endtime="20201117 14:41:51.694"></status>
</kw>
<msg timestamp="20201117 14:41:51.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.675" endtime="20201117 14:41:51.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.696" endtime="20201117 14:41:51.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.698" endtime="20201117 14:41:51.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.673" endtime="20201117 14:41:51.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.670" endtime="20201117 14:41:51.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.708" endtime="20201117 14:41:51.994"></status>
</kw>
<msg timestamp="20201117 14:41:51.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.707" endtime="20201117 14:41:51.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.998" endtime="20201117 14:41:52.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.006" endtime="20201117 14:41:52.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.704" endtime="20201117 14:41:52.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.702" endtime="20201117 14:41:52.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.013" level="INFO">${RESULT} = [{'time': 0.019323097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.927800000000248e-05, 'source_diff': 6.927800000000248e-05}, {'time': 0.019404111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.009" endtime="20201117 14:41:52.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.026" level="INFO">${ACCURACY} = {'time': [0.019323097, 0.019404111, 0.019482111, 0.019563208, 0.019645139, 0.019723181, 0.019806153, 0.019881167, 0.019959222, 0.020039194, 0.020116181, 0.020197208, 0.020273208, 0.020355208, 0.020436...</msg>
<status status="PASS" starttime="20201117 14:41:52.014" endtime="20201117 14:41:52.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.031" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.030" endtime="20201117 14:41:52.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.033" level="INFO">VALUE: [6.927800000000248e-05, 6.991700000000267e-05, 6.905499999999842e-05, 6.981899999999874e-05, 6.951399999999969e-05, 6.909800000000008e-05, 7.001400000000019e-05, 6.915300000000235e-05, 6.917999999999855e-05, 6.916599999999898e-05, 6.907000000000094e-05, 6.993000000000277e-05, 6.986100000000092e-05, 6.922200000000073e-05, 6.970800000000166e-05, 6.924999999999987e-05, 6.912499999999974e-05, 6.934700000000085e-05, 7.004199999999933e-05, 6.981900000000221e-05, 7.000000000000062e-05, 6.97230000000007e-05, 6.933400000000076e-05, 7.002800000000323e-05, 6.988900000000006e-05, 7.001300000000071e-05, 6.951399999999969e-05, 6.90970000000006e-05, 6.994399999999887e-05, 6.947200000000098e-05, 6.943099999999827e-05, 6.998600000000105e-05, 6.911100000000017e-05, 6.909800000000008e-05, 7.006899999999899e-05, 6.948600000000055e-05, 6.990299999999963e-05, 6.975000000000037e-05, 7.000000000000062e-05, 6.962500000000024e-05, 6.908300000000103e-05, 6.998600000000105e-05, 7.00559999999989e-05, 6.975000000000037e-05, 6.952799999999926e-05, 6.916700000000192e-05, 6.952799999999926e-05, 6.936100000000042e-05, 6.907000000000094e-05, 6.969499999999809e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.032" endtime="20201117 14:41:52.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.027" endtime="20201117 14:41:52.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.037" endtime="20201117 14:41:52.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.040" endtime="20201117 14:41:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.038" endtime="20201117 14:41:52.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.035" endtime="20201117 14:41:52.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.669" endtime="20201117 14:41:52.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.275" endtime="20201117 14:41:52.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.274" endtime="20201117 14:41:52.061"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.063" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.072" endtime="20201117 14:41:52.089"></status>
</kw>
<msg timestamp="20201117 14:41:52.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.070" endtime="20201117 14:41:52.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.091" endtime="20201117 14:41:52.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.093" endtime="20201117 14:41:52.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.068" endtime="20201117 14:41:52.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.065" endtime="20201117 14:41:52.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.102" endtime="20201117 14:41:52.388"></status>
</kw>
<msg timestamp="20201117 14:41:52.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023110306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.101" endtime="20201117 14:41:52.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023110306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.392" endtime="20201117 14:41:52.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.401" endtime="20201117 14:41:52.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.098" endtime="20201117 14:41:52.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.097" endtime="20201117 14:41:52.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.407" level="INFO">${RESULT} = [{'time': 0.023110306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.012500000000074e-05, 'source_diff': 7.012500000000074e-05}, {'time': 0.023191306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.404" endtime="20201117 14:41:52.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.422" level="INFO">${ACCURACY} = {'time': [0.023110306, 0.023191306, 0.023270333, 0.023349333, 0.023426347, 0.023505431, 0.023585361, 0.023667375, 0.023745375, 0.023828389, 0.023908389, 0.023986417, 0.024065403, 0.024142431, 0.024220...</msg>
<status status="PASS" starttime="20201117 14:41:52.408" endtime="20201117 14:41:52.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.426" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.425" endtime="20201117 14:41:52.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.429" level="INFO">VALUE: [7.012500000000074e-05, 7.013899999999684e-05, 7.037500000000099e-05, 7.054100000000035e-05, 7.025000000000087e-05, 7.033400000000176e-05, 7.037499999999752e-05, 7.022200000000173e-05, 7.102800000000076e-05, 7.093099999999977e-05, 7.088899999999759e-05, 7.020899999999816e-05, 7.081999999999922e-05, 7.066699999999995e-05, 7.048600000000155e-05, 7.037500000000099e-05, 7.054100000000035e-05, 7.094399999999987e-05, 7.075000000000137e-05, 7.006899999999899e-05, 7.05420000000033e-05, 7.081899999999974e-05, 7.058300000000253e-05, 7.048599999999808e-05, 7.079200000000008e-05, 7.072199999999876e-05, 7.070900000000213e-05, 7.104200000000033e-05, 7.075000000000137e-05, 7.088799999999812e-05, 7.073599999999833e-05, 7.034700000000185e-05, 7.008299999999856e-05, 7.027800000000001e-05, 7.077800000000051e-05, 7.088900000000106e-05, 7.037499999999752e-05, 7.02499999999974e-05, 7.018099999999902e-05, 7.098599999999858e-05, 7.02230000000012e-05, 7.011100000000117e-05, 7.101300000000171e-05, 7.034700000000185e-05, 7.030499999999967e-05, 7.084700000000235e-05, 7.102800000000076e-05, 7.017999999999955e-05, 7.088900000000106e-05, 7.015299999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.428" endtime="20201117 14:41:52.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.423" endtime="20201117 14:41:52.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.432" endtime="20201117 14:41:52.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.436" endtime="20201117 14:41:52.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.434" endtime="20201117 14:41:52.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.431" endtime="20201117 14:41:52.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.064" endtime="20201117 14:41:52.457"></status>
</kw>
<msg timestamp="20201117 14:41:52.457" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.465" endtime="20201117 14:41:52.483"></status>
</kw>
<msg timestamp="20201117 14:41:52.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.464" endtime="20201117 14:41:52.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.484" endtime="20201117 14:41:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.487" endtime="20201117 14:41:52.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.461" endtime="20201117 14:41:52.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.459" endtime="20201117 14:41:52.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.497" endtime="20201117 14:41:52.783"></status>
</kw>
<msg timestamp="20201117 14:41:52.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.495" endtime="20201117 14:41:52.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.787" endtime="20201117 14:41:52.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.795" endtime="20201117 14:41:52.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.493" endtime="20201117 14:41:52.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.491" endtime="20201117 14:41:52.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.802" level="INFO">${RESULT} = [{'time': 0.020170375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.083299999999931e-05, 'source_diff': 7.083299999999931e-05}, {'time': 0.020249389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.798" endtime="20201117 14:41:52.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.815" level="INFO">${ACCURACY} = {'time': [0.020170375, 0.020249389, 0.020332361, 0.020411417, 0.020488389, 0.020566417, 0.020647417, 0.020730444, 0.020810417, 0.020894472, 0.020974444, 0.021057444, 0.021138458, 0.021219472, 0.021297...</msg>
<status status="PASS" starttime="20201117 14:41:52.803" endtime="20201117 14:41:52.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.820" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.819" endtime="20201117 14:41:52.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.822" level="INFO">VALUE: [7.083299999999931e-05, 7.07499999999979e-05, 7.072199999999876e-05, 7.088900000000106e-05, 7.09170000000002e-05, 7.058399999999854e-05, 7.063900000000081e-05, 7.1069e-05, 7.084800000000183e-05, 7.080500000000017e-05, 7.087499999999802e-05, 7.098600000000205e-05, 7.038900000000056e-05, 7.012500000000074e-05, 7.022200000000173e-05, 7.031899999999924e-05, 7.098599999999858e-05, 7.104200000000033e-05, 7.012500000000074e-05, 7.088900000000106e-05, 7.09170000000002e-05, 7.011200000000065e-05, 7.00559999999989e-05, 7.030599999999915e-05, 7.076400000000094e-05, 7.05689999999995e-05, 7.099999999999815e-05, 7.094399999999987e-05, 7.101399999999772e-05, 7.09170000000002e-05, 7.079200000000008e-05, 7.038900000000056e-05, 7.088900000000106e-05, 7.058399999999854e-05, 7.07499999999979e-05, 7.06109999999982e-05, 7.023700000000077e-05, 7.016599999999998e-05, 7.016599999999998e-05, 7.037500000000099e-05, 7.063900000000081e-05, 7.044400000000284e-05, 7.104200000000033e-05, 7.054199999999983e-05, 7.044500000000231e-05, 7.047200000000198e-05, 7.055600000000287e-05, 7.02360000000013e-05, 7.105500000000042e-05, 7.066699999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.821" endtime="20201117 14:41:52.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.816" endtime="20201117 14:41:52.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.825" endtime="20201117 14:41:52.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.829" endtime="20201117 14:41:52.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.827" endtime="20201117 14:41:52.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.824" endtime="20201117 14:41:52.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.458" endtime="20201117 14:41:52.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.062" endtime="20201117 14:41:52.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.061" endtime="20201117 14:41:52.850"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.852" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.860" endtime="20201117 14:41:52.879"></status>
</kw>
<msg timestamp="20201117 14:41:52.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.859" endtime="20201117 14:41:52.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.880" endtime="20201117 14:41:52.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.883" endtime="20201117 14:41:52.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.856" endtime="20201117 14:41:52.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.854" endtime="20201117 14:41:52.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.892" endtime="20201117 14:41:53.177"></status>
</kw>
<msg timestamp="20201117 14:41:53.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:52.890" endtime="20201117 14:41:53.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:53.181" endtime="20201117 14:41:53.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.189" endtime="20201117 14:41:53.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.888" endtime="20201117 14:41:53.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.886" endtime="20201117 14:41:53.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.196" level="INFO">${RESULT} = [{'time': 0.02182275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.180599999999718e-05, 'source_diff': 7.180599999999718e-05}, {'time': 0.02189975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:53.193" endtime="20201117 14:41:53.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.210" level="INFO">${ACCURACY} = {'time': [0.02182275, 0.02189975, 0.02197875, 0.022057764, 0.022137778, 0.022215778, 0.022297792, 0.022376792, 0.022454819, 0.022535806, 0.022617819, 0.022701833, 0.022784847, 0.022863847, 0.022946861...</msg>
<status status="PASS" starttime="20201117 14:41:53.197" endtime="20201117 14:41:53.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.214" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.213" endtime="20201117 14:41:53.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.217" level="INFO">VALUE: [7.180599999999718e-05, 7.116700000000045e-05, 7.179199999999761e-05, 7.131999999999972e-05, 7.123599999999883e-05, 7.165299999999791e-05, 7.122299999999873e-05, 7.130600000000015e-05, 7.188800000000259e-05, 7.152799999999779e-05, 7.183300000000031e-05, 7.122200000000273e-05, 7.125000000000187e-05, 7.172199999999976e-05, 7.198599999999958e-05, 7.137499999999852e-05, 7.126399999999797e-05, 7.11109999999987e-05, 7.127800000000101e-05, 7.197299999999948e-05, 7.168100000000052e-05, 7.176400000000194e-05, 7.12910000000011e-05, 7.202799999999829e-05, 7.187499999999902e-05, 7.204100000000185e-05, 7.155500000000092e-05, 7.112500000000174e-05, 7.133299999999981e-05, 7.108299999999956e-05, 7.202800000000176e-05, 7.182000000000022e-05, 7.130600000000015e-05, 7.122299999999873e-05, 7.202799999999829e-05, 7.113900000000131e-05, 7.138900000000156e-05, 7.150000000000212e-05, 7.102700000000128e-05, 7.116600000000098e-05, 7.166700000000095e-05, 7.179200000000108e-05, 7.118100000000002e-05, 7.122199999999926e-05, 7.176399999999847e-05, 7.195899999999991e-05, 7.168099999999705e-05, 7.148699999999855e-05, 7.15560000000004e-05, 7.108399999999904e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.215" endtime="20201117 14:41:53.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.211" endtime="20201117 14:41:53.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.220" endtime="20201117 14:41:53.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.223" endtime="20201117 14:41:53.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.222" endtime="20201117 14:41:53.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.218" endtime="20201117 14:41:53.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.853" endtime="20201117 14:41:53.244"></status>
</kw>
<msg timestamp="20201117 14:41:53.244" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.252" endtime="20201117 14:41:53.270"></status>
</kw>
<msg timestamp="20201117 14:41:53.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.251" endtime="20201117 14:41:53.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.271" endtime="20201117 14:41:53.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.274" endtime="20201117 14:41:53.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.248" endtime="20201117 14:41:53.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.246" endtime="20201117 14:41:53.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.284" endtime="20201117 14:41:53.570"></status>
</kw>
<msg timestamp="20201117 14:41:53.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.282" endtime="20201117 14:41:53.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.574" endtime="20201117 14:41:53.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.583" endtime="20201117 14:41:53.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.279" endtime="20201117 14:41:53.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.278" endtime="20201117 14:41:53.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.589" level="INFO">${RESULT} = [{'time': 0.019513181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.129200000000058e-05, 'source_diff': 7.129200000000058e-05}, {'time': 0.019592181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.586" endtime="20201117 14:41:53.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.603" level="INFO">${ACCURACY} = {'time': [0.019513181, 0.019592181, 0.019669194, 0.019750194, 0.019829208, 0.019907236, 0.019985236, 0.020068236, 0.020150264, 0.020231264, 0.020312264, 0.020390278, 0.020475278, 0.020552306, 0.020633...</msg>
<status status="PASS" starttime="20201117 14:41:53.590" endtime="20201117 14:41:53.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.607" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.606" endtime="20201117 14:41:53.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.610" level="INFO">VALUE: [7.129200000000058e-05, 7.148699999999855e-05, 7.122199999999926e-05, 7.184699999999988e-05, 7.175000000000237e-05, 7.11109999999987e-05, 7.188899999999859e-05, 7.120799999999969e-05, 7.170800000000019e-05, 7.11109999999987e-05, 7.177800000000151e-05, 7.198599999999958e-05, 7.183399999999979e-05, 7.12369999999983e-05, 7.166600000000148e-05, 7.163899999999834e-05, 7.120799999999969e-05, 7.122199999999926e-05, 7.1069e-05, 7.198599999999958e-05, 7.108300000000303e-05, 7.122199999999926e-05, 7.201399999999872e-05, 7.120899999999916e-05, 7.193100000000077e-05, 7.168100000000052e-05, 7.156999999999997e-05, 7.119499999999959e-05, 7.165300000000138e-05, 7.177699999999856e-05, 7.167999999999758e-05, 7.163899999999834e-05, 7.120799999999969e-05, 7.12910000000011e-05, 7.181900000000074e-05, 7.195800000000044e-05, 7.195800000000044e-05, 7.170899999999966e-05, 7.152799999999779e-05, 7.202799999999829e-05, 7.205500000000142e-05, 7.148599999999908e-05, 7.109800000000208e-05, 7.123599999999883e-05, 7.205500000000142e-05, 7.118000000000055e-05, 7.179200000000108e-05, 7.201400000000219e-05, 7.105500000000042e-05, 7.169400000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.608" endtime="20201117 14:41:53.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.604" endtime="20201117 14:41:53.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.613" endtime="20201117 14:41:53.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.616" endtime="20201117 14:41:53.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.615" endtime="20201117 14:41:53.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.611" endtime="20201117 14:41:53.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.245" endtime="20201117 14:41:53.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.851" endtime="20201117 14:41:53.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.850" endtime="20201117 14:41:53.637"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.640" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.648" endtime="20201117 14:41:53.667"></status>
</kw>
<msg timestamp="20201117 14:41:53.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.646" endtime="20201117 14:41:53.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.668" endtime="20201117 14:41:53.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.671" endtime="20201117 14:41:53.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.644" endtime="20201117 14:41:53.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.642" endtime="20201117 14:41:53.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.680" endtime="20201117 14:41:53.966"></status>
</kw>
<msg timestamp="20201117 14:41:53.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.679" endtime="20201117 14:41:53.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.970" endtime="20201117 14:41:53.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.978" endtime="20201117 14:41:53.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.676" endtime="20201117 14:41:53.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.674" endtime="20201117 14:41:53.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.985" level="INFO">${RESULT} = [{'time': 0.023651528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.269500000000109e-05, 'source_diff': 7.269500000000109e-05}, {'time': 0.023731542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.982" endtime="20201117 14:41:53.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.999" level="INFO">${ACCURACY} = {'time': [0.023651528, 0.023731542, 0.023815556, 0.023898556, 0.023980569, 0.024065569, 0.024145583, 0.024229597, 0.024312597, 0.024396611, 0.024477639, 0.024561625, 0.024642667, 0.024725653, 0.024806...</msg>
<status status="PASS" starttime="20201117 14:41:53.986" endtime="20201117 14:41:54.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.004" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.003" endtime="20201117 14:41:54.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.007" level="INFO">VALUE: [7.269500000000109e-05, 7.301399999999972e-05, 7.227800000000201e-05, 7.244500000000084e-05, 7.254099999999888e-05, 7.245799999999747e-05, 7.227700000000253e-05, 7.27499999999999e-05, 7.233299999999734e-05, 7.267999999999858e-05, 7.269499999999762e-05, 7.238899999999909e-05, 7.293100000000177e-05, 7.290299999999916e-05, 7.207000000000047e-05, 7.279199999999861e-05, 7.238899999999909e-05, 7.248600000000008e-05, 7.218000000000155e-05, 7.304099999999938e-05, 7.283300000000131e-05, 7.304200000000233e-05, 7.231900000000124e-05, 7.220800000000069e-05, 7.300000000000015e-05, 7.207000000000047e-05, 7.229199999999811e-05, 7.279200000000208e-05, 7.280599999999818e-05, 7.27369999999998e-05, 7.284800000000036e-05, 7.245799999999747e-05, 7.2069000000001e-05, 7.251399999999922e-05, 7.220800000000069e-05, 7.222200000000026e-05, 7.251400000000269e-05, 7.213899999999884e-05, 7.269399999999815e-05, 7.298600000000058e-05, 7.254099999999888e-05, 7.247299999999998e-05, 7.290199999999969e-05, 7.27369999999998e-05, 7.27499999999999e-05, 7.300000000000015e-05, 7.272200000000076e-05, 7.222200000000026e-05, 7.262499999999977e-05, 7.288899999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.005" endtime="20201117 14:41:54.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.000" endtime="20201117 14:41:54.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.010" endtime="20201117 14:41:54.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.013" endtime="20201117 14:41:54.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.011" endtime="20201117 14:41:54.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.008" endtime="20201117 14:41:54.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.640" endtime="20201117 14:41:54.034"></status>
</kw>
<msg timestamp="20201117 14:41:54.034" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.042" endtime="20201117 14:41:54.060"></status>
</kw>
<msg timestamp="20201117 14:41:54.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.041" endtime="20201117 14:41:54.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.062" endtime="20201117 14:41:54.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.064" endtime="20201117 14:41:54.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.038" endtime="20201117 14:41:54.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.036" endtime="20201117 14:41:54.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.075" endtime="20201117 14:41:54.361"></status>
</kw>
<msg timestamp="20201117 14:41:54.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.073" endtime="20201117 14:41:54.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.365" endtime="20201117 14:41:54.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.374" endtime="20201117 14:41:54.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.070" endtime="20201117 14:41:54.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.069" endtime="20201117 14:41:54.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.381" level="INFO">${RESULT} = [{'time': 0.019406111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276399999999947e-05, 'source_diff': 7.276399999999947e-05}, {'time': 0.019491125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.377" endtime="20201117 14:41:54.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.394" level="INFO">${ACCURACY} = {'time': [0.019406111, 0.019491125, 0.019570139, 0.019654139, 0.019738153, 0.019819167, 0.019905181, 0.019986181, 0.020070194, 0.020155208, 0.02023525, 0.020320222, 0.020401292, 0.02048025, 0.02056629...</msg>
<status status="PASS" starttime="20201117 14:41:54.382" endtime="20201117 14:41:54.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.399" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.398" endtime="20201117 14:41:54.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.401" level="INFO">VALUE: [7.276399999999947e-05, 7.247200000000051e-05, 7.263899999999934e-05, 7.244500000000084e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.280600000000165e-05, 7.234799999999986e-05, 7.291599999999926e-05, 7.231900000000124e-05, 7.273600000000033e-05, 7.277799999999904e-05, 7.265300000000238e-05, 7.288899999999959e-05, 7.277799999999904e-05, 7.2069999999997e-05, 7.270800000000119e-05, 7.282000000000122e-05, 7.300000000000015e-05, 7.298600000000058e-05, 7.270800000000119e-05, 7.251399999999922e-05, 7.284699999999741e-05, 7.28049999999987e-05, 7.218000000000155e-05, 7.219400000000112e-05, 7.291699999999873e-05, 7.2069000000001e-05, 7.231900000000124e-05, 7.304199999999886e-05, 7.215299999999841e-05, 7.297200000000101e-05, 7.252799999999879e-05, 7.248600000000008e-05, 7.29309999999983e-05, 7.270799999999772e-05, 7.266599999999901e-05, 7.2069000000001e-05, 7.301399999999972e-05, 7.273600000000033e-05, 7.29309999999983e-05, 7.281900000000174e-05, 7.218100000000102e-05, 7.236099999999995e-05, 7.219400000000112e-05, 7.29309999999983e-05, 7.287500000000002e-05, 7.238799999999962e-05, 7.204100000000185e-05, 7.223599999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.400" endtime="20201117 14:41:54.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.395" endtime="20201117 14:41:54.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.405" endtime="20201117 14:41:54.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.408" endtime="20201117 14:41:54.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.406" endtime="20201117 14:41:54.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.403" endtime="20201117 14:41:54.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.035" endtime="20201117 14:41:54.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.639" endtime="20201117 14:41:54.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.638" endtime="20201117 14:41:54.429"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.432" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.440" endtime="20201117 14:41:54.458"></status>
</kw>
<msg timestamp="20201117 14:41:54.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.438" endtime="20201117 14:41:54.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.459" endtime="20201117 14:41:54.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.462" endtime="20201117 14:41:54.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.436" endtime="20201117 14:41:54.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.434" endtime="20201117 14:41:54.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.471" endtime="20201117 14:41:54.759"></status>
</kw>
<msg timestamp="20201117 14:41:54.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.469" endtime="20201117 14:41:54.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.763" endtime="20201117 14:41:54.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.772" endtime="20201117 14:41:54.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.467" endtime="20201117 14:41:54.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.465" endtime="20201117 14:41:54.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.779" level="INFO">${RESULT} = [{'time': 0.022401361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.330500000000267e-05, 'source_diff': 7.330500000000267e-05}, {'time': 0.022482361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.775" endtime="20201117 14:41:54.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.804" level="INFO">${ACCURACY} = {'time': [0.022401361, 0.022482361, 0.022563361, 0.022644444, 0.022725375, 0.022806431, 0.022891403, 0.022972417, 0.023054431, 0.023134431, 0.023219444, 0.023305444, 0.023391514, 0.023475486, 0.023556...</msg>
<status status="PASS" starttime="20201117 14:41:54.780" endtime="20201117 14:41:54.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.814" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.812" endtime="20201117 14:41:54.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.820" level="INFO">VALUE: [7.330500000000267e-05, 7.323600000000083e-05, 7.327799999999954e-05, 7.362500000000077e-05, 7.347199999999804e-05, 7.383399999999832e-05, 7.390300000000016e-05, 7.395899999999844e-05, 7.358400000000154e-05, 7.34309999999988e-05, 7.367999999999958e-05, 7.400000000000115e-05, 7.361099999999773e-05, 7.39439999999994e-05, 7.3763999999997e-05, 7.372200000000176e-05, 7.355599999999893e-05, 7.320900000000116e-05, 7.384699999999841e-05, 7.377800000000004e-05, 7.357000000000197e-05, 7.35699999999985e-05, 7.320900000000116e-05, 7.319499999999812e-05, 7.333299999999834e-05, 7.383299999999884e-05, 7.344400000000237e-05, 7.33049999999992e-05, 7.327799999999954e-05, 7.373600000000133e-05, 7.366699999999948e-05, 7.368100000000252e-05, 7.395900000000191e-05, 7.320900000000116e-05, 7.388900000000059e-05, 7.379199999999961e-05, 7.322300000000073e-05, 7.38049999999997e-05, 7.313899999999984e-05, 7.358300000000206e-05, 7.392999999999983e-05, 7.376400000000047e-05, 7.380600000000265e-05, 7.32500000000004e-05, 7.349999999999718e-05, 7.369499999999862e-05, 7.331999999999825e-05, 7.394499999999887e-05, 7.34439999999989e-05, 7.397199999999854e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.817" endtime="20201117 14:41:54.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.806" endtime="20201117 14:41:54.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.827" endtime="20201117 14:41:54.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.835" endtime="20201117 14:41:54.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.831" endtime="20201117 14:41:54.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.823" endtime="20201117 14:41:54.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.432" endtime="20201117 14:41:54.860"></status>
</kw>
<msg timestamp="20201117 14:41:54.861" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.880" endtime="20201117 14:41:54.900"></status>
</kw>
<msg timestamp="20201117 14:41:54.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.877" endtime="20201117 14:41:54.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.901" endtime="20201117 14:41:54.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.904" endtime="20201117 14:41:54.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.871" endtime="20201117 14:41:54.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.866" endtime="20201117 14:41:54.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.915" endtime="20201117 14:41:55.202"></status>
</kw>
<msg timestamp="20201117 14:41:55.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037141625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037214722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.913" endtime="20201117 14:41:55.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037141625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037214722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.207" endtime="20201117 14:41:55.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.215" endtime="20201117 14:41:55.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.910" endtime="20201117 14:41:55.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.908" endtime="20201117 14:41:55.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.222" level="INFO">${RESULT} = [{'time': 0.037214722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.309700000000113e-05, 'source_diff': 7.309700000000113e-05}, {'time': 0.037293708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.219" endtime="20201117 14:41:55.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.236" level="INFO">${ACCURACY} = {'time': [0.037214722, 0.037293708, 0.037376722, 0.037460736, 0.037542736, 0.037626792, 0.037712792, 0.037793764, 0.037878778, 0.037959792, 0.038040806, 0.038120806, 0.038204819, 0.038288833, 0.038369...</msg>
<status status="PASS" starttime="20201117 14:41:55.223" endtime="20201117 14:41:55.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.241" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.240" endtime="20201117 14:41:55.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.243" level="INFO">VALUE: [7.309700000000113e-05, 7.308300000000156e-05, 7.313899999999984e-05, 7.39439999999994e-05, 7.399999999999768e-05, 7.319499999999812e-05, 7.40560000000029e-05, 7.368099999999905e-05, 7.344499999999837e-05, 7.332000000000172e-05, 7.391700000000667e-05, 7.326400000000344e-05, 7.386100000000145e-05, 7.370799999999872e-05, 7.354099999999641e-05, 7.402799999999682e-05, 7.305499999999548e-05, 7.363900000000034e-05, 7.361099999999426e-05, 7.404200000000333e-05, 7.402799999999682e-05, 7.350000000000412e-05, 7.397299999999801e-05, 7.31110000000007e-05, 7.358299999999512e-05, 7.354100000000335e-05, 7.397199999999854e-05, 7.327800000000301e-05, 7.372199999999829e-05, 7.337500000000052e-05, 7.320799999999822e-05, 7.322200000000473e-05, 7.370899999999819e-05, 7.315299999999941e-05, 7.401399999999725e-05, 7.401399999999725e-05, 7.304199999999539e-05, 7.351400000000369e-05, 7.370799999999872e-05, 7.320799999999822e-05, 7.381900000000274e-05, 7.392999999999983e-05, 7.369499999999862e-05, 7.324999999999693e-05, 7.333299999999487e-05, 7.306899999999505e-05, 7.30560000000019e-05, 7.315299999999941e-05, 7.380600000000265e-05, 7.345900000000488e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.242" endtime="20201117 14:41:55.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.237" endtime="20201117 14:41:55.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.246" endtime="20201117 14:41:55.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.255" endtime="20201117 14:41:55.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.254" endtime="20201117 14:41:55.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.245" endtime="20201117 14:41:55.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.863" endtime="20201117 14:41:55.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.430" endtime="20201117 14:41:55.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.430" endtime="20201117 14:41:55.277"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.279" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.288" endtime="20201117 14:41:55.308"></status>
</kw>
<msg timestamp="20201117 14:41:55.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.286" endtime="20201117 14:41:55.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.310" endtime="20201117 14:41:55.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.312" endtime="20201117 14:41:55.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.284" endtime="20201117 14:41:55.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.281" endtime="20201117 14:41:55.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.322" endtime="20201117 14:41:55.613"></status>
</kw>
<msg timestamp="20201117 14:41:55.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.320" endtime="20201117 14:41:55.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.622" endtime="20201117 14:41:55.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.641" endtime="20201117 14:41:55.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.317" endtime="20201117 14:41:55.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.316" endtime="20201117 14:41:55.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.656" level="INFO">${RESULT} = [{'time': 0.023524861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.463900000000134e-05, 'source_diff': 7.463900000000134e-05}, {'time': 0.023611847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.648" endtime="20201117 14:41:55.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.689" level="INFO">${ACCURACY} = {'time': [0.023524861, 0.023611847, 0.023695833, 0.023780889, 0.023865875, 0.023946875, 0.024029875, 0.024115889, 0.024200889, 0.024283903, 0.024370917, 0.024451917, 0.024538931, 0.024619944, 0.024701...</msg>
<status status="PASS" starttime="20201117 14:41:55.658" endtime="20201117 14:41:55.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.697" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.696" endtime="20201117 14:41:55.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.700" level="INFO">VALUE: [7.463900000000134e-05, 7.469399999999668e-05, 7.406899999999952e-05, 7.498599999999911e-05, 7.447200000000251e-05, 7.495799999999997e-05, 7.40829999999991e-05, 7.44309999999998e-05, 7.486099999999898e-05, 7.452799999999732e-05, 7.498599999999911e-05, 7.441700000000023e-05, 7.431999999999925e-05, 7.463800000000187e-05, 7.42639999999975e-05, 7.504099999999791e-05, 7.426400000000097e-05, 7.437500000000152e-05, 7.48050000000007e-05, 7.433299999999934e-05, 7.500000000000215e-05, 7.423599999999836e-05, 7.420799999999922e-05, 7.470899999999919e-05, 7.427800000000054e-05, 7.465200000000144e-05, 7.487500000000202e-05, 7.433299999999934e-05, 7.433300000000281e-05, 7.429100000000063e-05, 7.422200000000226e-05, 7.4069000000003e-05, 7.487500000000202e-05, 7.505600000000043e-05, 7.413900000000084e-05, 7.441700000000023e-05, 7.424999999999793e-05, 7.502800000000129e-05, 7.490200000000169e-05, 7.470799999999972e-05, 7.499999999999868e-05, 7.433299999999934e-05, 7.447199999999904e-05, 7.448599999999861e-05, 7.431899999999977e-05, 7.444499999999937e-05, 7.447200000000251e-05, 7.413899999999737e-05, 7.502799999999782e-05, 7.441700000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.698" endtime="20201117 14:41:55.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.691" endtime="20201117 14:41:55.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.704" endtime="20201117 14:41:55.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.707" endtime="20201117 14:41:55.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.705" endtime="20201117 14:41:55.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.702" endtime="20201117 14:41:55.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.280" endtime="20201117 14:41:55.728"></status>
</kw>
<msg timestamp="20201117 14:41:55.728" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.736" endtime="20201117 14:41:55.754"></status>
</kw>
<msg timestamp="20201117 14:41:55.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.735" endtime="20201117 14:41:55.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.756" endtime="20201117 14:41:55.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.758" endtime="20201117 14:41:55.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.732" endtime="20201117 14:41:55.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.730" endtime="20201117 14:41:55.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.768" endtime="20201117 14:41:56.055"></status>
</kw>
<msg timestamp="20201117 14:41:56.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.767" endtime="20201117 14:41:56.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.059" endtime="20201117 14:41:56.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.067" endtime="20201117 14:41:56.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.764" endtime="20201117 14:41:56.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.762" endtime="20201117 14:41:56.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.074" level="INFO">${RESULT} = [{'time': 0.019578486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.466700000000048e-05, 'source_diff': 7.466700000000048e-05}, {'time': 0.019665486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.071" endtime="20201117 14:41:56.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.088" level="INFO">${ACCURACY} = {'time': [0.019578486, 0.019665486, 0.0197465, 0.019828569, 0.019910514, 0.019994528, 0.020075528, 0.020159542, 0.020244556, 0.020325583, 0.020406583, 0.020488611, 0.020570611, 0.020651611, 0.02073362...</msg>
<status status="PASS" starttime="20201117 14:41:56.075" endtime="20201117 14:41:56.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.092" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.091" endtime="20201117 14:41:56.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.095" level="INFO">VALUE: [7.466700000000048e-05, 7.426400000000097e-05, 7.419399999999965e-05, 7.462500000000177e-05, 7.454200000000036e-05, 7.427800000000054e-05, 7.473599999999886e-05, 7.484799999999889e-05, 7.486200000000193e-05, 7.500000000000215e-05, 7.451399999999775e-05, 7.427800000000054e-05, 7.492999999999736e-05, 7.451400000000122e-05, 7.473599999999886e-05, 7.491700000000073e-05, 7.49310000000003e-05, 7.441700000000023e-05, 7.409800000000161e-05, 7.423599999999836e-05, 7.479200000000061e-05, 7.448699999999808e-05, 7.438900000000109e-05, 7.431899999999977e-05, 7.484699999999941e-05, 7.451400000000122e-05, 7.484699999999941e-05, 7.441699999999676e-05, 7.422199999999879e-05, 7.473600000000233e-05, 7.498599999999911e-05, 7.447199999999904e-05, 7.434700000000238e-05, 7.493000000000083e-05, 7.498700000000205e-05, 7.480600000000018e-05, 7.490200000000169e-05, 7.448600000000208e-05, 7.422199999999879e-05, 7.419400000000312e-05, 7.491700000000073e-05, 7.470799999999972e-05, 7.47500000000019e-05, 7.470799999999972e-05, 7.477800000000104e-05, 7.430599999999968e-05, 7.420799999999922e-05, 7.476299999999853e-05, 7.411200000000118e-05, 7.493000000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.094" endtime="20201117 14:41:56.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.089" endtime="20201117 14:41:56.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.099" endtime="20201117 14:41:56.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.102" endtime="20201117 14:41:56.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.100" endtime="20201117 14:41:56.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.097" endtime="20201117 14:41:56.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.729" endtime="20201117 14:41:56.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.278" endtime="20201117 14:41:56.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.277" endtime="20201117 14:41:56.123"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.126" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.134" endtime="20201117 14:41:56.152"></status>
</kw>
<msg timestamp="20201117 14:41:56.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.133" endtime="20201117 14:41:56.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.154" endtime="20201117 14:41:56.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.156" endtime="20201117 14:41:56.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.130" endtime="20201117 14:41:56.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.128" endtime="20201117 14:41:56.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.165" endtime="20201117 14:41:56.452"></status>
</kw>
<msg timestamp="20201117 14:41:56.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02212825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:56.164" endtime="20201117 14:41:56.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02212825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:56.456" endtime="20201117 14:41:56.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.465" endtime="20201117 14:41:56.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.161" endtime="20201117 14:41:56.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.159" endtime="20201117 14:41:56.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.471" level="INFO">${RESULT} = [{'time': 0.022204167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.591700000000173e-05, 'source_diff': 7.591700000000173e-05}, {'time': 0.022292167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.468" endtime="20201117 14:41:56.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.485" level="INFO">${ACCURACY} = {'time': [0.022204167, 0.022292167, 0.022378181, 0.022463194, 0.022548194, 0.022631222, 0.022720236, 0.022802278, 0.02288725, 0.022971264, 0.023055264, 0.023140264, 0.023228278, 0.023310278, 0.0233923...</msg>
<status status="PASS" starttime="20201117 14:41:56.472" endtime="20201117 14:41:56.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.490" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.489" endtime="20201117 14:41:56.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.492" level="INFO">VALUE: [7.591700000000173e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.566599999999854e-05, 7.509699999999966e-05, 7.530499999999773e-05, 7.586099999999998e-05, 7.551399999999875e-05, 7.556900000000102e-05, 7.537500000000252e-05, 7.530599999999721e-05, 7.534699999999991e-05, 7.555600000000093e-05, 7.541700000000123e-05, 7.565300000000191e-05, 7.513899999999837e-05, 7.555600000000093e-05, 7.536100000000295e-05, 7.520800000000022e-05, 7.51110000000027e-05, 7.522199999999979e-05, 7.55830000000006e-05, 7.565299999999844e-05, 7.565299999999844e-05, 7.509699999999966e-05, 7.5763999999999e-05, 7.598600000000011e-05, 7.588899999999912e-05, 7.522199999999979e-05, 7.59440000000014e-05, 7.592999999999836e-05, 7.547200000000004e-05, 7.537500000000252e-05, 7.604099999999892e-05, 7.536099999999948e-05, 7.595800000000097e-05, 7.601399999999925e-05, 7.52639999999985e-05, 7.55830000000006e-05, 7.601399999999925e-05, 7.519500000000012e-05, 7.5763999999999e-05, 7.595800000000097e-05, 7.595800000000097e-05, 7.588899999999912e-05, 7.5763999999999e-05, 7.518000000000108e-05, 7.520899999999969e-05, 7.598600000000011e-05, 7.509699999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.491" endtime="20201117 14:41:56.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.486" endtime="20201117 14:41:56.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.496" endtime="20201117 14:41:56.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.499" endtime="20201117 14:41:56.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.498" endtime="20201117 14:41:56.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.494" endtime="20201117 14:41:56.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.126" endtime="20201117 14:41:56.520"></status>
</kw>
<msg timestamp="20201117 14:41:56.520" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.529" endtime="20201117 14:41:56.546"></status>
</kw>
<msg timestamp="20201117 14:41:56.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.527" endtime="20201117 14:41:56.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.548" endtime="20201117 14:41:56.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.550" endtime="20201117 14:41:56.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.524" endtime="20201117 14:41:56.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.522" endtime="20201117 14:41:56.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.561" endtime="20201117 14:41:56.846"></status>
</kw>
<msg timestamp="20201117 14:41:56.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.559" endtime="20201117 14:41:56.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.850" endtime="20201117 14:41:56.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.859" endtime="20201117 14:41:56.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.557" endtime="20201117 14:41:56.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.555" endtime="20201117 14:41:56.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.865" level="INFO">${RESULT} = [{'time': 0.020202264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.523599999999936e-05, 'source_diff': 7.523599999999936e-05}, {'time': 0.02028525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:56.862" endtime="20201117 14:41:56.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.879" level="INFO">${ACCURACY} = {'time': [0.020202264, 0.02028525, 0.020368278, 0.020456292, 0.020540278, 0.020628306, 0.020711306, 0.020793306, 0.020877333, 0.020964361, 0.021050347, 0.021133347, 0.021214361, 0.021302375, 0.0213863...</msg>
<status status="PASS" starttime="20201117 14:41:56.866" endtime="20201117 14:41:56.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.884" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.883" endtime="20201117 14:41:56.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.886" level="INFO">VALUE: [7.523599999999936e-05, 7.518100000000055e-05, 7.552800000000179e-05, 7.545899999999994e-05, 7.51249999999988e-05, 7.604199999999839e-05, 7.593099999999783e-05, 7.54310000000008e-05, 7.554100000000188e-05, 7.549999999999918e-05, 7.54440000000009e-05, 7.579099999999866e-05, 7.515300000000141e-05, 7.524999999999893e-05, 7.581999999999728e-05, 7.593099999999783e-05, 7.547299999999951e-05, 7.541699999999776e-05, 7.597300000000001e-05, 7.569500000000062e-05, 7.536199999999896e-05, 7.597199999999707e-05, 7.534699999999991e-05, 7.591699999999826e-05, 7.518100000000055e-05, 7.588899999999912e-05, 7.51249999999988e-05, 7.537499999999905e-05, 7.515300000000141e-05, 7.604200000000186e-05, 7.56249999999993e-05, 7.566699999999801e-05, 7.570900000000019e-05, 7.58890000000026e-05, 7.591600000000226e-05, 7.568000000000158e-05, 7.517999999999761e-05, 7.533300000000034e-05, 7.533300000000034e-05, 7.570800000000072e-05, 7.55700000000005e-05, 7.536099999999948e-05, 7.548599999999961e-05, 7.602699999999935e-05, 7.586099999999998e-05, 7.529099999999816e-05, 7.538799999999915e-05, 7.569400000000115e-05, 7.506900000000052e-05, 7.595800000000097e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.885" endtime="20201117 14:41:56.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.880" endtime="20201117 14:41:56.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.890" endtime="20201117 14:41:56.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.893" endtime="20201117 14:41:56.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.891" endtime="20201117 14:41:56.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.888" endtime="20201117 14:41:56.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.521" endtime="20201117 14:41:56.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.125" endtime="20201117 14:41:56.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.124" endtime="20201117 14:41:56.914"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.917" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.925" endtime="20201117 14:41:56.943"></status>
</kw>
<msg timestamp="20201117 14:41:56.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.923" endtime="20201117 14:41:56.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.945" endtime="20201117 14:41:56.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.947" endtime="20201117 14:41:56.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.921" endtime="20201117 14:41:56.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.919" endtime="20201117 14:41:56.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.957" endtime="20201117 14:41:57.244"></status>
</kw>
<msg timestamp="20201117 14:41:57.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.955" endtime="20201117 14:41:57.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.248" endtime="20201117 14:41:57.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.257" endtime="20201117 14:41:57.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.952" endtime="20201117 14:41:57.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.951" endtime="20201117 14:41:57.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.264" level="INFO">${RESULT} = [{'time': 0.023572139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.656999999999803e-05, 'source_diff': 7.656999999999803e-05}, {'time': 0.023654153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.261" endtime="20201117 14:41:57.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.279" level="INFO">${ACCURACY} = {'time': [0.023572139, 0.023654153, 0.023741194, 0.023824167, 0.023910181, 0.023997194, 0.024083194, 0.024169278, 0.024255222, 0.024340222, 0.024426236, 0.024511278, 0.024597264, 0.024686264, 0.024776...</msg>
<status status="PASS" starttime="20201117 14:41:57.265" endtime="20201117 14:41:57.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.283" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.282" endtime="20201117 14:41:57.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.286" level="INFO">VALUE: [7.656999999999803e-05, 7.615299999999894e-05, 7.666599999999954e-05, 7.686100000000098e-05, 7.665299999999944e-05, 7.686100000000098e-05, 7.616599999999904e-05, 7.661099999999726e-05, 7.677799999999957e-05, 7.612500000000327e-05, 7.615299999999894e-05, 7.682000000000175e-05, 7.613899999999937e-05, 7.655599999999846e-05, 7.699999999999721e-05, 7.687499999999708e-05, 7.679199999999914e-05, 7.652799999999932e-05, 7.697200000000154e-05, 7.619399999999818e-05, 7.648600000000061e-05, 7.679100000000313e-05, 7.606899999999805e-05, 7.663899999999987e-05, 7.620900000000069e-05, 7.655599999999846e-05, 7.673599999999739e-05, 7.605599999999796e-05, 7.688800000000065e-05, 7.611200000000318e-05, 7.700000000000068e-05, 7.620800000000122e-05, 7.655499999999898e-05, 7.654099999999942e-05, 7.686100000000098e-05, 7.700000000000068e-05, 7.675000000000043e-05, 7.648600000000061e-05, 7.695900000000144e-05, 7.66250000000003e-05, 7.62639999999995e-05, 7.641699999999876e-05, 7.615299999999894e-05, 7.684700000000141e-05, 7.626300000000003e-05, 7.661100000000073e-05, 7.648599999999714e-05, 7.608299999999762e-05, 7.623599999999689e-05, 7.672200000000129e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.284" endtime="20201117 14:41:57.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.280" endtime="20201117 14:41:57.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.289" endtime="20201117 14:41:57.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.293" endtime="20201117 14:41:57.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.291" endtime="20201117 14:41:57.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.287" endtime="20201117 14:41:57.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.917" endtime="20201117 14:41:57.314"></status>
</kw>
<msg timestamp="20201117 14:41:57.314" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.322" endtime="20201117 14:41:57.340"></status>
</kw>
<msg timestamp="20201117 14:41:57.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.321" endtime="20201117 14:41:57.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.342" endtime="20201117 14:41:57.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.344" endtime="20201117 14:41:57.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.318" endtime="20201117 14:41:57.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.316" endtime="20201117 14:41:57.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.354" endtime="20201117 14:41:57.641"></status>
</kw>
<msg timestamp="20201117 14:41:57.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.353" endtime="20201117 14:41:57.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.645" endtime="20201117 14:41:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.654" endtime="20201117 14:41:57.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.350" endtime="20201117 14:41:57.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.348" endtime="20201117 14:41:57.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.661" level="INFO">${RESULT} = [{'time': 0.020211194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.654099999999942e-05, 'source_diff': 7.654099999999942e-05}, {'time': 0.020296208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.657" endtime="20201117 14:41:57.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.674" level="INFO">${ACCURACY} = {'time': [0.020211194, 0.020296208, 0.020382236, 0.020469278, 0.020558236, 0.02064425, 0.020729264, 0.020814264, 0.020902292, 0.020988278, 0.021077292, 0.021165306, 0.021253319, 0.021341333, 0.0214303...</msg>
<status status="PASS" starttime="20201117 14:41:57.662" endtime="20201117 14:41:57.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.679" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.678" endtime="20201117 14:41:57.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.681" level="INFO">VALUE: [7.654099999999942e-05, 7.68189999999988e-05, 7.656900000000202e-05, 7.64029999999992e-05, 7.655499999999898e-05, 7.687500000000055e-05, 7.673600000000086e-05, 7.702799999999982e-05, 7.624999999999993e-05, 7.604199999999839e-05, 7.698600000000111e-05, 7.643099999999833e-05, 7.616599999999904e-05, 7.647200000000104e-05, 7.700000000000068e-05, 7.655499999999898e-05, 7.622300000000026e-05, 7.66250000000003e-05, 7.686100000000098e-05, 7.641699999999876e-05, 7.652800000000279e-05, 7.65969999999977e-05, 7.629199999999864e-05, 7.666699999999901e-05, 7.669500000000162e-05, 7.680499999999923e-05, 7.616599999999904e-05, 7.672200000000129e-05, 7.606900000000152e-05, 7.637500000000005e-05, 7.6070000000001e-05, 7.616699999999851e-05, 7.661099999999726e-05, 7.6070000000001e-05, 7.623600000000036e-05, 7.693099999999883e-05, 7.613900000000284e-05, 7.640199999999972e-05, 7.622199999999732e-05, 7.6764e-05, 7.64440000000019e-05, 7.650000000000018e-05, 7.698600000000111e-05, 7.679199999999914e-05, 7.69579999999985e-05, 7.670800000000172e-05, 7.629199999999864e-05, 7.648600000000061e-05, 7.65700000000015e-05, 7.626300000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.680" endtime="20201117 14:41:57.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.675" endtime="20201117 14:41:57.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.684" endtime="20201117 14:41:57.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.688" endtime="20201117 14:41:57.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.686" endtime="20201117 14:41:57.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.683" endtime="20201117 14:41:57.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.314" endtime="20201117 14:41:57.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.915" endtime="20201117 14:41:57.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.915" endtime="20201117 14:41:57.709"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.711" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.720" endtime="20201117 14:41:57.738"></status>
</kw>
<msg timestamp="20201117 14:41:57.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.718" endtime="20201117 14:41:57.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.739" endtime="20201117 14:41:57.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.742" endtime="20201117 14:41:57.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.716" endtime="20201117 14:41:57.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.713" endtime="20201117 14:41:57.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.751" endtime="20201117 14:41:58.036"></status>
</kw>
<msg timestamp="20201117 14:41:58.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.750" endtime="20201117 14:41:58.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.040" endtime="20201117 14:41:58.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.049" endtime="20201117 14:41:58.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.747" endtime="20201117 14:41:58.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.745" endtime="20201117 14:41:58.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.056" level="INFO">${RESULT} = [{'time': 0.022579278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.805599999999996e-05, 'source_diff': 7.805599999999996e-05}, {'time': 0.022668278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.052" endtime="20201117 14:41:58.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.069" level="INFO">${ACCURACY} = {'time': [0.022579278, 0.022668278, 0.022754292, 0.022841333, 0.022926292, 0.023012306, 0.023103361, 0.023190333, 0.023278347, 0.023366347, 0.023456375, 0.023545375, 0.023631417, 0.023718403, 0.023806...</msg>
<status status="PASS" starttime="20201117 14:41:58.057" endtime="20201117 14:41:58.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.074" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.073" endtime="20201117 14:41:58.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.076" level="INFO">VALUE: [7.805599999999996e-05, 7.716699999999951e-05, 7.773599999999839e-05, 7.737499999999758e-05, 7.705600000000243e-05, 7.71250000000008e-05, 7.788899999999765e-05, 7.736100000000148e-05, 7.723600000000136e-05, 7.7457999999999e-05, 7.745800000000247e-05, 7.738900000000062e-05, 7.806999999999953e-05, 7.730599999999921e-05, 7.719499999999865e-05, 7.765300000000044e-05, 7.754100000000042e-05, 7.720799999999875e-05, 7.804099999999745e-05, 7.765300000000044e-05, 7.788899999999765e-05, 7.747200000000204e-05, 7.755499999999999e-05, 7.754199999999989e-05, 7.75969999999987e-05, 7.755599999999946e-05, 7.72640000000005e-05, 7.725000000000093e-05, 7.791700000000026e-05, 7.711100000000123e-05, 7.743099999999933e-05, 7.706899999999905e-05, 7.755499999999999e-05, 7.715299999999994e-05, 7.770799999999925e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.770900000000219e-05, 7.747199999999857e-05, 7.738900000000062e-05, 7.793099999999983e-05, 7.747300000000151e-05, 7.786099999999851e-05, 7.751400000000075e-05, 7.744399999999943e-05, 7.780500000000024e-05, 7.800000000000168e-05, 7.769399999999968e-05, 7.741699999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.075" endtime="20201117 14:41:58.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.070" endtime="20201117 14:41:58.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.080" endtime="20201117 14:41:58.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.083" endtime="20201117 14:41:58.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.081" endtime="20201117 14:41:58.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.078" endtime="20201117 14:41:58.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.712" endtime="20201117 14:41:58.104"></status>
</kw>
<msg timestamp="20201117 14:41:58.104" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.113" endtime="20201117 14:41:58.131"></status>
</kw>
<msg timestamp="20201117 14:41:58.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.111" endtime="20201117 14:41:58.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.132" endtime="20201117 14:41:58.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.135" endtime="20201117 14:41:58.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.109" endtime="20201117 14:41:58.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.106" endtime="20201117 14:41:58.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.145" endtime="20201117 14:41:58.430"></status>
</kw>
<msg timestamp="20201117 14:41:58.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:58.144" endtime="20201117 14:41:58.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:58.435" endtime="20201117 14:41:58.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.443" endtime="20201117 14:41:58.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.141" endtime="20201117 14:41:58.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.139" endtime="20201117 14:41:58.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.450" level="INFO">${RESULT} = [{'time': 0.01978025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.720799999999875e-05, 'source_diff': 7.720799999999875e-05}, {'time': 0.019868264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:58.447" endtime="20201117 14:41:58.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.464" level="INFO">${ACCURACY} = {'time': [0.01978025, 0.019868264, 0.019954278, 0.020038278, 0.020121292, 0.020205306, 0.020291306, 0.020380333, 0.020468333, 0.020556333, 0.020643347, 0.020728361, 0.020814403, 0.020904375, 0.0209914...</msg>
<status status="PASS" starttime="20201117 14:41:58.451" endtime="20201117 14:41:58.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.468" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.467" endtime="20201117 14:41:58.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.471" level="INFO">VALUE: [7.720799999999875e-05, 7.720799999999875e-05, 7.776399999999753e-05, 7.79030000000007e-05, 7.713900000000037e-05, 7.719499999999865e-05, 7.726399999999703e-05, 7.742999999999986e-05, 7.744399999999943e-05, 7.717999999999961e-05, 7.706899999999905e-05, 7.706899999999905e-05, 7.779200000000014e-05, 7.73189999999993e-05, 7.734800000000139e-05, 7.725000000000093e-05, 7.787499999999808e-05, 7.748600000000161e-05, 7.780500000000024e-05, 7.784699999999894e-05, 7.741699999999976e-05, 7.730499999999974e-05, 7.768099999999958e-05, 7.747199999999857e-05, 7.752800000000032e-05, 7.743099999999933e-05, 7.737500000000105e-05, 7.777800000000057e-05, 7.75839999999986e-05, 7.740200000000072e-05, 7.738900000000062e-05, 7.715300000000341e-05, 7.726299999999756e-05, 7.751400000000075e-05, 7.727800000000007e-05, 7.758299999999912e-05, 7.802800000000082e-05, 7.720799999999875e-05, 7.765300000000044e-05, 7.730599999999921e-05, 7.784699999999894e-05, 7.706999999999853e-05, 7.734799999999792e-05, 7.719500000000212e-05, 7.784699999999894e-05, 7.724999999999746e-05, 7.794399999999993e-05, 7.770799999999925e-05, 7.711100000000123e-05, 7.711100000000123e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.469" endtime="20201117 14:41:58.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.465" endtime="20201117 14:41:58.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.474" endtime="20201117 14:41:58.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.478" endtime="20201117 14:41:58.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.476" endtime="20201117 14:41:58.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.472" endtime="20201117 14:41:58.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.105" endtime="20201117 14:41:58.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.710" endtime="20201117 14:41:58.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.709" endtime="20201117 14:41:58.499"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.501" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.510" endtime="20201117 14:41:58.529"></status>
</kw>
<msg timestamp="20201117 14:41:58.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.509" endtime="20201117 14:41:58.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.530" endtime="20201117 14:41:58.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.533" endtime="20201117 14:41:58.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.505" endtime="20201117 14:41:58.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.503" endtime="20201117 14:41:58.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.542" endtime="20201117 14:41:58.829"></status>
</kw>
<msg timestamp="20201117 14:41:58.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024229417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.541" endtime="20201117 14:41:58.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024229417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.833" endtime="20201117 14:41:58.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.841" endtime="20201117 14:41:58.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.538" endtime="20201117 14:41:58.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.536" endtime="20201117 14:41:58.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.848" level="INFO">${RESULT} = [{'time': 0.024229417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.823599999999889e-05, 'source_diff': 7.823599999999889e-05}, {'time': 0.024321486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.844" endtime="20201117 14:41:58.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.863" level="INFO">${ACCURACY} = {'time': [0.024229417, 0.024321486, 0.024410458, 0.024496458, 0.024586458, 0.024672486, 0.024762486, 0.0248485, 0.024937514, 0.025022514, 0.025108542, 0.025193528, 0.025280556, 0.025367569, 0.02545558...</msg>
<status status="PASS" starttime="20201117 14:41:58.849" endtime="20201117 14:41:58.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.867" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.866" endtime="20201117 14:41:58.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.870" level="INFO">VALUE: [7.823599999999889e-05, 7.879200000000114e-05, 7.888899999999865e-05, 7.892999999999789e-05, 7.873599999999939e-05, 7.874999999999896e-05, 7.865300000000144e-05, 7.830600000000021e-05, 7.81250000000018e-05, 7.89169999999978e-05, 7.877800000000157e-05, 7.816700000000051e-05, 7.809799999999867e-05, 7.855500000000099e-05, 7.865200000000197e-05, 7.891599999999832e-05, 7.815300000000094e-05, 7.836099999999901e-05, 7.894399999999746e-05, 7.84030000000012e-05, 7.904199999999792e-05, 7.870899999999972e-05, 7.820799999999975e-05, 7.834700000000291e-05, 7.87229999999993e-05, 7.894399999999746e-05, 7.887499999999908e-05, 7.904099999999845e-05, 7.893000000000136e-05, 7.887499999999908e-05, 7.818000000000061e-05, 7.813900000000137e-05, 7.89580000000005e-05, 7.89030000000017e-05, 7.82640000000015e-05, 7.879199999999767e-05, 7.824999999999846e-05, 7.856900000000056e-05, 7.898699999999911e-05, 7.848599999999914e-05, 7.816600000000104e-05, 7.872199999999982e-05, 7.874999999999896e-05, 7.819400000000018e-05, 7.823599999999889e-05, 7.841700000000076e-05, 7.893100000000083e-05, 7.840299999999772e-05, 7.894400000000093e-05, 7.816700000000051e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.868" endtime="20201117 14:41:58.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.864" endtime="20201117 14:41:58.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.873" endtime="20201117 14:41:58.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.876" endtime="20201117 14:41:58.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.875" endtime="20201117 14:41:58.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.871" endtime="20201117 14:41:58.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.502" endtime="20201117 14:41:58.897"></status>
</kw>
<msg timestamp="20201117 14:41:58.898" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.906" endtime="20201117 14:41:58.924"></status>
</kw>
<msg timestamp="20201117 14:41:58.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.905" endtime="20201117 14:41:58.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.926" endtime="20201117 14:41:58.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.928" endtime="20201117 14:41:58.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.902" endtime="20201117 14:41:58.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.900" endtime="20201117 14:41:58.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.939" endtime="20201117 14:41:59.224"></status>
</kw>
<msg timestamp="20201117 14:41:59.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.937" endtime="20201117 14:41:59.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.228" endtime="20201117 14:41:59.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.236" endtime="20201117 14:41:59.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.935" endtime="20201117 14:41:59.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.933" endtime="20201117 14:41:59.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.243" level="INFO">${RESULT} = [{'time': 0.020241819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.836100000000248e-05, 'source_diff': 7.836100000000248e-05}, {'time': 0.020333792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:59.240" endtime="20201117 14:41:59.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.256" level="INFO">${ACCURACY} = {'time': [0.020241819, 0.020333792, 0.020422819, 0.020509806, 0.020594819, 0.020685833, 0.020775847, 0.020865847, 0.020956875, 0.021046903, 0.021135903, 0.021225889, 0.021313903, 0.021398917, 0.021486...</msg>
<status status="PASS" starttime="20201117 14:41:59.244" endtime="20201117 14:41:59.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.261" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.260" endtime="20201117 14:41:59.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.264" level="INFO">VALUE: [7.836100000000248e-05, 7.897299999999954e-05, 7.8151999999998e-05, 7.811199999999824e-05, 7.897200000000007e-05, 7.89580000000005e-05, 7.888899999999865e-05, 7.886099999999951e-05, 7.82640000000015e-05, 7.840299999999772e-05, 7.813900000000137e-05, 7.898599999999964e-05, 7.882000000000028e-05, 7.887499999999908e-05, 7.805599999999996e-05, 7.838899999999815e-05, 7.855500000000099e-05, 7.819400000000018e-05, 7.851399999999828e-05, 7.84449999999999e-05, 7.888899999999865e-05, 7.806900000000006e-05, 7.852800000000132e-05, 7.855600000000046e-05, 7.830600000000021e-05, 7.84030000000012e-05, 7.822300000000226e-05, 7.815299999999747e-05, 7.865299999999797e-05, 7.897200000000007e-05, 7.833300000000334e-05, 7.906900000000106e-05, 7.873599999999939e-05, 7.86389999999984e-05, 7.887500000000255e-05, 7.822199999999932e-05, 7.89450000000004e-05, 7.855500000000099e-05, 7.879199999999767e-05, 7.852800000000132e-05, 7.829100000000117e-05, 7.833299999999987e-05, 7.824999999999846e-05, 7.890199999999875e-05, 7.858300000000012e-05, 7.818100000000008e-05, 7.897200000000007e-05, 7.818100000000008e-05, 7.898599999999964e-05, 7.873699999999886e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.262" endtime="20201117 14:41:59.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.257" endtime="20201117 14:41:59.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.267" endtime="20201117 14:41:59.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.271" endtime="20201117 14:41:59.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.269" endtime="20201117 14:41:59.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.265" endtime="20201117 14:41:59.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.898" endtime="20201117 14:41:59.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.500" endtime="20201117 14:41:59.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.499" endtime="20201117 14:41:59.292"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.295" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.303" endtime="20201117 14:41:59.321"></status>
</kw>
<msg timestamp="20201117 14:41:59.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.301" endtime="20201117 14:41:59.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.323" endtime="20201117 14:41:59.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.326" endtime="20201117 14:41:59.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.299" endtime="20201117 14:41:59.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.297" endtime="20201117 14:41:59.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.335" endtime="20201117 14:41:59.621"></status>
</kw>
<msg timestamp="20201117 14:41:59.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.333" endtime="20201117 14:41:59.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.625" endtime="20201117 14:41:59.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.633" endtime="20201117 14:41:59.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.330" endtime="20201117 14:41:59.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.329" endtime="20201117 14:41:59.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.640" level="INFO">${RESULT} = [{'time': 0.022069667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90840000000001e-05, 'source_diff': 7.90840000000001e-05}, {'time': 0.022159667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:59.637" endtime="20201117 14:41:59.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.654" level="INFO">${ACCURACY} = {'time': [0.022069667, 0.022159667, 0.022245681, 0.022333694, 0.022419764, 0.022506736, 0.022592722, 0.022681722, 0.02276975, 0.02285875, 0.022946778, 0.023032778, 0.023119778, 0.023209792, 0.02329779...</msg>
<status status="PASS" starttime="20201117 14:41:59.641" endtime="20201117 14:41:59.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.659" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.657" endtime="20201117 14:41:59.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.661" level="INFO">VALUE: [7.90840000000001e-05, 7.912499999999933e-05, 7.966699999999854e-05, 7.949999999999971e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.941599999999882e-05, 7.938900000000262e-05, 7.998599999999717e-05, 7.908300000000063e-05, 7.932000000000078e-05, 7.99169999999988e-05, 7.90840000000001e-05, 7.938899999999915e-05, 7.930600000000121e-05, 7.948700000000308e-05, 7.95970000000007e-05, 7.961100000000026e-05, 7.923599999999989e-05, 7.948600000000014e-05, 7.97779999999991e-05, 7.987500000000008e-05, 7.924999999999946e-05, 7.933400000000035e-05, 8.001399999999978e-05, 7.973699999999986e-05, 7.962499999999983e-05, 7.988899999999965e-05, 7.997200000000107e-05, 7.974999999999996e-05, 7.977800000000257e-05, 7.933300000000088e-05, 7.945799999999753e-05, 7.911099999999976e-05, 7.904200000000139e-05, 7.948599999999667e-05, 7.993099999999836e-05, 7.92779999999986e-05, 7.930600000000121e-05, 7.930499999999827e-05, 7.916599999999857e-05, 7.987500000000008e-05, 8.004099999999945e-05, 7.91250000000028e-05, 7.974999999999996e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.95840000000006e-05, 7.929100000000217e-05, 7.976399999999953e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.660" endtime="20201117 14:41:59.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.655" endtime="20201117 14:41:59.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.665" endtime="20201117 14:41:59.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.668" endtime="20201117 14:41:59.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.667" endtime="20201117 14:41:59.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.663" endtime="20201117 14:41:59.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.295" endtime="20201117 14:41:59.689"></status>
</kw>
<msg timestamp="20201117 14:41:59.689" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.698" endtime="20201117 14:41:59.716"></status>
</kw>
<msg timestamp="20201117 14:41:59.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.696" endtime="20201117 14:41:59.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.717" endtime="20201117 14:41:59.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.720" endtime="20201117 14:41:59.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.694" endtime="20201117 14:41:59.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.691" endtime="20201117 14:41:59.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.730" endtime="20201117 14:42:00.015"></status>
</kw>
<msg timestamp="20201117 14:42:00.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019634514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.728" endtime="20201117 14:42:00.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019634514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.019" endtime="20201117 14:42:00.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.028" endtime="20201117 14:42:00.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.726" endtime="20201117 14:42:00.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.724" endtime="20201117 14:42:00.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.034" level="INFO">${RESULT} = [{'time': 0.019634514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931999999999731e-05, 'source_diff': 7.931999999999731e-05}, {'time': 0.019725514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.031" endtime="20201117 14:42:00.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.048" level="INFO">${ACCURACY} = {'time': [0.019634514, 0.019725514, 0.019813528, 0.019899542, 0.019987556, 0.020080556, 0.020165583, 0.020251583, 0.020340583, 0.020431597, 0.020517639, 0.020609639, 0.020701625, 0.020787639, 0.020879...</msg>
<status status="PASS" starttime="20201117 14:42:00.035" endtime="20201117 14:42:00.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.052" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.051" endtime="20201117 14:42:00.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.055" level="INFO">VALUE: [7.931999999999731e-05, 7.940299999999872e-05, 7.922200000000032e-05, 7.968099999999811e-05, 7.949999999999971e-05, 7.976399999999953e-05, 7.922200000000032e-05, 7.949999999999971e-05, 7.940199999999925e-05, 7.973600000000039e-05, 7.99580000000015e-05, 7.952799999999885e-05, 7.923599999999989e-05, 7.96389999999994e-05, 7.948600000000014e-05, 7.936100000000001e-05, 7.984800000000042e-05, 7.929199999999817e-05, 7.913799999999943e-05, 7.974999999999996e-05, 7.943100000000133e-05, 7.933400000000035e-05, 7.955500000000199e-05, 7.929199999999817e-05, 7.988899999999965e-05, 7.954100000000242e-05, 7.96389999999994e-05, 7.92640000000025e-05, 7.949999999999971e-05, 7.952699999999938e-05, 8.005499999999902e-05, 7.991599999999932e-05, 7.918100000000108e-05, 7.936100000000001e-05, 7.906900000000106e-05, 7.920800000000075e-05, 7.923600000000336e-05, 7.988899999999965e-05, 7.91389999999989e-05, 7.933400000000035e-05, 7.9764000000003e-05, 7.908300000000063e-05, 7.990200000000322e-05, 7.920799999999728e-05, 8.005499999999902e-05, 7.949999999999971e-05, 7.92779999999986e-05, 7.951399999999928e-05, 7.944400000000143e-05, 7.984700000000094e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.054" endtime="20201117 14:42:00.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.049" endtime="20201117 14:42:00.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.059" endtime="20201117 14:42:00.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.062" endtime="20201117 14:42:00.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.061" endtime="20201117 14:42:00.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.057" endtime="20201117 14:42:00.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.690" endtime="20201117 14:42:00.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.293" endtime="20201117 14:42:00.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.292" endtime="20201117 14:42:00.083"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.086" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.094" endtime="20201117 14:42:00.113"></status>
</kw>
<msg timestamp="20201117 14:42:00.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.093" endtime="20201117 14:42:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.115" endtime="20201117 14:42:00.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.117" endtime="20201117 14:42:00.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.090" endtime="20201117 14:42:00.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.088" endtime="20201117 14:42:00.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.127" endtime="20201117 14:42:00.412"></status>
</kw>
<msg timestamp="20201117 14:42:00.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.125" endtime="20201117 14:42:00.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.416" endtime="20201117 14:42:00.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.425" endtime="20201117 14:42:00.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.122" endtime="20201117 14:42:00.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.121" endtime="20201117 14:42:00.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.431" level="INFO">${RESULT} = [{'time': 0.023686458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.050000000000071e-05, 'source_diff': 8.050000000000071e-05}, {'time': 0.023776472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.428" endtime="20201117 14:42:00.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.446" level="INFO">${ACCURACY} = {'time': [0.023686458, 0.023776472, 0.023868458, 0.023956486, 0.024046486, 0.0241345, 0.0242255, 0.024313514, 0.024406528, 0.024497542, 0.024586542, 0.024676569, 0.024763583, 0.024857569, 0.024945583,...</msg>
<status status="PASS" starttime="20201117 14:42:00.432" endtime="20201117 14:42:00.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.451" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.449" endtime="20201117 14:42:00.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.458" level="INFO">VALUE: [8.050000000000071e-05, 8.090300000000022e-05, 8.063899999999694e-05, 8.073599999999792e-05, 8.01389999999999e-05, 8.029199999999917e-05, 8.038900000000015e-05, 8.020800000000175e-05, 8.072200000000182e-05, 8.023600000000089e-05, 8.083399999999838e-05, 8.066600000000007e-05, 8.020799999999828e-05, 8.100000000000121e-05, 8.008300000000163e-05, 8.102800000000035e-05, 8.01389999999999e-05, 8.011100000000076e-05, 8.099999999999774e-05, 8.094499999999893e-05, 8.029199999999917e-05, 8.029199999999917e-05, 8.095900000000197e-05, 8.079199999999967e-05, 8.009699999999773e-05, 8.026400000000003e-05, 8.015299999999947e-05, 8.054099999999995e-05, 8.086100000000151e-05, 8.068099999999911e-05, 8.090300000000022e-05, 8.072200000000182e-05, 8.026400000000003e-05, 8.024999999999699e-05, 8.06390000000004e-05, 8.09719999999986e-05, 8.020799999999828e-05, 8.036099999999755e-05, 8.067999999999964e-05, 8.012500000000033e-05, 8.087500000000108e-05, 8.04719999999981e-05, 8.012500000000033e-05, 8.025000000000046e-05, 8.070799999999878e-05, 8.069499999999868e-05, 8.045900000000147e-05, 8.042999999999939e-05, 8.07910000000002e-05, 8.005499999999902e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.452" endtime="20201117 14:42:00.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.447" endtime="20201117 14:42:00.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.462" endtime="20201117 14:42:00.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.466" endtime="20201117 14:42:00.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.464" endtime="20201117 14:42:00.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.460" endtime="20201117 14:42:00.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.087" endtime="20201117 14:42:00.487"></status>
</kw>
<msg timestamp="20201117 14:42:00.487" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.496" endtime="20201117 14:42:00.514"></status>
</kw>
<msg timestamp="20201117 14:42:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.494" endtime="20201117 14:42:00.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.516" endtime="20201117 14:42:00.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.518" endtime="20201117 14:42:00.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.491" endtime="20201117 14:42:00.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.489" endtime="20201117 14:42:00.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.529" endtime="20201117 14:42:00.815"></status>
</kw>
<msg timestamp="20201117 14:42:00.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.527" endtime="20201117 14:42:00.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.819" endtime="20201117 14:42:00.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.827" endtime="20201117 14:42:00.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.525" endtime="20201117 14:42:00.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.523" endtime="20201117 14:42:00.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.834" level="INFO">${RESULT} = [{'time': 0.019660111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.019400000000218e-05, 'source_diff': 8.019400000000218e-05}, {'time': 0.019751125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.831" endtime="20201117 14:42:00.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.848" level="INFO">${ACCURACY} = {'time': [0.019660111, 0.019751125, 0.019841125, 0.019933139, 0.020021194, 0.020111153, 0.020202167, 0.020289181, 0.020380208, 0.020469194, 0.020562208, 0.020652222, 0.020743236, 0.020830236, 0.020919...</msg>
<status status="PASS" starttime="20201117 14:42:00.835" endtime="20201117 14:42:00.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.853" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.852" endtime="20201117 14:42:00.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.855" level="INFO">VALUE: [8.019400000000218e-05, 8.058300000000213e-05, 8.083300000000238e-05, 8.074999999999749e-05, 8.056899999999909e-05, 8.100000000000121e-05, 8.015299999999947e-05, 8.043099999999886e-05, 8.086100000000151e-05, 8.012500000000033e-05, 8.045799999999853e-05, 8.041599999999982e-05, 8.013900000000337e-05, 8.094399999999946e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.02230000000008e-05, 8.083399999999838e-05, 8.02230000000008e-05, 8.07780000000001e-05, 8.006999999999806e-05, 8.026299999999709e-05, 8.061100000000126e-05, 8.079199999999967e-05, 8.02779999999996e-05, 8.023600000000089e-05, 8.105599999999949e-05, 8.034699999999798e-05, 8.075000000000096e-05, 8.101399999999731e-05, 8.09169999999998e-05, 8.104199999999992e-05, 8.062500000000083e-05, 8.023600000000089e-05, 8.017999999999914e-05, 8.01389999999999e-05, 8.051399999999681e-05, 8.008299999999816e-05, 8.04169999999993e-05, 8.007000000000153e-05, 8.019499999999818e-05, 8.079199999999967e-05, 8.106899999999959e-05, 8.022200000000132e-05, 8.04169999999993e-05, 8.01389999999999e-05, 8.098600000000164e-05, 8.016599999999957e-05, 8.076399999999706e-05, 8.052799999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.854" endtime="20201117 14:42:00.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.849" endtime="20201117 14:42:00.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.859" endtime="20201117 14:42:00.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.862" endtime="20201117 14:42:00.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.860" endtime="20201117 14:42:00.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.857" endtime="20201117 14:42:00.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.488" endtime="20201117 14:42:00.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.085" endtime="20201117 14:42:00.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.084" endtime="20201117 14:42:00.883"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.886" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.894" endtime="20201117 14:42:00.913"></status>
</kw>
<msg timestamp="20201117 14:42:00.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.892" endtime="20201117 14:42:00.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.914" endtime="20201117 14:42:00.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.917" endtime="20201117 14:42:00.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.890" endtime="20201117 14:42:00.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.888" endtime="20201117 14:42:00.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.926" endtime="20201117 14:42:01.213"></status>
</kw>
<msg timestamp="20201117 14:42:01.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.925" endtime="20201117 14:42:01.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.217" endtime="20201117 14:42:01.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.225" endtime="20201117 14:42:01.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.922" endtime="20201117 14:42:01.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.920" endtime="20201117 14:42:01.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.232" level="INFO">${RESULT} = [{'time': 0.022991389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18329999999999e-05, 'source_diff': 8.18329999999999e-05}, {'time': 0.023081458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:01.229" endtime="20201117 14:42:01.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.246" level="INFO">${ACCURACY} = {'time': [0.022991389, 0.023081458, 0.023171431, 0.023261444, 0.023350431, 0.023438444, 0.023527458, 0.023621472, 0.023710472, 0.0238005, 0.0238915, 0.0239815, 0.024070514, 0.024165583, 0.024256542, 0...</msg>
<status status="PASS" starttime="20201117 14:42:01.233" endtime="20201117 14:42:01.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.251" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.250" endtime="20201117 14:42:01.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.253" level="INFO">VALUE: [8.18329999999999e-05, 8.187499999999862e-05, 8.126399999999756e-05, 8.170799999999978e-05, 8.166700000000054e-05, 8.141600000000082e-05, 8.19719999999996e-05, 8.12780000000006e-05, 8.172199999999935e-05, 8.177799999999763e-05, 8.165300000000097e-05, 8.198599999999917e-05, 8.201400000000178e-05, 8.202700000000188e-05, 8.130599999999974e-05, 8.1458999999999e-05, 8.187500000000208e-05, 8.199999999999874e-05, 8.118000000000014e-05, 8.170899999999925e-05, 8.137500000000158e-05, 8.201400000000178e-05, 8.17780000000011e-05, 8.198599999999917e-05, 8.172199999999935e-05, 8.106999999999906e-05, 8.18329999999999e-05, 8.156999999999956e-05, 8.177699999999816e-05, 8.155500000000052e-05, 8.180500000000077e-05, 8.169400000000021e-05, 8.144399999999996e-05, 8.186099999999905e-05, 8.176399999999806e-05, 8.116700000000004e-05, 8.166700000000054e-05, 8.115300000000047e-05, 8.13329999999994e-05, 8.151400000000128e-05, 8.132000000000278e-05, 8.133300000000288e-05, 8.181900000000034e-05, 8.138900000000115e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.154200000000042e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.147299999999857e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.252" endtime="20201117 14:42:01.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.247" endtime="20201117 14:42:01.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.256" endtime="20201117 14:42:01.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.260" endtime="20201117 14:42:01.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.258" endtime="20201117 14:42:01.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.255" endtime="20201117 14:42:01.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.886" endtime="20201117 14:42:01.281"></status>
</kw>
<msg timestamp="20201117 14:42:01.281" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.289" endtime="20201117 14:42:01.308"></status>
</kw>
<msg timestamp="20201117 14:42:01.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.288" endtime="20201117 14:42:01.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.310" endtime="20201117 14:42:01.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.313" endtime="20201117 14:42:01.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.285" endtime="20201117 14:42:01.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.283" endtime="20201117 14:42:01.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.323" endtime="20201117 14:42:01.609"></status>
</kw>
<msg timestamp="20201117 14:42:01.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.321" endtime="20201117 14:42:01.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.613" endtime="20201117 14:42:01.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.622" endtime="20201117 14:42:01.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.319" endtime="20201117 14:42:01.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.317" endtime="20201117 14:42:01.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.629" level="INFO">${RESULT} = [{'time': 0.019633444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.12910000000007e-05, 'source_diff': 8.12910000000007e-05}, {'time': 0.019726458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:01.625" endtime="20201117 14:42:01.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.642" level="INFO">${ACCURACY} = {'time': [0.019633444, 0.019726458, 0.019819472, 0.0199115, 0.0200045, 0.0200965, 0.020184514, 0.020273528, 0.020365542, 0.020459625, 0.020549556, 0.020641569, 0.020729569, 0.020820625, 0.020914597, 0...</msg>
<status status="PASS" starttime="20201117 14:42:01.630" endtime="20201117 14:42:01.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.647" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.646" endtime="20201117 14:42:01.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.649" level="INFO">VALUE: [8.12910000000007e-05, 8.191599999999785e-05, 8.126400000000103e-05, 8.123599999999842e-05, 8.126400000000103e-05, 8.145799999999953e-05, 8.170799999999978e-05, 8.172199999999935e-05, 8.1458999999999e-05, 8.134699999999898e-05, 8.111200000000124e-05, 8.162499999999837e-05, 8.119399999999971e-05, 8.145799999999953e-05, 8.190300000000122e-05, 8.17780000000011e-05, 8.204200000000092e-05, 8.13329999999994e-05, 8.201399999999831e-05, 8.115300000000047e-05, 8.1458999999999e-05, 8.176399999999806e-05, 8.158399999999913e-05, 8.192999999999742e-05, 8.165199999999803e-05, 8.116600000000057e-05, 8.152799999999738e-05, 8.170799999999978e-05, 8.124999999999799e-05, 8.193100000000036e-05, 8.120799999999928e-05, 8.106999999999906e-05, 8.158399999999913e-05, 8.120899999999875e-05, 8.120799999999928e-05, 8.112500000000133e-05, 8.154200000000042e-05, 8.13329999999994e-05, 8.124999999999799e-05, 8.155500000000052e-05, 8.123600000000189e-05, 8.19170000000008e-05, 8.16109999999988e-05, 8.180600000000024e-05, 8.156900000000009e-05, 8.179099999999773e-05, 8.19589999999995e-05, 8.140200000000125e-05, 8.187499999999862e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.648" endtime="20201117 14:42:01.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.643" endtime="20201117 14:42:01.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.652" endtime="20201117 14:42:01.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.656" endtime="20201117 14:42:01.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.654" endtime="20201117 14:42:01.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.651" endtime="20201117 14:42:01.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.281" endtime="20201117 14:42:01.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.885" endtime="20201117 14:42:01.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.884" endtime="20201117 14:42:01.677"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.679" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.688" endtime="20201117 14:42:01.707"></status>
</kw>
<msg timestamp="20201117 14:42:01.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.686" endtime="20201117 14:42:01.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.708" endtime="20201117 14:42:01.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.711" endtime="20201117 14:42:01.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.684" endtime="20201117 14:42:01.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.681" endtime="20201117 14:42:01.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.721" endtime="20201117 14:42:02.008"></status>
</kw>
<msg timestamp="20201117 14:42:02.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.719" endtime="20201117 14:42:02.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.012" endtime="20201117 14:42:02.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.021" endtime="20201117 14:42:02.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.716" endtime="20201117 14:42:02.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.714" endtime="20201117 14:42:02.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.028" level="INFO">${RESULT} = [{'time': 0.022898667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.2459e-05, 'source_diff': 8.2459e-05}, {'time': 0.022993694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.226299999999909e-...</msg>
<status status="PASS" starttime="20201117 14:42:02.025" endtime="20201117 14:42:02.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.043" level="INFO">${ACCURACY} = {'time': [0.022898667, 0.022993694, 0.023087736, 0.023178708, 0.023270708, 0.023358722, 0.023452778, 0.02354675, 0.023639792, 0.023730806, 0.023823778, 0.023914861, 0.024009819, 0.024104806, 0.0241998...</msg>
<status status="PASS" starttime="20201117 14:42:02.029" endtime="20201117 14:42:02.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.047" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.046" endtime="20201117 14:42:02.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.050" level="INFO">VALUE: [8.2459e-05, 8.226299999999909e-05, 8.219400000000071e-05, 8.231900000000084e-05, 8.28330000000009e-05, 8.219399999999724e-05, 8.272200000000035e-05, 8.24720000000001e-05, 8.268100000000111e-05, 8.277799999999863e-05, 8.257000000000056e-05, 8.234699999999998e-05, 8.273600000000339e-05, 8.255600000000099e-05, 8.272200000000035e-05, 8.208300000000016e-05, 8.227799999999813e-05, 8.212499999999887e-05, 8.230500000000127e-05, 8.286100000000005e-05, 8.298600000000017e-05, 8.22919999999977e-05, 8.231999999999684e-05, 8.223599999999942e-05, 8.29590000000005e-05, 8.281900000000134e-05, 8.276299999999959e-05, 8.218099999999715e-05, 8.302799999999888e-05, 8.28049999999983e-05, 8.23330000000004e-05, 8.269499999999722e-05, 8.212500000000234e-05, 8.254199999999795e-05, 8.218100000000061e-05, 8.301399999999931e-05, 8.225000000000246e-05, 8.299999999999974e-05, 8.231900000000084e-05, 8.219400000000071e-05, 8.276400000000253e-05, 8.269400000000121e-05, 8.286100000000005e-05, 8.225000000000246e-05, 8.255599999999752e-05, 8.294500000000093e-05, 8.270900000000025e-05, 8.236099999999955e-05, 8.294400000000146e-05, 8.284700000000048e-05]</msg>
<status status="PASS" starttime="20201117 14:42:02.048" endtime="20201117 14:42:02.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.044" endtime="20201117 14:42:02.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.053" endtime="20201117 14:42:02.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.056" endtime="20201117 14:42:02.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.055" endtime="20201117 14:42:02.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.051" endtime="20201117 14:42:02.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.680" endtime="20201117 14:42:02.077"></status>
</kw>
<msg timestamp="20201117 14:42:02.078" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.086" endtime="20201117 14:42:02.104"></status>
</kw>
<msg timestamp="20201117 14:42:02.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.085" endtime="20201117 14:42:02.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.106" endtime="20201117 14:42:02.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.108" endtime="20201117 14:42:02.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.082" endtime="20201117 14:42:02.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.080" endtime="20201117 14:42:02.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.119" endtime="20201117 14:42:02.405"></status>
</kw>
<msg timestamp="20201117 14:42:02.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.117" endtime="20201117 14:42:02.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.409" endtime="20201117 14:42:02.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.417" endtime="20201117 14:42:02.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.115" endtime="20201117 14:42:02.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.113" endtime="20201117 14:42:02.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.424" level="INFO">${RESULT} = [{'time': 0.020630292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.282000000000081e-05, 'source_diff': 8.282000000000081e-05}, {'time': 0.020726292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.421" endtime="20201117 14:42:02.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.438" level="INFO">${ACCURACY} = {'time': [0.020630292, 0.020726292, 0.020820306, 0.020914319, 0.021007333, 0.021100403, 0.021194375, 0.021288375, 0.021377375, 0.021470375, 0.021564389, 0.021654417, 0.021750431, 0.021844417, 0.021936...</msg>
<status status="PASS" starttime="20201117 14:42:02.425" endtime="20201117 14:42:02.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.442" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.441" endtime="20201117 14:42:02.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.445" level="INFO">VALUE: [8.282000000000081e-05, 8.272299999999982e-05, 8.251399999999881e-05, 8.268000000000164e-05, 8.259700000000023e-05, 8.29590000000005e-05, 8.288900000000265e-05, 8.240299999999826e-05, 8.248599999999967e-05, 8.24170000000013e-05, 8.244500000000043e-05, 8.207000000000006e-05, 8.286199999999952e-05, 8.218100000000061e-05, 8.26529999999985e-05, 8.219400000000071e-05, 8.257000000000056e-05, 8.26659999999986e-05, 8.292999999999842e-05, 8.250000000000271e-05, 8.269400000000121e-05, 8.274999999999949e-05, 8.270900000000025e-05, 8.232000000000031e-05, 8.238899999999869e-05, 8.277799999999863e-05, 8.270900000000025e-05, 8.27910000000022e-05, 8.223599999999942e-05, 8.249999999999924e-05, 8.252800000000185e-05, 8.273599999999992e-05, 8.223600000000289e-05, 8.238899999999869e-05, 8.24309999999974e-05, 8.213899999999844e-05, 8.29590000000005e-05, 8.226399999999856e-05, 8.254200000000142e-05, 8.205500000000102e-05, 8.290200000000275e-05, 8.283400000000038e-05, 8.286100000000005e-05, 8.295799999999756e-05, 8.298600000000017e-05, 8.268100000000111e-05, 8.295800000000103e-05, 8.282000000000081e-05, 8.233399999999988e-05, 8.297300000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:42:02.443" endtime="20201117 14:42:02.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.439" endtime="20201117 14:42:02.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.448" endtime="20201117 14:42:02.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.451" endtime="20201117 14:42:02.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.450" endtime="20201117 14:42:02.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.446" endtime="20201117 14:42:02.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.078" endtime="20201117 14:42:02.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.678" endtime="20201117 14:42:02.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.677" endtime="20201117 14:42:02.473"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.475" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.484" endtime="20201117 14:42:02.502"></status>
</kw>
<msg timestamp="20201117 14:42:02.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.482" endtime="20201117 14:42:02.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.504" endtime="20201117 14:42:02.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.506" endtime="20201117 14:42:02.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.479" endtime="20201117 14:42:02.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.477" endtime="20201117 14:42:02.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.516" endtime="20201117 14:42:02.813"></status>
</kw>
<msg timestamp="20201117 14:42:02.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.514" endtime="20201117 14:42:02.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.823" endtime="20201117 14:42:02.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.841" endtime="20201117 14:42:02.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.511" endtime="20201117 14:42:02.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.510" endtime="20201117 14:42:02.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.855" level="INFO">${RESULT} = [{'time': 0.023479014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.390299999999976e-05, 'source_diff': 8.390299999999976e-05}, {'time': 0.023574, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:02.848" endtime="20201117 14:42:02.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.874" level="INFO">${ACCURACY} = {'time': [0.023479014, 0.023574, 0.023670028, 0.023760042, 0.023850042, 0.023946097, 0.024039056, 0.024133125, 0.024227069, 0.024318083, 0.024409097, 0.024504111, 0.024596125, 0.024687125, 0.024780167...</msg>
<status status="PASS" starttime="20201117 14:42:02.858" endtime="20201117 14:42:02.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.879" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.878" endtime="20201117 14:42:02.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.882" level="INFO">VALUE: [8.390299999999976e-05, 8.386100000000105e-05, 8.356999999999809e-05, 8.324999999999999e-05, 8.39859999999977e-05, 8.33049999999988e-05, 8.313899999999944e-05, 8.39859999999977e-05, 8.345800000000153e-05, 8.327699999999966e-05, 8.372200000000135e-05, 8.366699999999908e-05, 8.375000000000049e-05, 8.350000000000024e-05, 8.391699999999933e-05, 8.37919999999992e-05, 8.326399999999956e-05, 8.369500000000168e-05, 8.400000000000074e-05, 8.36110000000008e-05, 8.348600000000067e-05, 8.386100000000105e-05, 8.336100000000055e-05, 8.405599999999902e-05, 8.39720000000016e-05, 8.359699999999776e-05, 8.354199999999895e-05, 8.312499999999987e-05, 8.350000000000024e-05, 8.390299999999976e-05, 8.361099999999733e-05, 8.313799999999996e-05, 8.370799999999831e-05, 8.404099999999998e-05, 8.367999999999917e-05, 8.344399999999849e-05, 8.350000000000024e-05, 8.374999999999702e-05, 8.316700000000204e-05, 8.344500000000143e-05, 8.363899999999994e-05, 8.368100000000211e-05, 8.383400000000138e-05, 8.319400000000171e-05, 8.319399999999824e-05, 8.34720000000011e-05, 8.319399999999824e-05, 8.362500000000037e-05, 8.370800000000178e-05, 8.376400000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:42:02.880" endtime="20201117 14:42:02.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.875" endtime="20201117 14:42:02.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.885" endtime="20201117 14:42:02.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.888" endtime="20201117 14:42:02.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.887" endtime="20201117 14:42:02.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.883" endtime="20201117 14:42:02.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.476" endtime="20201117 14:42:02.909"></status>
</kw>
<msg timestamp="20201117 14:42:02.910" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.918" endtime="20201117 14:42:02.936"></status>
</kw>
<msg timestamp="20201117 14:42:02.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.917" endtime="20201117 14:42:02.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.938" endtime="20201117 14:42:02.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.940" endtime="20201117 14:42:02.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.914" endtime="20201117 14:42:02.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.912" endtime="20201117 14:42:02.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.951" endtime="20201117 14:42:03.237"></status>
</kw>
<msg timestamp="20201117 14:42:03.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.949" endtime="20201117 14:42:03.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.241" endtime="20201117 14:42:03.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.249" endtime="20201117 14:42:03.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.946" endtime="20201117 14:42:03.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.945" endtime="20201117 14:42:03.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.256" level="INFO">${RESULT} = [{'time': 0.020139319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.392999999999942e-05, 'source_diff': 8.392999999999942e-05}, {'time': 0.020229333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.252" endtime="20201117 14:42:03.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.269" level="INFO">${ACCURACY} = {'time': [0.020139319, 0.020229333, 0.020322333, 0.020416333, 0.020511403, 0.020601361, 0.020693375, 0.020783375, 0.020875389, 0.020972472, 0.021064431, 0.021161417, 0.021258444, 0.021348444, 0.021439...</msg>
<status status="PASS" starttime="20201117 14:42:03.257" endtime="20201117 14:42:03.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.274" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.273" endtime="20201117 14:42:03.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.276" level="INFO">VALUE: [8.392999999999942e-05, 8.376400000000006e-05, 8.306900000000159e-05, 8.320799999999781e-05, 8.357000000000156e-05, 8.320799999999781e-05, 8.337500000000012e-05, 8.366699999999908e-05, 8.357000000000156e-05, 8.408299999999869e-05, 8.307000000000106e-05, 8.383399999999791e-05, 8.386100000000105e-05, 8.362500000000037e-05, 8.352799999999938e-05, 8.32919999999987e-05, 8.388899999999672e-05, 8.384700000000148e-05, 8.323600000000042e-05, 8.306900000000159e-05, 8.319500000000118e-05, 8.351399999999981e-05, 8.336100000000055e-05, 8.354199999999895e-05, 8.375000000000049e-05, 8.312499999999987e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.395799999999856e-05, 8.404200000000292e-05, 8.348600000000067e-05, 8.376400000000006e-05, 8.331999999999784e-05, 8.323600000000042e-05, 8.398600000000117e-05, 8.316700000000204e-05, 8.350000000000024e-05, 8.383299999999844e-05, 8.327799999999913e-05, 8.305500000000202e-05, 8.36659999999996e-05, 8.319400000000171e-05, 8.352799999999938e-05, 8.308300000000116e-05, 8.322199999999738e-05, 8.318100000000161e-05, 8.369500000000168e-05, 8.32369999999999e-05, 8.397300000000107e-05, 8.327699999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:42:03.275" endtime="20201117 14:42:03.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.270" endtime="20201117 14:42:03.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.279" endtime="20201117 14:42:03.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.283" endtime="20201117 14:42:03.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.282" endtime="20201117 14:42:03.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.278" endtime="20201117 14:42:03.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.910" endtime="20201117 14:42:03.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.474" endtime="20201117 14:42:03.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.473" endtime="20201117 14:42:03.305"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.307" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.315" endtime="20201117 14:42:03.334"></status>
</kw>
<msg timestamp="20201117 14:42:03.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.314" endtime="20201117 14:42:03.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.336" endtime="20201117 14:42:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.338" endtime="20201117 14:42:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.311" endtime="20201117 14:42:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.309" endtime="20201117 14:42:03.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.347" endtime="20201117 14:42:03.633"></status>
</kw>
<msg timestamp="20201117 14:42:03.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.346" endtime="20201117 14:42:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.637" endtime="20201117 14:42:03.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.646" endtime="20201117 14:42:03.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.343" endtime="20201117 14:42:03.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.341" endtime="20201117 14:42:03.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.652" level="INFO">${RESULT} = [{'time': 0.023175472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486099999999858e-05, 'source_diff': 8.486099999999858e-05}, {'time': 0.023267542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.649" endtime="20201117 14:42:03.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.667" level="INFO">${ACCURACY} = {'time': [0.023175472, 0.023267542, 0.023358569, 0.0234515, 0.023542514, 0.023639542, 0.023732542, 0.023830542, 0.023926569, 0.024018569, 0.024110597, 0.024202583, 0.024297611, 0.024393625, 0.02448662...</msg>
<status status="PASS" starttime="20201117 14:42:03.653" endtime="20201117 14:42:03.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.672" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.671" endtime="20201117 14:42:03.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.675" level="INFO">VALUE: [8.486099999999858e-05, 8.409799999999773e-05, 8.497199999999913e-05, 8.405599999999902e-05, 8.451400000000081e-05, 8.49859999999987e-05, 8.480599999999977e-05, 8.502800000000088e-05, 8.441600000000035e-05, 8.454100000000048e-05, 8.452800000000038e-05, 8.419399999999924e-05, 8.423600000000142e-05, 8.474999999999802e-05, 8.456900000000309e-05, 8.424999999999752e-05, 8.476400000000106e-05, 8.451399999999734e-05, 8.488899999999772e-05, 8.468100000000311e-05, 8.431899999999937e-05, 8.475000000000149e-05, 8.41110000000013e-05, 8.440300000000026e-05, 8.498600000000217e-05, 8.46530000000005e-05, 8.47920000000002e-05, 8.474999999999802e-05, 8.486100000000205e-05, 8.499999999999827e-05, 8.427800000000013e-05, 8.502800000000088e-05, 8.418000000000314e-05, 8.481899999999987e-05, 8.479100000000073e-05, 8.449999999999777e-05, 8.43049999999998e-05, 8.499999999999827e-05, 8.456999999999909e-05, 8.440300000000026e-05, 8.504200000000045e-05, 8.46530000000005e-05, 8.476399999999759e-05, 8.474999999999802e-05, 8.481899999999987e-05, 8.413900000000044e-05, 8.445799999999906e-05, 8.497199999999913e-05, 8.425000000000099e-05, 8.468099999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:42:03.673" endtime="20201117 14:42:03.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.668" endtime="20201117 14:42:03.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.678" endtime="20201117 14:42:03.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.682" endtime="20201117 14:42:03.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.680" endtime="20201117 14:42:03.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.676" endtime="20201117 14:42:03.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.308" endtime="20201117 14:42:03.702"></status>
</kw>
<msg timestamp="20201117 14:42:03.703" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.711" endtime="20201117 14:42:03.730"></status>
</kw>
<msg timestamp="20201117 14:42:03.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.709" endtime="20201117 14:42:03.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.731" endtime="20201117 14:42:03.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.734" endtime="20201117 14:42:03.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.707" endtime="20201117 14:42:03.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.705" endtime="20201117 14:42:03.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.787" endtime="20201117 14:42:04.072"></status>
</kw>
<msg timestamp="20201117 14:42:04.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019533319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.785" endtime="20201117 14:42:04.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019533319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.076" endtime="20201117 14:42:04.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.085" endtime="20201117 14:42:04.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.783" endtime="20201117 14:42:04.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.781" endtime="20201117 14:42:04.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.091" level="INFO">${RESULT} = [{'time': 0.019533319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.415200000000053e-05, 'source_diff': 8.415200000000053e-05}, {'time': 0.019629333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:04.088" endtime="20201117 14:42:04.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.105" level="INFO">${ACCURACY} = {'time': [0.019533319, 0.019629333, 0.019720333, 0.019812347, 0.019904361, 0.020002361, 0.020093375, 0.020185403, 0.020277417, 0.020374403, 0.020466472, 0.020560431, 0.020653444, 0.020748458, 0.020842...</msg>
<status status="PASS" starttime="20201117 14:42:04.092" endtime="20201117 14:42:04.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.110" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.109" endtime="20201117 14:42:04.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.112" level="INFO">VALUE: [8.415200000000053e-05, 8.493000000000042e-05, 8.426400000000056e-05, 8.470799999999931e-05, 8.455500000000005e-05, 8.476400000000106e-05, 8.49859999999987e-05, 8.473600000000192e-05, 8.481999999999934e-05, 8.431999999999884e-05, 8.497199999999913e-05, 8.463900000000094e-05, 8.459699999999876e-05, 8.436100000000155e-05, 8.458299999999919e-05, 8.433299999999894e-05, 8.41110000000013e-05, 8.431900000000284e-05, 8.412500000000087e-05, 8.502800000000088e-05, 8.409700000000173e-05, 8.413900000000044e-05, 8.425000000000099e-05, 8.490299999999729e-05, 8.438799999999774e-05, 8.438900000000069e-05, 8.462500000000137e-05, 8.417999999999967e-05, 8.426400000000056e-05, 8.420800000000228e-05, 8.491700000000033e-05, 8.406999999999859e-05, 8.425000000000099e-05, 8.472299999999836e-05, 8.449999999999777e-05, 8.46110000000018e-05, 8.438800000000121e-05, 8.497199999999913e-05, 8.492999999999695e-05, 8.409699999999826e-05, 8.420799999999881e-05, 8.49309999999999e-05, 8.494500000000293e-05, 8.412500000000087e-05, 8.423599999999795e-05, 8.4153e-05, 8.451400000000081e-05, 8.448600000000167e-05, 8.501400000000131e-05, 8.452699999999744e-05]</msg>
<status status="PASS" starttime="20201117 14:42:04.111" endtime="20201117 14:42:04.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.106" endtime="20201117 14:42:04.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.116" endtime="20201117 14:42:04.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.119" endtime="20201117 14:42:04.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.118" endtime="20201117 14:42:04.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.114" endtime="20201117 14:42:04.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.703" endtime="20201117 14:42:04.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.306" endtime="20201117 14:42:04.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.305" endtime="20201117 14:42:04.140"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.143" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.151" endtime="20201117 14:42:04.169"></status>
</kw>
<msg timestamp="20201117 14:42:04.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.150" endtime="20201117 14:42:04.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.171" endtime="20201117 14:42:04.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.173" endtime="20201117 14:42:04.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.147" endtime="20201117 14:42:04.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.145" endtime="20201117 14:42:04.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.182" endtime="20201117 14:42:04.469"></status>
</kw>
<msg timestamp="20201117 14:42:04.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.181" endtime="20201117 14:42:04.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.473" endtime="20201117 14:42:04.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.481" endtime="20201117 14:42:04.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.178" endtime="20201117 14:42:04.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.176" endtime="20201117 14:42:04.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.488" level="INFO">${RESULT} = [{'time': 0.022117181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.551399999999834e-05, 'source_diff': 8.551399999999834e-05}, {'time': 0.022210181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:04.484" endtime="20201117 14:42:04.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.502" level="INFO">${ACCURACY} = {'time': [0.022117181, 0.022210181, 0.022305194, 0.022400194, 0.022498222, 0.022597236, 0.022691236, 0.022785278, 0.022881264, 0.022973264, 0.023068319, 0.023166292, 0.023263292, 0.023355306, 0.023454...</msg>
<status status="PASS" starttime="20201117 14:42:04.489" endtime="20201117 14:42:04.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.506" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.505" endtime="20201117 14:42:04.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.509" level="INFO">VALUE: [8.551399999999834e-05, 8.555600000000052e-05, 8.518000000000067e-05, 8.505499999999708e-05, 8.573599999999945e-05, 8.57920000000012e-05, 8.52920000000007e-05, 8.56249999999989e-05, 8.559699999999976e-05, 8.586099999999958e-05, 8.56249999999989e-05, 8.508400000000263e-05, 8.519499999999972e-05, 8.568100000000065e-05, 8.601399999999884e-05, 8.51660000000011e-05, 8.533299999999994e-05, 8.556900000000062e-05, 8.524999999999852e-05, 8.538900000000169e-05, 8.590299999999829e-05, 8.5847e-05, 8.582000000000034e-05, 8.568099999999718e-05, 8.52920000000007e-05, 8.569400000000074e-05, 8.551399999999834e-05, 8.569400000000074e-05, 8.588899999999872e-05, 8.522200000000285e-05, 8.595800000000056e-05, 8.556900000000062e-05, 8.569500000000022e-05, 8.555599999999705e-05, 8.508399999999916e-05, 8.573699999999893e-05, 8.554100000000148e-05, 8.597200000000013e-05, 8.573599999999945e-05, 8.599999999999927e-05, 8.545800000000006e-05, 8.513900000000144e-05, 8.527799999999766e-05, 8.522199999999938e-05, 8.5153000000001e-05, 8.50980000000022e-05, 8.599999999999927e-05, 8.530600000000027e-05, 8.522299999999886e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201117 14:42:04.507" endtime="20201117 14:42:04.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.503" endtime="20201117 14:42:04.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.512" endtime="20201117 14:42:04.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.516" endtime="20201117 14:42:04.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.514" endtime="20201117 14:42:04.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.511" endtime="20201117 14:42:04.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.143" endtime="20201117 14:42:04.537"></status>
</kw>
<msg timestamp="20201117 14:42:04.537" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.546" endtime="20201117 14:42:04.565"></status>
</kw>
<msg timestamp="20201117 14:42:04.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.544" endtime="20201117 14:42:04.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.567" endtime="20201117 14:42:04.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.569" endtime="20201117 14:42:04.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.542" endtime="20201117 14:42:04.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.539" endtime="20201117 14:42:04.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.578" endtime="20201117 14:42:04.865"></status>
</kw>
<msg timestamp="20201117 14:42:04.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.577" endtime="20201117 14:42:04.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.870" endtime="20201117 14:42:04.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.878" endtime="20201117 14:42:04.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.574" endtime="20201117 14:42:04.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.572" endtime="20201117 14:42:04.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.885" level="INFO">${RESULT} = [{'time': 0.019687667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.557000000000009e-05, 'source_diff': 8.557000000000009e-05}, {'time': 0.019779681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:04.881" endtime="20201117 14:42:04.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.898" level="INFO">${ACCURACY} = {'time': [0.019687667, 0.019779681, 0.019876694, 0.019972694, 0.020068764, 0.020166736, 0.02026375, 0.020356736, 0.02044875, 0.020546764, 0.020643778, 0.020741806, 0.020840819, 0.020933806, 0.02102883...</msg>
<status status="PASS" starttime="20201117 14:42:04.886" endtime="20201117 14:42:04.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.903" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.902" endtime="20201117 14:42:04.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.906" level="INFO">VALUE: [8.557000000000009e-05, 8.590300000000176e-05, 8.551299999999887e-05, 8.569400000000074e-05, 8.523599999999895e-05, 8.573599999999945e-05, 8.576400000000206e-05, 8.568000000000117e-05, 8.570800000000031e-05, 8.506999999999959e-05, 8.550000000000224e-05, 8.582000000000034e-05, 8.579100000000173e-05, 8.523699999999843e-05, 8.555500000000105e-05, 8.599999999999927e-05, 8.602799999999841e-05, 8.540300000000126e-05, 8.552800000000138e-05, 8.511099999999883e-05, 8.515299999999754e-05, 8.557000000000009e-05, 8.525000000000199e-05, 8.512500000000187e-05, 8.552699999999844e-05, 8.588899999999872e-05, 8.523599999999895e-05, 8.59859999999997e-05, 8.513900000000144e-05, 8.538900000000169e-05, 8.561099999999933e-05, 8.574999999999902e-05, 8.597200000000013e-05, 8.511099999999883e-05, 8.512500000000187e-05, 8.526400000000156e-05, 8.522199999999938e-05, 8.522199999999938e-05, 8.549999999999877e-05, 8.597200000000013e-05, 8.520799999999981e-05, 8.531900000000037e-05, 8.581900000000087e-05, 8.544400000000049e-05, 8.54310000000004e-05, 8.506999999999959e-05, 8.59729999999996e-05, 8.534799999999898e-05, 8.56530000000015e-05, 8.516599999999763e-05]</msg>
<status status="PASS" starttime="20201117 14:42:04.904" endtime="20201117 14:42:04.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.899" endtime="20201117 14:42:04.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.909" endtime="20201117 14:42:04.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.912" endtime="20201117 14:42:04.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.911" endtime="20201117 14:42:04.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.907" endtime="20201117 14:42:04.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.538" endtime="20201117 14:42:04.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.142" endtime="20201117 14:42:04.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.141" endtime="20201117 14:42:04.933"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.936" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.944" endtime="20201117 14:42:04.963"></status>
</kw>
<msg timestamp="20201117 14:42:04.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.943" endtime="20201117 14:42:04.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.964" endtime="20201117 14:42:04.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.967" endtime="20201117 14:42:04.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.940" endtime="20201117 14:42:04.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.938" endtime="20201117 14:42:04.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.976" endtime="20201117 14:42:05.263"></status>
</kw>
<msg timestamp="20201117 14:42:05.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:04.974" endtime="20201117 14:42:05.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:05.267" endtime="20201117 14:42:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.275" endtime="20201117 14:42:05.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.972" endtime="20201117 14:42:05.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.970" endtime="20201117 14:42:05.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.283" level="INFO">${RESULT} = [{'time': 0.022249833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.683300000000144e-05, 'source_diff': 8.683300000000144e-05}, {'time': 0.022343833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.279" endtime="20201117 14:42:05.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.297" level="INFO">${ACCURACY} = {'time': [0.022249833, 0.022343833, 0.022437917, 0.022531875, 0.022627875, 0.022726875, 0.022818889, 0.022912931, 0.023008931, 0.023103931, 0.023197944, 0.023292944, 0.023388958, 0.023481972, 0.023576...</msg>
<status status="PASS" starttime="20201117 14:42:05.284" endtime="20201117 14:42:05.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.301" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.300" endtime="20201117 14:42:05.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.304" level="INFO">VALUE: [8.683300000000144e-05, 8.69860000000007e-05, 8.709800000000073e-05, 8.630600000000127e-05, 8.618099999999768e-05, 8.673600000000045e-05, 8.619499999999725e-05, 8.634799999999998e-05, 8.702799999999941e-05, 8.608400000000016e-05, 8.626300000000309e-05, 8.697200000000113e-05, 8.677699999999969e-05, 8.673600000000045e-05, 8.691600000000285e-05, 8.692999999999895e-05, 8.687500000000015e-05, 8.632000000000084e-05, 8.697199999999766e-05, 8.663899999999947e-05, 8.622200000000038e-05, 8.616700000000158e-05, 8.645800000000106e-05, 8.611099999999983e-05, 8.686100000000058e-05, 8.63470000000005e-05, 8.619400000000124e-05, 8.705599999999855e-05, 8.620800000000081e-05, 8.668100000000165e-05, 8.691699999999886e-05, 8.677699999999969e-05, 8.67920000000022e-05, 8.637499999999965e-05, 8.605500000000155e-05, 8.638899999999922e-05, 8.666599999999913e-05, 8.672199999999741e-05, 8.650000000000324e-05, 8.66530000000025e-05, 8.665299999999904e-05, 8.630600000000127e-05, 8.669500000000122e-05, 8.61669999999981e-05, 8.670899999999732e-05, 8.672199999999741e-05, 8.673600000000045e-05, 8.61799999999982e-05, 8.633300000000094e-05, 8.64860000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.302" endtime="20201117 14:42:05.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.298" endtime="20201117 14:42:05.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.307" endtime="20201117 14:42:05.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.310" endtime="20201117 14:42:05.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.309" endtime="20201117 14:42:05.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.305" endtime="20201117 14:42:05.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.936" endtime="20201117 14:42:05.331"></status>
</kw>
<msg timestamp="20201117 14:42:05.332" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.340" endtime="20201117 14:42:05.360"></status>
</kw>
<msg timestamp="20201117 14:42:05.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.338" endtime="20201117 14:42:05.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.361" endtime="20201117 14:42:05.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.364" endtime="20201117 14:42:05.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.336" endtime="20201117 14:42:05.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.334" endtime="20201117 14:42:05.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.373" endtime="20201117 14:42:05.659"></status>
</kw>
<msg timestamp="20201117 14:42:05.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.371" endtime="20201117 14:42:05.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.663" endtime="20201117 14:42:05.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.678" endtime="20201117 14:42:05.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.369" endtime="20201117 14:42:05.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.367" endtime="20201117 14:42:05.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.685" level="INFO">${RESULT} = [{'time': 0.020313833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695800000000156e-05, 'source_diff': 8.695800000000156e-05}, {'time': 0.020408833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.681" endtime="20201117 14:42:05.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.698" level="INFO">${ACCURACY} = {'time': [0.020313833, 0.020408833, 0.020503847, 0.020602875, 0.020697875, 0.020790903, 0.020886889, 0.020985903, 0.021078944, 0.021178944, 0.021271958, 0.021367944, 0.021465958, 0.021560972, 0.021653...</msg>
<status status="PASS" starttime="20201117 14:42:05.686" endtime="20201117 14:42:05.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.703" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.702" endtime="20201117 14:42:05.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.705" level="INFO">VALUE: [8.695800000000156e-05, 8.631900000000137e-05, 8.68189999999984e-05, 8.652799999999891e-05, 8.672200000000088e-05, 8.668099999999818e-05, 8.654199999999848e-05, 8.651399999999934e-05, 8.695799999999809e-05, 8.705500000000255e-05, 8.697200000000113e-05, 8.700000000000027e-05, 8.619400000000124e-05, 8.63470000000005e-05, 8.618000000000167e-05, 8.649999999999977e-05, 8.6847000000001e-05, 8.676300000000012e-05, 8.619499999999725e-05, 8.701399999999984e-05, 8.69730000000006e-05, 8.66530000000025e-05, 8.68189999999984e-05, 8.622200000000038e-05, 8.611099999999983e-05, 8.654199999999848e-05, 8.642999999999845e-05, 8.681900000000187e-05, 8.686099999999711e-05, 8.688899999999972e-05, 8.675000000000002e-05, 8.626299999999962e-05, 8.627700000000266e-05, 8.665199999999956e-05, 8.647200000000063e-05, 8.6847000000001e-05, 8.69860000000007e-05, 8.613900000000244e-05, 8.6153000000002e-05, 8.688899999999972e-05, 8.675000000000002e-05, 8.669499999999775e-05, 8.658400000000066e-05, 8.691700000000233e-05, 8.676399999999959e-05, 8.605500000000155e-05, 8.64860000000002e-05, 8.673600000000045e-05, 8.616700000000158e-05, 8.686100000000058e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.704" endtime="20201117 14:42:05.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.699" endtime="20201117 14:42:05.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.708" endtime="20201117 14:42:05.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.712" endtime="20201117 14:42:05.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.710" endtime="20201117 14:42:05.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.707" endtime="20201117 14:42:05.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.332" endtime="20201117 14:42:05.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.935" endtime="20201117 14:42:05.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.934" endtime="20201117 14:42:05.733"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.735" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.744" endtime="20201117 14:42:05.761"></status>
</kw>
<msg timestamp="20201117 14:42:05.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.742" endtime="20201117 14:42:05.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.763" endtime="20201117 14:42:05.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.766" endtime="20201117 14:42:05.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.739" endtime="20201117 14:42:05.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.737" endtime="20201117 14:42:05.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.775" endtime="20201117 14:42:06.062"></status>
</kw>
<msg timestamp="20201117 14:42:06.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.774" endtime="20201117 14:42:06.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.066" endtime="20201117 14:42:06.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.075" endtime="20201117 14:42:06.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.770" endtime="20201117 14:42:06.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.769" endtime="20201117 14:42:06.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.081" level="INFO">${RESULT} = [{'time': 0.022084444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.775000000000102e-05, 'source_diff': 8.775000000000102e-05}, {'time': 0.022181431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.078" endtime="20201117 14:42:06.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.095" level="INFO">${ACCURACY} = {'time': [0.022084444, 0.022181431, 0.022274444, 0.022369472, 0.022463528, 0.022564486, 0.0226585, 0.0227595, 0.022853514, 0.022950542, 0.023044528, 0.023144542, 0.023245569, 0.023342569, 0.023439583,...</msg>
<status status="PASS" starttime="20201117 14:42:06.082" endtime="20201117 14:42:06.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.099" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.098" endtime="20201117 14:42:06.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.102" level="INFO">VALUE: [8.775000000000102e-05, 8.788900000000072e-05, 8.711100000000083e-05, 8.792999999999995e-05, 8.726400000000009e-05, 8.801400000000084e-05, 8.768100000000265e-05, 8.797199999999866e-05, 8.724999999999705e-05, 8.732000000000184e-05, 8.720900000000129e-05, 8.729199999999923e-05, 8.775000000000102e-05, 8.759700000000176e-05, 8.713899999999997e-05, 8.745799999999859e-05, 8.719399999999877e-05, 8.801400000000084e-05, 8.758300000000219e-05, 8.709700000000126e-05, 8.798599999999823e-05, 8.776400000000059e-05, 8.768099999999918e-05, 8.719500000000172e-05, 8.720800000000181e-05, 8.708299999999822e-05, 8.791600000000038e-05, 8.802800000000041e-05, 8.790300000000029e-05, 8.718100000000215e-05, 8.802800000000041e-05, 8.78059999999993e-05, 8.733400000000141e-05, 8.709799999999726e-05, 8.745799999999859e-05, 8.784699999999854e-05, 8.747200000000163e-05, 8.797200000000213e-05, 8.736099999999761e-05, 8.755499999999958e-05, 8.73189999999989e-05, 8.722199999999791e-05, 8.776400000000059e-05, 8.729199999999923e-05, 8.722199999999791e-05, 8.74730000000011e-05, 8.745800000000206e-05, 8.711099999999736e-05, 8.742999999999945e-05, 8.754199999999948e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.101" endtime="20201117 14:42:06.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.096" endtime="20201117 14:42:06.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.105" endtime="20201117 14:42:06.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.109" endtime="20201117 14:42:06.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.107" endtime="20201117 14:42:06.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.104" endtime="20201117 14:42:06.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.736" endtime="20201117 14:42:06.129"></status>
</kw>
<msg timestamp="20201117 14:42:06.130" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.138" endtime="20201117 14:42:06.158"></status>
</kw>
<msg timestamp="20201117 14:42:06.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.137" endtime="20201117 14:42:06.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.159" endtime="20201117 14:42:06.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.162" endtime="20201117 14:42:06.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.134" endtime="20201117 14:42:06.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.132" endtime="20201117 14:42:06.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.171" endtime="20201117 14:42:06.458"></status>
</kw>
<msg timestamp="20201117 14:42:06.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02013025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:06.170" endtime="20201117 14:42:06.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02013025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:06.462" endtime="20201117 14:42:06.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.470" endtime="20201117 14:42:06.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.167" endtime="20201117 14:42:06.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.165" endtime="20201117 14:42:06.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.477" level="INFO">${RESULT} = [{'time': 0.020217569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.731900000000237e-05, 'source_diff': 8.731900000000237e-05}, {'time': 0.020318583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.474" endtime="20201117 14:42:06.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.491" level="INFO">${ACCURACY} = {'time': [0.020217569, 0.020318583, 0.020418653, 0.020512583, 0.020610625, 0.020709625, 0.020806694, 0.020902639, 0.020999653, 0.021095708, 0.021194667, 0.021291681, 0.021390708, 0.021484694, 0.021578...</msg>
<status status="PASS" starttime="20201117 14:42:06.478" endtime="20201117 14:42:06.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.495" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.494" endtime="20201117 14:42:06.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.498" level="INFO">VALUE: [8.731900000000237e-05, 8.804100000000051e-05, 8.736099999999761e-05, 8.765200000000056e-05, 8.759700000000176e-05, 8.78059999999993e-05, 8.765200000000056e-05, 8.713899999999997e-05, 8.741699999999936e-05, 8.787500000000115e-05, 8.790300000000029e-05, 8.718099999999868e-05, 8.797200000000213e-05, 8.709699999999779e-05, 8.766600000000013e-05, 8.798599999999823e-05, 8.791699999999986e-05, 8.788900000000072e-05, 8.781900000000287e-05, 8.747200000000163e-05, 8.788899999999725e-05, 8.790200000000081e-05, 8.74730000000011e-05, 8.804100000000051e-05, 8.766600000000013e-05, 8.715299999999954e-05, 8.795799999999909e-05, 8.802800000000041e-05, 8.745900000000154e-05, 8.795900000000204e-05, 8.727799999999966e-05, 8.802800000000041e-05, 8.743099999999893e-05, 8.793099999999943e-05, 8.708400000000116e-05, 8.752700000000044e-05, 8.751400000000034e-05, 8.774999999999755e-05, 8.788900000000072e-05, 8.750000000000077e-05, 8.759699999999829e-05, 8.784699999999854e-05, 8.781999999999887e-05, 8.750000000000077e-05, 8.752700000000044e-05, 8.766600000000013e-05, 8.78189999999994e-05, 8.71799999999992e-05, 8.769399999999927e-05, 8.743000000000292e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.496" endtime="20201117 14:42:06.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.492" endtime="20201117 14:42:06.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.501" endtime="20201117 14:42:06.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.504" endtime="20201117 14:42:06.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.503" endtime="20201117 14:42:06.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.499" endtime="20201117 14:42:06.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.130" endtime="20201117 14:42:06.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.734" endtime="20201117 14:42:06.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.733" endtime="20201117 14:42:06.526"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.528" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.537" endtime="20201117 14:42:06.556"></status>
</kw>
<msg timestamp="20201117 14:42:06.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.535" endtime="20201117 14:42:06.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.557" endtime="20201117 14:42:06.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.560" endtime="20201117 14:42:06.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.532" endtime="20201117 14:42:06.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.530" endtime="20201117 14:42:06.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.569" endtime="20201117 14:42:06.856"></status>
</kw>
<msg timestamp="20201117 14:42:06.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:06.568" endtime="20201117 14:42:06.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:06.860" endtime="20201117 14:42:06.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.868" endtime="20201117 14:42:06.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.565" endtime="20201117 14:42:06.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.563" endtime="20201117 14:42:06.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.875" level="INFO">${RESULT} = [{'time': 0.022632319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.83189999999999e-05, 'source_diff': 8.83189999999999e-05}, {'time': 0.022731333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:06.872" endtime="20201117 14:42:06.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.890" level="INFO">${ACCURACY} = {'time': [0.022632319, 0.022731333, 0.022833347, 0.022927375, 0.023026375, 0.023123375, 0.023220389, 0.023320431, 0.023418417, 0.023518431, 0.023613431, 0.023714444, 0.023814472, 0.023912472, 0.024012...</msg>
<status status="PASS" starttime="20201117 14:42:06.876" endtime="20201117 14:42:06.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.895" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.894" endtime="20201117 14:42:06.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.897" level="INFO">VALUE: [8.83189999999999e-05, 8.819399999999977e-05, 8.883299999999997e-05, 8.823599999999848e-05, 8.863900000000147e-05, 8.89860000000027e-05, 8.852800000000091e-05, 8.826399999999762e-05, 8.877800000000116e-05, 8.820899999999882e-05, 8.890300000000129e-05, 8.902700000000194e-05, 8.895800000000009e-05, 8.861099999999886e-05, 8.870799999999984e-05, 8.808299999999922e-05, 8.859699999999929e-05, 8.866600000000113e-05, 8.823600000000195e-05, 8.877800000000116e-05, 8.847299999999864e-05, 8.855500000000058e-05, 8.869400000000027e-05, 8.898599999999923e-05, 8.89999999999988e-05, 8.840300000000079e-05, 8.873599999999898e-05, 8.81250000000014e-05, 8.806999999999912e-05, 8.888900000000172e-05, 8.83059999999998e-05, 8.836099999999861e-05, 8.868100000000018e-05, 8.825000000000152e-05, 8.852799999999744e-05, 8.883299999999997e-05, 8.829200000000023e-05, 8.847299999999864e-05, 8.856999999999962e-05, 8.84860000000022e-05, 8.840300000000079e-05, 8.874999999999855e-05, 8.893100000000043e-05, 8.876299999999865e-05, 8.820799999999934e-05, 8.883299999999997e-05, 8.897199999999966e-05, 8.809699999999879e-05, 8.902799999999794e-05, 8.879200000000073e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.896" endtime="20201117 14:42:06.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.891" endtime="20201117 14:42:06.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.900" endtime="20201117 14:42:06.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.904" endtime="20201117 14:42:06.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.902" endtime="20201117 14:42:06.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.899" endtime="20201117 14:42:06.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.529" endtime="20201117 14:42:06.925"></status>
</kw>
<msg timestamp="20201117 14:42:06.925" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.934" endtime="20201117 14:42:06.953"></status>
</kw>
<msg timestamp="20201117 14:42:06.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.932" endtime="20201117 14:42:06.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.954" endtime="20201117 14:42:06.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.957" endtime="20201117 14:42:06.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.930" endtime="20201117 14:42:06.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.928" endtime="20201117 14:42:06.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.966" endtime="20201117 14:42:07.253"></status>
</kw>
<msg timestamp="20201117 14:42:07.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.964" endtime="20201117 14:42:07.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.257" endtime="20201117 14:42:07.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.265" endtime="20201117 14:42:07.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.962" endtime="20201117 14:42:07.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.960" endtime="20201117 14:42:07.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.272" level="INFO">${RESULT} = [{'time': 0.020175597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.879100000000126e-05, 'source_diff': 8.879100000000126e-05}, {'time': 0.020275611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.268" endtime="20201117 14:42:07.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.285" level="INFO">${ACCURACY} = {'time': [0.020175597, 0.020275611, 0.020376597, 0.020473611, 0.020571625, 0.020667653, 0.020768667, 0.020867694, 0.020963667, 0.021065694, 0.021161694, 0.021259708, 0.021361736, 0.021458722, 0.021556...</msg>
<status status="PASS" starttime="20201117 14:42:07.273" endtime="20201117 14:42:07.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.290" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.289" endtime="20201117 14:42:07.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.292" level="INFO">VALUE: [8.879100000000126e-05, 8.869400000000027e-05, 8.897199999999966e-05, 8.812499999999793e-05, 8.818099999999968e-05, 8.845900000000254e-05, 8.893100000000043e-05, 8.873599999999898e-05, 8.831999999999937e-05, 8.874999999999855e-05, 8.897200000000313e-05, 8.81800000000002e-05, 8.88190000000004e-05, 8.822199999999891e-05, 8.888900000000172e-05, 8.829199999999676e-05, 8.855600000000005e-05, 8.881999999999987e-05, 8.872199999999941e-05, 8.89999999999988e-05, 8.879199999999726e-05, 8.820799999999934e-05, 8.808299999999922e-05, 8.890199999999834e-05, 8.872199999999941e-05, 8.83059999999998e-05, 8.845799999999959e-05, 8.850000000000177e-05, 8.86670000000006e-05, 8.86670000000006e-05, 8.8945e-05, 8.861100000000233e-05, 8.806899999999965e-05, 8.890199999999834e-05, 8.819399999999977e-05, 8.887500000000215e-05, 8.865300000000104e-05, 8.815300000000054e-05, 8.822200000000238e-05, 8.826400000000109e-05, 8.829200000000023e-05, 8.876400000000159e-05, 8.906900000000065e-05, 8.856999999999962e-05, 8.820799999999934e-05, 8.855500000000058e-05, 8.820900000000229e-05, 8.83189999999999e-05, 8.898599999999923e-05, 8.809699999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.291" endtime="20201117 14:42:07.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.286" endtime="20201117 14:42:07.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.295" endtime="20201117 14:42:07.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.299" endtime="20201117 14:42:07.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.298" endtime="20201117 14:42:07.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.294" endtime="20201117 14:42:07.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.926" endtime="20201117 14:42:07.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.527" endtime="20201117 14:42:07.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.526" endtime="20201117 14:42:07.321"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.323" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.331" endtime="20201117 14:42:07.350"></status>
</kw>
<msg timestamp="20201117 14:42:07.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.330" endtime="20201117 14:42:07.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.352" endtime="20201117 14:42:07.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.354" endtime="20201117 14:42:07.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.327" endtime="20201117 14:42:07.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.325" endtime="20201117 14:42:07.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.363" endtime="20201117 14:42:07.650"></status>
</kw>
<msg timestamp="20201117 14:42:07.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.362" endtime="20201117 14:42:07.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.655" endtime="20201117 14:42:07.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.663" endtime="20201117 14:42:07.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.359" endtime="20201117 14:42:07.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.357" endtime="20201117 14:42:07.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.670" level="INFO">${RESULT} = [{'time': 0.022350528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.995900000000057e-05, 'source_diff': 8.995900000000057e-05}, {'time': 0.022452528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.666" endtime="20201117 14:42:07.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.683" level="INFO">${ACCURACY} = {'time': [0.022350528, 0.022452528, 0.022552556, 0.022651569, 0.022746556, 0.022845569, 0.022942583, 0.023038611, 0.023140611, 0.023238611, 0.023335625, 0.023435639, 0.023531667, 0.023628722, 0.023726...</msg>
<status status="PASS" starttime="20201117 14:42:07.671" endtime="20201117 14:42:07.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.688" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.687" endtime="20201117 14:42:07.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.690" level="INFO">VALUE: [8.995900000000057e-05, 8.94450000000005e-05, 8.923700000000243e-05, 8.911099999999936e-05, 8.918100000000068e-05, 8.909699999999979e-05, 8.931899999999743e-05, 8.924999999999905e-05, 8.951399999999887e-05, 8.959700000000029e-05, 8.927799999999819e-05, 8.945800000000059e-05, 8.972299999999989e-05, 8.91250000000024e-05, 8.952799999999844e-05, 8.968099999999771e-05, 8.995799999999762e-05, 8.984699999999707e-05, 8.994400000000152e-05, 8.983300000000097e-05, 8.954200000000148e-05, 8.961099999999986e-05, 8.927800000000166e-05, 8.984700000000054e-05, 8.94450000000005e-05, 8.923599999999948e-05, 8.952699999999897e-05, 8.93190000000009e-05, 8.96939999999978e-05, 8.990299999999882e-05, 8.91800000000012e-05, 8.955600000000105e-05, 8.952799999999844e-05, 8.955500000000158e-05, 8.915299999999807e-05, 8.993099999999796e-05, 8.945900000000007e-05, 8.988899999999925e-05, 8.936099999999961e-05, 8.954099999999854e-05, 8.909699999999979e-05, 8.938900000000222e-05, 8.983400000000044e-05, 8.940299999999832e-05, 8.941699999999789e-05, 8.94450000000005e-05, 8.993099999999796e-05, 8.970900000000032e-05, 8.951400000000234e-05, 8.956900000000115e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.689" endtime="20201117 14:42:07.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.684" endtime="20201117 14:42:07.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.694" endtime="20201117 14:42:07.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.697" endtime="20201117 14:42:07.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.696" endtime="20201117 14:42:07.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.692" endtime="20201117 14:42:07.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.324" endtime="20201117 14:42:07.718"></status>
</kw>
<msg timestamp="20201117 14:42:07.718" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.727" endtime="20201117 14:42:07.745"></status>
</kw>
<msg timestamp="20201117 14:42:07.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.725" endtime="20201117 14:42:07.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.746" endtime="20201117 14:42:07.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.749" endtime="20201117 14:42:07.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.722" endtime="20201117 14:42:07.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.720" endtime="20201117 14:42:07.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.758" endtime="20201117 14:42:08.045"></status>
</kw>
<msg timestamp="20201117 14:42:08.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.756" endtime="20201117 14:42:08.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.050" endtime="20201117 14:42:08.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.058" endtime="20201117 14:42:08.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.754" endtime="20201117 14:42:08.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.752" endtime="20201117 14:42:08.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.065" level="INFO">${RESULT} = [{'time': 0.020243667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.969500000000075e-05, 'source_diff': 8.969500000000075e-05}, {'time': 0.020346694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.061" endtime="20201117 14:42:08.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.078" level="INFO">${ACCURACY} = {'time': [0.020243667, 0.020346694, 0.020444694, 0.020544694, 0.020645722, 0.02074875, 0.020849736, 0.02094975, 0.02104675, 0.021142764, 0.021242778, 0.021339792, 0.021436806, 0.021538806, 0.021640833...</msg>
<status status="PASS" starttime="20201117 14:42:08.066" endtime="20201117 14:42:08.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.083" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.082" endtime="20201117 14:42:08.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.085" level="INFO">VALUE: [8.969500000000075e-05, 8.979099999999879e-05, 8.977699999999922e-05, 8.944399999999755e-05, 8.916599999999816e-05, 8.974999999999955e-05, 8.951400000000234e-05, 8.9638999999999e-05, 8.972200000000041e-05, 8.965300000000204e-05, 8.919500000000025e-05, 8.922299999999939e-05, 8.955599999999758e-05, 8.977800000000216e-05, 8.93190000000009e-05, 8.925000000000252e-05, 8.9332999999997e-05, 8.98199999999974e-05, 8.96939999999978e-05, 8.994499999999753e-05, 8.918100000000068e-05, 8.937499999999918e-05, 8.913900000000197e-05, 8.990300000000229e-05, 8.990199999999934e-05, 9.004099999999904e-05, 8.908299999999675e-05, 8.906899999999718e-05, 8.972200000000041e-05, 8.951399999999887e-05, 8.937500000000265e-05, 8.974999999999955e-05, 8.990199999999934e-05, 8.988899999999925e-05, 8.941600000000188e-05, 8.994399999999805e-05, 8.906899999999718e-05, 8.934700000000004e-05, 8.9638999999999e-05, 8.96939999999978e-05, 8.924999999999905e-05, 8.991700000000186e-05, 8.926399999999862e-05, 8.91389999999985e-05, 8.922299999999939e-05, 8.922300000000286e-05, 8.944399999999755e-05, 8.959700000000029e-05, 8.969400000000127e-05, 8.977799999999869e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.084" endtime="20201117 14:42:08.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.079" endtime="20201117 14:42:08.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.089" endtime="20201117 14:42:08.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.092" endtime="20201117 14:42:08.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.091" endtime="20201117 14:42:08.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.087" endtime="20201117 14:42:08.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.719" endtime="20201117 14:42:08.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.322" endtime="20201117 14:42:08.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.321" endtime="20201117 14:42:08.114"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.116" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.124" endtime="20201117 14:42:08.142"></status>
</kw>
<msg timestamp="20201117 14:42:08.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.123" endtime="20201117 14:42:08.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.144" endtime="20201117 14:42:08.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.146" endtime="20201117 14:42:08.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.120" endtime="20201117 14:42:08.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.118" endtime="20201117 14:42:08.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.156" endtime="20201117 14:42:08.442"></status>
</kw>
<msg timestamp="20201117 14:42:08.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.154" endtime="20201117 14:42:08.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.447" endtime="20201117 14:42:08.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.455" endtime="20201117 14:42:08.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.151" endtime="20201117 14:42:08.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.150" endtime="20201117 14:42:08.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.462" level="INFO">${RESULT} = [{'time': 0.022718292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.084800000000101e-05, 'source_diff': 9.084800000000101e-05}, {'time': 0.02281725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:08.458" endtime="20201117 14:42:08.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.477" level="INFO">${ACCURACY} = {'time': [0.022718292, 0.02281725, 0.022916264, 0.023018264, 0.023120292, 0.023224292, 0.023323319, 0.023425319, 0.023526333, 0.023628333, 0.023729347, 0.023827375, 0.023926417, 0.024030403, 0.0241304...</msg>
<status status="PASS" starttime="20201117 14:42:08.463" endtime="20201117 14:42:08.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.481" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.480" endtime="20201117 14:42:08.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.484" level="INFO">VALUE: [9.084800000000101e-05, 9.036100000000061e-05, 9.030599999999833e-05, 9.066699999999914e-05, 9.022300000000039e-05, 9.072300000000089e-05, 9.030499999999886e-05, 9.067999999999923e-05, 9.01519999999996e-05, 9.016600000000263e-05, 9.088900000000025e-05, 9.041700000000236e-05, 9.036099999999714e-05, 9.08199999999984e-05, 9.015300000000254e-05, 9.069500000000175e-05, 9.080500000000283e-05, 9.088900000000025e-05, 9.084699999999807e-05, 9.056900000000215e-05, 9.011100000000036e-05, 9.079099999999979e-05, 9.072200000000141e-05, 9.104199999999951e-05, 9.095900000000157e-05, 9.104199999999951e-05, 9.069499999999828e-05, 9.025000000000005e-05, 9.058300000000172e-05, 9.031899999999843e-05, 9.091599999999991e-05, 9.055500000000258e-05, 9.015300000000254e-05, 9.0639e-05, 9.080499999999936e-05, 9.087500000000068e-05, 9.009699999999732e-05, 9.025000000000005e-05, 9.077799999999969e-05, 9.058299999999825e-05, 9.079099999999979e-05, 9.097199999999819e-05, 9.081899999999893e-05, 9.095800000000209e-05, 9.029199999999876e-05, 9.015299999999907e-05, 9.004200000000198e-05, 9.054199999999901e-05, 9.034700000000104e-05, 9.083400000000144e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.482" endtime="20201117 14:42:08.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.477" endtime="20201117 14:42:08.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.487" endtime="20201117 14:42:08.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.491" endtime="20201117 14:42:08.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.489" endtime="20201117 14:42:08.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.486" endtime="20201117 14:42:08.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.117" endtime="20201117 14:42:08.511"></status>
</kw>
<msg timestamp="20201117 14:42:08.512" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.520" endtime="20201117 14:42:08.538"></status>
</kw>
<msg timestamp="20201117 14:42:08.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.519" endtime="20201117 14:42:08.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.540" endtime="20201117 14:42:08.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.542" endtime="20201117 14:42:08.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.516" endtime="20201117 14:42:08.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.514" endtime="20201117 14:42:08.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.552" endtime="20201117 14:42:08.839"></status>
</kw>
<msg timestamp="20201117 14:42:08.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.550" endtime="20201117 14:42:08.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.843" endtime="20201117 14:42:08.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.851" endtime="20201117 14:42:08.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.547" endtime="20201117 14:42:08.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.546" endtime="20201117 14:42:08.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.858" level="INFO">${RESULT} = [{'time': 0.019716931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.026399999999962e-05, 'source_diff': 9.026399999999962e-05}, {'time': 0.019820944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.855" endtime="20201117 14:42:08.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.871" level="INFO">${ACCURACY} = {'time': [0.019716931, 0.019820944, 0.019923958, 0.020025028, 0.020126014, 0.020224, 0.020327014, 0.020428028, 0.020528028, 0.020627056, 0.020728056, 0.020826083, 0.020924069, 0.021025083, 0.021126097...</msg>
<status status="PASS" starttime="20201117 14:42:08.859" endtime="20201117 14:42:08.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.876" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.875" endtime="20201117 14:42:08.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.879" level="INFO">VALUE: [9.026399999999962e-05, 9.075000000000055e-05, 9.076400000000012e-05, 9.026399999999962e-05, 9.073600000000098e-05, 9.048599999999726e-05, 9.04450000000015e-05, 9.036100000000061e-05, 9.084700000000154e-05, 9.079200000000273e-05, 9.023699999999996e-05, 9.008299999999775e-05, 9.008300000000122e-05, 9.062500000000043e-05, 9.091599999999991e-05, 9.059700000000129e-05, 9.086099999999764e-05, 9.041699999999889e-05, 9.019500000000125e-05, 9.054199999999901e-05, 9.082000000000187e-05, 9.01939999999983e-05, 9.079099999999979e-05, 9.084699999999807e-05, 9.026399999999962e-05, 9.059699999999782e-05, 9.070799999999837e-05, 9.098600000000123e-05, 9.075000000000055e-05, 9.036100000000061e-05, 9.026399999999962e-05, 9.041699999999889e-05, 9.05000000000003e-05, 9.075000000000055e-05, 9.059700000000129e-05, 9.01389999999995e-05, 9.023599999999701e-05, 9.004199999999851e-05, 9.098599999999776e-05, 9.095799999999862e-05, 9.043099999999846e-05, 9.101400000000037e-05, 9.034800000000051e-05, 9.026300000000015e-05, 9.069400000000227e-05, 9.063800000000052e-05, 9.026399999999962e-05, 9.056899999999868e-05, 9.107000000000212e-05, 9.079099999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.877" endtime="20201117 14:42:08.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.872" endtime="20201117 14:42:08.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.882" endtime="20201117 14:42:08.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.885" endtime="20201117 14:42:08.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.884" endtime="20201117 14:42:08.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.880" endtime="20201117 14:42:08.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.512" endtime="20201117 14:42:08.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.115" endtime="20201117 14:42:08.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.114" endtime="20201117 14:42:08.907"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.909" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.917" endtime="20201117 14:42:08.937"></status>
</kw>
<msg timestamp="20201117 14:42:08.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.916" endtime="20201117 14:42:08.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.938" endtime="20201117 14:42:08.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.941" endtime="20201117 14:42:08.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.913" endtime="20201117 14:42:08.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.911" endtime="20201117 14:42:08.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.950" endtime="20201117 14:42:09.236"></status>
</kw>
<msg timestamp="20201117 14:42:09.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.948" endtime="20201117 14:42:09.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.240" endtime="20201117 14:42:09.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.249" endtime="20201117 14:42:09.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.946" endtime="20201117 14:42:09.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.944" endtime="20201117 14:42:09.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.256" level="INFO">${RESULT} = [{'time': 0.022065347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.16939999999998e-05, 'source_diff': 9.16939999999998e-05}, {'time': 0.022166375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:09.252" endtime="20201117 14:42:09.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.269" level="INFO">${ACCURACY} = {'time': [0.022065347, 0.022166375, 0.022264375, 0.022367403, 0.022470389, 0.022574431, 0.022678431, 0.022781431, 0.022886458, 0.022984458, 0.023089528, 0.023188486, 0.023289528, 0.0233925, 0.02349151...</msg>
<status status="PASS" starttime="20201117 14:42:09.257" endtime="20201117 14:42:09.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.274" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.273" endtime="20201117 14:42:09.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.276" level="INFO">VALUE: [9.16939999999998e-05, 9.136099999999814e-05, 9.174999999999808e-05, 9.125000000000105e-05, 9.138900000000075e-05, 9.19589999999991e-05, 9.126400000000062e-05, 9.1639000000001e-05, 9.186099999999864e-05, 9.144399999999955e-05, 9.182000000000287e-05, 9.180500000000036e-05, 9.136100000000161e-05, 9.19719999999992e-05, 9.125000000000105e-05, 9.20000000000018e-05, 9.122199999999844e-05, 9.15000000000013e-05, 9.176400000000112e-05, 9.108300000000222e-05, 9.191600000000091e-05, 9.193000000000048e-05, 9.130599999999933e-05, 9.198599999999876e-05, 9.184699999999907e-05, 9.124999999999758e-05, 9.169499999999928e-05, 9.143099999999946e-05, 9.174999999999808e-05, 9.126400000000062e-05, 9.143099999999946e-05, 9.183300000000297e-05, 9.166700000000014e-05, 9.109699999999832e-05, 9.176400000000112e-05, 9.195799999999962e-05, 9.125000000000105e-05, 9.130599999999933e-05, 9.143100000000293e-05, 9.144499999999903e-05, 9.182000000000287e-05, 9.202800000000094e-05, 9.190299999999735e-05, 9.141699999999989e-05, 9.187499999999821e-05, 9.115300000000007e-05, 9.179200000000026e-05, 9.15000000000013e-05, 9.201400000000137e-05, 9.122300000000139e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.275" endtime="20201117 14:42:09.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.270" endtime="20201117 14:42:09.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.280" endtime="20201117 14:42:09.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.283" endtime="20201117 14:42:09.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.282" endtime="20201117 14:42:09.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.278" endtime="20201117 14:42:09.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.910" endtime="20201117 14:42:09.304"></status>
</kw>
<msg timestamp="20201117 14:42:09.304" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.313" endtime="20201117 14:42:09.332"></status>
</kw>
<msg timestamp="20201117 14:42:09.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.311" endtime="20201117 14:42:09.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.334" endtime="20201117 14:42:09.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.336" endtime="20201117 14:42:09.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.309" endtime="20201117 14:42:09.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.307" endtime="20201117 14:42:09.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.345" endtime="20201117 14:42:09.630"></status>
</kw>
<msg timestamp="20201117 14:42:09.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:09.344" endtime="20201117 14:42:09.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:09.635" endtime="20201117 14:42:09.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.643" endtime="20201117 14:42:09.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.341" endtime="20201117 14:42:09.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.339" endtime="20201117 14:42:09.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.650" level="INFO">${RESULT} = [{'time': 0.020059, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.127800000000019e-05, 'source_diff': 9.127800000000019e-05}, {'time': 0.020160014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:09.647" endtime="20201117 14:42:09.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.663" level="INFO">${ACCURACY} = {'time': [0.020059, 0.020160014, 0.020257097, 0.020356042, 0.020453042, 0.020552056, 0.020651069, 0.020754083, 0.020855097, 0.020954097, 0.021055125, 0.021155139, 0.021260153, 0.021363153, 0.021466222...</msg>
<status status="PASS" starttime="20201117 14:42:09.651" endtime="20201117 14:42:09.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.668" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.667" endtime="20201117 14:42:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.670" level="INFO">VALUE: [9.127800000000019e-05, 9.140300000000032e-05, 9.122200000000191e-05, 9.172300000000189e-05, 9.122300000000139e-05, 9.170899999999885e-05, 9.108300000000222e-05, 9.174999999999808e-05, 9.162499999999796e-05, 9.137500000000118e-05, 9.131899999999943e-05, 9.156999999999915e-05, 9.184699999999907e-05, 9.120899999999835e-05, 9.180500000000036e-05, 9.118099999999921e-05, 9.108400000000169e-05, 9.11520000000006e-05, 9.186100000000211e-05, 9.161099999999839e-05, 9.175000000000155e-05, 9.14719999999987e-05, 9.18329999999995e-05, 9.19589999999991e-05, 9.112500000000093e-05, 9.177800000000069e-05, 9.120900000000182e-05, 9.190199999999787e-05, 9.173599999999851e-05, 9.112500000000093e-05, 9.194400000000005e-05, 9.115300000000007e-05, 9.138900000000075e-05, 9.187499999999821e-05, 9.134700000000204e-05, 9.124999999999758e-05, 9.148599999999826e-05, 9.186200000000158e-05, 9.170799999999937e-05, 9.15000000000013e-05, 9.144399999999955e-05, 9.122199999999844e-05, 9.204200000000051e-05, 9.125000000000105e-05, 9.174999999999808e-05, 9.13199999999989e-05, 9.184800000000201e-05, 9.118100000000268e-05, 9.195799999999962e-05, 9.142999999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.669" endtime="20201117 14:42:09.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.664" endtime="20201117 14:42:09.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.674" endtime="20201117 14:42:09.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.677" endtime="20201117 14:42:09.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.676" endtime="20201117 14:42:09.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.672" endtime="20201117 14:42:09.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.305" endtime="20201117 14:42:09.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.908" endtime="20201117 14:42:09.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.907" endtime="20201117 14:42:09.698"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.701" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.709" endtime="20201117 14:42:09.727"></status>
</kw>
<msg timestamp="20201117 14:42:09.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.707" endtime="20201117 14:42:09.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.729" endtime="20201117 14:42:09.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.731" endtime="20201117 14:42:09.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.705" endtime="20201117 14:42:09.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.703" endtime="20201117 14:42:09.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.741" endtime="20201117 14:42:10.028"></status>
</kw>
<msg timestamp="20201117 14:42:10.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.739" endtime="20201117 14:42:10.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.032" endtime="20201117 14:42:10.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.040" endtime="20201117 14:42:10.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.736" endtime="20201117 14:42:10.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.735" endtime="20201117 14:42:10.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.047" level="INFO">${RESULT} = [{'time': 0.022482764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.254199999999754e-05, 'source_diff': 9.254199999999754e-05}, {'time': 0.022581792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.044" endtime="20201117 14:42:10.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.062" level="INFO">${ACCURACY} = {'time': [0.022482764, 0.022581792, 0.022680792, 0.022783792, 0.022883806, 0.022982819, 0.023084861, 0.023184847, 0.023290875, 0.023391861, 0.023493875, 0.023591903, 0.023692903, 0.023794931, 0.023900...</msg>
<status status="PASS" starttime="20201117 14:42:10.048" endtime="20201117 14:42:10.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.066" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.065" endtime="20201117 14:42:10.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.069" level="INFO">VALUE: [9.254199999999754e-05, 9.218100000000021e-05, 9.286100000000311e-05, 9.286099999999964e-05, 9.270899999999985e-05, 9.291600000000191e-05, 9.284700000000007e-05, 9.268000000000123e-05, 9.281899999999746e-05, 9.304200000000151e-05, 9.261099999999939e-05, 9.222199999999944e-05, 9.237500000000218e-05, 9.283399999999997e-05, 9.305500000000161e-05, 9.219499999999978e-05, 9.279100000000179e-05, 9.295800000000062e-05, 9.277799999999822e-05, 9.258300000000025e-05, 9.219499999999978e-05, 9.293100000000096e-05, 9.216699999999717e-05, 9.298599999999976e-05, 9.29590000000001e-05, 9.279199999999779e-05, 9.261099999999939e-05, 9.28330000000005e-05, 9.244400000000055e-05, 9.220799999999987e-05, 9.244400000000055e-05, 9.304200000000151e-05, 9.213799999999855e-05, 9.209699999999932e-05, 9.222299999999892e-05, 9.241699999999742e-05, 9.263899999999853e-05, 9.29720000000002e-05, 9.21520000000016e-05, 9.211100000000236e-05, 9.294400000000105e-05, 9.226399999999815e-05, 9.281899999999746e-05, 9.225000000000205e-05, 9.205600000000008e-05, 9.240299999999785e-05, 9.297300000000314e-05, 9.224999999999858e-05, 9.2333e-05, 9.294399999999758e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.067" endtime="20201117 14:42:10.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.063" endtime="20201117 14:42:10.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.072" endtime="20201117 14:42:10.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.076" endtime="20201117 14:42:10.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.074" endtime="20201117 14:42:10.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.070" endtime="20201117 14:42:10.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.701" endtime="20201117 14:42:10.096"></status>
</kw>
<msg timestamp="20201117 14:42:10.097" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.105" endtime="20201117 14:42:10.123"></status>
</kw>
<msg timestamp="20201117 14:42:10.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.103" endtime="20201117 14:42:10.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.125" endtime="20201117 14:42:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.128" endtime="20201117 14:42:10.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.101" endtime="20201117 14:42:10.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.099" endtime="20201117 14:42:10.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.137" endtime="20201117 14:42:10.423"></status>
</kw>
<msg timestamp="20201117 14:42:10.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.136" endtime="20201117 14:42:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.428" endtime="20201117 14:42:10.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.436" endtime="20201117 14:42:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.133" endtime="20201117 14:42:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.131" endtime="20201117 14:42:10.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.443" level="INFO">${RESULT} = [{'time': 0.019534972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.215300000000107e-05, 'source_diff': 9.215300000000107e-05}, {'time': 0.019634972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.439" endtime="20201117 14:42:10.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.456" level="INFO">${ACCURACY} = {'time': [0.019534972, 0.019634972, 0.019739986, 0.019842, 0.019941028, 0.020045028, 0.020147056, 0.020248056, 0.020351069, 0.020456069, 0.020561097, 0.020665111, 0.020769125, 0.020870125, 0.020972125...</msg>
<status status="PASS" starttime="20201117 14:42:10.444" endtime="20201117 14:42:10.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.461" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.460" endtime="20201117 14:42:10.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.463" level="INFO">VALUE: [9.215300000000107e-05, 9.231900000000043e-05, 9.291700000000139e-05, 9.288899999999878e-05, 9.288899999999878e-05, 9.218100000000021e-05, 9.212499999999846e-05, 9.209799999999879e-05, 9.243000000000098e-05, 9.252700000000197e-05, 9.2333e-05, 9.218000000000073e-05, 9.288899999999878e-05, 9.206900000000018e-05, 9.288900000000225e-05, 9.283399999999997e-05, 9.254200000000101e-05, 9.252800000000144e-05, 9.213899999999803e-05, 9.298599999999976e-05, 9.258300000000025e-05, 9.298599999999976e-05, 9.287499999999921e-05, 9.263899999999853e-05, 9.238900000000175e-05, 9.220899999999935e-05, 9.205600000000008e-05, 9.258399999999972e-05, 9.266700000000114e-05, 9.262499999999896e-05, 9.223599999999901e-05, 9.240300000000132e-05, 9.213899999999803e-05, 9.281999999999693e-05, 9.287499999999921e-05, 9.240299999999785e-05, 9.21390000000015e-05, 9.286100000000311e-05, 9.287499999999921e-05, 9.219499999999978e-05, 9.252700000000197e-05, 9.284700000000007e-05, 9.229100000000129e-05, 9.294400000000105e-05, 9.248599999999926e-05, 9.24719999999997e-05, 9.295799999999715e-05, 9.222199999999944e-05, 9.219499999999978e-05, 9.211199999999836e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.462" endtime="20201117 14:42:10.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.457" endtime="20201117 14:42:10.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.466" endtime="20201117 14:42:10.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.470" endtime="20201117 14:42:10.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.468" endtime="20201117 14:42:10.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.465" endtime="20201117 14:42:10.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.097" endtime="20201117 14:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.700" endtime="20201117 14:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.699" endtime="20201117 14:42:10.491"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.493" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.502" endtime="20201117 14:42:10.522"></status>
</kw>
<msg timestamp="20201117 14:42:10.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.501" endtime="20201117 14:42:10.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.523" endtime="20201117 14:42:10.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.526" endtime="20201117 14:42:10.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.498" endtime="20201117 14:42:10.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.496" endtime="20201117 14:42:10.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.535" endtime="20201117 14:42:10.822"></status>
</kw>
<msg timestamp="20201117 14:42:10.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.534" endtime="20201117 14:42:10.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.826" endtime="20201117 14:42:10.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.835" endtime="20201117 14:42:10.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.531" endtime="20201117 14:42:10.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.529" endtime="20201117 14:42:10.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.841" level="INFO">${RESULT} = [{'time': 0.022701056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.36529999999991e-05, 'source_diff': 9.36529999999991e-05}, {'time': 0.022804097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:10.838" endtime="20201117 14:42:10.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.855" level="INFO">${ACCURACY} = {'time': [0.022701056, 0.022804097, 0.022905097, 0.023007111, 0.023112125, 0.023213111, 0.023314153, 0.023414139, 0.023516167, 0.023616181, 0.023717181, 0.023822181, 0.023926264, 0.024032208, 0.024136...</msg>
<status status="PASS" starttime="20201117 14:42:10.842" endtime="20201117 14:42:10.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.859" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.858" endtime="20201117 14:42:10.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.862" level="INFO">VALUE: [9.36529999999991e-05, 9.32079999999974e-05, 9.330499999999839e-05, 9.386100000000064e-05, 9.36940000000018e-05, 9.384700000000107e-05, 9.35139999999994e-05, 9.341700000000189e-05, 9.386100000000064e-05, 9.368100000000171e-05, 9.327799999999872e-05, 9.326400000000262e-05, 9.376399999999965e-05, 9.395799999999815e-05, 9.367999999999876e-05, 9.316699999999817e-05, 9.306899999999771e-05, 9.319399999999783e-05, 9.38469999999976e-05, 9.348600000000026e-05, 9.372199999999747e-05, 9.338899999999928e-05, 9.354099999999907e-05, 9.338899999999928e-05, 9.341600000000241e-05, 9.379100000000279e-05, 9.3333000000001e-05, 9.349999999999983e-05, 9.341700000000189e-05, 9.316700000000164e-05, 9.404199999999904e-05, 9.39590000000011e-05, 9.311199999999936e-05, 9.404199999999904e-05, 9.305499999999814e-05, 9.349999999999983e-05, 9.395800000000162e-05, 9.386099999999717e-05, 9.36529999999991e-05, 9.348600000000026e-05, 9.356999999999768e-05, 9.336100000000014e-05, 9.366700000000214e-05, 9.381899999999846e-05, 9.323600000000001e-05, 9.390199999999987e-05, 9.383299999999803e-05, 9.397199999999772e-05, 9.341699999999842e-05, 9.39590000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.860" endtime="20201117 14:42:10.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.856" endtime="20201117 14:42:10.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.865" endtime="20201117 14:42:10.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.868" endtime="20201117 14:42:10.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.867" endtime="20201117 14:42:10.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.863" endtime="20201117 14:42:10.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.494" endtime="20201117 14:42:10.893"></status>
</kw>
<msg timestamp="20201117 14:42:10.894" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.902" endtime="20201117 14:42:10.920"></status>
</kw>
<msg timestamp="20201117 14:42:10.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.900" endtime="20201117 14:42:10.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.922" endtime="20201117 14:42:10.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.924" endtime="20201117 14:42:10.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.898" endtime="20201117 14:42:10.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.896" endtime="20201117 14:42:10.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.934" endtime="20201117 14:42:11.220"></status>
</kw>
<msg timestamp="20201117 14:42:11.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023858708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.932" endtime="20201117 14:42:11.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023858708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.224" endtime="20201117 14:42:11.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.233" endtime="20201117 14:42:11.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.929" endtime="20201117 14:42:11.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.927" endtime="20201117 14:42:11.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.240" level="INFO">${RESULT} = [{'time': 0.023858708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.363899999999953e-05, 'source_diff': 9.363899999999953e-05}, {'time': 0.023959708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.236" endtime="20201117 14:42:11.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.253" level="INFO">${ACCURACY} = {'time': [0.023858708, 0.023959708, 0.024064722, 0.02416775, 0.024273764, 0.024377764, 0.024480778, 0.024586792, 0.024691819, 0.024793819, 0.024898819, 0.025004833, 0.025107847, 0.025211861, 0.0253118...</msg>
<status status="PASS" starttime="20201117 14:42:11.241" endtime="20201117 14:42:11.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.257" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.256" endtime="20201117 14:42:11.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.260" level="INFO">VALUE: [9.363899999999953e-05, 9.370800000000137e-05, 9.391599999999944e-05, 9.38330000000015e-05, 9.330600000000133e-05, 9.338899999999928e-05, 9.354200000000201e-05, 9.323600000000001e-05, 9.376300000000018e-05, 9.351299999999993e-05, 9.398600000000076e-05, 9.4027e-05, 9.312499999999946e-05, 9.388899999999978e-05, 9.35139999999994e-05, 9.391699999999892e-05, 9.337499999999971e-05, 9.401300000000043e-05, 9.340300000000232e-05, 9.329099999999882e-05, 9.386100000000064e-05, 9.308299999999728e-05, 9.356899999999821e-05, 9.369399999999833e-05, 9.359700000000082e-05, 9.348600000000026e-05, 9.319500000000078e-05, 9.313899999999903e-05, 9.327799999999872e-05, 9.333400000000047e-05, 9.394400000000205e-05, 9.345800000000112e-05, 9.322200000000044e-05, 9.342999999999851e-05, 9.342999999999851e-05, 9.312499999999946e-05, 9.373600000000051e-05, 9.323600000000001e-05, 9.307000000000065e-05, 9.394500000000153e-05, 9.329100000000229e-05, 9.324999999999958e-05, 9.393000000000248e-05, 9.340199999999937e-05, 9.356899999999821e-05, 9.341700000000189e-05, 9.405599999999861e-05, 9.333400000000047e-05, 9.308400000000022e-05, 9.373600000000051e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.259" endtime="20201117 14:42:11.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.254" endtime="20201117 14:42:11.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.264" endtime="20201117 14:42:11.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.267" endtime="20201117 14:42:11.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.266" endtime="20201117 14:42:11.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.261" endtime="20201117 14:42:11.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.894" endtime="20201117 14:42:11.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.492" endtime="20201117 14:42:11.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.491" endtime="20201117 14:42:11.288"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.291" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.299" endtime="20201117 14:42:11.317"></status>
</kw>
<msg timestamp="20201117 14:42:11.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.298" endtime="20201117 14:42:11.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.319" endtime="20201117 14:42:11.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.321" endtime="20201117 14:42:11.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.295" endtime="20201117 14:42:11.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.293" endtime="20201117 14:42:11.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.330" endtime="20201117 14:42:11.617"></status>
</kw>
<msg timestamp="20201117 14:42:11.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.329" endtime="20201117 14:42:11.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.621" endtime="20201117 14:42:11.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.630" endtime="20201117 14:42:11.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.326" endtime="20201117 14:42:11.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.325" endtime="20201117 14:42:11.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.638" level="INFO">${RESULT} = [{'time': 0.022119833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.415200000000012e-05, 'source_diff': 9.415200000000012e-05}, {'time': 0.022227833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.634" endtime="20201117 14:42:11.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.652" level="INFO">${ACCURACY} = {'time': [0.022119833, 0.022227833, 0.022328875, 0.022431861, 0.022535875, 0.022640903, 0.022743903, 0.022850903, 0.022957931, 0.023064944, 0.023168944, 0.023271958, 0.023375972, 0.023479972, 0.023585...</msg>
<status status="PASS" starttime="20201117 14:42:11.639" endtime="20201117 14:42:11.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.657" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.656" endtime="20201117 14:42:11.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.660" level="INFO">VALUE: [9.415200000000012e-05, 9.501399999999743e-05, 9.454200000000301e-05, 9.459700000000182e-05, 9.479199999999979e-05, 9.425000000000058e-05, 9.437500000000071e-05, 9.408399999999775e-05, 9.426400000000015e-05, 9.429099999999982e-05, 9.465200000000062e-05, 9.459699999999835e-05, 9.462499999999749e-05, 9.459700000000182e-05, 9.497199999999872e-05, 9.472200000000194e-05, 9.493099999999949e-05, 9.411100000000089e-05, 9.405599999999861e-05, 9.462500000000096e-05, 9.420899999999788e-05, 9.500000000000133e-05, 9.430499999999939e-05, 9.500000000000133e-05, 9.491699999999992e-05, 9.45140000000004e-05, 9.444499999999856e-05, 9.481999999999893e-05, 9.466699999999967e-05, 9.456999999999868e-05, 9.466699999999967e-05, 9.467999999999976e-05, 9.442999999999951e-05, 9.442999999999951e-05, 9.480499999999989e-05, 9.462500000000096e-05, 9.431999999999843e-05, 9.504200000000004e-05, 9.408299999999828e-05, 9.447199999999822e-05, 9.477799999999675e-05, 9.491700000000339e-05, 9.437500000000071e-05, 9.442999999999951e-05, 9.419399999999883e-05, 9.45140000000004e-05, 9.420800000000187e-05, 9.422199999999797e-05, 9.436100000000114e-05, 9.455599999999911e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.658" endtime="20201117 14:42:11.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.653" endtime="20201117 14:42:11.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.663" endtime="20201117 14:42:11.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.667" endtime="20201117 14:42:11.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.665" endtime="20201117 14:42:11.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.662" endtime="20201117 14:42:11.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.291" endtime="20201117 14:42:11.688"></status>
</kw>
<msg timestamp="20201117 14:42:11.688" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.696" endtime="20201117 14:42:11.717"></status>
</kw>
<msg timestamp="20201117 14:42:11.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.695" endtime="20201117 14:42:11.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.718" endtime="20201117 14:42:11.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.721" endtime="20201117 14:42:11.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.692" endtime="20201117 14:42:11.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.690" endtime="20201117 14:42:11.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.730" endtime="20201117 14:42:12.017"></status>
</kw>
<msg timestamp="20201117 14:42:12.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.729" endtime="20201117 14:42:12.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.021" endtime="20201117 14:42:12.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.029" endtime="20201117 14:42:12.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.726" endtime="20201117 14:42:12.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.724" endtime="20201117 14:42:12.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.036" level="INFO">${RESULT} = [{'time': 0.020639125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.466699999999967e-05, 'source_diff': 9.466699999999967e-05}, {'time': 0.020747139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.033" endtime="20201117 14:42:12.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.050" level="INFO">${ACCURACY} = {'time': [0.020639125, 0.020747139, 0.020849139, 0.020955153, 0.021057153, 0.021158167, 0.021259181, 0.021363194, 0.021465208, 0.021569222, 0.021674222, 0.021776278, 0.021879264, 0.021982278, 0.022087...</msg>
<status status="PASS" starttime="20201117 14:42:12.037" endtime="20201117 14:42:12.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.054" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.053" endtime="20201117 14:42:12.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.057" level="INFO">VALUE: [9.466699999999967e-05, 9.484700000000207e-05, 9.423599999999754e-05, 9.488900000000078e-05, 9.473599999999804e-05, 9.44729999999977e-05, 9.418099999999874e-05, 9.47079999999989e-05, 9.47079999999989e-05, 9.46530000000001e-05, 9.462500000000096e-05, 9.459699999999835e-05, 9.437499999999724e-05, 9.437500000000071e-05, 9.431999999999843e-05, 9.436100000000114e-05, 9.469500000000228e-05, 9.411200000000036e-05, 9.444399999999908e-05, 9.455499999999964e-05, 9.469399999999933e-05, 9.429199999999929e-05, 9.466699999999967e-05, 9.486100000000164e-05, 9.437500000000071e-05, 9.427799999999972e-05, 9.495899999999863e-05, 9.450000000000083e-05, 9.458300000000225e-05, 9.425000000000058e-05, 9.47079999999989e-05, 9.500000000000133e-05, 9.466699999999967e-05, 9.443099999999899e-05, 9.479200000000326e-05, 9.427799999999972e-05, 9.433400000000147e-05, 9.472300000000142e-05, 9.417999999999926e-05, 9.495800000000262e-05, 9.412500000000046e-05, 9.444400000000255e-05, 9.48469999999986e-05, 9.483400000000197e-05, 9.498600000000176e-05, 9.426400000000015e-05, 9.480599999999936e-05, 9.491699999999992e-05, 9.411200000000036e-05, 9.491600000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.055" endtime="20201117 14:42:12.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.050" endtime="20201117 14:42:12.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.060" endtime="20201117 14:42:12.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.064" endtime="20201117 14:42:12.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.062" endtime="20201117 14:42:12.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.059" endtime="20201117 14:42:12.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.688" endtime="20201117 14:42:12.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.290" endtime="20201117 14:42:12.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.289" endtime="20201117 14:42:12.085"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.088" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.096" endtime="20201117 14:42:12.115"></status>
</kw>
<msg timestamp="20201117 14:42:12.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.094" endtime="20201117 14:42:12.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.116" endtime="20201117 14:42:12.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.119" endtime="20201117 14:42:12.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.092" endtime="20201117 14:42:12.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.090" endtime="20201117 14:42:12.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.128" endtime="20201117 14:42:12.414"></status>
</kw>
<msg timestamp="20201117 14:42:12.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.126" endtime="20201117 14:42:12.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.418" endtime="20201117 14:42:12.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.426" endtime="20201117 14:42:12.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.124" endtime="20201117 14:42:12.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.122" endtime="20201117 14:42:12.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.433" level="INFO">${RESULT} = [{'time': 0.022278514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.574999999999861e-05, 'source_diff': 9.574999999999861e-05}, {'time': 0.022382542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.430" endtime="20201117 14:42:12.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.447" level="INFO">${ACCURACY} = {'time': [0.022278514, 0.022382542, 0.022486528, 0.022591542, 0.022699556, 0.022807639, 0.022914597, 0.023018583, 0.023123597, 0.023227611, 0.023334639, 0.023442653, 0.023551667, 0.023653667, 0.023756...</msg>
<status status="PASS" starttime="20201117 14:42:12.434" endtime="20201117 14:42:12.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.451" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.450" endtime="20201117 14:42:12.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.454" level="INFO">VALUE: [9.574999999999861e-05, 9.511099999999842e-05, 9.537499999999824e-05, 9.588899999999831e-05, 9.543099999999999e-05, 9.573600000000251e-05, 9.519399999999983e-05, 9.524999999999811e-05, 9.586099999999917e-05, 9.529200000000029e-05, 9.552800000000097e-05, 9.581999999999993e-05, 9.576399999999818e-05, 9.574999999999861e-05, 9.569500000000328e-05, 9.523599999999854e-05, 9.509700000000232e-05, 9.529100000000082e-05, 9.515299999999713e-05, 9.581900000000046e-05, 9.566700000000067e-05, 9.555500000000064e-05, 9.569499999999981e-05, 9.594500000000006e-05, 9.588900000000178e-05, 9.522299999999845e-05, 9.536099999999867e-05, 9.531899999999996e-05, 9.518000000000026e-05, 9.593000000000101e-05, 9.524999999999811e-05, 9.604199999999757e-05, 9.575000000000208e-05, 9.584799999999907e-05, 9.530599999999986e-05, 9.574999999999861e-05, 9.558299999999978e-05, 9.526400000000115e-05, 9.576399999999818e-05, 9.580499999999742e-05, 9.508299999999928e-05, 9.558399999999925e-05, 9.53469999999991e-05, 9.547199999999922e-05, 9.519499999999931e-05, 9.504200000000004e-05, 9.554200000000054e-05, 9.594400000000058e-05, 9.590200000000187e-05, 9.591700000000092e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.452" endtime="20201117 14:42:12.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.448" endtime="20201117 14:42:12.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.458" endtime="20201117 14:42:12.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.461" endtime="20201117 14:42:12.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.459" endtime="20201117 14:42:12.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.456" endtime="20201117 14:42:12.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.088" endtime="20201117 14:42:12.482"></status>
</kw>
<msg timestamp="20201117 14:42:12.482" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.491" endtime="20201117 14:42:12.511"></status>
</kw>
<msg timestamp="20201117 14:42:12.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.489" endtime="20201117 14:42:12.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.513" endtime="20201117 14:42:12.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.515" endtime="20201117 14:42:12.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.487" endtime="20201117 14:42:12.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.484" endtime="20201117 14:42:12.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.524" endtime="20201117 14:42:12.810"></status>
</kw>
<msg timestamp="20201117 14:42:12.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:12.523" endtime="20201117 14:42:12.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:12.814" endtime="20201117 14:42:12.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.823" endtime="20201117 14:42:12.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.520" endtime="20201117 14:42:12.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.519" endtime="20201117 14:42:12.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.829" level="INFO">${RESULT} = [{'time': 0.020726139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513900000000103e-05, 'source_diff': 9.513900000000103e-05}, {'time': 0.020832139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.826" endtime="20201117 14:42:12.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.843" level="INFO">${ACCURACY} = {'time': [0.020726139, 0.020832139, 0.020937139, 0.021041153, 0.021149167, 0.021256181, 0.021365208, 0.021469208, 0.021573222, 0.021679236, 0.02178725, 0.02188925, 0.021998278, 0.022104278, 0.02220829...</msg>
<status status="PASS" starttime="20201117 14:42:12.830" endtime="20201117 14:42:12.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.848" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.847" endtime="20201117 14:42:12.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.850" level="INFO">VALUE: [9.513900000000103e-05, 9.561099999999892e-05, 9.58469999999996e-05, 9.536099999999867e-05, 9.555600000000011e-05, 9.568100000000024e-05, 9.574999999999861e-05, 9.525000000000158e-05, 9.605500000000114e-05, 9.561100000000239e-05, 9.568100000000024e-05, 9.563899999999806e-05, 9.586099999999917e-05, 9.544500000000303e-05, 9.556999999999968e-05, 9.51940000000033e-05, 9.572199999999947e-05, 9.505500000000014e-05, 9.509700000000232e-05, 9.583300000000003e-05, 9.552800000000097e-05, 9.580600000000036e-05, 9.52079999999994e-05, 9.602800000000147e-05, 9.56530000000011e-05, 9.580600000000036e-05, 9.584800000000254e-05, 9.529100000000082e-05, 9.551399999999793e-05, 9.541700000000042e-05, 9.516700000000017e-05, 9.572199999999947e-05, 9.55279999999975e-05, 9.525000000000158e-05, 9.602800000000147e-05, 9.581999999999993e-05, 9.595800000000015e-05, 9.522199999999897e-05, 9.55140000000014e-05, 9.605500000000114e-05, 9.555600000000011e-05, 9.580600000000036e-05, 9.555600000000011e-05, 9.580600000000036e-05, 9.520899999999888e-05, 9.505599999999961e-05, 9.584799999999907e-05, 9.523600000000201e-05, 9.6027000000002e-05, 9.597199999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.849" endtime="20201117 14:42:12.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.844" endtime="20201117 14:42:12.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.853" endtime="20201117 14:42:12.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.857" endtime="20201117 14:42:12.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.855" endtime="20201117 14:42:12.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.852" endtime="20201117 14:42:12.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.483" endtime="20201117 14:42:12.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.086" endtime="20201117 14:42:12.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.086" endtime="20201117 14:42:12.878"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.880" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.889" endtime="20201117 14:42:12.909"></status>
</kw>
<msg timestamp="20201117 14:42:12.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.887" endtime="20201117 14:42:12.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.911" endtime="20201117 14:42:12.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.913" endtime="20201117 14:42:12.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.885" endtime="20201117 14:42:12.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.882" endtime="20201117 14:42:12.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.922" endtime="20201117 14:42:13.209"></status>
</kw>
<msg timestamp="20201117 14:42:13.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:12.921" endtime="20201117 14:42:13.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:13.213" endtime="20201117 14:42:13.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.222" endtime="20201117 14:42:13.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.918" endtime="20201117 14:42:13.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.916" endtime="20201117 14:42:13.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.229" level="INFO">${RESULT} = [{'time': 0.023347347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.63470000000001e-05, 'source_diff': 9.63470000000001e-05}, {'time': 0.023451375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:13.225" endtime="20201117 14:42:13.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.244" level="INFO">${ACCURACY} = {'time': [0.023347347, 0.023451375, 0.023557389, 0.023660389, 0.023769403, 0.023873403, 0.023978444, 0.024087431, 0.024197444, 0.024301458, 0.024407542, 0.024513486, 0.0246195, 0.0247285, 0.024830514,...</msg>
<status status="PASS" starttime="20201117 14:42:13.230" endtime="20201117 14:42:13.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.248" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.247" endtime="20201117 14:42:13.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.251" level="INFO">VALUE: [9.63470000000001e-05, 9.649999999999936e-05, 9.683300000000103e-05, 9.623599999999954e-05, 9.663900000000253e-05, 9.668100000000124e-05, 9.659700000000035e-05, 9.624999999999911e-05, 9.702699999999953e-05, 9.669400000000133e-05, 9.66530000000021e-05, 9.690300000000235e-05, 9.638899999999881e-05, 9.626400000000215e-05, 9.62080000000004e-05, 9.655599999999764e-05, 9.613899999999856e-05, 9.648699999999927e-05, 9.636099999999967e-05, 9.665199999999916e-05, 9.640299999999838e-05, 9.619400000000083e-05, 9.656900000000121e-05, 9.61530000000016e-05, 9.625000000000258e-05, 9.627800000000172e-05, 9.604200000000104e-05, 9.65140000000024e-05, 9.698699999999977e-05, 9.672200000000047e-05, 9.61660000000017e-05, 9.662499999999949e-05, 9.704199999999857e-05, 9.619500000000031e-05, 9.666700000000167e-05, 9.637499999999924e-05, 9.695900000000063e-05, 9.657000000000068e-05, 9.699999999999986e-05, 9.68470000000006e-05, 9.658300000000078e-05, 9.665299999999863e-05, 9.624999999999911e-05, 9.654199999999807e-05, 9.67080000000009e-05, 9.669500000000081e-05, 9.704199999999857e-05, 9.612499999999899e-05, 9.652699999999903e-05, 9.693000000000201e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.249" endtime="20201117 14:42:13.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.245" endtime="20201117 14:42:13.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.254" endtime="20201117 14:42:13.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.258" endtime="20201117 14:42:13.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.256" endtime="20201117 14:42:13.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.252" endtime="20201117 14:42:13.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.881" endtime="20201117 14:42:13.278"></status>
</kw>
<msg timestamp="20201117 14:42:13.279" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.287" endtime="20201117 14:42:13.306"></status>
</kw>
<msg timestamp="20201117 14:42:13.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.285" endtime="20201117 14:42:13.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.308" endtime="20201117 14:42:13.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.310" endtime="20201117 14:42:13.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.283" endtime="20201117 14:42:13.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.281" endtime="20201117 14:42:13.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.319" endtime="20201117 14:42:13.606"></status>
</kw>
<msg timestamp="20201117 14:42:13.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.318" endtime="20201117 14:42:13.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.610" endtime="20201117 14:42:13.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.619" endtime="20201117 14:42:13.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.315" endtime="20201117 14:42:13.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.313" endtime="20201117 14:42:13.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.626" level="INFO">${RESULT} = [{'time': 0.019793722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.67080000000009e-05, 'source_diff': 9.67080000000009e-05}, {'time': 0.019899722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:13.622" endtime="20201117 14:42:13.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.639" level="INFO">${ACCURACY} = {'time': [0.019793722, 0.019899722, 0.020002736, 0.020112736, 0.02021575, 0.020322764, 0.020428778, 0.020536792, 0.020645806, 0.020754819, 0.020861833, 0.020967833, 0.021074861, 0.021183875, 0.0212898...</msg>
<status status="PASS" starttime="20201117 14:42:13.627" endtime="20201117 14:42:13.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.644" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.643" endtime="20201117 14:42:13.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.646" level="INFO">VALUE: [9.67080000000009e-05, 9.663900000000253e-05, 9.691699999999845e-05, 9.683299999999756e-05, 9.693100000000149e-05, 9.613899999999856e-05, 9.63470000000001e-05, 9.695900000000063e-05, 9.64729999999997e-05, 9.70409999999991e-05, 9.663899999999906e-05, 9.611100000000289e-05, 9.693000000000201e-05, 9.652800000000197e-05, 9.627799999999825e-05, 9.672200000000047e-05, 9.615299999999813e-05, 9.655600000000111e-05, 9.66799999999983e-05, 9.701299999999996e-05, 9.640200000000237e-05, 9.705500000000214e-05, 9.626400000000215e-05, 9.652800000000197e-05, 9.687499999999974e-05, 9.699999999999986e-05, 9.622199999999997e-05, 9.68059999999979e-05, 9.67920000000018e-05, 9.695899999999716e-05, 9.606900000000071e-05, 9.69860000000003e-05, 9.680600000000136e-05, 9.695800000000115e-05, 9.668099999999777e-05, 9.64859999999998e-05, 9.701399999999943e-05, 9.622199999999997e-05, 9.624999999999911e-05, 9.637499999999924e-05, 9.693000000000201e-05, 9.624999999999911e-05, 9.62080000000004e-05, 9.626399999999868e-05, 9.649999999999936e-05, 9.690300000000235e-05, 9.654199999999807e-05, 9.705599999999814e-05, 9.654200000000154e-05, 9.661099999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.645" endtime="20201117 14:42:13.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.640" endtime="20201117 14:42:13.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.650" endtime="20201117 14:42:13.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.653" endtime="20201117 14:42:13.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.652" endtime="20201117 14:42:13.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.648" endtime="20201117 14:42:13.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.279" endtime="20201117 14:42:13.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.879" endtime="20201117 14:42:13.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.878" endtime="20201117 14:42:13.675"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.677" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.686" endtime="20201117 14:42:13.704"></status>
</kw>
<msg timestamp="20201117 14:42:13.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.684" endtime="20201117 14:42:13.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.706" endtime="20201117 14:42:13.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.708" endtime="20201117 14:42:13.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.682" endtime="20201117 14:42:13.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.679" endtime="20201117 14:42:13.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.718" endtime="20201117 14:42:14.004"></status>
</kw>
<msg timestamp="20201117 14:42:14.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:13.716" endtime="20201117 14:42:14.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:14.008" endtime="20201117 14:42:14.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.017" endtime="20201117 14:42:14.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.713" endtime="20201117 14:42:14.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.711" endtime="20201117 14:42:14.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.024" level="INFO">${RESULT} = [{'time': 0.02240275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.765299999999963e-05, 'source_diff': 9.765299999999963e-05}, {'time': 0.02250875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:14.020" endtime="20201117 14:42:14.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.037" level="INFO">${ACCURACY} = {'time': [0.02240275, 0.02250875, 0.022615764, 0.022724778, 0.022830792, 0.022941806, 0.023045819, 0.023150847, 0.023254847, 0.023359861, 0.023466861, 0.023573875, 0.023682889, 0.023792972, 0.02390291...</msg>
<status status="PASS" starttime="20201117 14:42:14.025" endtime="20201117 14:42:14.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.042" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.041" endtime="20201117 14:42:14.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.044" level="INFO">VALUE: [9.765299999999963e-05, 9.72920000000023e-05, 9.762500000000049e-05, 9.765299999999963e-05, 9.731999999999796e-05, 9.781999999999846e-05, 9.747199999999775e-05, 9.748599999999732e-05, 9.770799999999843e-05, 9.804199999999957e-05, 9.709699999999738e-05, 9.733300000000153e-05, 9.768099999999877e-05, 9.783299999999856e-05, 9.723600000000054e-05, 9.773600000000104e-05, 9.754199999999907e-05, 9.770799999999843e-05, 9.784699999999813e-05, 9.759700000000135e-05, 9.71669999999987e-05, 9.74860000000008e-05, 9.713899999999956e-05, 9.720900000000088e-05, 9.74999999999969e-05, 9.738899999999981e-05, 9.784800000000107e-05, 9.709700000000085e-05, 9.790299999999988e-05, 9.740299999999938e-05, 9.769399999999887e-05, 9.712499999999999e-05, 9.758399999999778e-05, 9.801400000000043e-05, 9.784800000000107e-05, 9.79860000000013e-05, 9.743000000000251e-05, 9.708299999999781e-05, 9.711100000000042e-05, 9.797200000000172e-05, 9.805599999999914e-05, 9.719399999999837e-05, 9.765299999999963e-05, 9.782000000000193e-05, 9.793099999999902e-05, 9.7334000000001e-05, 9.744500000000156e-05, 9.713899999999956e-05, 9.723600000000054e-05, 9.765299999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.043" endtime="20201117 14:42:14.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.038" endtime="20201117 14:42:14.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.048" endtime="20201117 14:42:14.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.051" endtime="20201117 14:42:14.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.050" endtime="20201117 14:42:14.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.046" endtime="20201117 14:42:14.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.678" endtime="20201117 14:42:14.072"></status>
</kw>
<msg timestamp="20201117 14:42:14.072" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.080" endtime="20201117 14:42:14.100"></status>
</kw>
<msg timestamp="20201117 14:42:14.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.079" endtime="20201117 14:42:14.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.102" endtime="20201117 14:42:14.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.105" endtime="20201117 14:42:14.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.076" endtime="20201117 14:42:14.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.074" endtime="20201117 14:42:14.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.114" endtime="20201117 14:42:14.400"></status>
</kw>
<msg timestamp="20201117 14:42:14.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.112" endtime="20201117 14:42:14.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.405" endtime="20201117 14:42:14.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.413" endtime="20201117 14:42:14.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.110" endtime="20201117 14:42:14.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.108" endtime="20201117 14:42:14.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.420" level="INFO">${RESULT} = [{'time': 0.020077194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.7721999999998e-05, 'source_diff': 9.7721999999998e-05}, {'time': 0.020186208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:42:14.416" endtime="20201117 14:42:14.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.433" level="INFO">${ACCURACY} = {'time': [0.020077194, 0.020186208, 0.020297222, 0.020404236, 0.020507264, 0.020615264, 0.020722347, 0.020828292, 0.020938292, 0.021044306, 0.021148333, 0.021256347, 0.021365361, 0.021473361, 0.021581...</msg>
<status status="PASS" starttime="20201117 14:42:14.421" endtime="20201117 14:42:14.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.438" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.437" endtime="20201117 14:42:14.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.441" level="INFO">VALUE: [9.7721999999998e-05, 9.719400000000183e-05, 9.801400000000043e-05, 9.740299999999938e-05, 9.716700000000217e-05, 9.793100000000249e-05, 9.770799999999843e-05, 9.736100000000067e-05, 9.794500000000206e-05, 9.750000000000036e-05, 9.769399999999887e-05, 9.737499999999677e-05, 9.75279999999995e-05, 9.738899999999981e-05, 9.784699999999813e-05, 9.74860000000008e-05, 9.782000000000193e-05, 9.754200000000254e-05, 9.71530000000026e-05, 9.738899999999981e-05, 9.737500000000024e-05, 9.805599999999914e-05, 9.727799999999925e-05, 9.79860000000013e-05, 9.729199999999882e-05, 9.740299999999938e-05, 9.727699999999978e-05, 9.742999999999905e-05, 9.745899999999766e-05, 9.747200000000122e-05, 9.777700000000028e-05, 9.773600000000104e-05, 9.78470000000016e-05, 9.750000000000036e-05, 9.773599999999757e-05, 9.741700000000242e-05, 9.738900000000328e-05, 9.805599999999914e-05, 9.722300000000045e-05, 9.798700000000077e-05, 9.773599999999757e-05, 9.725000000000011e-05, 9.745799999999818e-05, 9.755600000000211e-05, 9.795799999999869e-05, 9.761099999999745e-05, 9.730600000000186e-05, 9.709800000000032e-05, 9.726399999999968e-05, 9.779099999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.439" endtime="20201117 14:42:14.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.434" endtime="20201117 14:42:14.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.444" endtime="20201117 14:42:14.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.447" endtime="20201117 14:42:14.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.446" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.442" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.073" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.676" endtime="20201117 14:42:14.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.675" endtime="20201117 14:42:14.469"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.471" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.481" endtime="20201117 14:42:14.499"></status>
</kw>
<msg timestamp="20201117 14:42:14.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.479" endtime="20201117 14:42:14.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.501" endtime="20201117 14:42:14.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.503" endtime="20201117 14:42:14.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.476" endtime="20201117 14:42:14.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.473" endtime="20201117 14:42:14.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.513" endtime="20201117 14:42:14.800"></status>
</kw>
<msg timestamp="20201117 14:42:14.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024214778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.511" endtime="20201117 14:42:14.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024116056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024214778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.805" endtime="20201117 14:42:14.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.813" endtime="20201117 14:42:14.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.509" endtime="20201117 14:42:14.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.507" endtime="20201117 14:42:14.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.820" level="INFO">${RESULT} = [{'time': 0.024214778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.8721999999999e-05, 'source_diff': 9.8721999999999e-05}, {'time': 0.024322792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:42:14.816" endtime="20201117 14:42:14.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.834" level="INFO">${ACCURACY} = {'time': [0.024214778, 0.024322792, 0.024426792, 0.024533806, 0.024639861, 0.024749819, 0.024859861, 0.024964847, 0.025072875, 0.025178875, 0.025287875, 0.025394903, 0.025500903, 0.025607917, 0.025715...</msg>
<status status="PASS" starttime="20201117 14:42:14.821" endtime="20201117 14:42:14.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.839" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.838" endtime="20201117 14:42:14.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.842" level="INFO">VALUE: [9.8721999999999e-05, 9.891700000000045e-05, 9.811099999999795e-05, 9.824999999999764e-05, 9.854200000000007e-05, 9.866600000000073e-05, 9.8721999999999e-05, 9.866599999999726e-05, 9.806900000000271e-05, 9.808299999999881e-05, 9.815300000000013e-05, 9.83059999999994e-05, 9.824999999999764e-05, 9.819500000000231e-05, 9.887500000000174e-05, 9.884699999999913e-05, 9.897199999999926e-05, 9.826400000000068e-05, 9.875000000000161e-05, 9.894499999999959e-05, 9.894400000000012e-05, 9.845899999999866e-05, 9.845899999999866e-05, 9.81799999999998e-05, 9.863900000000106e-05, 9.869399999999987e-05, 9.81799999999998e-05, 9.89860000000023e-05, 9.861099999999845e-05, 9.894499999999959e-05, 9.845799999999919e-05, 9.875000000000161e-05, 9.808399999999828e-05, 9.876399999999771e-05, 9.877800000000075e-05, 9.89020000000014e-05, 9.891600000000098e-05, 9.858299999999931e-05, 9.873599999999857e-05, 9.829199999999982e-05, 9.855599999999964e-05, 9.851400000000093e-05, 9.827800000000025e-05, 9.833399999999853e-05, 9.811100000000142e-05, 9.812500000000099e-05, 9.859699999999888e-05, 9.827800000000025e-05, 9.901400000000143e-05, 9.831900000000296e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.840" endtime="20201117 14:42:14.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.835" endtime="20201117 14:42:14.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.845" endtime="20201117 14:42:14.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.848" endtime="20201117 14:42:14.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.847" endtime="20201117 14:42:14.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.843" endtime="20201117 14:42:14.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.472" endtime="20201117 14:42:14.870"></status>
</kw>
<msg timestamp="20201117 14:42:14.870" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.878" endtime="20201117 14:42:14.897"></status>
</kw>
<msg timestamp="20201117 14:42:14.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.877" endtime="20201117 14:42:14.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.898" endtime="20201117 14:42:14.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.901" endtime="20201117 14:42:14.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.874" endtime="20201117 14:42:14.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.872" endtime="20201117 14:42:14.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.910" endtime="20201117 14:42:15.197"></status>
</kw>
<msg timestamp="20201117 14:42:15.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.909" endtime="20201117 14:42:15.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.201" endtime="20201117 14:42:15.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.210" endtime="20201117 14:42:15.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.906" endtime="20201117 14:42:15.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.904" endtime="20201117 14:42:15.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.217" level="INFO">${RESULT} = [{'time': 0.020378014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.845799999999919e-05, 'source_diff': 9.845799999999919e-05}, {'time': 0.020483042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:15.213" endtime="20201117 14:42:15.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.230" level="INFO">${ACCURACY} = {'time': [0.020378014, 0.020483042, 0.020589042, 0.020698056, 0.020808069, 0.020918097, 0.021022097, 0.021132125, 0.021237111, 0.021349125, 0.021457139, 0.021567167, 0.021674181, 0.021782181, 0.021893...</msg>
<status status="PASS" starttime="20201117 14:42:15.218" endtime="20201117 14:42:15.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.235" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.233" endtime="20201117 14:42:15.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.237" level="INFO">VALUE: [9.845799999999919e-05, 9.840300000000038e-05, 9.805599999999914e-05, 9.887499999999827e-05, 9.89159999999975e-05, 9.891600000000098e-05, 9.82219999999985e-05, 9.82920000000033e-05, 9.826400000000068e-05, 9.894400000000012e-05, 9.837500000000124e-05, 9.869500000000281e-05, 9.827800000000025e-05, 9.9028000000001e-05, 9.876300000000171e-05, 9.837499999999777e-05, 9.897199999999926e-05, 9.808299999999881e-05, 9.895799999999969e-05, 9.815300000000013e-05, 9.876400000000118e-05, 9.8721999999999e-05, 9.877800000000075e-05, 9.856999999999921e-05, 9.827700000000078e-05, 9.84860000000018e-05, 9.881899999999999e-05, 9.808299999999881e-05, 9.883299999999956e-05, 9.88609999999987e-05, 9.838900000000081e-05, 9.89999999999984e-05, 9.811099999999795e-05, 9.838900000000081e-05, 9.874999999999814e-05, 9.86800000000003e-05, 9.897199999999926e-05, 9.873599999999857e-05, 9.823599999999807e-05, 9.868099999999977e-05, 9.874999999999814e-05, 9.900000000000186e-05, 9.833399999999853e-05, 9.84020000000009e-05, 9.894400000000012e-05, 9.869399999999987e-05, 9.824999999999764e-05, 9.897199999999926e-05, 9.823599999999807e-05, 9.898599999999882e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.236" endtime="20201117 14:42:15.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.231" endtime="20201117 14:42:15.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.241" endtime="20201117 14:42:15.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.244" endtime="20201117 14:42:15.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.243" endtime="20201117 14:42:15.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.238" endtime="20201117 14:42:15.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.871" endtime="20201117 14:42:15.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.470" endtime="20201117 14:42:15.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.469" endtime="20201117 14:42:15.266"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.268" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.276" endtime="20201117 14:42:15.296"></status>
</kw>
<msg timestamp="20201117 14:42:15.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.275" endtime="20201117 14:42:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.297" endtime="20201117 14:42:15.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.300" endtime="20201117 14:42:15.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.272" endtime="20201117 14:42:15.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.270" endtime="20201117 14:42:15.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.309" endtime="20201117 14:42:15.595"></status>
</kw>
<msg timestamp="20201117 14:42:15.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02243825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:15.308" endtime="20201117 14:42:15.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02243825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:15.599" endtime="20201117 14:42:15.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.608" endtime="20201117 14:42:15.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.305" endtime="20201117 14:42:15.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.303" endtime="20201117 14:42:15.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.614" level="INFO">${RESULT} = [{'time': 0.02243825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.904200000000057e-05, 'source_diff': 9.904200000000057e-05}, {'time': 0.022547264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:15.611" endtime="20201117 14:42:15.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.628" level="INFO">${ACCURACY} = {'time': [0.02243825, 0.022547264, 0.02265425, 0.022766264, 0.022875292, 0.022982306, 0.023095306, 0.023203306, 0.023314319, 0.023422361, 0.023532347, 0.023638361, 0.023748375, 0.023860403, 0.02397040...</msg>
<status status="PASS" starttime="20201117 14:42:15.615" endtime="20201117 14:42:15.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.632" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.631" endtime="20201117 14:42:15.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.635" level="INFO">VALUE: [9.904200000000057e-05, 9.913900000000156e-05, 9.991700000000145e-05, 9.931999999999996e-05, 9.976399999999871e-05, 9.99869999999993e-05, 9.98060000000009e-05, 9.954200000000107e-05, 9.96800000000013e-05, 9.911099999999895e-05, 9.938899999999834e-05, 9.997200000000026e-05, 9.970799999999697e-05, 9.976399999999871e-05, 9.947199999999976e-05, 9.965299999999816e-05, 9.931999999999996e-05, 9.979200000000132e-05, 9.9722e-05, 0.00010001399999999896, 9.976399999999871e-05, 9.942999999999758e-05, 9.962499999999902e-05, 9.95419999999976e-05, 9.969500000000034e-05, 9.997299999999973e-05, 9.943100000000052e-05, 9.977800000000175e-05, 9.977700000000228e-05, 9.911099999999895e-05, 9.924999999999864e-05, 9.926399999999821e-05, 9.968100000000077e-05, 9.965300000000163e-05, 9.912500000000199e-05, 9.974999999999914e-05, 9.988900000000231e-05, 9.941700000000095e-05, 9.998599999999983e-05, 9.962499999999902e-05, 9.983300000000056e-05, 9.9722e-05, 9.973599999999957e-05, 9.918100000000027e-05, 9.925000000000211e-05, 9.968100000000077e-05, 0.00010001399999999896, 9.931999999999996e-05, 9.981899999999752e-05, 0.00010001399999999896]</msg>
<status status="PASS" starttime="20201117 14:42:15.633" endtime="20201117 14:42:15.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.629" endtime="20201117 14:42:15.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.639" endtime="20201117 14:42:15.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.642" endtime="20201117 14:42:15.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.640" endtime="20201117 14:42:15.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.637" endtime="20201117 14:42:15.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.269" endtime="20201117 14:42:15.663"></status>
</kw>
<msg timestamp="20201117 14:42:15.663" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.671" endtime="20201117 14:42:15.690"></status>
</kw>
<msg timestamp="20201117 14:42:15.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.670" endtime="20201117 14:42:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.692" endtime="20201117 14:42:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.695" endtime="20201117 14:42:15.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.667" endtime="20201117 14:42:15.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.665" endtime="20201117 14:42:15.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.704" endtime="20201117 14:42:15.991"></status>
</kw>
<msg timestamp="20201117 14:42:15.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.703" endtime="20201117 14:42:15.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.996" endtime="20201117 14:42:16.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.004" endtime="20201117 14:42:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.700" endtime="20201117 14:42:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.698" endtime="20201117 14:42:16.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.011" level="INFO">${RESULT} = [{'time': 0.019503194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.955500000000117e-05, 'source_diff': 9.955500000000117e-05}, {'time': 0.019611208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.007" endtime="20201117 14:42:16.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.024" level="INFO">${ACCURACY} = {'time': [0.019503194, 0.019611208, 0.019718222, 0.019828222, 0.019935236, 0.02004125, 0.020150264, 0.020258264, 0.020370278, 0.020476306, 0.020583306, 0.020691319, 0.020803347, 0.020912347, 0.0210183...</msg>
<status status="PASS" starttime="20201117 14:42:16.012" endtime="20201117 14:42:16.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.029" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.028" endtime="20201117 14:42:16.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.031" level="INFO">VALUE: [9.955500000000117e-05, 9.958300000000031e-05, 9.956900000000074e-05, 9.909699999999938e-05, 9.91939999999969e-05, 9.994400000000112e-05, 9.983300000000056e-05, 0.00010000000000000286, 9.924999999999864e-05, 9.94869999999988e-05, 9.945899999999966e-05, 9.955500000000117e-05, 9.980500000000142e-05, 9.929100000000135e-05, 9.990299999999841e-05, 9.929200000000082e-05, 9.911099999999895e-05, 0.00010005600000000114, 9.994500000000059e-05, 9.909699999999938e-05, 9.955599999999717e-05, 9.926299999999874e-05, 9.941600000000148e-05, 0.00010004200000000157, 9.954200000000107e-05, 9.979200000000132e-05, 9.906900000000024e-05, 9.923599999999907e-05, 9.991699999999798e-05, 9.991700000000145e-05, 9.983399999999656e-05, 9.951299999999899e-05, 9.927800000000125e-05, 9.997200000000026e-05, 9.981900000000099e-05, 9.968100000000077e-05, 9.943099999999705e-05, 9.977800000000175e-05, 9.908399999999928e-05, 9.979200000000132e-05, 9.908299999999981e-05, 9.933300000000006e-05, 9.991600000000198e-05, 9.962500000000249e-05, 9.9722e-05, 9.913900000000156e-05, 9.968100000000077e-05, 9.906999999999971e-05, 9.954200000000107e-05, 9.957000000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.030" endtime="20201117 14:42:16.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.025" endtime="20201117 14:42:16.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.039" endtime="20201117 14:42:16.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.043" endtime="20201117 14:42:16.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.041" endtime="20201117 14:42:16.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.037" endtime="20201117 14:42:16.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.664" endtime="20201117 14:42:16.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.267" endtime="20201117 14:42:16.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.266" endtime="20201117 14:42:16.064"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.067" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.075" endtime="20201117 14:42:16.096"></status>
</kw>
<msg timestamp="20201117 14:42:16.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.073" endtime="20201117 14:42:16.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.097" endtime="20201117 14:42:16.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.100" endtime="20201117 14:42:16.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.071" endtime="20201117 14:42:16.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.069" endtime="20201117 14:42:16.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.109" endtime="20201117 14:42:16.396"></status>
</kw>
<msg timestamp="20201117 14:42:16.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:16.107" endtime="20201117 14:42:16.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:16.400" endtime="20201117 14:42:16.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.408" endtime="20201117 14:42:16.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.105" endtime="20201117 14:42:16.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.103" endtime="20201117 14:42:16.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.414" level="INFO">${RESULT} = [{'time': 0.023201389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010038899999999934, 'source_diff': 0.00010038899999999934}, {'time': 0.023308403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:16.411" endtime="20201117 14:42:16.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.429" level="INFO">${ACCURACY} = {'time': [0.023201389, 0.023308403, 0.023416403, 0.023528417, 0.023642431, 0.023754458, 0.023867472, 0.023979472, 0.024092486, 0.0242055, 0.024318528, 0.024431528, 0.024544542, 0.024651542, 0.02476456...</msg>
<status status="PASS" starttime="20201117 14:42:16.415" endtime="20201117 14:42:16.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.433" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.432" endtime="20201117 14:42:16.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.436" level="INFO">VALUE: [0.00010038899999999934, 0.00010038899999999934, 0.00010097199999999779, 0.00010073600000000058, 0.00010097299999999726, 0.00010017999999999833, 0.00010094400000000212, 0.00010019400000000137, 0.00010048600000000033, 0.00010006900000000124, 0.00010098599999999736, 0.00010029200000000182, 0.00010024999999999964, 0.00010037499999999977, 0.00010023600000000008, 0.00010083300000000156, 0.00010091699999999898, 0.00010055500000000217, 0.00010095800000000169, 0.00010009700000000038, 0.0001004999999999999, 0.0001001670000000017, 0.00010088800000000037, 0.00010038899999999934, 0.00010092999999999908, 0.00010083299999999809, 0.00010095799999999822, 0.00010011099999999995, 0.00010024999999999964, 0.00010075000000000014, 0.0001010419999999991, 0.0001008610000000007, 0.00010044500000000109, 0.0001008060000000019, 0.00010011099999999995, 0.000100722000000001, 0.00010008300000000081, 0.00010072199999999754, 0.00010009700000000038, 0.00010090300000000288, 0.0001010549999999992, 0.00010037499999999977, 0.00010094500000000159, 0.00010005600000000114, 0.00010051299999999999, 0.00010063900000000306, 0.00010026399999999921, 0.00010020800000000094, 0.00010059699999999741, 0.0001001809999999978]</msg>
<status status="PASS" starttime="20201117 14:42:16.435" endtime="20201117 14:42:16.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.430" endtime="20201117 14:42:16.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.440" endtime="20201117 14:42:16.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.443" endtime="20201117 14:42:16.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.441" endtime="20201117 14:42:16.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.438" endtime="20201117 14:42:16.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.067" endtime="20201117 14:42:16.464"></status>
</kw>
<msg timestamp="20201117 14:42:16.464" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.473" endtime="20201117 14:42:16.493"></status>
</kw>
<msg timestamp="20201117 14:42:16.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.471" endtime="20201117 14:42:16.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.495" endtime="20201117 14:42:16.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.497" endtime="20201117 14:42:16.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.468" endtime="20201117 14:42:16.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.466" endtime="20201117 14:42:16.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.506" endtime="20201117 14:42:16.794"></status>
</kw>
<msg timestamp="20201117 14:42:16.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.505" endtime="20201117 14:42:16.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.798" endtime="20201117 14:42:16.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.806" endtime="20201117 14:42:16.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.502" endtime="20201117 14:42:16.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.500" endtime="20201117 14:42:16.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.813" level="INFO">${RESULT} = [{'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010070799999999797, 'source_diff': 0.00010070799999999797}, {'time': 0.019816028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:16.810" endtime="20201117 14:42:16.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.826" level="INFO">${ACCURACY} = {'time': [0.019707014, 0.019816028, 0.019925111, 0.020032125, 0.020142069, 0.020255083, 0.020366083, 0.020477125, 0.020590111, 0.020697153, 0.020806153, 0.020913153, 0.021021181, 0.021129181, 0.021238...</msg>
<status status="PASS" starttime="20201117 14:42:16.814" endtime="20201117 14:42:16.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.831" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.830" endtime="20201117 14:42:16.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.833" level="INFO">VALUE: [0.00010070799999999797, 0.0001010000000000004, 0.00010061100000000045, 0.00010070800000000144, 0.00010065199999999969, 0.0001004999999999999, 0.00010083300000000156, 0.00010065299999999916, 0.00010048600000000033, 0.00010066699999999873, 0.00010026399999999921, 0.00010012499999999952, 0.00010052799999999903, 0.00010090299999999941, 0.00010013799999999962, 0.00010047200000000076, 0.00010038899999999934, 0.00010067999999999883, 0.00010097200000000126, 0.00010043099999999805, 0.00010048600000000033, 0.00010030599999999792, 0.00010059700000000088, 0.00010005599999999767, 0.00010059700000000088, 0.0001004999999999999, 0.00010083300000000156, 0.00010067999999999883, 0.00010075000000000014, 0.00010033300000000106, 0.00010048600000000033, 0.00010004200000000157, 0.0001006809999999983, 0.00010024999999999964, 0.00010008300000000081, 0.00010065199999999969, 0.00010097199999999779, 0.00010070799999999797, 0.00010095799999999822, 0.00010082000000000146, 0.0001004999999999999, 0.00010013899999999909, 0.000100819999999998, 0.00010027699999999931, 0.00010048600000000033, 0.00010044400000000162, 0.00010024999999999964, 0.00010088899999999984, 0.00010029200000000182, 0.00010008399999999681]</msg>
<status status="PASS" starttime="20201117 14:42:16.832" endtime="20201117 14:42:16.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.827" endtime="20201117 14:42:16.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.837" endtime="20201117 14:42:16.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.840" endtime="20201117 14:42:16.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.838" endtime="20201117 14:42:16.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.835" endtime="20201117 14:42:16.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.465" endtime="20201117 14:42:16.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.065" endtime="20201117 14:42:16.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.065" endtime="20201117 14:42:16.861"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.864" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.872" endtime="20201117 14:42:16.891"></status>
</kw>
<msg timestamp="20201117 14:42:16.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.870" endtime="20201117 14:42:16.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.892" endtime="20201117 14:42:16.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.895" endtime="20201117 14:42:16.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.868" endtime="20201117 14:42:16.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.866" endtime="20201117 14:42:16.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.904" endtime="20201117 14:42:17.192"></status>
</kw>
<msg timestamp="20201117 14:42:17.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.903" endtime="20201117 14:42:17.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.196" endtime="20201117 14:42:17.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.204" endtime="20201117 14:42:17.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.900" endtime="20201117 14:42:17.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.898" endtime="20201117 14:42:17.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.211" level="INFO">${RESULT} = [{'time': 0.022011722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001016939999999994, 'source_diff': 0.0001016939999999994}, {'time': 0.022122736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:17.208" endtime="20201117 14:42:17.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.224" level="INFO">${ACCURACY} = {'time': [0.022011722, 0.022122736, 0.02223375, 0.022342764, 0.022452778, 0.022562792, 0.022674806, 0.022782819, 0.022894889, 0.023006833, 0.023121847, 0.023232861, 0.023343875, 0.023452889, 0.0235629...</msg>
<status status="PASS" starttime="20201117 14:42:17.212" endtime="20201117 14:42:17.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.229" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.228" endtime="20201117 14:42:17.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.231" level="INFO">VALUE: [0.0001016939999999994, 0.00010163900000000059, 0.00010115299999999966, 0.00010191699999999998, 0.00010176400000000071, 0.00010161100000000145, 0.00010166699999999973, 0.00010194399999999965, 0.00010193100000000302, 0.0001012220000000015, 0.00010184700000000213, 0.00010134700000000163, 0.00010188900000000084, 0.0001020000000000014, 0.00010161099999999798, 0.00010115200000000019, 0.00010198600000000183, 0.0001011939999999989, 0.00010165200000000069, 0.00010172199999999854, 0.00010123600000000108, 0.00010168100000000277, 0.00010108300000000181, 0.00010143099999999905, 0.00010127799999999978, 0.00010174999999999768, 0.00010176400000000071, 0.00010162500000000102, 0.00010115199999999672, 0.00010144399999999915, 0.00010194499999999912, 0.00010179199999999985, 0.0001020420000000001, 0.00010177800000000028, 0.0001013610000000012, 0.00010152800000000003, 0.00010194500000000259, 0.00010163800000000112, 0.00010183299999999909, 0.00010195799999999922, 0.00010176400000000071, 0.000101722000000002, 0.0001015419999999996, 0.00010188900000000084, 0.0001015419999999996, 0.00010129199999999935, 0.0001015419999999996, 0.00010144399999999915, 0.00010172199999999854, 0.00010170799999999897]</msg>
<status status="PASS" starttime="20201117 14:42:17.230" endtime="20201117 14:42:17.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.225" endtime="20201117 14:42:17.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.234" endtime="20201117 14:42:17.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.238" endtime="20201117 14:42:17.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.236" endtime="20201117 14:42:17.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.233" endtime="20201117 14:42:17.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.864" endtime="20201117 14:42:17.259"></status>
</kw>
<msg timestamp="20201117 14:42:17.259" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.268" endtime="20201117 14:42:17.287"></status>
</kw>
<msg timestamp="20201117 14:42:17.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.266" endtime="20201117 14:42:17.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.289" endtime="20201117 14:42:17.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.291" endtime="20201117 14:42:17.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.263" endtime="20201117 14:42:17.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.261" endtime="20201117 14:42:17.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.301" endtime="20201117 14:42:17.588"></status>
</kw>
<msg timestamp="20201117 14:42:17.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:17.299" endtime="20201117 14:42:17.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:17.592" endtime="20201117 14:42:17.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.600" endtime="20201117 14:42:17.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.297" endtime="20201117 14:42:17.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.295" endtime="20201117 14:42:17.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.607" level="INFO">${RESULT} = [{'time': 0.01964375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010173600000000158, 'source_diff': 0.00010173600000000158}, {'time': 0.01975475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:17.604" endtime="20201117 14:42:17.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.620" level="INFO">${ACCURACY} = {'time': [0.01964375, 0.01975475, 0.019863764, 0.019977792, 0.020086778, 0.020196806, 0.020307819, 0.020421819, 0.020534847, 0.020643847, 0.020756875, 0.020866903, 0.020977889, 0.021090903, 0.02120391...</msg>
<status status="PASS" starttime="20201117 14:42:17.608" endtime="20201117 14:42:17.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.625" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.624" endtime="20201117 14:42:17.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.627" level="INFO">VALUE: [0.00010173600000000158, 0.00010109700000000138, 0.0001016809999999993, 0.00010148600000000133, 0.00010176400000000071, 0.00010136200000000067, 0.00010142999999999958, 0.00010130499999999945, 0.00010197199999999879, 0.00010175000000000115, 0.00010173600000000158, 0.00010180599999999942, 0.00010109699999999791, 0.00010187500000000127, 0.00010162499999999755, 0.00010181899999999952, 0.00010194499999999912, 0.00010161100000000145, 0.00010145800000000219, 0.0001019160000000005, 0.00010108300000000181, 0.00010184700000000213, 0.00010122299999999751, 0.0001018749999999978, 0.00010112499999999705, 0.0001020000000000014, 0.00010111100000000095, 0.00010167999999999983, 0.00010175000000000115, 0.00010181899999999952, 0.00010194399999999965, 0.0001020420000000001, 0.00010162500000000102, 0.00010145900000000166, 0.00010179199999999985, 0.00010202700000000106, 0.00010197199999999879, 0.00010163900000000059, 0.00010148600000000133, 0.00010130499999999945, 0.0001018610000000017, 0.00010109700000000138, 0.00010129200000000282, 0.00010195899999999869, 0.00010202700000000106, 0.00010162500000000102, 0.00010148600000000133, 0.0001020139999999975, 0.00010158300000000231, 0.00010152800000000003]</msg>
<status status="PASS" starttime="20201117 14:42:17.626" endtime="20201117 14:42:17.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.621" endtime="20201117 14:42:17.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.630" endtime="20201117 14:42:17.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.634" endtime="20201117 14:42:17.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.632" endtime="20201117 14:42:17.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.629" endtime="20201117 14:42:17.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.260" endtime="20201117 14:42:17.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.862" endtime="20201117 14:42:17.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.862" endtime="20201117 14:42:17.655"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.658" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.666" endtime="20201117 14:42:17.685"></status>
</kw>
<msg timestamp="20201117 14:42:17.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.664" endtime="20201117 14:42:17.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.687" endtime="20201117 14:42:17.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.689" endtime="20201117 14:42:17.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.662" endtime="20201117 14:42:17.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.660" endtime="20201117 14:42:17.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.699" endtime="20201117 14:42:17.985"></status>
</kw>
<msg timestamp="20201117 14:42:17.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.697" endtime="20201117 14:42:17.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.989" endtime="20201117 14:42:17.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.997" endtime="20201117 14:42:17.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.695" endtime="20201117 14:42:17.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.692" endtime="20201117 14:42:18.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.004" level="INFO">${RESULT} = [{'time': 0.022224944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010279100000000138, 'source_diff': 0.00010279100000000138}, {'time': 0.022334944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.001" endtime="20201117 14:42:18.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.019" level="INFO">${ACCURACY} = {'time': [0.022224944, 0.022334944, 0.022449972, 0.022558972, 0.022669986, 0.022784, 0.022898028, 0.023011028, 0.023122042, 0.023235042, 0.023346056, 0.023456069, 0.023566139, 0.023677111, 0.023790125...</msg>
<status status="PASS" starttime="20201117 14:42:18.005" endtime="20201117 14:42:18.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.023" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.022" endtime="20201117 14:42:18.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.026" level="INFO">VALUE: [0.00010279100000000138, 0.00010255499999999723, 0.00010256900000000027, 0.00010243000000000058, 0.00010261099999999898, 0.00010248599999999886, 0.00010243100000000005, 0.00010216700000000023, 0.00010230599999999992, 0.00010213900000000109, 0.00010299999999999893, 0.00010295800000000022, 0.00010249999999999843, 0.00010226400000000122, 0.00010243100000000005, 0.00010294500000000012, 0.00010249999999999843, 0.00010291599999999804, 0.0001021939999999999, 0.00010206899999999977, 0.00010255499999999723, 0.00010281900000000052, 0.00010290299999999794, 0.00010215300000000066, 0.00010209700000000238, 0.0001020420000000001, 0.00010277800000000128, 0.0001023199999999995, 0.0001025420000000006, 0.00010294500000000012, 0.00010283300000000009, 0.00010230599999999992, 0.00010234699999999916, 0.00010256900000000027, 0.00010215300000000066, 0.00010249999999999843, 0.00010280600000000042, 0.00010243100000000005, 0.00010252800000000103, 0.00010297199999999979, 0.00010261099999999898, 0.00010245799999999972, 0.00010244400000000015, 0.00010240300000000091, 0.00010215299999999719, 0.00010226400000000122, 0.0001030000000000024, 0.0001027359999999991, 0.00010227700000000131, 0.00010258399999999931]</msg>
<status status="PASS" starttime="20201117 14:42:18.024" endtime="20201117 14:42:18.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.019" endtime="20201117 14:42:18.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.029" endtime="20201117 14:42:18.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.032" endtime="20201117 14:42:18.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.031" endtime="20201117 14:42:18.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.027" endtime="20201117 14:42:18.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.658" endtime="20201117 14:42:18.053"></status>
</kw>
<msg timestamp="20201117 14:42:18.053" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.062" endtime="20201117 14:42:18.082"></status>
</kw>
<msg timestamp="20201117 14:42:18.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.060" endtime="20201117 14:42:18.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.084" endtime="20201117 14:42:18.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.087" endtime="20201117 14:42:18.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.057" endtime="20201117 14:42:18.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.055" endtime="20201117 14:42:18.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.096" endtime="20201117 14:42:18.383"></status>
</kw>
<msg timestamp="20201117 14:42:18.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.094" endtime="20201117 14:42:18.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.387" endtime="20201117 14:42:18.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.395" endtime="20201117 14:42:18.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.092" endtime="20201117 14:42:18.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.090" endtime="20201117 14:42:18.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.402" level="INFO">${RESULT} = [{'time': 0.020337736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010276399999999825, 'source_diff': 0.00010276399999999825}, {'time': 0.020446722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.399" endtime="20201117 14:42:18.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.415" level="INFO">${ACCURACY} = {'time': [0.020337736, 0.020446722, 0.020559736, 0.020673764, 0.020788778, 0.020903792, 0.021015792, 0.021126806, 0.021237833, 0.021349819, 0.021460833, 0.021572861, 0.021685861, 0.021799889, 0.021911...</msg>
<status status="PASS" starttime="20201117 14:42:18.403" endtime="20201117 14:42:18.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.420" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.419" endtime="20201117 14:42:18.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.422" level="INFO">VALUE: [0.00010276399999999825, 0.00010270799999999997, 0.00010270799999999997, 0.0001026810000000003, 0.00010223600000000208, 0.0001023480000000021, 0.0001023199999999995, 0.00010297300000000273, 0.00010283300000000009, 0.00010276299999999877, 0.0001030139999999985, 0.00010241699999999701, 0.00010238900000000134, 0.00010290299999999794, 0.00010284699999999966, 0.00010215300000000066, 0.00010259799999999888, 0.00010202800000000053, 0.00010288899999999837, 0.0001025550000000007, 0.00010298599999999936, 0.00010218000000000033, 0.00010226399999999775, 0.00010243100000000005, 0.00010208299999999934, 0.00010219499999999937, 0.00010265299999999769, 0.00010273600000000258, 0.0001022359999999986, 0.00010262500000000202, 0.00010247199999999929, 0.00010304099999999816, 0.0001021939999999999, 0.000102513999999998, 0.0001021809999999998, 0.00010213900000000109, 0.0001026810000000003, 0.00010254100000000113, 0.00010216600000000076, 0.00010215300000000066, 0.00010275000000000215, 0.0001028749999999988, 0.0001027359999999991, 0.00010263899999999812, 0.00010273600000000258, 0.00010270899999999944, 0.00010283399999999956, 0.00010229100000000088, 0.00010251300000000199, 0.00010222199999999904]</msg>
<status status="PASS" starttime="20201117 14:42:18.421" endtime="20201117 14:42:18.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.416" endtime="20201117 14:42:18.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.426" endtime="20201117 14:42:18.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.429" endtime="20201117 14:42:18.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.427" endtime="20201117 14:42:18.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.424" endtime="20201117 14:42:18.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.054" endtime="20201117 14:42:18.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.656" endtime="20201117 14:42:18.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.656" endtime="20201117 14:42:18.450"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.453" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.462" endtime="20201117 14:42:18.480"></status>
</kw>
<msg timestamp="20201117 14:42:18.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.460" endtime="20201117 14:42:18.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.482" endtime="20201117 14:42:18.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.484" endtime="20201117 14:42:18.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.457" endtime="20201117 14:42:18.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.455" endtime="20201117 14:42:18.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.493" endtime="20201117 14:42:18.780"></status>
</kw>
<msg timestamp="20201117 14:42:18.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.492" endtime="20201117 14:42:18.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.784" endtime="20201117 14:42:18.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.792" endtime="20201117 14:42:18.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.489" endtime="20201117 14:42:18.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.488" endtime="20201117 14:42:18.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.799" level="INFO">${RESULT} = [{'time': 0.022658944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010333300000000059, 'source_diff': 0.00010333300000000059}, {'time': 0.022769958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.796" endtime="20201117 14:42:18.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.812" level="INFO">${ACCURACY} = {'time': [0.022658944, 0.022769958, 0.022880958, 0.022992972, 0.023108056, 0.023220014, 0.023329042, 0.023438014, 0.023549028, 0.023665069, 0.023780056, 0.023891069, 0.024002125, 0.024117111, 0.024229...</msg>
<status status="PASS" starttime="20201117 14:42:18.800" endtime="20201117 14:42:18.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.817" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.816" endtime="20201117 14:42:18.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.819" level="INFO">VALUE: [0.00010333300000000059, 0.00010370800000000097, 0.00010399999999999993, 0.00010329100000000188, 0.00010334799999999963, 0.0001040139999999995, 0.0001031810000000008, 0.00010320800000000047, 0.00010347200000000029, 0.00010397200000000079, 0.00010343100000000105, 0.00010374999999999968, 0.0001040689999999983, 0.00010318000000000133, 0.00010348599999999986, 0.00010345800000000072, 0.00010345800000000072, 0.00010340300000000191, 0.00010308399999999981, 0.00010308399999999981, 0.00010327699999999884, 0.00010311099999999948, 0.00010315199999999872, 0.00010374999999999968, 0.0001036940000000014, 0.0001036810000000013, 0.00010329200000000135, 0.00010322200000000004, 0.00010363899999999912, 0.00010308300000000034, 0.00010399999999999993, 0.00010386100000000023, 0.00010330500000000145, 0.00010345800000000072, 0.0001032359999999996, 0.00010390299999999894, 0.00010325000000000265, 0.00010363899999999912, 0.00010376400000000272, 0.00010398699999999983, 0.00010327699999999884, 0.00010354099999999866, 0.0001035420000000016, 0.00010386100000000023, 0.0001032359999999996, 0.00010391699999999851, 0.00010404199999999864, 0.00010320899999999994, 0.00010354099999999866, 0.000103416000000002]</msg>
<status status="PASS" starttime="20201117 14:42:18.818" endtime="20201117 14:42:18.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.813" endtime="20201117 14:42:18.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.823" endtime="20201117 14:42:18.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.826" endtime="20201117 14:42:18.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.825" endtime="20201117 14:42:18.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.821" endtime="20201117 14:42:18.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.453" endtime="20201117 14:42:18.847"></status>
</kw>
<msg timestamp="20201117 14:42:18.848" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.856" endtime="20201117 14:42:18.877"></status>
</kw>
<msg timestamp="20201117 14:42:18.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.854" endtime="20201117 14:42:18.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.878" endtime="20201117 14:42:18.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.881" endtime="20201117 14:42:18.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.852" endtime="20201117 14:42:18.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.850" endtime="20201117 14:42:18.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.890" endtime="20201117 14:42:19.176"></status>
</kw>
<msg timestamp="20201117 14:42:19.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.888" endtime="20201117 14:42:19.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.180" endtime="20201117 14:42:19.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.188" endtime="20201117 14:42:19.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.886" endtime="20201117 14:42:19.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.884" endtime="20201117 14:42:19.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.195" level="INFO">${RESULT} = [{'time': 0.020555208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010305499999999773, 'source_diff': 0.00010305499999999773}, {'time': 0.020666222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:19.192" endtime="20201117 14:42:19.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.208" level="INFO">${ACCURACY} = {'time': [0.020555208, 0.020666222, 0.020780236, 0.02089725, 0.021011278, 0.021121278, 0.021236292, 0.021352306, 0.021467306, 0.021579319, 0.021695333, 0.021805417, 0.021919361, 0.022034389, 0.0221453...</msg>
<status status="PASS" starttime="20201117 14:42:19.196" endtime="20201117 14:42:19.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.213" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.212" endtime="20201117 14:42:19.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.215" level="INFO">VALUE: [0.00010305499999999773, 0.00010308300000000034, 0.00010363899999999912, 0.00010384700000000066, 0.00010341700000000148, 0.00010322200000000004, 0.00010322299999999951, 0.00010397300000000026, 0.00010347299999999976, 0.00010355499999999823, 0.00010306900000000077, 0.0001037360000000001, 0.00010390299999999894, 0.0001038749999999998, 0.00010369500000000087, 0.00010394500000000112, 0.00010313900000000209, 0.00010376399999999925, 0.00010383299999999762, 0.00010392999999999861, 0.00010318000000000133, 0.0001035689999999978, 0.00010366700000000173, 0.00010401400000000297, 0.00010319500000000037, 0.00010311099999999948, 0.00010316699999999776, 0.00010372300000000001, 0.00010315200000000219, 0.00010395800000000122, 0.00010356900000000127, 0.0001035550000000017, 0.00010322200000000004, 0.00010404199999999864, 0.0001032359999999996, 0.00010365299999999869, 0.00010333300000000059, 0.00010370800000000097, 0.00010326300000000274, 0.00010342999999999811, 0.00010394400000000165, 0.00010318099999999733, 0.00010401400000000297, 0.00010380600000000142, 0.00010334700000000016, 0.0001039870000000033, 0.00010356900000000127, 0.00010401300000000002, 0.0001038749999999998, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201117 14:42:19.214" endtime="20201117 14:42:19.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.209" endtime="20201117 14:42:19.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.219" endtime="20201117 14:42:19.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.222" endtime="20201117 14:42:19.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.221" endtime="20201117 14:42:19.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.217" endtime="20201117 14:42:19.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.848" endtime="20201117 14:42:19.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.452" endtime="20201117 14:42:19.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.451" endtime="20201117 14:42:19.244"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.246" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.255" endtime="20201117 14:42:19.274"></status>
</kw>
<msg timestamp="20201117 14:42:19.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.253" endtime="20201117 14:42:19.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.276" endtime="20201117 14:42:19.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.278" endtime="20201117 14:42:19.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.251" endtime="20201117 14:42:19.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.248" endtime="20201117 14:42:19.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.287" endtime="20201117 14:42:19.574"></status>
</kw>
<msg timestamp="20201117 14:42:19.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.286" endtime="20201117 14:42:19.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.579" endtime="20201117 14:42:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.587" endtime="20201117 14:42:19.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.283" endtime="20201117 14:42:19.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.281" endtime="20201117 14:42:19.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.593" level="INFO">${RESULT} = [{'time': 0.022557889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010462500000000055, 'source_diff': 0.00010462500000000055}, {'time': 0.022675917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:19.590" endtime="20201117 14:42:19.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.608" level="INFO">${ACCURACY} = {'time': [0.022557889, 0.022675917, 0.022791917, 0.022903944, 0.023020944, 0.023134958, 0.023250972, 0.023365, 0.02348, 0.023595014, 0.023709028, 0.023825042, 0.023935056, 0.024053097, 0.024165069, 0....</msg>
<status status="PASS" starttime="20201117 14:42:19.594" endtime="20201117 14:42:19.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.613" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.611" endtime="20201117 14:42:19.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.615" level="INFO">VALUE: [0.00010462500000000055, 0.00010479199999999939, 0.00010416699999999876, 0.00010425000000000018, 0.00010476300000000077, 0.00010438899999999987, 0.00010462500000000055, 0.0001041940000000019, 0.00010483300000000209, 0.00010484700000000166, 0.00010490299999999994, 0.00010472300000000101, 0.00010416699999999876, 0.00010504100000000016, 0.00010502700000000059, 0.00010481900000000252, 0.00010409700000000091, 0.00010475000000000068, 0.00010495800000000222, 0.00010461100000000098, 0.00010444500000000162, 0.000104820000000002, 0.00010416599999999929, 0.00010447200000000129, 0.00010436100000000073, 0.00010481900000000252, 0.0001040550000000022, 0.00010477799999999982, 0.00010484800000000113, 0.0001043200000000015, 0.00010497300000000126, 0.00010466699999999926, 0.00010484699999999819, 0.00010467999999999936, 0.00010498600000000136, 0.00010415299999999919, 0.00010480499999999948, 0.00010477799999999982, 0.0001043750000000003, 0.00010429199999999889, 0.000104514, 0.00010502800000000007, 0.00010501299999999755, 0.00010473599999999764, 0.00010444400000000215, 0.00010450000000000043, 0.00010476400000000025, 0.00010484700000000166, 0.00010406999999999778, 0.00010495899999999822]</msg>
<status status="PASS" starttime="20201117 14:42:19.614" endtime="20201117 14:42:19.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.609" endtime="20201117 14:42:19.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.619" endtime="20201117 14:42:19.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.622" endtime="20201117 14:42:19.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.621" endtime="20201117 14:42:19.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.617" endtime="20201117 14:42:19.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.247" endtime="20201117 14:42:19.643"></status>
</kw>
<msg timestamp="20201117 14:42:19.643" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.652" endtime="20201117 14:42:19.672"></status>
</kw>
<msg timestamp="20201117 14:42:19.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.650" endtime="20201117 14:42:19.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.673" endtime="20201117 14:42:19.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.676" endtime="20201117 14:42:19.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.647" endtime="20201117 14:42:19.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.645" endtime="20201117 14:42:19.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.685" endtime="20201117 14:42:19.972"></status>
</kw>
<msg timestamp="20201117 14:42:19.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:19.683" endtime="20201117 14:42:19.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:19.976" endtime="20201117 14:42:19.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.984" endtime="20201117 14:42:19.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.681" endtime="20201117 14:42:19.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.679" endtime="20201117 14:42:19.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.991" level="INFO">${RESULT} = [{'time': 0.0205105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010476400000000025, 'source_diff': 0.00010476400000000025}, {'time': 0.020625514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.988" endtime="20201117 14:42:19.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.004" level="INFO">${ACCURACY} = {'time': [0.0205105, 0.020625514, 0.020741514, 0.020857528, 0.020971556, 0.021085556, 0.021197569, 0.021309583, 0.021425625, 0.021541611, 0.021659625, 0.021773639, 0.021891653, 0.022007667, 0.02212369...</msg>
<status status="PASS" starttime="20201117 14:42:19.992" endtime="20201117 14:42:20.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.009" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.008" endtime="20201117 14:42:20.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.012" level="INFO">VALUE: [0.00010476400000000025, 0.00010461100000000098, 0.0001046949999999984, 0.0001041810000000018, 0.0001048339999999981, 0.0001040559999999982, 0.00010495799999999875, 0.00010469399999999893, 0.00010475000000000068, 0.00010497199999999832, 0.00010484699999999819, 0.00010440299999999944, 0.00010500000000000093, 0.00010420900000000094, 0.00010469399999999893, 0.0001045420000000026, 0.00010461100000000098, 0.00010481899999999905, 0.00010445799999999825, 0.00010445800000000172, 0.00010456999999999828, 0.00010497199999999832, 0.00010501399999999703, 0.00010419500000000137, 0.00010465200000000022, 0.00010495799999999875, 0.00010415299999999919, 0.00010415299999999919, 0.00010458299999999837, 0.00010473599999999764, 0.0001046810000000023, 0.0001046949999999984, 0.00010427699999999984, 0.00010483400000000156, 0.00010422300000000051, 0.0001040689999999983, 0.00010445799999999825, 0.00010448600000000086, 0.00010475000000000068, 0.00010507000000000224, 0.00010445900000000119, 0.0001043339999999976, 0.00010405600000000167, 0.00010433400000000106, 0.00010484700000000166, 0.00010481899999999905, 0.00010462499999999708, 0.00010452799999999957, 0.00010431899999999855, 0.0001050140000000005]</msg>
<status status="PASS" starttime="20201117 14:42:20.011" endtime="20201117 14:42:20.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.006" endtime="20201117 14:42:20.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.015" endtime="20201117 14:42:20.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.018" endtime="20201117 14:42:20.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.017" endtime="20201117 14:42:20.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.013" endtime="20201117 14:42:20.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.644" endtime="20201117 14:42:20.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.245" endtime="20201117 14:42:20.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.244" endtime="20201117 14:42:20.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.907" endtime="20201117 14:42:20.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.044" endtime="20201117 14:42:20.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.043" endtime="20201117 14:42:20.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.041" endtime="20201117 14:42:20.065"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:57.802" endtime="20201117 14:42:20.065" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.073" endtime="20201117 14:42:20.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.071" endtime="20201117 14:42:20.093"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.106" endtime="20201117 14:42:23.129"></status>
</kw>
<msg timestamp="20201117 14:42:23.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.105" endtime="20201117 14:42:23.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.132" endtime="20201117 14:42:23.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:42:23.137" endtime="20201117 14:42:23.142"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:20.102" endtime="20201117 14:42:23.143"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:20.099" endtime="20201117 14:42:23.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.098" endtime="20201117 14:42:23.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:42:23.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:42:23.152" endtime="20201117 14:42:23.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.147" endtime="20201117 14:42:23.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.097" endtime="20201117 14:42:23.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.097" endtime="20201117 14:42:23.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.158" endtime="20201117 14:42:23.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.095" endtime="20201117 14:42:23.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.093" endtime="20201117 14:42:23.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.070" endtime="20201117 14:42:23.163"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.170" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.188" endtime="20201117 14:42:23.208"></status>
</kw>
<msg timestamp="20201117 14:42:23.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.185" endtime="20201117 14:42:23.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.211" endtime="20201117 14:42:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.217" endtime="20201117 14:42:23.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.179" endtime="20201117 14:42:23.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.175" endtime="20201117 14:42:23.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.236" endtime="20201117 14:42:23.533"></status>
</kw>
<msg timestamp="20201117 14:42:23.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108316111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.232" endtime="20201117 14:42:23.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108316111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.538" endtime="20201117 14:42:23.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.546" endtime="20201117 14:42:23.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.227" endtime="20201117 14:42:23.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.223" endtime="20201117 14:42:23.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.553" level="INFO">${RESULT} = [{'time': 3.108316111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.130500000019353e-05, 'source_diff': 2.130500000019353e-05}, {'time': 3.108342097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.549" endtime="20201117 14:42:23.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.567" level="INFO">${ACCURACY} = {'time': [3.108316111, 3.108342097, 3.108371097, 3.108399125, 3.108426111, 3.108456125, 3.108481111, 3.108509139, 3.108536125, 3.108563153, 3.108590125, 3.108616153, 3.108641139, 3.108669139, 3.108696...</msg>
<status status="PASS" starttime="20201117 14:42:23.554" endtime="20201117 14:42:23.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.572" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.571" endtime="20201117 14:42:23.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.575" level="INFO">VALUE: [2.130500000019353e-05, 2.1347000000115912e-05, 2.1665999999864738e-05, 2.1931000000030565e-05, 2.1889000000108183e-05, 2.1568999999832528e-05, 2.194400000021801e-05, 2.195800000004411e-05, 2.1889000000108183e-05, 2.1430999999960676e-05, 2.1319000000019628e-05, 2.1292000000006084e-05, 2.1944999999856662e-05, 2.1695000000043763e-05, 2.2069999999985157e-05, 2.130600000027627e-05, 2.205599999971497e-05, 2.1666999999947478e-05, 2.1292000000006084e-05, 2.12639999999098e-05, 2.1542000000263073e-05, 2.1250000000083702e-05, 2.1917000000204467e-05, 2.1499999999896602e-05, 2.1320000000102368e-05, 2.21109999998248e-05, 2.155600000008917e-05, 2.1945000000300752e-05, 2.145900000005696e-05, 2.136200000002475e-05, 2.2139000000365172e-05, 2.145799999997422e-05, 2.220799999985701e-05, 2.1596999999928812e-05, 2.1527999999992886e-05, 2.1429999999877936e-05, 2.170800000023121e-05, 2.151400000016679e-05, 2.120800000016132e-05, 2.1833999999998355e-05, 2.165299999967729e-05, 2.205500000007632e-05, 2.1777999999805786e-05, 2.195800000004411e-05, 2.2028000000062775e-05, 2.1527999999992886e-05, 2.201399999979259e-05, 2.215300000019127e-05, 2.1583999999741366e-05, 2.220899999993975e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.573" endtime="20201117 14:42:23.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.568" endtime="20201117 14:42:23.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.578" endtime="20201117 14:42:23.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.581" endtime="20201117 14:42:23.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.580" endtime="20201117 14:42:23.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.576" endtime="20201117 14:42:23.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.172" endtime="20201117 14:42:23.602"></status>
</kw>
<msg timestamp="20201117 14:42:23.602" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.611" endtime="20201117 14:42:23.626"></status>
</kw>
<msg timestamp="20201117 14:42:23.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.609" endtime="20201117 14:42:23.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.628" endtime="20201117 14:42:23.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.630" endtime="20201117 14:42:23.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.607" endtime="20201117 14:42:23.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.604" endtime="20201117 14:42:23.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.639" endtime="20201117 14:42:23.925"></status>
</kw>
<msg timestamp="20201117 14:42:23.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.638" endtime="20201117 14:42:23.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.929" endtime="20201117 14:42:23.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.938" endtime="20201117 14:42:23.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.635" endtime="20201117 14:42:23.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.633" endtime="20201117 14:42:23.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.944" level="INFO">${RESULT} = [{'time': 0.019876722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1957999999999006e-05, 'source_diff': 2.1957999999999006e-05}, {'time': 0.019901722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:23.941" endtime="20201117 14:42:23.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.959" level="INFO">${ACCURACY} = {'time': [0.019876722, 0.019901722, 0.019931736, 0.019959736, 0.01998675, 0.020012736, 0.020040764, 0.02006675, 0.02009475, 0.02012075, 0.020151778, 0.020182847, 0.020211778, 0.020236764, 0.020261778,...</msg>
<status status="PASS" starttime="20201117 14:42:23.945" endtime="20201117 14:42:23.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.964" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.963" endtime="20201117 14:42:23.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.966" level="INFO">VALUE: [2.1957999999999006e-05, 2.1236000000000865e-05, 2.131899999999881e-05, 2.1221999999997826e-05, 2.14029999999997e-05, 2.1929999999999866e-05, 2.1235999999997396e-05, 2.159700000000167e-05, 2.1222000000001295e-05, 2.1527999999999825e-05, 2.1791999999999645e-05, 2.1929999999999866e-05, 2.2000000000001185e-05, 2.219499999999916e-05, 2.2014000000000755e-05, 2.184699999999845e-05, 2.162500000000081e-05, 2.133299999999838e-05, 2.137500000000056e-05, 2.1764000000000505e-05, 2.1721999999998326e-05, 2.148700000000059e-05, 2.1277999999999575e-05, 2.1361999999996995e-05, 2.1500000000000685e-05, 2.1235999999997396e-05, 2.195900000000195e-05, 2.147300000000102e-05, 2.129099999999967e-05, 2.1443999999998936e-05, 2.186100000000149e-05, 2.1416000000003266e-05, 2.1471999999998076e-05, 2.1916000000000296e-05, 2.1707999999998756e-05, 2.163899999999691e-05, 2.17770000000006e-05, 2.186099999999802e-05, 2.1500000000000685e-05, 2.180499999999974e-05, 2.1221999999997826e-05, 2.1792000000003114e-05, 2.2028000000000325e-05, 2.1750000000000935e-05, 2.1707999999998756e-05, 2.1834000000001824e-05, 2.2028000000000325e-05, 2.1527999999999825e-05, 2.1542000000002864e-05, 2.155499999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.965" endtime="20201117 14:42:23.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.960" endtime="20201117 14:42:23.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.970" endtime="20201117 14:42:23.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.973" endtime="20201117 14:42:23.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.972" endtime="20201117 14:42:23.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.968" endtime="20201117 14:42:23.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.603" endtime="20201117 14:42:23.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.168" endtime="20201117 14:42:23.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.166" endtime="20201117 14:42:23.994"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.997" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.005" endtime="20201117 14:42:24.020"></status>
</kw>
<msg timestamp="20201117 14:42:24.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.004" endtime="20201117 14:42:24.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.022" endtime="20201117 14:42:24.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.025" endtime="20201117 14:42:24.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.001" endtime="20201117 14:42:24.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.999" endtime="20201117 14:42:24.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.034" endtime="20201117 14:42:24.321"></status>
</kw>
<msg timestamp="20201117 14:42:24.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.032" endtime="20201117 14:42:24.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.325" endtime="20201117 14:42:24.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.334" endtime="20201117 14:42:24.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.030" endtime="20201117 14:42:24.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.028" endtime="20201117 14:42:24.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.341" level="INFO">${RESULT} = [{'time': 0.022386222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1458000000001975e-05, 'source_diff': 2.1458000000001975e-05}, {'time': 0.022415222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:24.337" endtime="20201117 14:42:24.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.356" level="INFO">${ACCURACY} = {'time': [0.022386222, 0.022415222, 0.022446208, 0.022475278, 0.022505236, 0.022534236, 0.022559222, 0.022585222, 0.022610222, 0.022638236, 0.022662236, 0.022691236, 0.022715236, 0.022741236, 0.022767...</msg>
<status status="PASS" starttime="20201117 14:42:24.342" endtime="20201117 14:42:24.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.361" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.360" endtime="20201117 14:42:24.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.363" level="INFO">VALUE: [2.1458000000001975e-05, 2.1277999999999575e-05, 2.205499999999999e-05, 2.1806000000002684e-05, 2.2222000000002295e-05, 2.1527999999999825e-05, 2.1943999999999436e-05, 2.136099999999752e-05, 2.1764000000000505e-05, 2.1693999999999186e-05, 2.1429999999999366e-05, 2.19030000000002e-05, 2.1429999999999366e-05, 2.183300000000235e-05, 2.2028000000000325e-05, 2.1207999999998256e-05, 2.137499999999709e-05, 2.2014000000000755e-05, 2.183299999999888e-05, 2.1527999999999825e-05, 2.1458000000001975e-05, 2.1721999999998326e-05, 2.183300000000235e-05, 2.161100000000124e-05, 2.188900000000063e-05, 2.143099999999884e-05, 2.166700000000299e-05, 2.186100000000149e-05, 2.2084000000002074e-05, 2.144499999999841e-05, 2.2069999999999035e-05, 2.1555999999998965e-05, 2.148700000000059e-05, 2.197300000000152e-05, 2.168099999999909e-05, 2.1305999999998715e-05, 2.1222000000001295e-05, 2.1707999999998756e-05, 2.1693999999999186e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.1429999999999366e-05, 2.2040999999996952e-05, 2.134699999999795e-05, 2.1542000000002864e-05, 2.138900000000013e-05, 2.20830000000026e-05, 2.2028000000000325e-05, 2.1749999999997466e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.362" endtime="20201117 14:42:24.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.357" endtime="20201117 14:42:24.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.366" endtime="20201117 14:42:24.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.370" endtime="20201117 14:42:24.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.368" endtime="20201117 14:42:24.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.365" endtime="20201117 14:42:24.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.997" endtime="20201117 14:42:24.391"></status>
</kw>
<msg timestamp="20201117 14:42:24.391" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.399" endtime="20201117 14:42:24.414"></status>
</kw>
<msg timestamp="20201117 14:42:24.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.398" endtime="20201117 14:42:24.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.416" endtime="20201117 14:42:24.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.418" endtime="20201117 14:42:24.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.395" endtime="20201117 14:42:24.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.393" endtime="20201117 14:42:24.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.427" endtime="20201117 14:42:24.714"></status>
</kw>
<msg timestamp="20201117 14:42:24.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.426" endtime="20201117 14:42:24.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.718" endtime="20201117 14:42:24.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.726" endtime="20201117 14:42:24.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.423" endtime="20201117 14:42:24.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.422" endtime="20201117 14:42:24.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.733" level="INFO">${RESULT} = [{'time': 0.019884556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.122300000000077e-05, 'source_diff': 2.122300000000077e-05}, {'time': 0.019909556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.730" endtime="20201117 14:42:24.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.747" level="INFO">${ACCURACY} = {'time': [0.019884556, 0.019909556, 0.019935556, 0.019959556, 0.019985569, 0.020011569, 0.020036611, 0.020065569, 0.020096597, 0.020126625, 0.020155625, 0.020181583, 0.020206583, 0.020234597, 0.020261...</msg>
<status status="PASS" starttime="20201117 14:42:24.734" endtime="20201117 14:42:24.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.751" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.750" endtime="20201117 14:42:24.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.754" level="INFO">VALUE: [2.122300000000077e-05, 2.166699999999952e-05, 2.1291999999999145e-05, 2.1500000000000685e-05, 2.159700000000167e-05, 2.1750000000000935e-05, 2.206899999999956e-05, 2.1901999999997257e-05, 2.137500000000056e-05, 2.181899999999931e-05, 2.1291999999999145e-05, 2.154099999999992e-05, 2.17770000000006e-05, 2.1916000000000296e-05, 2.163900000000038e-05, 2.1707999999998756e-05, 2.1972000000002045e-05, 2.1805999999999215e-05, 2.1429999999999366e-05, 2.163899999999691e-05, 2.134699999999795e-05, 2.212499999999784e-05, 2.134699999999795e-05, 2.1721999999998326e-05, 2.143099999999884e-05, 2.183299999999888e-05, 2.163900000000038e-05, 2.20830000000026e-05, 2.1305999999998715e-05, 2.1500000000000685e-05, 2.12090000000012e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.1735999999997896e-05, 2.1834000000001824e-05, 2.202700000000085e-05, 2.19030000000002e-05, 2.162499999999734e-05, 2.1707999999998756e-05, 2.131900000000228e-05, 2.156900000000253e-05, 2.1929999999999866e-05, 2.184699999999845e-05, 2.1457999999998506e-05, 2.126300000000053e-05, 2.1264000000000005e-05, 2.1471999999998076e-05, 2.1986000000001615e-05, 2.1458000000001975e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.752" endtime="20201117 14:42:24.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.748" endtime="20201117 14:42:24.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.757" endtime="20201117 14:42:24.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.761" endtime="20201117 14:42:24.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.759" endtime="20201117 14:42:24.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.755" endtime="20201117 14:42:24.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.391" endtime="20201117 14:42:24.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.996" endtime="20201117 14:42:24.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.995" endtime="20201117 14:42:24.782"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.784" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.793" endtime="20201117 14:42:24.808"></status>
</kw>
<msg timestamp="20201117 14:42:24.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.791" endtime="20201117 14:42:24.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.809" endtime="20201117 14:42:24.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.812" endtime="20201117 14:42:24.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.788" endtime="20201117 14:42:24.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.786" endtime="20201117 14:42:24.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.822" endtime="20201117 14:42:25.109"></status>
</kw>
<msg timestamp="20201117 14:42:25.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.820" endtime="20201117 14:42:25.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.113" endtime="20201117 14:42:25.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.122" endtime="20201117 14:42:25.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.817" endtime="20201117 14:42:25.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.815" endtime="20201117 14:42:25.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.129" level="INFO">${RESULT} = [{'time': 0.022213944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2012999999997812e-05, 'source_diff': 2.2012999999997812e-05}, {'time': 0.022244944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:25.125" endtime="20201117 14:42:25.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.142" level="INFO">${ACCURACY} = {'time': [0.022213944, 0.022244944, 0.022271889, 0.022297889, 0.022323875, 0.022348903, 0.022379944, 0.022410889, 0.022435958, 0.022460889, 0.022491917, 0.022519903, 0.022545917, 0.022571917, 0.022598...</msg>
<status status="PASS" starttime="20201117 14:42:25.129" endtime="20201117 14:42:25.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.147" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.146" endtime="20201117 14:42:25.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.149" level="INFO">VALUE: [2.2012999999997812e-05, 2.2151999999997507e-05, 2.1764000000000505e-05, 2.1527999999999825e-05, 2.136100000000099e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.15969999999982e-05, 2.208299999999913e-05, 2.218099999999959e-05, 2.2098000000001644e-05, 2.216700000000002e-05, 2.2069999999999035e-05, 2.1848000000001394e-05, 2.183299999999888e-05, 2.123700000000034e-05, 2.168099999999909e-05, 2.2083999999998605e-05, 2.2041999999999895e-05, 2.1791999999999645e-05, 2.1902000000000726e-05, 2.1264000000000005e-05, 2.1500000000000685e-05, 2.179100000000017e-05, 2.1264000000000005e-05, 2.159700000000167e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.209700000000217e-05, 2.156899999999906e-05, 2.129099999999967e-05, 2.143099999999884e-05, 2.181899999999931e-05, 2.165299999999995e-05, 2.186099999999802e-05, 2.136100000000099e-05, 2.184700000000192e-05, 2.188900000000063e-05, 2.1291999999999145e-05, 2.191700000000324e-05, 2.134700000000142e-05, 2.2014000000000755e-05, 2.159700000000167e-05, 2.1264000000000005e-05, 2.166699999999952e-05, 2.1221999999997826e-05, 2.15969999999982e-05, 2.163900000000038e-05, 2.143099999999884e-05, 2.1736000000001365e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.148" endtime="20201117 14:42:25.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.143" endtime="20201117 14:42:25.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.152" endtime="20201117 14:42:25.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.156" endtime="20201117 14:42:25.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.154" endtime="20201117 14:42:25.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.151" endtime="20201117 14:42:25.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.785" endtime="20201117 14:42:25.177"></status>
</kw>
<msg timestamp="20201117 14:42:25.177" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.185" endtime="20201117 14:42:25.201"></status>
</kw>
<msg timestamp="20201117 14:42:25.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.184" endtime="20201117 14:42:25.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.203" endtime="20201117 14:42:25.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.206" endtime="20201117 14:42:25.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.181" endtime="20201117 14:42:25.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.179" endtime="20201117 14:42:25.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.215" endtime="20201117 14:42:25.501"></status>
</kw>
<msg timestamp="20201117 14:42:25.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.213" endtime="20201117 14:42:25.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.506" endtime="20201117 14:42:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.514" endtime="20201117 14:42:25.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.211" endtime="20201117 14:42:25.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.209" endtime="20201117 14:42:25.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.521" level="INFO">${RESULT} = [{'time': 0.020260514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.211100000000174e-05, 'source_diff': 2.211100000000174e-05}, {'time': 0.020290528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.517" endtime="20201117 14:42:25.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.534" level="INFO">${ACCURACY} = {'time': [0.020260514, 0.020290528, 0.020321528, 0.020345542, 0.020372542, 0.020399528, 0.020424528, 0.020449542, 0.020478542, 0.020503542, 0.020533611, 0.020559556, 0.020584556, 0.020613556, 0.020644...</msg>
<status status="PASS" starttime="20201117 14:42:25.522" endtime="20201117 14:42:25.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.539" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.538" endtime="20201117 14:42:25.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.541" level="INFO">VALUE: [2.211100000000174e-05, 2.1971999999998576e-05, 2.184699999999845e-05, 2.144500000000188e-05, 2.2069999999999035e-05, 2.1569999999998535e-05, 2.194500000000238e-05, 2.195900000000195e-05, 2.143099999999884e-05, 2.194499999999891e-05, 2.184700000000192e-05, 2.2000000000001185e-05, 2.191699999999977e-05, 2.1500000000000685e-05, 2.1598000000001144e-05, 2.161100000000124e-05, 2.212499999999784e-05, 2.1402000000000226e-05, 2.205499999999999e-05, 2.152700000000035e-05, 2.2028000000000325e-05, 2.1693999999999186e-05, 2.2207999999999256e-05, 2.158299999999863e-05, 2.1916000000000296e-05, 2.1750000000000935e-05, 2.1722000000001795e-05, 2.165299999999995e-05, 2.1943999999999436e-05, 2.1457999999998506e-05, 2.211099999999827e-05, 2.1471999999998076e-05, 2.1250000000000435e-05, 2.219500000000263e-05, 2.15969999999982e-05, 2.211099999999827e-05, 2.212500000000131e-05, 2.1957999999999006e-05, 2.1486000000001115e-05, 2.2263999999997536e-05, 2.19030000000002e-05, 2.1722000000001795e-05, 2.14029999999997e-05, 2.1791999999999645e-05, 2.1471999999998076e-05, 2.219500000000263e-05, 2.19030000000002e-05, 2.1750000000000935e-05, 2.1249999999996966e-05, 2.130499999999924e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.540" endtime="20201117 14:42:25.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.535" endtime="20201117 14:42:25.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.544" endtime="20201117 14:42:25.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.548" endtime="20201117 14:42:25.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.546" endtime="20201117 14:42:25.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.543" endtime="20201117 14:42:25.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.177" endtime="20201117 14:42:25.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.783" endtime="20201117 14:42:25.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.782" endtime="20201117 14:42:25.569"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.571" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.580" endtime="20201117 14:42:25.595"></status>
</kw>
<msg timestamp="20201117 14:42:25.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.579" endtime="20201117 14:42:25.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.597" endtime="20201117 14:42:25.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.599" endtime="20201117 14:42:25.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.576" endtime="20201117 14:42:25.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.573" endtime="20201117 14:42:25.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.608" endtime="20201117 14:42:25.893"></status>
</kw>
<msg timestamp="20201117 14:42:25.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.607" endtime="20201117 14:42:25.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.897" endtime="20201117 14:42:25.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.906" endtime="20201117 14:42:25.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.604" endtime="20201117 14:42:25.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.602" endtime="20201117 14:42:25.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.913" level="INFO">${RESULT} = [{'time': 0.022679819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1736000000001365e-05, 'source_diff': 2.1736000000001365e-05}, {'time': 0.022707861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:25.909" endtime="20201117 14:42:25.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.928" level="INFO">${ACCURACY} = {'time': [0.022679819, 0.022707861, 0.022735819, 0.022766819, 0.022790847, 0.022819833, 0.022849903, 0.022876903, 0.022904861, 0.022933847, 0.022962847, 0.022986847, 0.023017861, 0.023043944, 0.023070...</msg>
<status status="PASS" starttime="20201117 14:42:25.914" endtime="20201117 14:42:25.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.932" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.931" endtime="20201117 14:42:25.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.935" level="INFO">VALUE: [2.1736000000001365e-05, 2.2207999999999256e-05, 2.186100000000149e-05, 2.159700000000167e-05, 2.1527999999999825e-05, 2.2152000000000976e-05, 2.1306000000002184e-05, 2.145900000000145e-05, 2.162499999999734e-05, 2.1429999999999366e-05, 2.1736000000001365e-05, 2.1500000000000685e-05, 2.1291999999999145e-05, 2.20969999999987e-05, 2.134700000000142e-05, 2.1541999999999395e-05, 2.1694000000002656e-05, 2.137500000000056e-05, 2.1348000000000894e-05, 2.1542000000002864e-05, 2.1222000000001295e-05, 2.1721999999998326e-05, 2.1334000000001324e-05, 2.169500000000213e-05, 2.1805999999999215e-05, 2.194500000000238e-05, 2.1791999999999645e-05, 2.1500000000000685e-05, 2.169499999999866e-05, 2.169499999999866e-05, 2.136100000000099e-05, 2.213900000000088e-05, 2.220899999999873e-05, 2.145899999999798e-05, 2.1762999999997562e-05, 2.1612000000000714e-05, 2.1679999999999616e-05, 2.2207999999999256e-05, 2.180499999999974e-05, 2.184699999999845e-05, 2.137500000000056e-05, 2.1708000000002226e-05, 2.1457999999998506e-05, 2.137500000000056e-05, 2.1429999999999366e-05, 2.15969999999982e-05, 2.130500000000271e-05, 2.204100000000042e-05, 2.1249999999996966e-05, 2.1750000000000935e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.933" endtime="20201117 14:42:25.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.929" endtime="20201117 14:42:25.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.938" endtime="20201117 14:42:25.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.942" endtime="20201117 14:42:25.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.940" endtime="20201117 14:42:25.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.937" endtime="20201117 14:42:25.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.572" endtime="20201117 14:42:25.963"></status>
</kw>
<msg timestamp="20201117 14:42:25.963" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.972" endtime="20201117 14:42:25.988"></status>
</kw>
<msg timestamp="20201117 14:42:25.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.970" endtime="20201117 14:42:25.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.989" endtime="20201117 14:42:25.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.992" endtime="20201117 14:42:25.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.967" endtime="20201117 14:42:25.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.965" endtime="20201117 14:42:25.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.001" endtime="20201117 14:42:26.288"></status>
</kw>
<msg timestamp="20201117 14:42:26.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.000" endtime="20201117 14:42:26.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.292" endtime="20201117 14:42:26.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.300" endtime="20201117 14:42:26.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.997" endtime="20201117 14:42:26.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.995" endtime="20201117 14:42:26.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.307" level="INFO">${RESULT} = [{'time': 0.021051653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1514000000000255e-05, 'source_diff': 2.1514000000000255e-05}, {'time': 0.021076653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.304" endtime="20201117 14:42:26.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.320" level="INFO">${ACCURACY} = {'time': [0.021051653, 0.021076653, 0.021106667, 0.021133653, 0.021157653, 0.021182708, 0.021207667, 0.021233667, 0.021258681, 0.021286681, 0.021313694, 0.021338681, 0.021365681, 0.021390736, 0.021417...</msg>
<status status="PASS" starttime="20201117 14:42:26.308" endtime="20201117 14:42:26.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.325" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.324" endtime="20201117 14:42:26.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.328" level="INFO">VALUE: [2.1514000000000255e-05, 2.195900000000195e-05, 2.219499999999916e-05, 2.1333999999997855e-05, 2.120899999999773e-05, 2.206900000000303e-05, 2.17229999999978e-05, 2.1527999999999825e-05, 2.172300000000127e-05, 2.1861999999997495e-05, 2.159700000000167e-05, 2.1306000000002184e-05, 2.1334000000001324e-05, 2.2250000000001435e-05, 2.136100000000099e-05, 2.1708000000002226e-05, 2.180499999999974e-05, 2.12770000000001e-05, 2.1986000000001615e-05, 2.1707999999998756e-05, 2.1443999999998936e-05, 2.162500000000081e-05, 2.1485999999997646e-05, 2.137500000000056e-05, 2.165299999999995e-05, 2.136100000000099e-05, 2.15969999999982e-05, 2.1264000000000005e-05, 2.208299999999913e-05, 2.131900000000228e-05, 2.166699999999952e-05, 2.1971999999998576e-05, 2.1500000000000685e-05, 2.162500000000081e-05, 2.218099999999959e-05, 2.1541999999999395e-05, 2.1207999999998256e-05, 2.2000000000001185e-05, 2.211099999999827e-05, 2.2041999999999895e-05, 2.1235999999997396e-05, 2.1555999999998965e-05, 2.137500000000056e-05, 2.2041999999999895e-05, 2.140300000000317e-05, 2.191699999999977e-05, 2.2097999999998175e-05, 2.1598000000001144e-05, 2.19030000000002e-05, 2.1971999999998576e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.326" endtime="20201117 14:42:26.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.321" endtime="20201117 14:42:26.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.331" endtime="20201117 14:42:26.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.335" endtime="20201117 14:42:26.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.333" endtime="20201117 14:42:26.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.330" endtime="20201117 14:42:26.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.964" endtime="20201117 14:42:26.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.570" endtime="20201117 14:42:26.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.569" endtime="20201117 14:42:26.356"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.358" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.367" endtime="20201117 14:42:26.382"></status>
</kw>
<msg timestamp="20201117 14:42:26.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.365" endtime="20201117 14:42:26.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.383" endtime="20201117 14:42:26.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.386" endtime="20201117 14:42:26.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.363" endtime="20201117 14:42:26.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.360" endtime="20201117 14:42:26.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.395" endtime="20201117 14:42:26.683"></status>
</kw>
<msg timestamp="20201117 14:42:26.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.394" endtime="20201117 14:42:26.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.687" endtime="20201117 14:42:26.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.696" endtime="20201117 14:42:26.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.391" endtime="20201117 14:42:26.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.389" endtime="20201117 14:42:26.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.703" level="INFO">${RESULT} = [{'time': 0.022294236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1957999999999006e-05, 'source_diff': 2.1957999999999006e-05}, {'time': 0.022324236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.699" endtime="20201117 14:42:26.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.716" level="INFO">${ACCURACY} = {'time': [0.022294236, 0.022324236, 0.022353264, 0.022378264, 0.02240725, 0.022437264, 0.022462278, 0.022488292, 0.022516264, 0.022546264, 0.022576333, 0.022607292, 0.022637292, 0.022663292, 0.0226902...</msg>
<status status="PASS" starttime="20201117 14:42:26.704" endtime="20201117 14:42:26.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.721" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.720" endtime="20201117 14:42:26.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.723" level="INFO">VALUE: [2.1957999999999006e-05, 2.1778000000000075e-05, 2.1527999999999825e-05, 2.1569999999998535e-05, 2.1971999999998576e-05, 2.1707999999998756e-05, 2.1721999999998326e-05, 2.1584000000001574e-05, 2.209700000000217e-05, 2.216700000000002e-05, 2.130499999999924e-05, 2.2084000000002074e-05, 2.172300000000127e-05, 2.1848000000001394e-05, 2.1348000000000894e-05, 2.129100000000314e-05, 2.1320000000001754e-05, 2.1527999999999825e-05, 2.143100000000231e-05, 2.12090000000012e-05, 2.1250000000000435e-05, 2.1500000000000685e-05, 2.172300000000127e-05, 2.1943999999999436e-05, 2.152700000000035e-05, 2.209700000000217e-05, 2.126300000000053e-05, 2.1666000000000046e-05, 2.14029999999997e-05, 2.2193999999999686e-05, 2.20830000000026e-05, 2.2207999999999256e-05, 2.1916000000000296e-05, 2.1750000000000935e-05, 2.1944000000002906e-05, 2.1236000000000865e-05, 2.1527999999999825e-05, 2.1250000000000435e-05, 2.148699999999712e-05, 2.1500000000000685e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1264000000000005e-05, 2.141699999999927e-05, 2.1471999999998076e-05, 2.22090000000022e-05, 2.1472000000001545e-05, 2.1486000000001115e-05, 2.170899999999823e-05, 2.1527999999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.722" endtime="20201117 14:42:26.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.717" endtime="20201117 14:42:26.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.727" endtime="20201117 14:42:26.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.730" endtime="20201117 14:42:26.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.729" endtime="20201117 14:42:26.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.725" endtime="20201117 14:42:26.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.359" endtime="20201117 14:42:26.751"></status>
</kw>
<msg timestamp="20201117 14:42:26.751" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.760" endtime="20201117 14:42:26.775"></status>
</kw>
<msg timestamp="20201117 14:42:26.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.758" endtime="20201117 14:42:26.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.777" endtime="20201117 14:42:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.779" endtime="20201117 14:42:26.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.756" endtime="20201117 14:42:26.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.754" endtime="20201117 14:42:26.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.788" endtime="20201117 14:42:27.077"></status>
</kw>
<msg timestamp="20201117 14:42:27.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.787" endtime="20201117 14:42:27.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019555903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.081" endtime="20201117 14:42:27.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.090" endtime="20201117 14:42:27.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.784" endtime="20201117 14:42:27.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.782" endtime="20201117 14:42:27.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.097" level="INFO">${RESULT} = [{'time': 0.019555903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.019583875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:27.093" endtime="20201117 14:42:27.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.110" level="INFO">${ACCURACY} = {'time': [0.019555903, 0.019583875, 0.019610875, 0.019640889, 0.019671903, 0.019696917, 0.019722944, 0.019751889, 0.019780903, 0.019811903, 0.019840917, 0.019869903, 0.019895917, 0.019925931, 0.019956...</msg>
<status status="PASS" starttime="20201117 14:42:27.097" endtime="20201117 14:42:27.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.115" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.114" endtime="20201117 14:42:27.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.117" level="INFO">VALUE: [2.1778000000000075e-05, 2.2055999999999465e-05, 2.187500000000106e-05, 2.1320000000001754e-05, 2.209700000000217e-05, 2.1820000000002254e-05, 2.1652000000000476e-05, 2.141700000000274e-05, 2.1264000000000005e-05, 2.1749999999997466e-05, 2.1750000000000935e-05, 2.143100000000231e-05, 2.1291999999999145e-05, 2.2041999999999895e-05, 2.1848000000001394e-05, 2.180499999999974e-05, 2.1916000000000296e-05, 2.1833999999998355e-05, 2.19030000000002e-05, 2.137500000000056e-05, 2.201300000000128e-05, 2.1901999999997257e-05, 2.186099999999802e-05, 2.163900000000038e-05, 2.1985999999998146e-05, 2.1666000000000046e-05, 2.155499999999949e-05, 2.206899999999956e-05, 2.1429999999999366e-05, 2.2014000000000755e-05, 2.133300000000185e-05, 2.133300000000185e-05, 2.154099999999992e-05, 2.2028000000000325e-05, 2.1735999999997896e-05, 2.1499999999997216e-05, 2.143099999999884e-05, 2.1764000000000505e-05, 2.1277999999999575e-05, 2.1542000000002864e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.1527999999999825e-05, 2.168099999999909e-05, 2.136100000000099e-05, 2.170899999999823e-05, 2.211099999999827e-05, 2.1570000000002004e-05, 2.2083999999998605e-05, 2.2014000000000755e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.116" endtime="20201117 14:42:27.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.111" endtime="20201117 14:42:27.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.121" endtime="20201117 14:42:27.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.124" endtime="20201117 14:42:27.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.123" endtime="20201117 14:42:27.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.119" endtime="20201117 14:42:27.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.752" endtime="20201117 14:42:27.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.357" endtime="20201117 14:42:27.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.356" endtime="20201117 14:42:27.146"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.148" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.156" endtime="20201117 14:42:27.172"></status>
</kw>
<msg timestamp="20201117 14:42:27.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.155" endtime="20201117 14:42:27.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.173" endtime="20201117 14:42:27.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.176" endtime="20201117 14:42:27.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.152" endtime="20201117 14:42:27.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.150" endtime="20201117 14:42:27.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.185" endtime="20201117 14:42:27.472"></status>
</kw>
<msg timestamp="20201117 14:42:27.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.183" endtime="20201117 14:42:27.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.477" endtime="20201117 14:42:27.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.485" endtime="20201117 14:42:27.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.181" endtime="20201117 14:42:27.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.179" endtime="20201117 14:42:27.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.492" level="INFO">${RESULT} = [{'time': 0.022172125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.022200056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.488" endtime="20201117 14:42:27.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.507" level="INFO">${ACCURACY} = {'time': [0.022172125, 0.022200056, 0.022228125, 0.022258069, 0.022285069, 0.022309069, 0.022333083, 0.022363069, 0.022392069, 0.022422139, 0.022451083, 0.022478167, 0.022503083, 0.022527083, 0.022555...</msg>
<status status="PASS" starttime="20201117 14:42:27.493" endtime="20201117 14:42:27.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.511" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.510" endtime="20201117 14:42:27.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.514" level="INFO">VALUE: [2.141699999999927e-05, 2.138900000000013e-05, 2.2236000000001865e-05, 2.131899999999881e-05, 2.179100000000017e-05, 2.1736000000001365e-05, 2.1443999999998936e-05, 2.202700000000085e-05, 2.1666000000000046e-05, 2.183300000000235e-05, 2.1264000000000005e-05, 2.195900000000195e-05, 2.1693999999999186e-05, 2.1721999999998326e-05, 2.211099999999827e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.209700000000217e-05, 2.134699999999795e-05, 2.205499999999999e-05, 2.1819999999998785e-05, 2.1235999999997396e-05, 2.1193999999998686e-05, 2.2193999999999686e-05, 2.1264000000000005e-05, 2.14029999999997e-05, 2.159700000000167e-05, 2.184699999999845e-05, 2.1570000000002004e-05, 2.159700000000167e-05, 2.218099999999959e-05, 2.1319999999998285e-05, 2.211099999999827e-05, 2.1500000000000685e-05, 2.136100000000099e-05, 2.2111999999997745e-05, 2.2056000000002934e-05, 2.2014000000000755e-05, 2.141699999999927e-05, 2.172300000000127e-05, 2.1778000000000075e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.1250000000000435e-05, 2.1694000000002656e-05, 2.20969999999987e-05, 2.1486000000001115e-05, 2.208299999999913e-05, 2.130500000000271e-05, 2.1264000000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.512" endtime="20201117 14:42:27.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.508" endtime="20201117 14:42:27.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.518" endtime="20201117 14:42:27.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.521" endtime="20201117 14:42:27.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.520" endtime="20201117 14:42:27.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.516" endtime="20201117 14:42:27.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.149" endtime="20201117 14:42:27.542"></status>
</kw>
<msg timestamp="20201117 14:42:27.542" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.550" endtime="20201117 14:42:27.565"></status>
</kw>
<msg timestamp="20201117 14:42:27.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.549" endtime="20201117 14:42:27.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.567" endtime="20201117 14:42:27.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.569" endtime="20201117 14:42:27.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.546" endtime="20201117 14:42:27.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.544" endtime="20201117 14:42:27.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.578" endtime="20201117 14:42:27.867"></status>
</kw>
<msg timestamp="20201117 14:42:27.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.577" endtime="20201117 14:42:27.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.871" endtime="20201117 14:42:27.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.879" endtime="20201117 14:42:27.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.574" endtime="20201117 14:42:27.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.572" endtime="20201117 14:42:27.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.886" level="INFO">${RESULT} = [{'time': 0.019572361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.166699999999952e-05, 'source_diff': 2.166699999999952e-05}, {'time': 0.019600319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.883" endtime="20201117 14:42:27.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.900" level="INFO">${ACCURACY} = {'time': [0.019572361, 0.019600319, 0.019626319, 0.019654333, 0.019680333, 0.019710333, 0.019735333, 0.019764333, 0.019792347, 0.019820347, 0.019851403, 0.019878375, 0.019908375, 0.019935375, 0.019966...</msg>
<status status="PASS" starttime="20201117 14:42:27.887" endtime="20201117 14:42:27.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.905" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.904" endtime="20201117 14:42:27.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.907" level="INFO">VALUE: [2.166699999999952e-05, 2.1458000000001975e-05, 2.136100000000099e-05, 2.1221999999997826e-05, 2.20830000000026e-05, 2.1721999999998326e-05, 2.154099999999992e-05, 2.1666000000000046e-05, 2.1693999999999186e-05, 2.1221999999997826e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.1500000000000685e-05, 2.156900000000253e-05, 2.1527999999999825e-05, 2.14029999999997e-05, 2.2028000000000325e-05, 2.1805999999999215e-05, 2.1305999999998715e-05, 2.1708000000002226e-05, 2.191699999999977e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.194500000000238e-05, 2.1583999999998105e-05, 2.218099999999959e-05, 2.1500000000000685e-05, 2.187500000000106e-05, 2.172300000000127e-05, 2.1250000000000435e-05, 2.181900000000278e-05, 2.1750000000000935e-05, 2.2098000000001644e-05, 2.2084000000002074e-05, 2.208299999999913e-05, 2.201300000000128e-05, 2.1388000000000656e-05, 2.2207999999999256e-05, 2.202700000000085e-05, 2.163900000000038e-05, 2.1458000000001975e-05, 2.1707999999998756e-05, 2.155499999999949e-05, 2.14029999999997e-05, 2.14029999999997e-05, 2.1750000000000935e-05, 2.155499999999949e-05, 2.1429999999999366e-05, 2.14029999999997e-05, 2.161100000000124e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.906" endtime="20201117 14:42:27.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.901" endtime="20201117 14:42:27.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.910" endtime="20201117 14:42:27.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.914" endtime="20201117 14:42:27.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.912" endtime="20201117 14:42:27.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.909" endtime="20201117 14:42:27.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.543" endtime="20201117 14:42:27.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.147" endtime="20201117 14:42:27.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.146" endtime="20201117 14:42:27.936"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.938" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.946" endtime="20201117 14:42:27.962"></status>
</kw>
<msg timestamp="20201117 14:42:27.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.945" endtime="20201117 14:42:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.964" endtime="20201117 14:42:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.966" endtime="20201117 14:42:27.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.942" endtime="20201117 14:42:27.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.940" endtime="20201117 14:42:27.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.975" endtime="20201117 14:42:28.264"></status>
</kw>
<msg timestamp="20201117 14:42:28.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.974" endtime="20201117 14:42:28.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.268" endtime="20201117 14:42:28.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.276" endtime="20201117 14:42:28.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.971" endtime="20201117 14:42:28.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.970" endtime="20201117 14:42:28.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.287" level="INFO">${RESULT} = [{'time': 0.023145847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.023169861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.284" endtime="20201117 14:42:28.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.301" level="INFO">${ACCURACY} = {'time': [0.023145847, 0.023169861, 0.023199861, 0.023224861, 0.023249917, 0.023277861, 0.023307875, 0.023335889, 0.023359875, 0.023385889, 0.023410875, 0.023436903, 0.023461903, 0.023490889, 0.023519...</msg>
<status status="PASS" starttime="20201117 14:42:28.288" endtime="20201117 14:42:28.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.305" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.304" endtime="20201117 14:42:28.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.308" level="INFO">VALUE: [2.162500000000081e-05, 2.1750000000000935e-05, 2.1721999999998326e-05, 2.1541999999999395e-05, 2.137499999999709e-05, 2.1222000000001295e-05, 2.1805999999999215e-05, 2.194499999999891e-05, 2.165299999999995e-05, 2.137500000000056e-05, 2.1958000000002476e-05, 2.161099999999777e-05, 2.1485999999997646e-05, 2.1958000000002476e-05, 2.213899999999741e-05, 2.1306000000002184e-05, 2.212500000000131e-05, 2.1486000000001115e-05, 2.187500000000106e-05, 2.138900000000013e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.1764000000000505e-05, 2.202700000000085e-05, 2.187500000000106e-05, 2.1820000000002254e-05, 2.204100000000042e-05, 2.138900000000013e-05, 2.17770000000006e-05, 2.211100000000174e-05, 2.1999999999997716e-05, 2.129099999999967e-05, 2.186100000000149e-05, 2.212500000000131e-05, 2.1679999999999616e-05, 2.131899999999881e-05, 2.1500000000000685e-05, 2.2027999999996856e-05, 2.1707999999998756e-05, 2.206899999999956e-05, 2.1236000000000865e-05, 2.212500000000131e-05, 2.1555999999998965e-05, 2.2041999999999895e-05, 2.133299999999838e-05, 2.15830000000021e-05, 2.1457999999998506e-05, 2.1264000000000005e-05, 2.186099999999802e-05, 2.194499999999891e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.307" endtime="20201117 14:42:28.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.302" endtime="20201117 14:42:28.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.311" endtime="20201117 14:42:28.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.315" endtime="20201117 14:42:28.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.313" endtime="20201117 14:42:28.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.309" endtime="20201117 14:42:28.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.939" endtime="20201117 14:42:28.335"></status>
</kw>
<msg timestamp="20201117 14:42:28.336" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.344" endtime="20201117 14:42:28.359"></status>
</kw>
<msg timestamp="20201117 14:42:28.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.342" endtime="20201117 14:42:28.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.360" endtime="20201117 14:42:28.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.363" endtime="20201117 14:42:28.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.340" endtime="20201117 14:42:28.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.338" endtime="20201117 14:42:28.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.372" endtime="20201117 14:42:28.659"></status>
</kw>
<msg timestamp="20201117 14:42:28.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.371" endtime="20201117 14:42:28.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.663" endtime="20201117 14:42:28.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.672" endtime="20201117 14:42:28.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.368" endtime="20201117 14:42:28.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.366" endtime="20201117 14:42:28.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.679" level="INFO">${RESULT} = [{'time': 0.019738833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.130499999999924e-05, 'source_diff': 2.130499999999924e-05}, {'time': 0.019768833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.676" endtime="20201117 14:42:28.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.692" level="INFO">${ACCURACY} = {'time': [0.019738833, 0.019768833, 0.019796833, 0.019826847, 0.019851861, 0.019879861, 0.019904847, 0.019931847, 0.019962861, 0.019993861, 0.020020875, 0.020050875, 0.020077875, 0.020103889, 0.020133...</msg>
<status status="PASS" starttime="20201117 14:42:28.680" endtime="20201117 14:42:28.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.697" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.696" endtime="20201117 14:42:28.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.700" level="INFO">VALUE: [2.130499999999924e-05, 2.131899999999881e-05, 2.162500000000081e-05, 2.155500000000296e-05, 2.156899999999906e-05, 2.1179999999999116e-05, 2.1957999999999006e-05, 2.187499999999759e-05, 2.1749999999997466e-05, 2.15830000000021e-05, 2.181899999999931e-05, 2.131899999999881e-05, 2.211099999999827e-05, 2.137500000000056e-05, 2.1527999999999825e-05, 2.1749999999997466e-05, 2.2014000000000755e-05, 2.15969999999982e-05, 2.2069999999999035e-05, 2.1555999999998965e-05, 2.1820000000002254e-05, 2.1750000000000935e-05, 2.144499999999841e-05, 2.2083999999998605e-05, 2.1806000000002684e-05, 2.1791999999999645e-05, 2.168099999999909e-05, 2.17090000000017e-05, 2.1985999999998146e-05, 2.1598000000001144e-05, 2.1513999999996786e-05, 2.141699999999927e-05, 2.208299999999913e-05, 2.2138000000001407e-05, 2.1764000000000505e-05, 2.1388000000000656e-05, 2.162500000000081e-05, 2.1943999999999436e-05, 2.2207999999999256e-05, 2.213900000000088e-05, 2.1679999999999616e-05, 2.20969999999987e-05, 2.2221999999998826e-05, 2.1929999999999866e-05, 2.15969999999982e-05, 2.1721999999998326e-05, 2.183299999999888e-05, 2.188900000000063e-05, 2.1291999999999145e-05, 2.213900000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.698" endtime="20201117 14:42:28.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.693" endtime="20201117 14:42:28.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.703" endtime="20201117 14:42:28.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.706" endtime="20201117 14:42:28.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.705" endtime="20201117 14:42:28.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.701" endtime="20201117 14:42:28.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.336" endtime="20201117 14:42:28.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.937" endtime="20201117 14:42:28.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.936" endtime="20201117 14:42:28.728"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.730" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.738" endtime="20201117 14:42:28.753"></status>
</kw>
<msg timestamp="20201117 14:42:28.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.737" endtime="20201117 14:42:28.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.754" endtime="20201117 14:42:28.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.757" endtime="20201117 14:42:28.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.734" endtime="20201117 14:42:28.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.732" endtime="20201117 14:42:28.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.766" endtime="20201117 14:42:29.054"></status>
</kw>
<msg timestamp="20201117 14:42:29.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.765" endtime="20201117 14:42:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.058" endtime="20201117 14:42:29.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.066" endtime="20201117 14:42:29.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.762" endtime="20201117 14:42:29.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.760" endtime="20201117 14:42:29.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.073" level="INFO">${RESULT} = [{'time': 0.022245111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.15830000000021e-05, 'source_diff': 2.15830000000021e-05}, {'time': 0.022276111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:29.070" endtime="20201117 14:42:29.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.088" level="INFO">${ACCURACY} = {'time': [0.022245111, 0.022276111, 0.022304139, 0.022330139, 0.022355125, 0.022383125, 0.022411125, 0.022439139, 0.022469139, 0.022497139, 0.022521139, 0.022547139, 0.022573153, 0.022603167, 0.022633...</msg>
<status status="PASS" starttime="20201117 14:42:29.074" endtime="20201117 14:42:29.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.093" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.092" endtime="20201117 14:42:29.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.095" level="INFO">VALUE: [2.15830000000021e-05, 2.159700000000167e-05, 2.188900000000063e-05, 2.20969999999987e-05, 2.1778000000000075e-05, 2.20969999999987e-05, 2.186100000000149e-05, 2.137500000000056e-05, 2.193099999999934e-05, 2.20969999999987e-05, 2.166699999999952e-05, 2.1264000000000005e-05, 2.2013999999997286e-05, 2.1334000000001324e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.2207999999999256e-05, 2.1805999999999215e-05, 2.1985999999998146e-05, 2.2028000000000325e-05, 2.213900000000088e-05, 2.1348000000000894e-05, 2.130499999999924e-05, 2.187499999999759e-05, 2.166699999999952e-05, 2.1916000000000296e-05, 2.213900000000088e-05, 2.155499999999949e-05, 2.187499999999759e-05, 2.1429999999999366e-05, 2.1679999999999616e-05, 2.2040999999996952e-05, 2.1764000000000505e-05, 2.2221999999998826e-05, 2.1221999999997826e-05, 2.1791999999999645e-05, 2.1250000000000435e-05, 2.129100000000314e-05, 2.1764000000000505e-05, 2.1736000000001365e-05, 2.1985999999998146e-05, 2.1291999999999145e-05, 2.179100000000017e-05, 2.1778000000000075e-05, 2.143099999999884e-05, 2.1472000000001545e-05, 2.1291999999999145e-05, 2.141699999999927e-05, 2.1320000000001754e-05, 2.2028000000000325e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.094" endtime="20201117 14:42:29.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.089" endtime="20201117 14:42:29.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.098" endtime="20201117 14:42:29.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.102" endtime="20201117 14:42:29.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.100" endtime="20201117 14:42:29.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.097" endtime="20201117 14:42:29.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.731" endtime="20201117 14:42:29.123"></status>
</kw>
<msg timestamp="20201117 14:42:29.123" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.131" endtime="20201117 14:42:29.146"></status>
</kw>
<msg timestamp="20201117 14:42:29.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.130" endtime="20201117 14:42:29.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.147" endtime="20201117 14:42:29.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.150" endtime="20201117 14:42:29.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.127" endtime="20201117 14:42:29.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.125" endtime="20201117 14:42:29.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.159" endtime="20201117 14:42:29.446"></status>
</kw>
<msg timestamp="20201117 14:42:29.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.158" endtime="20201117 14:42:29.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.451" endtime="20201117 14:42:29.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.459" endtime="20201117 14:42:29.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.155" endtime="20201117 14:42:29.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.154" endtime="20201117 14:42:29.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.466" level="INFO">${RESULT} = [{'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212499999999784e-05, 'source_diff': 2.212499999999784e-05}, {'time': 0.019721056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.462" endtime="20201117 14:42:29.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.479" level="INFO">${ACCURACY} = {'time': [0.019692056, 0.019721056, 0.019747069, 0.019772056, 0.019798111, 0.019826069, 0.019856069, 0.019886097, 0.019912069, 0.019939125, 0.019967083, 0.019996083, 0.020023097, 0.020047097, 0.020075...</msg>
<status status="PASS" starttime="20201117 14:42:29.467" endtime="20201117 14:42:29.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.484" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.483" endtime="20201117 14:42:29.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.487" level="INFO">VALUE: [2.212499999999784e-05, 2.168099999999909e-05, 2.208299999999913e-05, 2.123700000000034e-05, 2.14029999999997e-05, 2.1458000000001975e-05, 2.1472000000001545e-05, 2.158299999999863e-05, 2.126300000000053e-05, 2.191699999999977e-05, 2.1443999999998936e-05, 2.2152000000000976e-05, 2.1277999999999575e-05, 2.1443999999998936e-05, 2.162500000000081e-05, 2.1264000000000005e-05, 2.180499999999974e-05, 2.206899999999956e-05, 2.137500000000056e-05, 2.1499999999997216e-05, 2.1291999999999145e-05, 2.14029999999997e-05, 2.206899999999956e-05, 2.1264000000000005e-05, 2.141700000000274e-05, 2.1555999999998965e-05, 2.141700000000274e-05, 2.162500000000081e-05, 2.14029999999997e-05, 2.1264000000000005e-05, 2.2000000000001185e-05, 2.195899999999848e-05, 2.194500000000238e-05, 2.195899999999848e-05, 2.1486000000001115e-05, 2.181899999999931e-05, 2.186100000000149e-05, 2.1791999999999645e-05, 2.136099999999752e-05, 2.1749999999997466e-05, 2.162500000000081e-05, 2.188899999999716e-05, 2.1584000000001574e-05, 2.2166000000000546e-05, 2.131899999999881e-05, 2.1679999999999616e-05, 2.1250000000000435e-05, 2.183299999999888e-05, 2.1972000000002045e-05, 2.1443999999998936e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.485" endtime="20201117 14:42:29.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.480" endtime="20201117 14:42:29.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.490" endtime="20201117 14:42:29.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.493" endtime="20201117 14:42:29.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.492" endtime="20201117 14:42:29.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.488" endtime="20201117 14:42:29.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.124" endtime="20201117 14:42:29.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.729" endtime="20201117 14:42:29.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.728" endtime="20201117 14:42:29.514"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.517" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.526" endtime="20201117 14:42:29.540"></status>
</kw>
<msg timestamp="20201117 14:42:29.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.524" endtime="20201117 14:42:29.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.541" endtime="20201117 14:42:29.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.544" endtime="20201117 14:42:29.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.521" endtime="20201117 14:42:29.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.519" endtime="20201117 14:42:29.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.553" endtime="20201117 14:42:29.841"></status>
</kw>
<msg timestamp="20201117 14:42:29.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.551" endtime="20201117 14:42:29.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.845" endtime="20201117 14:42:29.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.853" endtime="20201117 14:42:29.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.549" endtime="20201117 14:42:29.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.547" endtime="20201117 14:42:29.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.860" level="INFO">${RESULT} = [{'time': 0.023049875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.023079875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:29.856" endtime="20201117 14:42:29.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.873" level="INFO">${ACCURACY} = {'time': [0.023049875, 0.023079875, 0.023109875, 0.023139875, 0.023169958, 0.023197903, 0.023227889, 0.023253889, 0.023284917, 0.023315917, 0.023341903, 0.023371903, 0.023396903, 0.023421917, 0.023452...</msg>
<status status="PASS" starttime="20201117 14:42:29.861" endtime="20201117 14:42:29.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.878" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.877" endtime="20201117 14:42:29.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.880" level="INFO">VALUE: [2.1236000000000865e-05, 2.2028000000000325e-05, 2.2193999999999686e-05, 2.2028000000000325e-05, 2.184700000000192e-05, 2.138900000000013e-05, 2.1320000000001754e-05, 2.1985999999998146e-05, 2.1347999999997425e-05, 2.1541999999999395e-05, 2.2069999999999035e-05, 2.1471999999998076e-05, 2.19030000000002e-05, 2.2028000000000325e-05, 2.1764000000000505e-05, 2.219500000000263e-05, 2.2055999999999465e-05, 2.2137999999997937e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.1971999999998576e-05, 2.179100000000017e-05, 2.1264000000000005e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.154099999999992e-05, 2.1514000000000255e-05, 2.179100000000017e-05, 2.1429999999999366e-05, 2.137499999999709e-05, 2.1472000000001545e-05, 2.1778000000000075e-05, 2.2180000000000116e-05, 2.1848000000001394e-05, 2.1222000000001295e-05, 2.1485999999997646e-05, 2.208299999999913e-05, 2.1957999999999006e-05, 2.1791999999999645e-05, 2.187499999999759e-05, 2.165299999999995e-05, 2.1486000000001115e-05, 2.14029999999997e-05, 2.1708000000002226e-05, 2.1735999999997896e-05, 2.159700000000167e-05, 2.2000000000001185e-05, 2.2000000000001185e-05, 2.1291999999999145e-05, 2.1472000000001545e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.879" endtime="20201117 14:42:29.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.874" endtime="20201117 14:42:29.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.884" endtime="20201117 14:42:29.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.887" endtime="20201117 14:42:29.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.885" endtime="20201117 14:42:29.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.882" endtime="20201117 14:42:29.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.517" endtime="20201117 14:42:29.908"></status>
</kw>
<msg timestamp="20201117 14:42:29.908" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.917" endtime="20201117 14:42:29.932"></status>
</kw>
<msg timestamp="20201117 14:42:29.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.915" endtime="20201117 14:42:29.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.934" endtime="20201117 14:42:29.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.936" endtime="20201117 14:42:29.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.913" endtime="20201117 14:42:29.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.910" endtime="20201117 14:42:29.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.945" endtime="20201117 14:42:30.232"></status>
</kw>
<msg timestamp="20201117 14:42:30.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.944" endtime="20201117 14:42:30.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.237" endtime="20201117 14:42:30.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.245" endtime="20201117 14:42:30.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.941" endtime="20201117 14:42:30.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.939" endtime="20201117 14:42:30.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.252" level="INFO">${RESULT} = [{'time': 0.020188958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212500000000131e-05, 'source_diff': 2.212500000000131e-05}, {'time': 0.020215014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:30.248" endtime="20201117 14:42:30.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.265" level="INFO">${ACCURACY} = {'time': [0.020188958, 0.020215014, 0.020242972, 0.020273986, 0.020303986, 0.020327986, 0.020356986, 0.020381986, 0.02041, 0.020435, 0.020463986, 0.020489986, 0.020518, 0.020542014, 0.020568014, 0.020...</msg>
<status status="PASS" starttime="20201117 14:42:30.253" endtime="20201117 14:42:30.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.270" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.269" endtime="20201117 14:42:30.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.272" level="INFO">VALUE: [2.212500000000131e-05, 2.1819999999998785e-05, 2.1458000000001975e-05, 2.2028000000000325e-05, 2.133299999999838e-05, 2.1514000000000255e-05, 2.215300000000045e-05, 2.1486000000001115e-05, 2.187500000000106e-05, 2.2207999999999256e-05, 2.1721999999998326e-05, 2.1764000000000505e-05, 2.1458000000001975e-05, 2.144500000000188e-05, 2.2014000000000755e-05, 2.168099999999909e-05, 2.14029999999997e-05, 2.2055999999999465e-05, 2.1306000000002184e-05, 2.209700000000217e-05, 2.183300000000235e-05, 2.195900000000195e-05, 2.2207999999999256e-05, 2.1250000000000435e-05, 2.15969999999982e-05, 2.1750000000000935e-05, 2.170899999999823e-05, 2.166699999999952e-05, 2.119499999999816e-05, 2.2000000000001185e-05, 2.1791999999999645e-05, 2.1597999999997675e-05, 2.1500000000000685e-05, 2.1277999999999575e-05, 2.1305999999998715e-05, 2.1457999999998506e-05, 2.1958000000002476e-05, 2.179100000000017e-05, 2.152700000000035e-05, 2.137500000000056e-05, 2.130499999999924e-05, 2.1264000000000005e-05, 2.206899999999956e-05, 2.206900000000303e-05, 2.205499999999999e-05, 2.156899999999906e-05, 2.1429999999999366e-05, 2.156899999999906e-05, 2.166699999999952e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.271" endtime="20201117 14:42:30.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.266" endtime="20201117 14:42:30.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.276" endtime="20201117 14:42:30.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.279" endtime="20201117 14:42:30.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.278" endtime="20201117 14:42:30.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.274" endtime="20201117 14:42:30.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.909" endtime="20201117 14:42:30.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.516" endtime="20201117 14:42:30.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.515" endtime="20201117 14:42:30.301"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.303" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.311" endtime="20201117 14:42:30.326"></status>
</kw>
<msg timestamp="20201117 14:42:30.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.310" endtime="20201117 14:42:30.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.327" endtime="20201117 14:42:30.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.330" endtime="20201117 14:42:30.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.307" endtime="20201117 14:42:30.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.305" endtime="20201117 14:42:30.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.339" endtime="20201117 14:42:30.627"></status>
</kw>
<msg timestamp="20201117 14:42:30.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.337" endtime="20201117 14:42:30.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.631" endtime="20201117 14:42:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.639" endtime="20201117 14:42:30.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.335" endtime="20201117 14:42:30.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.333" endtime="20201117 14:42:30.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.646" level="INFO">${RESULT} = [{'time': 0.022089083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.022117042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:30.643" endtime="20201117 14:42:30.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.661" level="INFO">${ACCURACY} = {'time': [0.022089083, 0.022117042, 0.022147042, 0.022172097, 0.022197042, 0.022223056, 0.022251069, 0.022282056, 0.022308056, 0.022335069, 0.022366069, 0.022396069, 0.022423069, 0.022448069, 0.022475...</msg>
<status status="PASS" starttime="20201117 14:42:30.647" endtime="20201117 14:42:30.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.666" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.665" endtime="20201117 14:42:30.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.668" level="INFO">VALUE: [2.2235999999998396e-05, 2.218099999999959e-05, 2.1499999999997216e-05, 2.206900000000303e-05, 2.172300000000127e-05, 2.2014000000000755e-05, 2.211099999999827e-05, 2.1598000000001144e-05, 2.1833999999998355e-05, 2.1887999999997687e-05, 2.184699999999845e-05, 2.17770000000006e-05, 2.133300000000185e-05, 2.1722000000001795e-05, 2.212500000000131e-05, 2.1693999999999186e-05, 2.1957999999999006e-05, 2.205499999999999e-05, 2.180499999999974e-05, 2.2028000000000325e-05, 2.161100000000124e-05, 2.163900000000038e-05, 2.159700000000167e-05, 2.1943999999999436e-05, 2.181899999999931e-05, 2.1429999999999366e-05, 2.155499999999949e-05, 2.1236000000000865e-05, 2.188900000000063e-05, 2.184700000000192e-05, 2.1584000000001574e-05, 2.1708000000002226e-05, 2.191699999999977e-05, 2.1584000000001574e-05, 2.15830000000021e-05, 2.2028000000000325e-05, 2.136099999999752e-05, 2.2098000000001644e-05, 2.1570000000002004e-05, 2.1597999999997675e-05, 2.144500000000188e-05, 2.137500000000056e-05, 2.155499999999949e-05, 2.2028000000000325e-05, 2.169500000000213e-05, 2.118099999999859e-05, 2.2041999999999895e-05, 2.215300000000045e-05, 2.1362000000000464e-05, 2.197299999999805e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.667" endtime="20201117 14:42:30.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.662" endtime="20201117 14:42:30.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.672" endtime="20201117 14:42:30.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.676" endtime="20201117 14:42:30.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.674" endtime="20201117 14:42:30.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.670" endtime="20201117 14:42:30.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.304" endtime="20201117 14:42:30.696"></status>
</kw>
<msg timestamp="20201117 14:42:30.697" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.705" endtime="20201117 14:42:30.719"></status>
</kw>
<msg timestamp="20201117 14:42:30.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.704" endtime="20201117 14:42:30.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.721" endtime="20201117 14:42:30.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.724" endtime="20201117 14:42:30.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.701" endtime="20201117 14:42:30.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.699" endtime="20201117 14:42:30.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.733" endtime="20201117 14:42:31.021"></status>
</kw>
<msg timestamp="20201117 14:42:31.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:30.731" endtime="20201117 14:42:31.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:31.025" endtime="20201117 14:42:31.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.033" endtime="20201117 14:42:31.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.729" endtime="20201117 14:42:31.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.727" endtime="20201117 14:42:31.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.040" level="INFO">${RESULT} = [{'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.136099999999752e-05, 'source_diff': 2.136099999999752e-05}, {'time': 0.019735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1...</msg>
<status status="PASS" starttime="20201117 14:42:31.037" endtime="20201117 14:42:31.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.054" level="INFO">${ACCURACY} = {'time': [0.019707, 0.019735, 0.019766028, 0.019791, 0.019816014, 0.019846014, 0.019877028, 0.019902014, 0.019927028, 0.019955042, 0.019983042, 0.020008042, 0.020039042, 0.020064056, 0.020094042, 0.02...</msg>
<status status="PASS" starttime="20201117 14:42:31.041" endtime="20201117 14:42:31.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.058" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.057" endtime="20201117 14:42:31.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.061" level="INFO">VALUE: [2.136099999999752e-05, 2.1207999999998256e-05, 2.1986000000001615e-05, 2.1305999999998715e-05, 2.1236000000000865e-05, 2.1957999999999006e-05, 2.2084000000002074e-05, 2.1778000000000075e-05, 2.194499999999891e-05, 2.2097999999998175e-05, 2.163900000000038e-05, 2.220899999999873e-05, 2.1598000000001144e-05, 2.1805999999999215e-05, 2.1555999999998965e-05, 2.187499999999759e-05, 2.144500000000188e-05, 2.1264000000000005e-05, 2.17770000000006e-05, 2.179100000000017e-05, 2.1972000000002045e-05, 2.126300000000053e-05, 2.1929999999999866e-05, 2.1402000000000226e-05, 2.1708000000002226e-05, 2.1721999999998326e-05, 2.1722000000001795e-05, 2.1722000000001795e-05, 2.1929999999999866e-05, 2.158299999999863e-05, 2.1443999999998936e-05, 2.1749999999997466e-05, 2.1679999999999616e-05, 2.1264000000000005e-05, 2.2084000000002074e-05, 2.1264000000000005e-05, 2.1208000000001725e-05, 2.131899999999881e-05, 2.1443999999998936e-05, 2.165299999999995e-05, 2.216700000000002e-05, 2.162499999999734e-05, 2.141699999999927e-05, 2.1222000000001295e-05, 2.1500000000000685e-05, 2.138900000000013e-05, 2.194499999999891e-05, 2.163900000000038e-05, 2.194499999999891e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.059" endtime="20201117 14:42:31.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.055" endtime="20201117 14:42:31.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.064" endtime="20201117 14:42:31.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.068" endtime="20201117 14:42:31.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.066" endtime="20201117 14:42:31.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.063" endtime="20201117 14:42:31.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.697" endtime="20201117 14:42:31.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.302" endtime="20201117 14:42:31.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.301" endtime="20201117 14:42:31.089"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.091" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.100" endtime="20201117 14:42:31.115"></status>
</kw>
<msg timestamp="20201117 14:42:31.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.098" endtime="20201117 14:42:31.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.117" endtime="20201117 14:42:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.119" endtime="20201117 14:42:31.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.096" endtime="20201117 14:42:31.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.094" endtime="20201117 14:42:31.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.129" endtime="20201117 14:42:31.415"></status>
</kw>
<msg timestamp="20201117 14:42:31.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.127" endtime="20201117 14:42:31.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.419" endtime="20201117 14:42:31.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.428" endtime="20201117 14:42:31.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.125" endtime="20201117 14:42:31.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.123" endtime="20201117 14:42:31.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.435" level="INFO">${RESULT} = [{'time': 0.022493306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.298700000000209e-05, 'source_diff': 2.298700000000209e-05}, {'time': 0.022525375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.431" endtime="20201117 14:42:31.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.448" level="INFO">${ACCURACY} = {'time': [0.022493306, 0.022525375, 0.022551306, 0.022580319, 0.022611319, 0.022642319, 0.022670333, 0.022699361, 0.022727333, 0.022758333, 0.022790333, 0.022818347, 0.022849347, 0.022875347, 0.022905...</msg>
<status status="PASS" starttime="20201117 14:42:31.436" endtime="20201117 14:42:31.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.453" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.452" endtime="20201117 14:42:31.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.456" level="INFO">VALUE: [2.298700000000209e-05, 2.236100000000199e-05, 2.316700000000102e-05, 2.284700000000292e-05, 2.2722000000002796e-05, 2.255500000000049e-05, 2.288900000000163e-05, 2.312500000000231e-05, 2.238899999999766e-05, 2.2790999999997702e-05, 2.25969999999992e-05, 2.288899999999816e-05, 2.2707999999999756e-05, 2.3194000000000686e-05, 2.2792000000000645e-05, 2.2457999999999506e-05, 2.265300000000095e-05, 2.256900000000006e-05, 2.280500000000074e-05, 2.238899999999766e-05, 2.2555999999999965e-05, 2.233300000000285e-05, 2.236099999999852e-05, 2.2514000000001255e-05, 2.283299999999988e-05, 2.2736000000002365e-05, 2.261099999999877e-05, 2.2735999999998896e-05, 2.3083999999999605e-05, 2.268100000000009e-05, 2.2264000000001005e-05, 2.287500000000206e-05, 2.3180000000001116e-05, 2.3000000000002185e-05, 2.270899999999923e-05, 2.295899999999948e-05, 2.2264000000001005e-05, 2.30969999999997e-05, 2.2735999999998896e-05, 2.2679999999997147e-05, 2.287499999999859e-05, 2.2278000000000575e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.3180000000001116e-05, 2.2250000000001435e-05, 2.2250000000001435e-05, 2.2430000000000366e-05, 2.261100000000224e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.454" endtime="20201117 14:42:31.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.449" endtime="20201117 14:42:31.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.459" endtime="20201117 14:42:31.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.462" endtime="20201117 14:42:31.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.461" endtime="20201117 14:42:31.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.457" endtime="20201117 14:42:31.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.092" endtime="20201117 14:42:31.483"></status>
</kw>
<msg timestamp="20201117 14:42:31.483" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.492" endtime="20201117 14:42:31.507"></status>
</kw>
<msg timestamp="20201117 14:42:31.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.490" endtime="20201117 14:42:31.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.508" endtime="20201117 14:42:31.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.511" endtime="20201117 14:42:31.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.488" endtime="20201117 14:42:31.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.486" endtime="20201117 14:42:31.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.520" endtime="20201117 14:42:31.807"></status>
</kw>
<msg timestamp="20201117 14:42:31.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.518" endtime="20201117 14:42:31.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.811" endtime="20201117 14:42:31.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.820" endtime="20201117 14:42:31.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.516" endtime="20201117 14:42:31.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.514" endtime="20201117 14:42:31.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.827" level="INFO">${RESULT} = [{'time': 0.020278722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.233299999999938e-05, 'source_diff': 2.233299999999938e-05}, {'time': 0.020304736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.823" endtime="20201117 14:42:31.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.840" level="INFO">${ACCURACY} = {'time': [0.020278722, 0.020304736, 0.020332708, 0.020364722, 0.020389722, 0.020417778, 0.020443806, 0.020468736, 0.020499736, 0.020527764, 0.020553736, 0.020581778, 0.02061275, 0.02064375, 0.02067175...</msg>
<status status="PASS" starttime="20201117 14:42:31.828" endtime="20201117 14:42:31.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.845" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.844" endtime="20201117 14:42:31.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.848" level="INFO">VALUE: [2.233299999999938e-05, 2.2250000000001435e-05, 2.312500000000231e-05, 2.2277999999997106e-05, 2.234699999999895e-05, 2.262500000000181e-05, 2.2319999999999285e-05, 2.2486000000002115e-05, 2.231899999999981e-05, 2.258299999999963e-05, 2.2278000000000575e-05, 2.243099999999984e-05, 2.3194000000000686e-05, 2.2555999999999965e-05, 2.24030000000007e-05, 2.294499999999991e-05, 2.2971999999999576e-05, 2.284699999999945e-05, 2.2999999999998716e-05, 2.284699999999945e-05, 2.269499999999966e-05, 2.315299999999798e-05, 2.288899999999816e-05, 2.2555999999999965e-05, 2.272300000000227e-05, 2.2555999999999965e-05, 2.2569999999999535e-05, 2.2236000000001865e-05, 2.2305999999999715e-05, 2.2694000000000186e-05, 2.318100000000059e-05, 2.2319999999999285e-05, 2.243099999999984e-05, 2.2790999999997702e-05, 2.30969999999997e-05, 2.2528000000000825e-05, 2.2666000000001046e-05, 2.2443999999999936e-05, 2.284699999999945e-05, 2.2694000000000186e-05, 2.254100000000092e-05, 2.3040999999997952e-05, 2.3000000000002185e-05, 2.279100000000117e-05, 2.2694000000000186e-05, 2.2486000000002115e-05, 2.263900000000138e-05, 2.2958000000000006e-05, 2.2763999999998036e-05, 2.2958000000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.846" endtime="20201117 14:42:31.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.841" endtime="20201117 14:42:31.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.851" endtime="20201117 14:42:31.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.854" endtime="20201117 14:42:31.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.853" endtime="20201117 14:42:31.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.849" endtime="20201117 14:42:31.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.484" endtime="20201117 14:42:31.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.090" endtime="20201117 14:42:31.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.089" endtime="20201117 14:42:31.876"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.878" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.886" endtime="20201117 14:42:31.902"></status>
</kw>
<msg timestamp="20201117 14:42:31.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.885" endtime="20201117 14:42:31.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.904" endtime="20201117 14:42:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.907" endtime="20201117 14:42:31.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.882" endtime="20201117 14:42:31.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.880" endtime="20201117 14:42:31.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.916" endtime="20201117 14:42:32.203"></status>
</kw>
<msg timestamp="20201117 14:42:32.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.914" endtime="20201117 14:42:32.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.207" endtime="20201117 14:42:32.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.215" endtime="20201117 14:42:32.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.911" endtime="20201117 14:42:32.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.910" endtime="20201117 14:42:32.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.222" level="INFO">${RESULT} = [{'time': 0.022874639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.022906625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:32.219" endtime="20201117 14:42:32.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.238" level="INFO">${ACCURACY} = {'time': [0.022874639, 0.022906625, 0.022934639, 0.022961667, 0.022994667, 0.023022639, 0.023048667, 0.023074653, 0.023104653, 0.023131667, 0.023163667, 0.023191681, 0.023223667, 0.023252694, 0.023278...</msg>
<status status="PASS" starttime="20201117 14:42:32.223" endtime="20201117 14:42:32.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.242" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.241" endtime="20201117 14:42:32.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.245" level="INFO">VALUE: [2.3763999999999036e-05, 2.416699999999855e-05, 2.383300000000088e-05, 2.3514000000002255e-05, 2.4098000000000175e-05, 2.383300000000088e-05, 2.363899999999891e-05, 2.365300000000195e-05, 2.345899999999998e-05, 2.372300000000327e-05, 2.4041999999998426e-05, 2.3305999999997246e-05, 2.395900000000048e-05, 2.3916000000002297e-05, 2.343100000000084e-05, 2.333300000000038e-05, 2.3791999999998176e-05, 2.370900000000023e-05, 2.344499999999694e-05, 2.383300000000088e-05, 2.334699999999995e-05, 2.380500000000174e-05, 2.3972000000000576e-05, 2.3235999999999396e-05, 2.4165999999999077e-05, 2.358300000000063e-05, 2.4013999999999286e-05, 2.4013999999999286e-05, 2.386100000000002e-05, 2.380500000000174e-05, 2.334699999999995e-05, 2.3472000000000076e-05, 2.383300000000088e-05, 2.369499999999719e-05, 2.366699999999805e-05, 2.39169999999983e-05, 2.3722000000000326e-05, 2.3514000000002255e-05, 2.336099999999952e-05, 2.338900000000213e-05, 2.394500000000091e-05, 2.336099999999952e-05, 2.363900000000238e-05, 2.3972000000000576e-05, 2.393100000000134e-05, 2.3792000000001645e-05, 2.3735999999999896e-05, 2.355500000000149e-05, 2.3348000000002894e-05, 2.3763999999999036e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.243" endtime="20201117 14:42:32.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.238" endtime="20201117 14:42:32.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.248" endtime="20201117 14:42:32.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.251" endtime="20201117 14:42:32.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.250" endtime="20201117 14:42:32.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.246" endtime="20201117 14:42:32.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.879" endtime="20201117 14:42:32.272"></status>
</kw>
<msg timestamp="20201117 14:42:32.272" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.281" endtime="20201117 14:42:32.296"></status>
</kw>
<msg timestamp="20201117 14:42:32.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.279" endtime="20201117 14:42:32.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.298" endtime="20201117 14:42:32.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.300" endtime="20201117 14:42:32.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.277" endtime="20201117 14:42:32.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.275" endtime="20201117 14:42:32.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.309" endtime="20201117 14:42:32.594"></status>
</kw>
<msg timestamp="20201117 14:42:32.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.308" endtime="20201117 14:42:32.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.599" endtime="20201117 14:42:32.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.607" endtime="20201117 14:42:32.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.305" endtime="20201117 14:42:32.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.303" endtime="20201117 14:42:32.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.614" level="INFO">${RESULT} = [{'time': 0.019872111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3472000000000076e-05, 'source_diff': 2.3472000000000076e-05}, {'time': 0.019900111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:32.611" endtime="20201117 14:42:32.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.628" level="INFO">${ACCURACY} = {'time': [0.019872111, 0.019900111, 0.019929111, 0.019960125, 0.019988139, 0.020017139, 0.020050153, 0.020079139, 0.020111139, 0.020143194, 0.020172153, 0.020198167, 0.020229153, 0.020257208, 0.020283...</msg>
<status status="PASS" starttime="20201117 14:42:32.615" endtime="20201117 14:42:32.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.632" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.631" endtime="20201117 14:42:32.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.635" level="INFO">VALUE: [2.3472000000000076e-05, 2.3514000000002255e-05, 2.4041999999998426e-05, 2.365299999999848e-05, 2.3527999999998356e-05, 2.363899999999891e-05, 2.3320000000000285e-05, 2.34169999999978e-05, 2.3958000000001006e-05, 2.4249999999999966e-05, 2.365300000000195e-05, 2.368100000000109e-05, 2.3221999999999826e-05, 2.334699999999995e-05, 2.336100000000299e-05, 2.369500000000066e-05, 2.3597999999999675e-05, 2.379100000000217e-05, 2.348699999999912e-05, 2.3999999999999716e-05, 2.3861999999999495e-05, 2.372300000000327e-05, 2.3277999999998106e-05, 2.3679999999998147e-05, 2.3776999999999132e-05, 2.3208000000000256e-05, 2.358300000000063e-05, 2.3944000000001436e-05, 2.3264000000002005e-05, 2.3999999999999716e-05, 2.334699999999995e-05, 2.4179999999998647e-05, 2.336099999999952e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.316700000000102e-05, 2.365299999999848e-05, 2.415300000000245e-05, 2.412499999999984e-05, 2.356900000000106e-05, 2.3958000000001006e-05, 2.3457999999997037e-05, 2.336099999999952e-05, 2.35970000000002e-05, 2.3708000000000756e-05, 2.4056000000001465e-05, 2.336100000000299e-05, 2.365299999999848e-05, 2.4013999999999286e-05, 2.3847999999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.633" endtime="20201117 14:42:32.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.629" endtime="20201117 14:42:32.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.638" endtime="20201117 14:42:32.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.641" endtime="20201117 14:42:32.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.640" endtime="20201117 14:42:32.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.636" endtime="20201117 14:42:32.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.273" endtime="20201117 14:42:32.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.877" endtime="20201117 14:42:32.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.876" endtime="20201117 14:42:32.663"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.665" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.673" endtime="20201117 14:42:32.690"></status>
</kw>
<msg timestamp="20201117 14:42:32.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.672" endtime="20201117 14:42:32.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.691" endtime="20201117 14:42:32.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.694" endtime="20201117 14:42:32.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.669" endtime="20201117 14:42:32.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.667" endtime="20201117 14:42:32.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.703" endtime="20201117 14:42:32.991"></status>
</kw>
<msg timestamp="20201117 14:42:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:32.702" endtime="20201117 14:42:32.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:32.995" endtime="20201117 14:42:33.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.004" endtime="20201117 14:42:33.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.699" endtime="20201117 14:42:33.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.697" endtime="20201117 14:42:33.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.011" level="INFO">${RESULT} = [{'time': 0.0231845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.44169999999988e-05, 'source_diff': 2.44169999999988e-05}, {'time': 0.023211514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201117 14:42:33.008" endtime="20201117 14:42:33.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.025" level="INFO">${ACCURACY} = {'time': [0.0231845, 0.023211514, 0.023239514, 0.023269528, 0.023303514, 0.023337528, 0.023364528, 0.023395528, 0.023425542, 0.023454556, 0.023484556, 0.023511556, 0.023539542, 0.023572556, 0.02360456...</msg>
<status status="PASS" starttime="20201117 14:42:33.012" endtime="20201117 14:42:33.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.030" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.029" endtime="20201117 14:42:33.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.032" level="INFO">VALUE: [2.44169999999988e-05, 2.443099999999837e-05, 2.518099999999912e-05, 2.5041999999999426e-05, 2.5000000000000716e-05, 2.4834000000001355e-05, 2.4263999999999536e-05, 2.4846999999997982e-05, 2.4570000000001535e-05, 2.5027999999999856e-05, 2.4598000000000675e-05, 2.4500000000000216e-05, 2.4500000000000216e-05, 2.495900000000148e-05, 2.4999999999997247e-05, 2.4722000000001326e-05, 2.5027999999999856e-05, 2.4943999999998967e-05, 2.4582999999998162e-05, 2.4902000000000257e-05, 2.458300000000163e-05, 2.4304999999998772e-05, 2.4777999999999606e-05, 2.4236000000000396e-05, 2.4528000000002825e-05, 2.5014000000000286e-05, 2.4707999999998287e-05, 2.4304999999998772e-05, 2.456900000000206e-05, 2.4292000000002145e-05, 2.4249999999999966e-05, 2.4320000000001285e-05, 2.4707999999998287e-05, 2.5082999999998662e-05, 2.438899999999966e-05, 2.462500000000034e-05, 2.4291999999998676e-05, 2.4958000000002006e-05, 2.466699999999905e-05, 2.4513000000000312e-05, 2.436100000000052e-05, 2.4610999999997302e-05, 2.513900000000041e-05, 2.487500000000059e-05, 2.5096999999998232e-05, 2.4556000000001965e-05, 2.5000000000000716e-05, 2.493099999999887e-05, 2.462500000000034e-05, 2.4444000000001936e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.031" endtime="20201117 14:42:33.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.026" endtime="20201117 14:42:33.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.035" endtime="20201117 14:42:33.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.039" endtime="20201117 14:42:33.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.037" endtime="20201117 14:42:33.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.034" endtime="20201117 14:42:33.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.666" endtime="20201117 14:42:33.060"></status>
</kw>
<msg timestamp="20201117 14:42:33.060" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.068" endtime="20201117 14:42:33.083"></status>
</kw>
<msg timestamp="20201117 14:42:33.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.067" endtime="20201117 14:42:33.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.085" endtime="20201117 14:42:33.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.088" endtime="20201117 14:42:33.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.064" endtime="20201117 14:42:33.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.062" endtime="20201117 14:42:33.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.097" endtime="20201117 14:42:33.383"></status>
</kw>
<msg timestamp="20201117 14:42:33.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.096" endtime="20201117 14:42:33.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.387" endtime="20201117 14:42:33.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.396" endtime="20201117 14:42:33.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.093" endtime="20201117 14:42:33.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.091" endtime="20201117 14:42:33.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.402" level="INFO">${RESULT} = [{'time': 0.019721681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4862000000000495e-05, 'source_diff': 2.4862000000000495e-05}, {'time': 0.019752681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:33.399" endtime="20201117 14:42:33.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.416" level="INFO">${ACCURACY} = {'time': [0.019721681, 0.019752681, 0.019783681, 0.019811681, 0.019844694, 0.019876764, 0.019906708, 0.019934708, 0.019967722, 0.019999722, 0.020032708, 0.020062736, 0.020096736, 0.020130722, 0.020164...</msg>
<status status="PASS" starttime="20201117 14:42:33.403" endtime="20201117 14:42:33.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.420" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.419" endtime="20201117 14:42:33.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.423" level="INFO">VALUE: [2.4862000000000495e-05, 2.5098000000001175e-05, 2.493100000000234e-05, 2.4542000000002395e-05, 2.5027000000000382e-05, 2.4820000000001785e-05, 2.4332999999997912e-05, 2.4471999999997607e-05, 2.4679999999999147e-05, 2.5000000000000716e-05, 2.4554999999999022e-05, 2.488900000000016e-05, 2.462500000000034e-05, 2.4986000000001146e-05, 2.4764000000000036e-05, 2.4610999999997302e-05, 2.4249999999999966e-05, 2.5193999999999217e-05, 2.4334000000000855e-05, 2.4208000000001256e-05, 2.4485999999997177e-05, 2.463899999999991e-05, 2.4805999999998746e-05, 2.4513999999999786e-05, 2.513900000000041e-05, 2.4735999999997427e-05, 2.4570000000001535e-05, 2.463899999999991e-05, 2.49169999999993e-05, 2.466699999999905e-05, 2.4736000000000896e-05, 2.519500000000216e-05, 2.5000000000000716e-05, 2.447300000000055e-05, 2.462500000000034e-05, 2.4848000000000925e-05, 2.5027999999999856e-05, 2.4513000000000312e-05, 2.5069999999998566e-05, 2.4443999999998467e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.5068999999999092e-05, 2.5027999999999856e-05, 2.5193999999999217e-05, 2.4943999999998967e-05, 2.436099999999705e-05, 2.5040999999999952e-05, 2.4443999999998467e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.421" endtime="20201117 14:42:33.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.417" endtime="20201117 14:42:33.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.426" endtime="20201117 14:42:33.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.430" endtime="20201117 14:42:33.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.428" endtime="20201117 14:42:33.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.424" endtime="20201117 14:42:33.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.061" endtime="20201117 14:42:33.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.664" endtime="20201117 14:42:33.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.663" endtime="20201117 14:42:33.451"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.453" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.467" endtime="20201117 14:42:33.484"></status>
</kw>
<msg timestamp="20201117 14:42:33.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.466" endtime="20201117 14:42:33.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.485" endtime="20201117 14:42:33.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.487" endtime="20201117 14:42:33.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.463" endtime="20201117 14:42:33.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.455" endtime="20201117 14:42:33.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.497" endtime="20201117 14:42:33.784"></status>
</kw>
<msg timestamp="20201117 14:42:33.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028647958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028673986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.495" endtime="20201117 14:42:33.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028647958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028673986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.788" endtime="20201117 14:42:33.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.796" endtime="20201117 14:42:33.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.492" endtime="20201117 14:42:33.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.491" endtime="20201117 14:42:33.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.803" level="INFO">${RESULT} = [{'time': 0.028673986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6027999999997387e-05, 'source_diff': 2.6027999999997387e-05}, {'time': 0.028709014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:33.799" endtime="20201117 14:42:33.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.818" level="INFO">${ACCURACY} = {'time': [0.028673986, 0.028709014, 0.028744, 0.028775014, 0.028809, 0.028840028, 0.028869014, 0.028899014, 0.028930069, 0.028965028, 0.028997042, 0.029030042, 0.029063056, 0.029092056, 0.029126042, 0...</msg>
<status status="PASS" starttime="20201117 14:42:33.804" endtime="20201117 14:42:33.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.822" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.821" endtime="20201117 14:42:33.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.825" level="INFO">VALUE: [2.6027999999997387e-05, 2.537500000000109e-05, 2.5832999999999412e-05, 2.612500000000184e-05, 2.5943999999999967e-05, 2.590300000000073e-05, 2.5221999999998357e-05, 2.5986000000002146e-05, 2.5387999999997718e-05, 2.5528000000000356e-05, 2.5236000000001396e-05, 2.597299999999858e-05, 2.616700000000055e-05, 2.597300000000205e-05, 2.547300000000155e-05, 2.5348000000001425e-05, 2.5514000000000786e-05, 2.5943999999999967e-05, 2.544500000000241e-05, 2.5791000000000702e-05, 2.5666000000000577e-05, 2.5665999999997108e-05, 2.544499999999894e-05, 2.6041000000000952e-05, 2.5250000000000966e-05, 2.5596999999998732e-05, 2.5499999999997747e-05, 2.5193999999999217e-05, 2.5749999999997997e-05, 2.538899999999719e-05, 2.5555000000000022e-05, 2.5221999999998357e-05, 2.5596999999998732e-05, 2.5764000000001036e-05, 2.5179999999999647e-05, 2.537499999999762e-05, 2.6013999999997817e-05, 2.5707999999999287e-05, 2.543099999999937e-05, 2.5485999999998177e-05, 2.5236000000001396e-05, 2.6000000000001716e-05, 2.561100000000177e-05, 2.566700000000005e-05, 2.5264000000000536e-05, 2.590300000000073e-05, 2.6069999999999566e-05, 2.597300000000205e-05, 2.6042000000000426e-05, 2.5333999999998386e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.823" endtime="20201117 14:42:33.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.819" endtime="20201117 14:42:33.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.828" endtime="20201117 14:42:33.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.832" endtime="20201117 14:42:33.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.830" endtime="20201117 14:42:33.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.826" endtime="20201117 14:42:33.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.454" endtime="20201117 14:42:33.853"></status>
</kw>
<msg timestamp="20201117 14:42:33.853" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.861" endtime="20201117 14:42:33.877"></status>
</kw>
<msg timestamp="20201117 14:42:33.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.860" endtime="20201117 14:42:33.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.879" endtime="20201117 14:42:33.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.881" endtime="20201117 14:42:33.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.857" endtime="20201117 14:42:33.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.855" endtime="20201117 14:42:33.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.890" endtime="20201117 14:42:34.178"></status>
</kw>
<msg timestamp="20201117 14:42:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204, 'source': 'DUT_IC', 'event': 'FALLING', '...</msg>
<status status="PASS" starttime="20201117 14:42:33.889" endtime="20201117 14:42:34.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204, 'source': 'DUT_IC', 'event': 'FALLING', '...</msg>
<status status="PASS" starttime="20201117 14:42:34.183" endtime="20201117 14:42:34.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.191" endtime="20201117 14:42:34.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.886" endtime="20201117 14:42:34.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.885" endtime="20201117 14:42:34.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.198" level="INFO">${RESULT} = [{'time': 0.0204, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6000000000001716e-05, 'source_diff': 2.6000000000001716e-05}, {'time': 0.020435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6...</msg>
<status status="PASS" starttime="20201117 14:42:34.194" endtime="20201117 14:42:34.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.211" level="INFO">${ACCURACY} = {'time': [0.0204, 0.020435, 0.020468, 0.020497014, 0.020530028, 0.020563014, 0.020597014, 0.020632056, 0.020664042, 0.020693042, 0.020728028, 0.020757056, 0.020786042, 0.020817056, 0.020845042, 0.0208...</msg>
<status status="PASS" starttime="20201117 14:42:34.199" endtime="20201117 14:42:34.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.216" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.215" endtime="20201117 14:42:34.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.218" level="INFO">VALUE: [2.6000000000001716e-05, 2.6068999999996623e-05, 2.5193999999999217e-05, 2.5486000000001646e-05, 2.569499999999919e-05, 2.5736000000001896e-05, 2.5707999999999287e-05, 2.563900000000091e-05, 2.547300000000155e-05, 2.5499999999997747e-05, 2.6055999999999996e-05, 2.5805999999999746e-05, 2.5486000000001646e-05, 2.590300000000073e-05, 2.543100000000284e-05, 2.5805999999999746e-05, 2.593099999999987e-05, 2.5292000000003145e-05, 2.537500000000109e-05, 2.5291000000000202e-05, 2.5555000000000022e-05, 2.5596999999998732e-05, 2.5472000000002076e-05, 2.5971999999999107e-05, 2.586100000000202e-05, 2.6166000000001077e-05, 2.5429999999999897e-05, 2.6069000000000092e-05, 2.5291000000000202e-05, 2.6000000000001716e-05, 2.6069000000000092e-05, 2.5832999999999412e-05, 2.558300000000263e-05, 2.5735999999998427e-05, 2.5457999999999037e-05, 2.563900000000091e-05, 2.5360999999998052e-05, 2.5291999999999676e-05, 2.5221999999998357e-05, 2.5833999999998886e-05, 2.562500000000134e-05, 2.6000000000001716e-05, 2.5555999999999496e-05, 2.6110999999998802e-05, 2.597300000000205e-05, 2.55970000000022e-05, 2.5764000000001036e-05, 2.547299999999808e-05, 2.569499999999919e-05, 2.5221999999998357e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.217" endtime="20201117 14:42:34.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.212" endtime="20201117 14:42:34.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.222" endtime="20201117 14:42:34.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.225" endtime="20201117 14:42:34.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.224" endtime="20201117 14:42:34.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.220" endtime="20201117 14:42:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.854" endtime="20201117 14:42:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.452" endtime="20201117 14:42:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.451" endtime="20201117 14:42:34.247"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.249" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.257" endtime="20201117 14:42:34.274"></status>
</kw>
<msg timestamp="20201117 14:42:34.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.256" endtime="20201117 14:42:34.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.275" endtime="20201117 14:42:34.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.278" endtime="20201117 14:42:34.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.253" endtime="20201117 14:42:34.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.251" endtime="20201117 14:42:34.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.287" endtime="20201117 14:42:34.574"></status>
</kw>
<msg timestamp="20201117 14:42:34.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.286" endtime="20201117 14:42:34.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.579" endtime="20201117 14:42:34.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.587" endtime="20201117 14:42:34.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.283" endtime="20201117 14:42:34.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.281" endtime="20201117 14:42:34.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.594" level="INFO">${RESULT} = [{'time': 0.022834889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.022865889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:34.591" endtime="20201117 14:42:34.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.607" level="INFO">${ACCURACY} = {'time': [0.022834889, 0.022865889, 0.022900958, 0.022932944, 0.022962903, 0.022996903, 0.023029917, 0.023064917, 0.023096917, 0.023128931, 0.023162931, 0.023196944, 0.023227944, 0.023262944, 0.023292...</msg>
<status status="PASS" starttime="20201117 14:42:34.595" endtime="20201117 14:42:34.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.612" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.611" endtime="20201117 14:42:34.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.615" level="INFO">VALUE: [2.6292000000000676e-05, 2.6583000000000162e-05, 2.6374999999998622e-05, 2.6610999999999302e-05, 2.6471999999999607e-05, 2.6263999999998067e-05, 2.718100000000112e-05, 2.7028000000001856e-05, 2.6570000000000066e-05, 2.6583999999999636e-05, 2.643100000000037e-05, 2.6902000000002257e-05, 2.6291000000001202e-05, 2.6637999999998968e-05, 2.6735999999999427e-05, 2.6569000000000592e-05, 2.6555000000001022e-05, 2.6750000000002466e-05, 2.6346999999999482e-05, 2.6471999999999607e-05, 2.7054999999998053e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.666700000000105e-05, 2.7193999999997748e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.7013999999998817e-05, 2.69170000000013e-05, 2.690300000000173e-05, 2.666700000000105e-05, 2.666700000000105e-05, 2.6819999999996846e-05, 2.6764000000002036e-05, 2.7082999999997193e-05, 2.64170000000008e-05, 2.6792000000001176e-05, 2.718100000000112e-05, 2.638900000000166e-05, 2.6347999999998956e-05, 2.6360999999999052e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.6319999999999816e-05, 2.6361999999998526e-05, 2.6319999999999816e-05, 2.6957999999997068e-05, 2.7097000000000232e-05, 2.6596999999999732e-05, 2.6985999999999677e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.613" endtime="20201117 14:42:34.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.608" endtime="20201117 14:42:34.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.618" endtime="20201117 14:42:34.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.621" endtime="20201117 14:42:34.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.620" endtime="20201117 14:42:34.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.616" endtime="20201117 14:42:34.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.249" endtime="20201117 14:42:34.642"></status>
</kw>
<msg timestamp="20201117 14:42:34.642" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.651" endtime="20201117 14:42:34.668"></status>
</kw>
<msg timestamp="20201117 14:42:34.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.649" endtime="20201117 14:42:34.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.669" endtime="20201117 14:42:34.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.673" endtime="20201117 14:42:34.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.647" endtime="20201117 14:42:34.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.645" endtime="20201117 14:42:34.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.684" endtime="20201117 14:42:34.971"></status>
</kw>
<msg timestamp="20201117 14:42:34.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:34.682" endtime="20201117 14:42:34.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:34.975" endtime="20201117 14:42:34.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.984" endtime="20201117 14:42:34.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.679" endtime="20201117 14:42:34.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.677" endtime="20201117 14:42:34.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.990" level="INFO">${RESULT} = [{'time': 0.0205405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6319000000000342e-05, 'source_diff': 2.6319000000000342e-05}, {'time': 0.0205755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:34.987" endtime="20201117 14:42:34.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.004" level="INFO">${ACCURACY} = {'time': [0.0205405, 0.0205755, 0.0206075, 0.0206395, 0.020675542, 0.020704514, 0.020737542, 0.020767514, 0.020801514, 0.020837528, 0.020870528, 0.020903528, 0.020936542, 0.020968556, 0.021003542, 0.0...</msg>
<status status="PASS" starttime="20201117 14:42:34.991" endtime="20201117 14:42:35.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.009" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.008" endtime="20201117 14:42:35.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.011" level="INFO">VALUE: [2.6319000000000342e-05, 2.6485999999999177e-05, 2.7056000000000996e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.6264000000001536e-05, 2.719500000000069e-05, 2.718100000000112e-05, 2.669500000000019e-05, 2.6221999999999357e-05, 2.6860999999999552e-05, 2.693100000000087e-05, 2.638899999999819e-05, 2.666699999999758e-05, 2.6485999999999177e-05, 2.663900000000191e-05, 2.7110999999999802e-05, 2.7111999999999276e-05, 2.665300000000148e-05, 2.695900000000001e-05, 2.6304999999997303e-05, 2.6471999999999607e-05, 2.6555000000001022e-05, 2.6346999999999482e-05, 2.6944000000000967e-05, 2.7013999999998817e-05, 2.6151999999998038e-05, 2.6792000000001176e-05, 2.6305000000000772e-05, 2.6291000000001202e-05, 2.6458000000000037e-05, 2.6708000000000287e-05, 2.7194000000001217e-05, 2.6556000000000496e-05, 2.7056000000000996e-05, 2.6360999999999052e-05, 2.6736000000002896e-05, 2.7194000000001217e-05, 2.6221999999999357e-05, 2.7084000000000136e-05, 2.6528000000001356e-05, 2.6860999999999552e-05, 2.694500000000044e-05, 2.6486000000002646e-05, 2.6263999999998067e-05, 2.716700000000155e-05, 2.693100000000087e-05, 2.64309999999969e-05, 2.6665999999998108e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.010" endtime="20201117 14:42:35.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.005" endtime="20201117 14:42:35.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.015" endtime="20201117 14:42:35.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.018" endtime="20201117 14:42:35.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.016" endtime="20201117 14:42:35.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.013" endtime="20201117 14:42:35.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.643" endtime="20201117 14:42:35.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.248" endtime="20201117 14:42:35.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.247" endtime="20201117 14:42:35.039"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.042" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.050" endtime="20201117 14:42:35.065"></status>
</kw>
<msg timestamp="20201117 14:42:35.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.049" endtime="20201117 14:42:35.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.067" endtime="20201117 14:42:35.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.069" endtime="20201117 14:42:35.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.046" endtime="20201117 14:42:35.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.044" endtime="20201117 14:42:35.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.078" endtime="20201117 14:42:35.366"></status>
</kw>
<msg timestamp="20201117 14:42:35.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.077" endtime="20201117 14:42:35.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.370" endtime="20201117 14:42:35.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.378" endtime="20201117 14:42:35.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.074" endtime="20201117 14:42:35.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.073" endtime="20201117 14:42:35.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.385" level="INFO">${RESULT} = [{'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7943999999998498e-05, 'source_diff': 2.7943999999998498e-05}, {'time': 0.022706861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.382" endtime="20201117 14:42:35.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.400" level="INFO">${ACCURACY} = {'time': [0.022672833, 0.022706861, 0.022741833, 0.022774861, 0.022805847, 0.022838903, 0.022872861, 0.022908875, 0.022945889, 0.022976861, 0.023013875, 0.023047875, 0.023078875, 0.023112889, 0.023143...</msg>
<status status="PASS" starttime="20201117 14:42:35.386" endtime="20201117 14:42:35.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.405" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.404" endtime="20201117 14:42:35.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.407" level="INFO">VALUE: [2.7943999999998498e-05, 2.741699999999833e-05, 2.7499999999999747e-05, 2.7361000000000052e-05, 2.7540999999998983e-05, 2.743100000000137e-05, 2.7861000000000552e-05, 2.7263999999999067e-05, 2.7388999999999192e-05, 2.8194000000002217e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.7235999999999927e-05, 2.7624999999999872e-05, 2.818100000000212e-05, 2.7250000000002966e-05, 2.7638999999999442e-05, 2.8027999999999387e-05, 2.7986000000000677e-05, 2.7999999999996777e-05, 2.79170000000023e-05, 2.818099999999865e-05, 2.7528000000002356e-05, 2.8041999999998957e-05, 2.768099999999815e-05, 2.7707999999997818e-05, 2.743100000000137e-05, 2.8070000000001566e-05, 2.7387999999999718e-05, 2.7707999999997818e-05, 2.7597000000000732e-05, 2.7499999999999747e-05, 2.8040999999999483e-05, 2.7278000000002106e-05, 2.8193999999998748e-05, 2.7722000000000857e-05, 2.7528000000002356e-05, 2.7971999999997638e-05, 2.7513999999999317e-05, 2.7791999999998707e-05, 2.8082999999998193e-05, 2.816699999999908e-05, 2.7722000000000857e-05, 2.794499999999797e-05, 2.7291999999998207e-05, 2.7527999999998887e-05, 2.7749999999999997e-05, 2.7292000000001676e-05, 2.816699999999908e-05, 2.768099999999815e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.406" endtime="20201117 14:42:35.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.401" endtime="20201117 14:42:35.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.410" endtime="20201117 14:42:35.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.414" endtime="20201117 14:42:35.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.412" endtime="20201117 14:42:35.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.409" endtime="20201117 14:42:35.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.043" endtime="20201117 14:42:35.435"></status>
</kw>
<msg timestamp="20201117 14:42:35.435" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.443" endtime="20201117 14:42:35.458"></status>
</kw>
<msg timestamp="20201117 14:42:35.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.442" endtime="20201117 14:42:35.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.460" endtime="20201117 14:42:35.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.462" endtime="20201117 14:42:35.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.439" endtime="20201117 14:42:35.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.437" endtime="20201117 14:42:35.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.471" endtime="20201117 14:42:35.758"></status>
</kw>
<msg timestamp="20201117 14:42:35.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.470" endtime="20201117 14:42:35.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.762" endtime="20201117 14:42:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.771" endtime="20201117 14:42:35.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.467" endtime="20201117 14:42:35.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.466" endtime="20201117 14:42:35.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.778" level="INFO">${RESULT} = [{'time': 0.019608389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7749999999999997e-05, 'source_diff': 2.7749999999999997e-05}, {'time': 0.019640375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.774" endtime="20201117 14:42:35.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.791" level="INFO">${ACCURACY} = {'time': [0.019608389, 0.019640375, 0.019674375, 0.019704389, 0.019741389, 0.019778403, 0.019809403, 0.019844417, 0.019877403, 0.019914417, 0.019947417, 0.019977417, 0.020014431, 0.020045472, 0.020076...</msg>
<status status="PASS" starttime="20201117 14:42:35.779" endtime="20201117 14:42:35.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.796" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.795" endtime="20201117 14:42:35.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.798" level="INFO">VALUE: [2.7749999999999997e-05, 2.7347000000000482e-05, 2.7444000000001467e-05, 2.7736000000000427e-05, 2.7514000000002786e-05, 2.7541999999998457e-05, 2.8027999999999387e-05, 2.7513999999999317e-05, 2.7819999999997846e-05, 2.7334000000000386e-05, 2.7569999999997596e-05, 2.744500000000094e-05, 2.8013999999999817e-05, 2.7278000000002106e-05, 2.7749999999999997e-05, 2.7848000000000456e-05, 2.8138999999999942e-05, 2.7624999999999872e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.8014000000003286e-05, 2.7749999999999997e-05, 2.7776999999999663e-05, 2.7707999999997818e-05, 2.7513999999999317e-05, 2.7264000000002536e-05, 2.7679999999998678e-05, 2.8000000000000247e-05, 2.7556000000001496e-05, 2.7958000000001537e-05, 2.7527999999998887e-05, 2.7875000000000122e-05, 2.7861000000000552e-05, 2.8013999999999817e-05, 2.7513999999999317e-05, 2.7235999999999927e-05, 2.766700000000205e-05, 2.7334000000000386e-05, 2.8000000000000247e-05, 2.8125000000000372e-05, 2.745900000000051e-05, 2.7540999999998983e-05, 2.8000000000000247e-05, 2.7556000000001496e-05, 2.7556000000001496e-05, 2.7388999999999192e-05, 2.7556000000001496e-05, 2.7875000000000122e-05, 2.7749999999999997e-05, 2.7569000000001592e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.797" endtime="20201117 14:42:35.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.792" endtime="20201117 14:42:35.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.801" endtime="20201117 14:42:35.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.805" endtime="20201117 14:42:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.803" endtime="20201117 14:42:35.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.800" endtime="20201117 14:42:35.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.436" endtime="20201117 14:42:35.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.041" endtime="20201117 14:42:35.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.040" endtime="20201117 14:42:35.826"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.828" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.836" endtime="20201117 14:42:35.852"></status>
</kw>
<msg timestamp="20201117 14:42:35.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.835" endtime="20201117 14:42:35.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.853" endtime="20201117 14:42:35.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.856" endtime="20201117 14:42:35.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.832" endtime="20201117 14:42:35.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.830" endtime="20201117 14:42:35.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.865" endtime="20201117 14:42:36.152"></status>
</kw>
<msg timestamp="20201117 14:42:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.864" endtime="20201117 14:42:36.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.157" endtime="20201117 14:42:36.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.165" endtime="20201117 14:42:36.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.861" endtime="20201117 14:42:36.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.859" endtime="20201117 14:42:36.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.172" level="INFO">${RESULT} = [{'time': 0.022103931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.848700000000065e-05, 'source_diff': 2.848700000000065e-05}, {'time': 0.022137944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:36.169" endtime="20201117 14:42:36.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.185" level="INFO">${ACCURACY} = {'time': [0.022103931, 0.022137944, 0.022170931, 0.022202944, 0.022236944, 0.022268944, 0.022304944, 0.022336944, 0.022370944, 0.022408944, 0.022446958, 0.022481958, 0.022519972, 0.022556972, 0.022592...</msg>
<status status="PASS" starttime="20201117 14:42:36.173" endtime="20201117 14:42:36.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.190" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.189" endtime="20201117 14:42:36.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.192" level="INFO">VALUE: [2.848700000000065e-05, 2.8666000000000108e-05, 2.9070000000002566e-05, 2.8735999999997958e-05, 2.9027000000000913e-05, 2.8527000000000413e-05, 2.8457999999998568e-05, 2.9027000000000913e-05, 2.8791000000000233e-05, 2.8513000000000843e-05, 2.8846999999998513e-05, 2.8389000000000192e-05, 2.9014000000000817e-05, 2.9208000000002787e-05, 2.8514000000000317e-05, 2.8290999999999733e-05, 2.8277999999999637e-05, 2.8693999999999248e-05, 2.8207999999998318e-05, 2.8624999999997403e-05, 2.84170000000028e-05, 2.8235999999997458e-05, 2.8499999999997278e-05, 2.8791999999999707e-05, 2.8791999999999707e-05, 2.8763999999997097e-05, 2.8500000000000747e-05, 2.9028000000000387e-05, 2.820900000000126e-05, 2.8639000000000442e-05, 2.870899999999829e-05, 2.897300000000158e-05, 2.9112000000001276e-05, 2.869500000000219e-05, 2.8833999999998416e-05, 2.822300000000083e-05, 2.8305000000002772e-05, 2.8527000000000413e-05, 2.9082999999999193e-05, 2.8290999999999733e-05, 2.9041000000000483e-05, 2.9096999999998763e-05, 2.9026999999997444e-05, 2.8457999999998568e-05, 2.8818999999999373e-05, 2.8583000000002162e-05, 2.8250000000000497e-05, 2.8500000000000747e-05, 2.8472000000001607e-05, 2.8306000000002246e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.191" endtime="20201117 14:42:36.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.186" endtime="20201117 14:42:36.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.196" endtime="20201117 14:42:36.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.199" endtime="20201117 14:42:36.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.198" endtime="20201117 14:42:36.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.194" endtime="20201117 14:42:36.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.829" endtime="20201117 14:42:36.220"></status>
</kw>
<msg timestamp="20201117 14:42:36.220" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.228" endtime="20201117 14:42:36.245"></status>
</kw>
<msg timestamp="20201117 14:42:36.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.227" endtime="20201117 14:42:36.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.247" endtime="20201117 14:42:36.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.249" endtime="20201117 14:42:36.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.224" endtime="20201117 14:42:36.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.222" endtime="20201117 14:42:36.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.259" endtime="20201117 14:42:36.546"></status>
</kw>
<msg timestamp="20201117 14:42:36.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.257" endtime="20201117 14:42:36.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.550" endtime="20201117 14:42:36.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.558" endtime="20201117 14:42:36.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.254" endtime="20201117 14:42:36.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.253" endtime="20201117 14:42:36.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.565" level="INFO">${RESULT} = [{'time': 0.020482028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8471999999998138e-05, 'source_diff': 2.8471999999998138e-05}, {'time': 0.020515042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.562" endtime="20201117 14:42:36.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.578" level="INFO">${ACCURACY} = {'time': [0.020482028, 0.020515042, 0.020551042, 0.020585042, 0.020622042, 0.020660139, 0.020691125, 0.020725069, 0.020757056, 0.020791069, 0.020826083, 0.020859069, 0.020890069, 0.020922083, 0.020954...</msg>
<status status="PASS" starttime="20201117 14:42:36.566" endtime="20201117 14:42:36.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.583" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.582" endtime="20201117 14:42:36.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.585" level="INFO">VALUE: [2.8471999999998138e-05, 2.8375000000000622e-05, 2.84309999999989e-05, 2.8361000000001052e-05, 2.845900000000151e-05, 2.9153000000000512e-05, 2.8333000000001912e-05, 2.8582999999998693e-05, 2.845899999999804e-05, 2.9124999999997903e-05, 2.8235999999997458e-05, 2.8527000000000413e-05, 2.8666000000000108e-05, 2.8554999999999553e-05, 2.8776999999997194e-05, 2.8639000000000442e-05, 2.8318999999998873e-05, 2.8763999999997097e-05, 2.8555000000003022e-05, 2.8735999999997958e-05, 2.9124999999997903e-05, 2.8625000000000872e-05, 2.8597000000001732e-05, 2.8889000000000692e-05, 2.8333000000001912e-05, 2.8805999999999277e-05, 2.8999999999997778e-05, 2.8375000000000622e-05, 2.8722000000001857e-05, 2.8514000000000317e-05, 2.9125000000001372e-05, 2.8235999999997458e-05, 2.8555999999999027e-05, 2.8264000000000067e-05, 2.869499999999872e-05, 2.8333999999997916e-05, 2.8290999999999733e-05, 2.894499999999897e-05, 2.9055999999999527e-05, 2.8750000000000997e-05, 2.8375000000000622e-05, 2.8485999999997708e-05, 2.8972000000002107e-05, 2.8319000000002342e-05, 2.9111000000001802e-05, 2.9193999999999748e-05, 2.8444000000002467e-05, 2.8402000000000288e-05, 2.8847000000001982e-05, 2.8653000000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.584" endtime="20201117 14:42:36.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.579" endtime="20201117 14:42:36.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.589" endtime="20201117 14:42:36.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.592" endtime="20201117 14:42:36.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.590" endtime="20201117 14:42:36.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.587" endtime="20201117 14:42:36.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.221" endtime="20201117 14:42:36.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.827" endtime="20201117 14:42:36.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.826" endtime="20201117 14:42:36.613"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.616" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.624" endtime="20201117 14:42:36.642"></status>
</kw>
<msg timestamp="20201117 14:42:36.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.623" endtime="20201117 14:42:36.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.643" endtime="20201117 14:42:36.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.646" endtime="20201117 14:42:36.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.620" endtime="20201117 14:42:36.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.618" endtime="20201117 14:42:36.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.655" endtime="20201117 14:42:36.941"></status>
</kw>
<msg timestamp="20201117 14:42:36.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.653" endtime="20201117 14:42:36.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.946" endtime="20201117 14:42:36.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.954" endtime="20201117 14:42:36.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.651" endtime="20201117 14:42:36.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.649" endtime="20201117 14:42:36.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.960" level="INFO">${RESULT} = [{'time': 0.023612833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9874999999998653e-05, 'source_diff': 2.9874999999998653e-05}, {'time': 0.023646819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.957" endtime="20201117 14:42:36.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.975" level="INFO">${ACCURACY} = {'time': [0.023612833, 0.023646819, 0.023681875, 0.023715847, 0.023749875, 0.023786847, 0.023822847, 0.023861847, 0.023899861, 0.023931847, 0.023963861, 0.024000875, 0.024038875, 0.024073875, 0.024107...</msg>
<status status="PASS" starttime="20201117 14:42:36.961" endtime="20201117 14:42:36.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.980" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.979" endtime="20201117 14:42:36.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.982" level="INFO">VALUE: [2.9874999999998653e-05, 2.9346999999999013e-05, 2.9389000000001192e-05, 2.9500000000001747e-05, 2.9625000000001872e-05, 2.9389000000001192e-05, 2.9472000000002607e-05, 2.9610999999998833e-05, 2.9736000000002427e-05, 2.9430000000000428e-05, 2.9513999999997848e-05, 2.9278000000000637e-05, 2.9486000000002177e-05, 2.9764000000001567e-05, 2.9860999999999083e-05, 2.9792000000000707e-05, 2.9597000000002732e-05, 2.9874999999998653e-05, 2.9847000000002982e-05, 2.9485999999998708e-05, 2.9610999999998833e-05, 2.9986000000002677e-05, 2.9985999999999208e-05, 2.9264000000001067e-05, 2.947299999999861e-05, 2.9528000000000887e-05, 3.020899999999979e-05, 2.970899999999929e-05, 2.9860999999999083e-05, 2.9764000000001567e-05, 3.0180000000001178e-05, 3.0152000000002038e-05, 3.016599999999814e-05, 2.9471999999999138e-05, 2.9819000000000373e-05, 2.9236000000001927e-05, 2.9861000000002552e-05, 2.9874999999998653e-05, 2.9861000000002552e-05, 2.9236000000001927e-05, 2.9735999999998958e-05, 2.9318999999999873e-05, 2.9457999999999568e-05, 2.9778000000001137e-05, 3.0028000000001387e-05, 3.0068999999997154e-05, 2.9624999999998403e-05, 2.94309999999999e-05, 2.9806000000000277e-05, 2.9639000000001442e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.981" endtime="20201117 14:42:36.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.976" endtime="20201117 14:42:36.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.985" endtime="20201117 14:42:36.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.989" endtime="20201117 14:42:37.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.987" endtime="20201117 14:42:37.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.984" endtime="20201117 14:42:37.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.616" endtime="20201117 14:42:37.010"></status>
</kw>
<msg timestamp="20201117 14:42:37.010" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.019" endtime="20201117 14:42:37.035"></status>
</kw>
<msg timestamp="20201117 14:42:37.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.017" endtime="20201117 14:42:37.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.037" endtime="20201117 14:42:37.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.039" endtime="20201117 14:42:37.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.015" endtime="20201117 14:42:37.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.012" endtime="20201117 14:42:37.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.048" endtime="20201117 14:42:37.335"></status>
</kw>
<msg timestamp="20201117 14:42:37.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.047" endtime="20201117 14:42:37.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.339" endtime="20201117 14:42:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.347" endtime="20201117 14:42:37.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.044" endtime="20201117 14:42:37.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.043" endtime="20201117 14:42:37.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.354" level="INFO">${RESULT} = [{'time': 0.019633514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.351" endtime="20201117 14:42:37.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.367" level="INFO">${ACCURACY} = {'time': [0.019633514, 0.019671583, 0.019710528, 0.019743528, 0.019782542, 0.019817542, 0.019855556, 0.019891542, 0.019925542, 0.019959625, 0.019994556, 0.020033556, 0.020069569, 0.020101583, 0.020135...</msg>
<status status="PASS" starttime="20201117 14:42:37.355" endtime="20201117 14:42:37.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.372" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.371" endtime="20201117 14:42:37.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.374" level="INFO">VALUE: [2.9403000000000762e-05, 3.0026999999998444e-05, 2.9528000000000887e-05, 3.0028000000001387e-05, 2.9610999999998833e-05, 2.9417000000000332e-05, 2.973699999999843e-05, 2.969500000000319e-05, 2.9833999999999417e-05, 2.9832999999999943e-05, 2.9874999999998653e-05, 2.9528000000000887e-05, 3.016599999999814e-05, 2.9680000000000678e-05, 2.9318999999999873e-05, 3.0040999999998014e-05, 2.9291000000000733e-05, 3.0139000000001942e-05, 2.9513999999997848e-05, 2.9985999999999208e-05, 2.9540999999997514e-05, 2.994499999999997e-05, 3.0208000000000318e-05, 2.9847000000002982e-05, 3.0153000000001512e-05, 2.994399999999703e-05, 2.9292000000000207e-05, 2.9485999999998708e-05, 3.0041999999997487e-05, 2.9791999999997237e-05, 2.9792000000000707e-05, 2.9721999999999388e-05, 3.0083000000000193e-05, 2.9819999999999847e-05, 2.995899999999954e-05, 2.9542000000000457e-05, 2.9375000000001622e-05, 2.9249999999998028e-05, 2.9667000000000582e-05, 2.9346999999999013e-05, 2.995899999999954e-05, 2.9527999999997417e-05, 2.9930000000000928e-05, 2.9777000000001663e-05, 2.9305000000000303e-05, 3.0000000000002247e-05, 2.9485999999998708e-05, 2.9360999999998583e-05, 2.9735999999998958e-05, 3.0166999999997612e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.373" endtime="20201117 14:42:37.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.368" endtime="20201117 14:42:37.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.378" endtime="20201117 14:42:37.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.381" endtime="20201117 14:42:37.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.380" endtime="20201117 14:42:37.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.376" endtime="20201117 14:42:37.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.011" endtime="20201117 14:42:37.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.614" endtime="20201117 14:42:37.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.614" endtime="20201117 14:42:37.403"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.405" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.413" endtime="20201117 14:42:37.429"></status>
</kw>
<msg timestamp="20201117 14:42:37.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.412" endtime="20201117 14:42:37.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.431" endtime="20201117 14:42:37.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.433" endtime="20201117 14:42:37.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.409" endtime="20201117 14:42:37.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.407" endtime="20201117 14:42:37.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.442" endtime="20201117 14:42:37.729"></status>
</kw>
<msg timestamp="20201117 14:42:37.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.441" endtime="20201117 14:42:37.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.733" endtime="20201117 14:42:37.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.741" endtime="20201117 14:42:37.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.438" endtime="20201117 14:42:37.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.436" endtime="20201117 14:42:37.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.748" level="INFO">${RESULT} = [{'time': 0.022066347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0291000000001733e-05, 'source_diff': 3.0291000000001733e-05}, {'time': 0.022106347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.745" endtime="20201117 14:42:37.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.762" level="INFO">${ACCURACY} = {'time': [0.022066347, 0.022106347, 0.022141361, 0.022181347, 0.022221361, 0.022256361, 0.022291375, 0.022330389, 0.022365375, 0.022405375, 0.022439389, 0.022479389, 0.022514403, 0.022551403, 0.022590...</msg>
<status status="PASS" starttime="20201117 14:42:37.749" endtime="20201117 14:42:37.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.766" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.765" endtime="20201117 14:42:37.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.769" level="INFO">VALUE: [3.0291000000001733e-05, 3.1054999999998584e-05, 3.077799999999867e-05, 3.0458000000000568e-05, 3.074999999999953e-05, 3.0347000000000013e-05, 3.080599999999781e-05, 3.0499999999999278e-05, 3.0292000000001207e-05, 3.100000000000325e-05, 3.101399999999935e-05, 3.074999999999953e-05, 3.0291999999997737e-05, 3.045900000000004e-05, 3.09449999999975e-05, 3.066699999999811e-05, 3.119500000000122e-05, 3.044500000000047e-05, 3.052800000000189e-05, 3.069499999999725e-05, 3.074999999999953e-05, 3.106999999999763e-05, 3.061099999999983e-05, 3.0485999999999708e-05, 3.0526999999998944e-05, 3.0235999999999458e-05, 3.0776999999999194e-05, 3.0333000000000443e-05, 3.097199999999717e-05, 3.115300000000251e-05, 3.0278000000001637e-05, 3.068000000000168e-05, 3.084700000000051e-05, 3.0292000000001207e-05, 3.069399999999778e-05, 3.0568999999997654e-05, 3.065300000000201e-05, 3.0263999999998598e-05, 3.098600000000021e-05, 3.066600000000211e-05, 3.09579999999976e-05, 3.052799999999842e-05, 3.0597999999999737e-05, 3.0388999999998723e-05, 3.0347999999999486e-05, 3.099999999999978e-05, 3.10700000000011e-05, 3.072299999999986e-05, 3.10700000000011e-05, 3.080599999999781e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.767" endtime="20201117 14:42:37.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.762" endtime="20201117 14:42:37.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.772" endtime="20201117 14:42:37.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.776" endtime="20201117 14:42:37.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.774" endtime="20201117 14:42:37.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.771" endtime="20201117 14:42:37.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.406" endtime="20201117 14:42:37.796"></status>
</kw>
<msg timestamp="20201117 14:42:37.797" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.805" endtime="20201117 14:42:37.821"></status>
</kw>
<msg timestamp="20201117 14:42:37.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.803" endtime="20201117 14:42:37.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.822" endtime="20201117 14:42:37.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.825" endtime="20201117 14:42:37.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.801" endtime="20201117 14:42:37.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.799" endtime="20201117 14:42:37.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.834" endtime="20201117 14:42:38.122"></status>
</kw>
<msg timestamp="20201117 14:42:38.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.832" endtime="20201117 14:42:38.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.126" endtime="20201117 14:42:38.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.135" endtime="20201117 14:42:38.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.830" endtime="20201117 14:42:38.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.828" endtime="20201117 14:42:38.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.141" level="INFO">${RESULT} = [{'time': 0.019871931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0347999999999486e-05, 'source_diff': 3.0347999999999486e-05}, {'time': 0.019907931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:38.138" endtime="20201117 14:42:38.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.155" level="INFO">${ACCURACY} = {'time': [0.019871931, 0.019907931, 0.019944972, 0.019982931, 0.020019958, 0.020053931, 0.020089958, 0.020126944, 0.020163958, 0.020199958, 0.020236958, 0.020276972, 0.020309958, 0.020343, 0.020376972...</msg>
<status status="PASS" starttime="20201117 14:42:38.142" endtime="20201117 14:42:38.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.160" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.159" endtime="20201117 14:42:38.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.162" level="INFO">VALUE: [3.0347999999999486e-05, 3.0403000000001762e-05, 3.091599999999889e-05, 3.044500000000047e-05, 3.0250000000002497e-05, 3.0306000000000777e-05, 3.106900000000162e-05, 3.086100000000008e-05, 3.0472000000000138e-05, 3.11249999999999e-05, 3.1054999999998584e-05, 3.084700000000051e-05, 3.073599999999996e-05, 3.0278000000001637e-05, 3.055500000000155e-05, 3.0514000000002317e-05, 3.095800000000107e-05, 3.120900000000079e-05, 3.0485999999999708e-05, 3.068100000000115e-05, 3.101400000000282e-05, 3.0431000000000902e-05, 3.0306000000000777e-05, 3.0472000000000138e-05, 3.07639999999991e-05, 3.094500000000097e-05, 3.102800000000239e-05, 3.074999999999953e-05, 3.122299999999689e-05, 3.06249999999994e-05, 3.0306000000000777e-05, 3.0263999999998598e-05, 3.116699999999861e-05, 3.070800000000082e-05, 3.074999999999953e-05, 3.083400000000042e-05, 3.117999999999871e-05, 3.109700000000076e-05, 3.0318999999997404e-05, 3.1054999999998584e-05, 3.067999999999821e-05, 3.1082999999997724e-05, 3.0458000000000568e-05, 3.101400000000282e-05, 3.0221999999999888e-05, 3.0388999999998723e-05, 3.0235999999999458e-05, 3.066699999999811e-05, 3.119399999999828e-05, 3.068099999999768e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.161" endtime="20201117 14:42:38.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.156" endtime="20201117 14:42:38.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.165" endtime="20201117 14:42:38.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.169" endtime="20201117 14:42:38.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.167" endtime="20201117 14:42:38.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.164" endtime="20201117 14:42:38.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.797" endtime="20201117 14:42:38.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.404" endtime="20201117 14:42:38.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.403" endtime="20201117 14:42:38.190"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.192" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.201" endtime="20201117 14:42:38.215"></status>
</kw>
<msg timestamp="20201117 14:42:38.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.199" endtime="20201117 14:42:38.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.217" endtime="20201117 14:42:38.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.219" endtime="20201117 14:42:38.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.197" endtime="20201117 14:42:38.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.195" endtime="20201117 14:42:38.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.228" endtime="20201117 14:42:38.516"></status>
</kw>
<msg timestamp="20201117 14:42:38.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.227" endtime="20201117 14:42:38.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.520" endtime="20201117 14:42:38.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.528" endtime="20201117 14:42:38.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.224" endtime="20201117 14:42:38.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.222" endtime="20201117 14:42:38.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.540" level="INFO">${RESULT} = [{'time': 0.022108069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.166599999999964e-05, 'source_diff': 3.166599999999964e-05}, {'time': 0.022146069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.536" endtime="20201117 14:42:38.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.554" level="INFO">${ACCURACY} = {'time': [0.022108069, 0.022146069, 0.022186069, 0.022225083, 0.022266083, 0.022305069, 0.022344069, 0.022383083, 0.022417097, 0.022453111, 0.022488111, 0.022522097, 0.022559111, 0.022598111, 0.022637...</msg>
<status status="PASS" starttime="20201117 14:42:38.541" endtime="20201117 14:42:38.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.559" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.558" endtime="20201117 14:42:38.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.561" level="INFO">VALUE: [3.166599999999964e-05, 3.209700000000176e-05, 3.2041000000000014e-05, 3.215200000000057e-05, 3.1860999999997613e-05, 3.215200000000057e-05, 3.2138000000001e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.179200000000271e-05, 3.156900000000212e-05, 3.120800000000132e-05, 3.141699999999886e-05, 3.138899999999972e-05, 3.125000000000003e-05, 3.16250000000004e-05, 3.215300000000004e-05, 3.188900000000022e-05, 3.1444999999998e-05, 3.173600000000096e-05, 3.131999999999788e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.152799999999942e-05, 3.218100000000265e-05, 3.163899999999997e-05, 3.216699999999961e-05, 3.211100000000133e-05, 3.144500000000147e-05, 3.216600000000014e-05, 3.215300000000004e-05, 3.183399999999795e-05, 3.152799999999942e-05, 3.1804999999999334e-05, 3.145800000000157e-05, 3.147200000000114e-05, 3.122200000000089e-05, 3.202799999999992e-05, 3.187500000000065e-05, 3.150000000000028e-05, 3.190299999999979e-05, 3.136100000000058e-05, 3.1860999999997613e-05, 3.212499999999743e-05, 3.2096999999998294e-05, 3.143099999999843e-05, 3.209700000000176e-05, 3.19449999999985e-05, 3.187500000000065e-05, 3.191699999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.560" endtime="20201117 14:42:38.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.555" endtime="20201117 14:42:38.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.565" endtime="20201117 14:42:38.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.568" endtime="20201117 14:42:38.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.567" endtime="20201117 14:42:38.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.563" endtime="20201117 14:42:38.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.193" endtime="20201117 14:42:38.589"></status>
</kw>
<msg timestamp="20201117 14:42:38.589" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.597" endtime="20201117 14:42:38.613"></status>
</kw>
<msg timestamp="20201117 14:42:38.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.596" endtime="20201117 14:42:38.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.615" endtime="20201117 14:42:38.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.617" endtime="20201117 14:42:38.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.593" endtime="20201117 14:42:38.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.591" endtime="20201117 14:42:38.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.626" endtime="20201117 14:42:38.912"></status>
</kw>
<msg timestamp="20201117 14:42:38.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.625" endtime="20201117 14:42:38.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.916" endtime="20201117 14:42:38.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.925" endtime="20201117 14:42:38.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.622" endtime="20201117 14:42:38.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.620" endtime="20201117 14:42:38.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.932" level="INFO">${RESULT} = [{'time': 0.019697806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.209800000000124e-05, 'source_diff': 3.209800000000124e-05}, {'time': 0.019736819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.928" endtime="20201117 14:42:38.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.945" level="INFO">${ACCURACY} = {'time': [0.019697806, 0.019736819, 0.019776819, 0.019815875, 0.019850847, 0.019885847, 0.019923833, 0.019962847, 0.019997917, 0.020032847, 0.020071847, 0.020110875, 0.020148861, 0.020186861, 0.020226...</msg>
<status status="PASS" starttime="20201117 14:42:38.932" endtime="20201117 14:42:38.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.949" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.948" endtime="20201117 14:42:38.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.952" level="INFO">VALUE: [3.209800000000124e-05, 3.167999999999921e-05, 3.1777000000000194e-05, 3.155599999999856e-05, 3.150000000000028e-05, 3.155500000000255e-05, 3.2096999999998294e-05, 3.151399999999985e-05, 3.22640000000006e-05, 3.123600000000046e-05, 3.190299999999979e-05, 3.14310000000019e-05, 3.215300000000004e-05, 3.138899999999972e-05, 3.172199999999792e-05, 3.145800000000157e-05, 3.19310000000024e-05, 3.134700000000101e-05, 3.220899999999832e-05, 3.152799999999942e-05, 3.202799999999992e-05, 3.131999999999788e-05, 3.12639999999996e-05, 3.145900000000104e-05, 3.17640000000001e-05, 3.127799999999917e-05, 3.212499999999743e-05, 3.165200000000007e-05, 3.197299999999764e-05, 3.141600000000286e-05, 3.144399999999853e-05, 3.138800000000025e-05, 3.150000000000028e-05, 3.19579999999986e-05, 3.179200000000271e-05, 3.2096999999998294e-05, 3.220800000000232e-05, 3.198600000000121e-05, 3.169399999999878e-05, 3.1860999999997613e-05, 3.142999999999896e-05, 3.122200000000089e-05, 3.161100000000083e-05, 3.17640000000001e-05, 3.187500000000065e-05, 3.130600000000178e-05, 3.132000000000135e-05, 3.14310000000019e-05, 3.130599999999831e-05, 3.137500000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.951" endtime="20201117 14:42:38.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.946" endtime="20201117 14:42:38.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.955" endtime="20201117 14:42:38.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.958" endtime="20201117 14:42:38.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.957" endtime="20201117 14:42:38.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.953" endtime="20201117 14:42:38.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.590" endtime="20201117 14:42:38.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.191" endtime="20201117 14:42:38.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.190" endtime="20201117 14:42:38.980"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.982" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.990" endtime="20201117 14:42:39.006"></status>
</kw>
<msg timestamp="20201117 14:42:39.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.989" endtime="20201117 14:42:39.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.008" endtime="20201117 14:42:39.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.010" endtime="20201117 14:42:39.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.986" endtime="20201117 14:42:39.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.984" endtime="20201117 14:42:39.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.020" endtime="20201117 14:42:39.307"></status>
</kw>
<msg timestamp="20201117 14:42:39.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.018" endtime="20201117 14:42:39.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.311" endtime="20201117 14:42:39.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.319" endtime="20201117 14:42:39.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.016" endtime="20201117 14:42:39.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.014" endtime="20201117 14:42:39.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.326" level="INFO">${RESULT} = [{'time': 0.022257139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2596999999998794e-05, 'source_diff': 3.2596999999998794e-05}, {'time': 0.022295139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:39.322" endtime="20201117 14:42:39.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.339" level="INFO">${ACCURACY} = {'time': [0.022257139, 0.022295139, 0.022332153, 0.022367167, 0.022404181, 0.022441153, 0.022482181, 0.022520194, 0.022562181, 0.022600194, 0.022639194, 0.022678181, 0.022719194, 0.022760194, 0.022795...</msg>
<status status="PASS" starttime="20201117 14:42:39.327" endtime="20201117 14:42:39.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.344" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.343" endtime="20201117 14:42:39.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.346" level="INFO">VALUE: [3.2596999999998794e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.227800000000017e-05, 3.302799999999745e-05, 3.252799999999695e-05, 3.250000000000128e-05, 3.268000000000021e-05, 3.254199999999999e-05, 3.242999999999996e-05, 3.26250000000014e-05, 3.269499999999925e-05, 3.2791000000000764e-05, 3.319400000000028e-05, 3.244399999999953e-05, 3.287500000000165e-05, 3.269399999999978e-05, 3.269399999999978e-05, 3.22640000000006e-05, 3.2791000000000764e-05, 3.311100000000233e-05, 3.22640000000006e-05, 3.240300000000029e-05, 3.2304999999999834e-05, 3.22640000000006e-05, 3.250000000000128e-05, 3.230599999999931e-05, 3.275000000000153e-05, 3.30839999999992e-05, 3.287500000000165e-05, 3.233399999999845e-05, 3.265300000000054e-05, 3.316700000000061e-05, 3.302800000000092e-05, 3.295899999999907e-05, 3.273700000000143e-05, 3.241699999999986e-05, 3.251399999999738e-05, 3.2846999999999044e-05, 3.223699999999746e-05, 3.273599999999849e-05, 3.27640000000011e-05, 3.259700000000226e-05, 3.242999999999996e-05, 3.277800000000067e-05, 3.2568999999999654e-05, 3.270799999999935e-05, 3.251400000000085e-05, 3.276399999999763e-05, 3.236100000000158e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.345" endtime="20201117 14:42:39.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.340" endtime="20201117 14:42:39.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.350" endtime="20201117 14:42:39.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.353" endtime="20201117 14:42:39.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.351" endtime="20201117 14:42:39.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.348" endtime="20201117 14:42:39.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.983" endtime="20201117 14:42:39.374"></status>
</kw>
<msg timestamp="20201117 14:42:39.374" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.382" endtime="20201117 14:42:39.398"></status>
</kw>
<msg timestamp="20201117 14:42:39.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.381" endtime="20201117 14:42:39.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.400" endtime="20201117 14:42:39.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.402" endtime="20201117 14:42:39.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.378" endtime="20201117 14:42:39.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.376" endtime="20201117 14:42:39.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.411" endtime="20201117 14:42:39.697"></status>
</kw>
<msg timestamp="20201117 14:42:39.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.410" endtime="20201117 14:42:39.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.702" endtime="20201117 14:42:39.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.710" endtime="20201117 14:42:39.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.407" endtime="20201117 14:42:39.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.406" endtime="20201117 14:42:39.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.717" level="INFO">${RESULT} = [{'time': 0.019791931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.309799999999877e-05, 'source_diff': 3.309799999999877e-05}, {'time': 0.019828944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.713" endtime="20201117 14:42:39.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.730" level="INFO">${ACCURACY} = {'time': [0.019791931, 0.019828944, 0.019865931, 0.019902931, 0.019941944, 0.019978958, 0.020014944, 0.020050958, 0.020085958, 0.020122958, 0.020161972, 0.020202972, 0.020238986, 0.020281042, 0.020319...</msg>
<status status="PASS" starttime="20201117 14:42:39.717" endtime="20201117 14:42:39.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.734" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.733" endtime="20201117 14:42:39.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.737" level="INFO">VALUE: [3.309799999999877e-05, 3.2304999999999834e-05, 3.27640000000011e-05, 3.252800000000042e-05, 3.238800000000125e-05, 3.2304999999999834e-05, 3.247199999999867e-05, 3.2318999999999404e-05, 3.266600000000064e-05, 3.273599999999849e-05, 3.287500000000165e-05, 3.248599999999824e-05, 3.223600000000146e-05, 3.290300000000079e-05, 3.236100000000158e-05, 3.2332999999998974e-05, 3.2360999999998113e-05, 3.243099999999943e-05, 3.233400000000192e-05, 3.298599999999874e-05, 3.251400000000085e-05, 3.29449999999995e-05, 3.2777000000001194e-05, 3.229200000000321e-05, 3.274999999999806e-05, 3.22779999999967e-05, 3.245899999999857e-05, 3.251399999999738e-05, 3.277800000000067e-05, 3.305600000000006e-05, 3.248699999999771e-05, 3.2360999999998113e-05, 3.247199999999867e-05, 3.3069000000000154e-05, 3.3054999999997114e-05, 3.26389999999975e-05, 3.298599999999874e-05, 3.293000000000046e-05, 3.288900000000122e-05, 3.270899999999882e-05, 3.2291000000000264e-05, 3.249999999999781e-05, 3.2818999999999904e-05, 3.27640000000011e-05, 3.29579999999996e-05, 3.290300000000079e-05, 3.279199999999677e-05, 3.3082999999999724e-05, 3.248600000000171e-05, 3.301400000000135e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.735" endtime="20201117 14:42:39.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.731" endtime="20201117 14:42:39.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.740" endtime="20201117 14:42:39.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.744" endtime="20201117 14:42:39.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.742" endtime="20201117 14:42:39.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.738" endtime="20201117 14:42:39.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.375" endtime="20201117 14:42:39.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.981" endtime="20201117 14:42:39.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.980" endtime="20201117 14:42:39.765"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.767" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.776" endtime="20201117 14:42:39.792"></status>
</kw>
<msg timestamp="20201117 14:42:39.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.774" endtime="20201117 14:42:39.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.794" endtime="20201117 14:42:39.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.796" endtime="20201117 14:42:39.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.771" endtime="20201117 14:42:39.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.769" endtime="20201117 14:42:39.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.805" endtime="20201117 14:42:40.091"></status>
</kw>
<msg timestamp="20201117 14:42:40.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.804" endtime="20201117 14:42:40.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.095" endtime="20201117 14:42:40.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.104" endtime="20201117 14:42:40.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.801" endtime="20201117 14:42:40.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.799" endtime="20201117 14:42:40.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.111" level="INFO">${RESULT} = [{'time': 0.023021139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4152999999998573e-05, 'source_diff': 3.4152999999998573e-05}, {'time': 0.023062153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.107" endtime="20201117 14:42:40.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.126" level="INFO">${ACCURACY} = {'time': [0.023021139, 0.023062153, 0.023102153, 0.023144153, 0.023187153, 0.023230167, 0.023269167, 0.023308181, 0.023347181, 0.023385194, 0.023426194, 0.023468222, 0.023508194, 0.023551208, 0.023593...</msg>
<status status="PASS" starttime="20201117 14:42:40.112" endtime="20201117 14:42:40.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.131" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.130" endtime="20201117 14:42:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.133" level="INFO">VALUE: [3.4152999999998573e-05, 3.351399999999838e-05, 3.3860999999999614e-05, 3.372199999999992e-05, 3.326399999999813e-05, 3.376399999999863e-05, 3.379200000000124e-05, 3.330600000000031e-05, 3.41250000000029e-05, 3.4013000000002874e-05, 3.343000000000096e-05, 3.351400000000185e-05, 3.4097000000000294e-05, 3.3777000000002194e-05, 3.420800000000085e-05, 3.3319000000000404e-05, 3.4068999999997684e-05, 3.372199999999992e-05, 3.386100000000308e-05, 3.3790999999998295e-05, 3.4097000000000294e-05, 3.404200000000149e-05, 3.4138999999999003e-05, 3.366700000000111e-05, 3.329200000000074e-05, 3.398599999999974e-05, 3.413900000000247e-05, 3.3360999999999114e-05, 3.352800000000142e-05, 3.3512999999998905e-05, 3.341700000000086e-05, 3.404200000000149e-05, 3.337500000000215e-05, 3.383399999999995e-05, 3.330600000000031e-05, 3.372199999999992e-05, 3.324999999999856e-05, 3.349999999999881e-05, 3.337500000000215e-05, 3.419400000000128e-05, 3.34580000000001e-05, 3.402799999999845e-05, 3.3360999999999114e-05, 3.3527000000001944e-05, 3.37779999999982e-05, 3.3569000000000654e-05, 3.350000000000228e-05, 3.352799999999795e-05, 3.320799999999985e-05, 3.3374999999998683e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.132" endtime="20201117 14:42:40.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.127" endtime="20201117 14:42:40.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.136" endtime="20201117 14:42:40.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.140" endtime="20201117 14:42:40.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.138" endtime="20201117 14:42:40.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.135" endtime="20201117 14:42:40.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.768" endtime="20201117 14:42:40.161"></status>
</kw>
<msg timestamp="20201117 14:42:40.161" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.169" endtime="20201117 14:42:40.185"></status>
</kw>
<msg timestamp="20201117 14:42:40.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.168" endtime="20201117 14:42:40.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.187" endtime="20201117 14:42:40.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.189" endtime="20201117 14:42:40.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.165" endtime="20201117 14:42:40.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.163" endtime="20201117 14:42:40.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.198" endtime="20201117 14:42:40.485"></status>
</kw>
<msg timestamp="20201117 14:42:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.197" endtime="20201117 14:42:40.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.489" endtime="20201117 14:42:40.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.497" endtime="20201117 14:42:40.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.194" endtime="20201117 14:42:40.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.192" endtime="20201117 14:42:40.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.504" level="INFO">${RESULT} = [{'time': 0.019967569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4110999999999864e-05, 'source_diff': 3.4110999999999864e-05}, {'time': 0.020004569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.501" endtime="20201117 14:42:40.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.517" level="INFO">${ACCURACY} = {'time': [0.019967569, 0.020004569, 0.020041583, 0.020084569, 0.020122583, 0.020162583, 0.020202583, 0.020245611, 0.020287597, 0.020323597, 0.020360611, 0.020397667, 0.020433653, 0.020475625, 0.020517...</msg>
<status status="PASS" starttime="20201117 14:42:40.505" endtime="20201117 14:42:40.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.522" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.521" endtime="20201117 14:42:40.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.524" level="INFO">VALUE: [3.4110999999999864e-05, 3.39580000000006e-05, 3.3805000000001334e-05, 3.4040999999998545e-05, 3.376399999999863e-05, 3.338900000000172e-05, 3.4097000000000294e-05, 3.3860999999999614e-05, 3.39580000000006e-05, 3.348599999999924e-05, 3.419400000000128e-05, 3.398599999999974e-05, 3.347199999999967e-05, 3.404200000000149e-05, 3.319400000000028e-05, 3.373599999999949e-05, 3.401400000000235e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.3319000000000404e-05, 3.423599999999999e-05, 3.352800000000142e-05, 3.340300000000129e-05, 3.357000000000013e-05, 3.351400000000185e-05, 3.3583000000000224e-05, 3.3888999999998753e-05, 3.322299999999889e-05, 3.3291000000001264e-05, 3.3874999999999184e-05, 3.372200000000339e-05, 3.397200000000017e-05, 3.355600000000056e-05, 3.3833000000000474e-05, 3.3610999999999364e-05, 3.326399999999813e-05, 3.387500000000265e-05, 3.369399999999731e-05, 3.368000000000121e-05, 3.352799999999795e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.338900000000172e-05, 3.3374999999998683e-05, 3.32640000000016e-05, 3.3360999999999114e-05, 3.352800000000142e-05, 3.4097000000000294e-05, 3.3860999999999614e-05, 3.354200000000099e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.523" endtime="20201117 14:42:40.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.518" endtime="20201117 14:42:40.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.528" endtime="20201117 14:42:40.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.531" endtime="20201117 14:42:40.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.530" endtime="20201117 14:42:40.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.526" endtime="20201117 14:42:40.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.162" endtime="20201117 14:42:40.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.766" endtime="20201117 14:42:40.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.765" endtime="20201117 14:42:40.552"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.555" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.563" endtime="20201117 14:42:40.579"></status>
</kw>
<msg timestamp="20201117 14:42:40.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.561" endtime="20201117 14:42:40.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.580" endtime="20201117 14:42:40.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.582" endtime="20201117 14:42:40.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.559" endtime="20201117 14:42:40.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.557" endtime="20201117 14:42:40.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.592" endtime="20201117 14:42:40.877"></status>
</kw>
<msg timestamp="20201117 14:42:40.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.590" endtime="20201117 14:42:40.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.881" endtime="20201117 14:42:40.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.890" endtime="20201117 14:42:40.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.587" endtime="20201117 14:42:40.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.586" endtime="20201117 14:42:40.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.896" level="INFO">${RESULT} = [{'time': 0.022079056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.50840000000012e-05, 'source_diff': 3.50840000000012e-05}, {'time': 0.022122056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:40.893" endtime="20201117 14:42:40.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.910" level="INFO">${ACCURACY} = {'time': [0.022079056, 0.022122056, 0.022163056, 0.022205056, 0.022248069, 0.022291069, 0.022335069, 0.022373083, 0.022413083, 0.022452097, 0.022496097, 0.022534111, 0.022575111, 0.022612125, 0.022656...</msg>
<status status="PASS" starttime="20201117 14:42:40.898" endtime="20201117 14:42:40.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.914" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.913" endtime="20201117 14:42:40.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.917" level="INFO">VALUE: [3.50840000000012e-05, 3.519500000000175e-05, 3.4624999999999934e-05, 3.497300000000064e-05, 3.448600000000024e-05, 3.448600000000024e-05, 3.4597000000000794e-05, 3.472199999999745e-05, 3.4888999999999754e-05, 3.501399999999988e-05, 3.501399999999988e-05, 3.519399999999881e-05, 3.4388999999999253e-05, 3.468100000000168e-05, 3.5082999999998254e-05, 3.426399999999913e-05, 3.4860999999997144e-05, 3.465300000000254e-05, 3.4374999999999684e-05, 3.476399999999963e-05, 3.425000000000303e-05, 3.4347000000000544e-05, 3.441699999999839e-05, 3.4596999999997324e-05, 3.457000000000113e-05, 3.454199999999852e-05, 3.466699999999864e-05, 3.4332999999997504e-05, 3.451399999999938e-05, 3.451399999999938e-05, 3.447200000000067e-05, 3.519399999999881e-05, 3.449999999999981e-05, 3.4526999999999475e-05, 3.42779999999987e-05, 3.5068999999998685e-05, 3.519399999999881e-05, 3.4388999999999253e-05, 3.5097000000001294e-05, 3.451399999999938e-05, 3.4555000000002084e-05, 3.4554999999998615e-05, 3.4402999999998823e-05, 3.4597000000000794e-05, 3.447200000000067e-05, 3.440300000000229e-05, 3.4333000000000974e-05, 3.452799999999895e-05, 3.459800000000027e-05, 3.432000000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.916" endtime="20201117 14:42:40.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.911" endtime="20201117 14:42:40.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.921" endtime="20201117 14:42:40.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.924" endtime="20201117 14:42:40.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.922" endtime="20201117 14:42:40.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.919" endtime="20201117 14:42:40.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.556" endtime="20201117 14:42:40.945"></status>
</kw>
<msg timestamp="20201117 14:42:40.945" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.954" endtime="20201117 14:42:40.969"></status>
</kw>
<msg timestamp="20201117 14:42:40.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.952" endtime="20201117 14:42:40.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.970" endtime="20201117 14:42:40.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.973" endtime="20201117 14:42:40.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.950" endtime="20201117 14:42:40.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.947" endtime="20201117 14:42:40.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.982" endtime="20201117 14:42:41.276"></status>
</kw>
<msg timestamp="20201117 14:42:41.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.980" endtime="20201117 14:42:41.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.280" endtime="20201117 14:42:41.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.289" endtime="20201117 14:42:41.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.978" endtime="20201117 14:42:41.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.976" endtime="20201117 14:42:41.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.295" level="INFO">${RESULT} = [{'time': 0.019748417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.509800000000077e-05, 'source_diff': 3.509800000000077e-05}, {'time': 0.019792417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.292" endtime="20201117 14:42:41.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.309" level="INFO">${ACCURACY} = {'time': [0.019748417, 0.019792417, 0.019831417, 0.019868431, 0.019905431, 0.019946458, 0.019989444, 0.020031458, 0.020074458, 0.020115472, 0.020155472, 0.020197458, 0.020235542, 0.020277472, 0.020318...</msg>
<status status="PASS" starttime="20201117 14:42:41.296" endtime="20201117 14:42:41.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.313" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.312" endtime="20201117 14:42:41.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.316" level="INFO">VALUE: [3.509800000000077e-05, 3.447300000000014e-05, 3.498600000000074e-05, 3.42779999999987e-05, 3.449999999999981e-05, 3.472200000000092e-05, 3.472199999999745e-05, 3.499999999999684e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.4902999999999323e-05, 3.5139000000000004e-05, 3.454199999999852e-05, 3.5152999999999573e-05, 3.44580000000011e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.479199999999877e-05, 3.444399999999806e-05, 3.5166999999999143e-05, 3.4445000000001e-05, 3.4888999999999754e-05, 3.468099999999821e-05, 3.5111000000000864e-05, 3.493100000000193e-05, 3.448600000000024e-05, 3.505600000000206e-05, 3.42779999999987e-05, 3.5083000000001724e-05, 3.441700000000186e-05, 3.494399999999856e-05, 3.466599999999917e-05, 3.5125000000000434e-05, 3.454199999999852e-05, 3.4276999999999225e-05, 3.497200000000117e-05, 3.475000000000006e-05, 3.469400000000178e-05, 3.500000000000031e-05, 3.4361000000000114e-05, 3.4290999999998795e-05, 3.449999999999981e-05, 3.479199999999877e-05, 3.4319000000001404e-05, 3.476399999999963e-05, 3.423599999999999e-05, 3.4388999999999253e-05, 3.473600000000049e-05, 3.4624999999999934e-05, 3.4347000000000544e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.314" endtime="20201117 14:42:41.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.310" endtime="20201117 14:42:41.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.319" endtime="20201117 14:42:41.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.323" endtime="20201117 14:42:41.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.321" endtime="20201117 14:42:41.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.318" endtime="20201117 14:42:41.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.946" endtime="20201117 14:42:41.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.554" endtime="20201117 14:42:41.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.553" endtime="20201117 14:42:41.344"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.347" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.355" endtime="20201117 14:42:41.369"></status>
</kw>
<msg timestamp="20201117 14:42:41.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.353" endtime="20201117 14:42:41.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.371" endtime="20201117 14:42:41.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.373" endtime="20201117 14:42:41.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.351" endtime="20201117 14:42:41.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.349" endtime="20201117 14:42:41.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.382" endtime="20201117 14:42:41.670"></status>
</kw>
<msg timestamp="20201117 14:42:41.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.381" endtime="20201117 14:42:41.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.674" endtime="20201117 14:42:41.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.682" endtime="20201117 14:42:41.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.378" endtime="20201117 14:42:41.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.377" endtime="20201117 14:42:41.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.689" level="INFO">${RESULT} = [{'time': 0.022409306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5625000000000934e-05, 'source_diff': 3.5625000000000934e-05}, {'time': 0.02245425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:41.685" endtime="20201117 14:42:41.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.704" level="INFO">${ACCURACY} = {'time': [0.022409306, 0.02245425, 0.022497319, 0.022538292, 0.022580292, 0.022623292, 0.022663278, 0.022705306, 0.022743292, 0.022783306, 0.022824292, 0.022869319, 0.022913319, 0.022952306, 0.0229943...</msg>
<status status="PASS" starttime="20201117 14:42:41.690" endtime="20201117 14:42:41.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.708" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.707" endtime="20201117 14:42:41.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.711" level="INFO">VALUE: [3.5625000000000934e-05, 3.6068999999999685e-05, 3.597200000000217e-05, 3.566700000000311e-05, 3.59589999999986e-05, 3.6167000000000143e-05, 3.599999999999784e-05, 3.5889000000000754e-05, 3.549999999999734e-05, 3.57780000000002e-05, 3.5389000000000254e-05, 3.6096999999998824e-05, 3.5569000000002654e-05, 3.530599999999884e-05, 3.538800000000078e-05, 3.6082999999999255e-05, 3.59719999999987e-05, 3.5611000000001364e-05, 3.601400000000088e-05, 3.548600000000124e-05, 3.574999999999759e-05, 3.5318999999998935e-05, 3.592999999999999e-05, 3.551400000000038e-05, 3.59719999999987e-05, 3.6096999999998824e-05, 3.5860999999998144e-05, 3.555599999999909e-05, 3.5875000000001184e-05, 3.6125000000001434e-05, 3.569500000000225e-05, 3.5639000000000504e-05, 3.605599999999959e-05, 3.559800000000127e-05, 3.545900000000157e-05, 3.59589999999986e-05, 3.530600000000231e-05, 3.5610999999997894e-05, 3.619499999999928e-05, 3.534800000000102e-05, 3.5791000000000295e-05, 3.5610999999997894e-05, 3.5402999999999823e-05, 3.5290999999999795e-05, 3.5554999999999615e-05, 3.5527000000000475e-05, 3.592999999999999e-05, 3.576400000000063e-05, 3.6153000000000574e-05, 3.59589999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.709" endtime="20201117 14:42:41.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.705" endtime="20201117 14:42:41.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.714" endtime="20201117 14:42:41.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.718" endtime="20201117 14:42:41.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.716" endtime="20201117 14:42:41.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.713" endtime="20201117 14:42:41.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.347" endtime="20201117 14:42:41.739"></status>
</kw>
<msg timestamp="20201117 14:42:41.739" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.747" endtime="20201117 14:42:41.762"></status>
</kw>
<msg timestamp="20201117 14:42:41.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.746" endtime="20201117 14:42:41.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.764" endtime="20201117 14:42:41.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.766" endtime="20201117 14:42:41.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.743" endtime="20201117 14:42:41.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.741" endtime="20201117 14:42:41.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.775" endtime="20201117 14:42:42.064"></status>
</kw>
<msg timestamp="20201117 14:42:42.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:41.774" endtime="20201117 14:42:42.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:42.068" endtime="20201117 14:42:42.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.076" endtime="20201117 14:42:42.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.771" endtime="20201117 14:42:42.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.770" endtime="20201117 14:42:42.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.083" level="INFO">${RESULT} = [{'time': 0.01971725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5374999999997214e-05, 'source_diff': 3.5374999999997214e-05}, {'time': 0.01975825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.080" endtime="20201117 14:42:42.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.096" level="INFO">${ACCURACY} = {'time': [0.01971725, 0.01975825, 0.019800292, 0.019845264, 0.019885264, 0.019928292, 0.019971292, 0.020010278, 0.020055306, 0.020097306, 0.020139306, 0.020177319, 0.020218319, 0.020259306, 0.02030131...</msg>
<status status="PASS" starttime="20201117 14:42:42.084" endtime="20201117 14:42:42.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.101" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.100" endtime="20201117 14:42:42.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.104" level="INFO">VALUE: [3.5374999999997214e-05, 3.6125000000001434e-05, 3.5666999999999643e-05, 3.6083000000002724e-05, 3.600000000000131e-05, 3.59589999999986e-05, 3.6167000000000143e-05, 3.619499999999928e-05, 3.586199999999762e-05, 3.570899999999835e-05, 3.5874999999997714e-05, 3.525000000000056e-05, 3.5818999999999435e-05, 3.582000000000238e-05, 3.522200000000142e-05, 3.6013000000001405e-05, 3.5554999999999615e-05, 3.544399999999906e-05, 3.5818999999999435e-05, 3.5597000000001794e-05, 3.5554999999999615e-05, 3.6139000000001004e-05, 3.5402999999999823e-05, 3.545799999999863e-05, 3.6167000000000143e-05, 3.6167000000000143e-05, 3.552799999999995e-05, 3.605599999999959e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.5597000000001794e-05, 3.5875000000001184e-05, 3.552799999999995e-05, 3.5666999999999643e-05, 3.5666999999999643e-05, 3.5832999999999005e-05, 3.536200000000059e-05, 3.5389000000000254e-05, 3.577799999999673e-05, 3.559800000000127e-05, 3.542999999999949e-05, 3.5361000000001114e-05, 3.566600000000017e-05, 3.552799999999995e-05, 3.541700000000286e-05, 3.542999999999949e-05, 3.556999999999866e-05, 3.5832999999999005e-05, 3.601400000000088e-05, 3.5666999999999643e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.102" endtime="20201117 14:42:42.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.098" endtime="20201117 14:42:42.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.107" endtime="20201117 14:42:42.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.110" endtime="20201117 14:42:42.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.109" endtime="20201117 14:42:42.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.105" endtime="20201117 14:42:42.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.739" endtime="20201117 14:42:42.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.345" endtime="20201117 14:42:42.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.345" endtime="20201117 14:42:42.132"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.134" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.144" endtime="20201117 14:42:42.160"></status>
</kw>
<msg timestamp="20201117 14:42:42.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.142" endtime="20201117 14:42:42.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.162" endtime="20201117 14:42:42.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.164" endtime="20201117 14:42:42.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.139" endtime="20201117 14:42:42.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.137" endtime="20201117 14:42:42.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.173" endtime="20201117 14:42:42.459"></status>
</kw>
<msg timestamp="20201117 14:42:42.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:42.172" endtime="20201117 14:42:42.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:42.463" endtime="20201117 14:42:42.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.471" endtime="20201117 14:42:42.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.169" endtime="20201117 14:42:42.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.168" endtime="20201117 14:42:42.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.478" level="INFO">${RESULT} = [{'time': 0.0237725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.677799999999773e-05, 'source_diff': 3.677799999999773e-05}, {'time': 0.0238125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201117 14:42:42.475" endtime="20201117 14:42:42.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.491" level="INFO">${ACCURACY} = {'time': [0.0237725, 0.0238125, 0.023856542, 0.023899514, 0.023944528, 0.023989528, 0.024034528, 0.024077542, 0.024122556, 0.024164556, 0.024206556, 0.024251556, 0.024296583, 0.024342556, 0.024384569,...</msg>
<status status="PASS" starttime="20201117 14:42:42.479" endtime="20201117 14:42:42.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.496" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.495" endtime="20201117 14:42:42.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.499" level="INFO">VALUE: [3.677799999999773e-05, 3.6318999999999935e-05, 3.7167000000001144e-05, 3.622199999999895e-05, 3.720899999999985e-05, 3.701399999999841e-05, 3.672199999999945e-05, 3.7167000000001144e-05, 3.673699999999849e-05, 3.6903000000001324e-05, 3.658399999999923e-05, 3.702800000000145e-05, 3.7055000000001115e-05, 3.659800000000227e-05, 3.6360999999998644e-05, 3.701399999999841e-05, 3.650000000000181e-05, 3.7040999999998075e-05, 3.6777000000001725e-05, 3.6610999999998894e-05, 3.6653000000001074e-05, 3.6624999999998464e-05, 3.669400000000031e-05, 3.625000000000156e-05, 3.6860999999999144e-05, 3.652799999999748e-05, 3.622200000000242e-05, 3.651400000000138e-05, 3.629200000000027e-05, 3.655600000000009e-05, 3.6833000000000005e-05, 3.704199999999755e-05, 3.655600000000009e-05, 3.6667000000000644e-05, 3.630600000000331e-05, 3.680600000000034e-05, 3.643000000000049e-05, 3.674999999999859e-05, 3.7180999999997244e-05, 3.686199999999862e-05, 3.691599999999795e-05, 3.7055000000001115e-05, 3.6332999999999505e-05, 3.719400000000081e-05, 3.6304999999996895e-05, 3.645799999999963e-05, 3.6791000000001295e-05, 3.7139000000002004e-05, 3.654200000000052e-05, 3.652800000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.497" endtime="20201117 14:42:42.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.492" endtime="20201117 14:42:42.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.502" endtime="20201117 14:42:42.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.505" endtime="20201117 14:42:42.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.504" endtime="20201117 14:42:42.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.500" endtime="20201117 14:42:42.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.135" endtime="20201117 14:42:42.526"></status>
</kw>
<msg timestamp="20201117 14:42:42.526" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.535" endtime="20201117 14:42:42.549"></status>
</kw>
<msg timestamp="20201117 14:42:42.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.533" endtime="20201117 14:42:42.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.551" endtime="20201117 14:42:42.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.553" endtime="20201117 14:42:42.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.531" endtime="20201117 14:42:42.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.528" endtime="20201117 14:42:42.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.562" endtime="20201117 14:42:42.849"></status>
</kw>
<msg timestamp="20201117 14:42:42.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.561" endtime="20201117 14:42:42.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.853" endtime="20201117 14:42:42.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.862" endtime="20201117 14:42:42.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.558" endtime="20201117 14:42:42.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.556" endtime="20201117 14:42:42.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.869" level="INFO">${RESULT} = [{'time': 0.019573417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.65979999999988e-05, 'source_diff': 3.65979999999988e-05}, {'time': 0.019612472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:42.865" endtime="20201117 14:42:42.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.882" level="INFO">${ACCURACY} = {'time': [0.019573417, 0.019612472, 0.019651431, 0.019695431, 0.019735444, 0.019775458, 0.019819458, 0.019862458, 0.019905458, 0.019947472, 0.019989458, 0.020032472, 0.020071472, 0.020113472, 0.020159...</msg>
<status status="PASS" starttime="20201117 14:42:42.870" endtime="20201117 14:42:42.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.886" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.885" endtime="20201117 14:42:42.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.889" level="INFO">VALUE: [3.65979999999988e-05, 3.648599999999877e-05, 3.6667000000000644e-05, 3.672299999999892e-05, 3.6569000000000185e-05, 3.6332999999999505e-05, 3.647200000000267e-05, 3.7069000000000685e-05, 3.7096999999999825e-05, 3.6889000000001754e-05, 3.6791000000001295e-05, 3.6388999999997784e-05, 3.622199999999895e-05, 3.6555000000000615e-05, 3.67780000000012e-05, 3.674999999999859e-05, 3.686200000000209e-05, 3.648600000000224e-05, 3.704200000000102e-05, 3.6653000000001074e-05, 3.698699999999874e-05, 3.681999999999991e-05, 3.6430999999999963e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.670899999999935e-05, 3.626400000000113e-05, 3.634800000000202e-05, 3.6569000000000185e-05, 3.6804999999997395e-05, 3.6167000000000143e-05, 3.6513000000001905e-05, 3.6290999999997325e-05, 3.7069000000000685e-05, 3.7083000000000255e-05, 3.66659999999977e-05, 3.6417000000000394e-05, 3.699999999999884e-05, 3.666600000000117e-05, 3.623599999999852e-05, 3.6610999999998894e-05, 3.643000000000049e-05, 3.673599999999902e-05, 3.6819000000000435e-05, 3.6653000000001074e-05, 3.672199999999945e-05, 3.648599999999877e-05, 3.670900000000282e-05, 3.672299999999892e-05, 3.6416999999996924e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.888" endtime="20201117 14:42:42.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.883" endtime="20201117 14:42:42.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.892" endtime="20201117 14:42:42.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.895" endtime="20201117 14:42:42.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.894" endtime="20201117 14:42:42.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.890" endtime="20201117 14:42:42.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.527" endtime="20201117 14:42:42.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.133" endtime="20201117 14:42:42.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.132" endtime="20201117 14:42:42.917"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.919" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.927" endtime="20201117 14:42:42.942"></status>
</kw>
<msg timestamp="20201117 14:42:42.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.926" endtime="20201117 14:42:42.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.944" endtime="20201117 14:42:42.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.946" endtime="20201117 14:42:42.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.923" endtime="20201117 14:42:42.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.921" endtime="20201117 14:42:42.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.956" endtime="20201117 14:42:43.248"></status>
</kw>
<msg timestamp="20201117 14:42:43.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:42.954" endtime="20201117 14:42:43.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:43.252" endtime="20201117 14:42:43.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.260" endtime="20201117 14:42:43.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.952" endtime="20201117 14:42:43.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.950" endtime="20201117 14:42:43.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.267" level="INFO">${RESULT} = [{'time': 0.02204175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.726399999999866e-05, 'source_diff': 3.726399999999866e-05}, {'time': 0.022084778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:43.264" endtime="20201117 14:42:43.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.282" level="INFO">${ACCURACY} = {'time': [0.02204175, 0.022084778, 0.02212675, 0.022172764, 0.02221875, 0.022262764, 0.022306764, 0.022348806, 0.022390792, 0.022436792, 0.022480792, 0.022525792, 0.022571792, 0.022616806, 0.022660806...</msg>
<status status="PASS" starttime="20201117 14:42:43.268" endtime="20201117 14:42:43.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.286" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.285" endtime="20201117 14:42:43.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.289" level="INFO">VALUE: [3.726399999999866e-05, 3.7610999999999895e-05, 3.72780000000017e-05, 3.748599999999977e-05, 3.723599999999952e-05, 3.8167000000002144e-05, 3.8166999999998674e-05, 3.804199999999855e-05, 3.7610999999999895e-05, 3.797300000000017e-05, 3.7388999999998784e-05, 3.798600000000027e-05, 3.802799999999898e-05, 3.774999999999959e-05, 3.8152999999999104e-05, 3.747300000000314e-05, 3.820799999999791e-05, 3.74720000000002e-05, 3.795799999999766e-05, 3.7569000000001185e-05, 3.7291000000001795e-05, 3.8111000000000395e-05, 3.752799999999848e-05, 3.7874999999999714e-05, 3.8111000000000395e-05, 3.729200000000127e-05, 3.7375000000002684e-05, 3.7402999999998354e-05, 3.755600000000109e-05, 3.804199999999855e-05, 3.7860999999996675e-05, 3.8195000000001283e-05, 3.7416999999997924e-05, 3.774999999999959e-05, 3.722199999999995e-05, 3.772299999999992e-05, 3.7667000000001644e-05, 3.777799999999873e-05, 3.776399999999916e-05, 3.736199999999912e-05, 3.747299999999967e-05, 3.8012999999999936e-05, 3.7333000000000505e-05, 3.770800000000088e-05, 3.748599999999977e-05, 3.7526999999999006e-05, 3.772200000000045e-05, 3.752799999999848e-05, 3.7554999999998145e-05, 3.752800000000195e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.288" endtime="20201117 14:42:43.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.283" endtime="20201117 14:42:43.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.292" endtime="20201117 14:42:43.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.295" endtime="20201117 14:42:43.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.294" endtime="20201117 14:42:43.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.290" endtime="20201117 14:42:43.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.920" endtime="20201117 14:42:43.316"></status>
</kw>
<msg timestamp="20201117 14:42:43.316" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.325" endtime="20201117 14:42:43.341"></status>
</kw>
<msg timestamp="20201117 14:42:43.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.323" endtime="20201117 14:42:43.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.342" endtime="20201117 14:42:43.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.345" endtime="20201117 14:42:43.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.321" endtime="20201117 14:42:43.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.318" endtime="20201117 14:42:43.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.354" endtime="20201117 14:42:43.641"></status>
</kw>
<msg timestamp="20201117 14:42:43.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.353" endtime="20201117 14:42:43.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.646" endtime="20201117 14:42:43.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.654" endtime="20201117 14:42:43.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.350" endtime="20201117 14:42:43.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.348" endtime="20201117 14:42:43.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.661" level="INFO">${RESULT} = [{'time': 0.019561694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.766600000000217e-05, 'source_diff': 3.766600000000217e-05}, {'time': 0.019603708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.657" endtime="20201117 14:42:43.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.674" level="INFO">${ACCURACY} = {'time': [0.019561694, 0.019603708, 0.019644694, 0.019686778, 0.019729722, 0.019774722, 0.019816722, 0.019858722, 0.019898736, 0.019944736, 0.019985736, 0.02002975, 0.02007675, 0.02011675, 0.020163764...</msg>
<status status="PASS" starttime="20201117 14:42:43.661" endtime="20201117 14:42:43.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.678" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.677" endtime="20201117 14:42:43.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.681" level="INFO">VALUE: [3.766600000000217e-05, 3.801399999999941e-05, 3.8026999999999506e-05, 3.7416999999997924e-05, 3.801400000000288e-05, 3.726400000000213e-05, 3.7832999999997535e-05, 3.8068999999998215e-05, 3.72780000000017e-05, 3.819400000000181e-05, 3.769400000000131e-05, 3.745800000000063e-05, 3.799999999999984e-05, 3.7666999999998174e-05, 3.729200000000127e-05, 3.748599999999977e-05, 3.730600000000084e-05, 3.804200000000202e-05, 3.80980000000003e-05, 3.7360999999999644e-05, 3.750000000000281e-05, 3.74590000000001e-05, 3.7874999999999714e-05, 3.74590000000001e-05, 3.769399999999784e-05, 3.74720000000002e-05, 3.793000000000199e-05, 3.795800000000113e-05, 3.7347000000000075e-05, 3.8111000000000395e-05, 3.7945000000001033e-05, 3.744400000000106e-05, 3.774999999999959e-05, 3.8152999999999104e-05, 3.7597000000000325e-05, 3.729200000000127e-05, 3.724999999999909e-05, 3.7832999999997535e-05, 3.748599999999977e-05, 3.7583000000000755e-05, 3.7388999999998784e-05, 3.798600000000027e-05, 3.7431000000000964e-05, 3.799999999999984e-05, 3.7638999999999034e-05, 3.784800000000005e-05, 3.7304999999997895e-05, 3.730600000000084e-05, 3.7319000000000935e-05, 3.7403000000001824e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.679" endtime="20201117 14:42:43.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.675" endtime="20201117 14:42:43.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.684" endtime="20201117 14:42:43.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.687" endtime="20201117 14:42:43.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.686" endtime="20201117 14:42:43.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.682" endtime="20201117 14:42:43.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.317" endtime="20201117 14:42:43.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.918" endtime="20201117 14:42:43.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.917" endtime="20201117 14:42:43.709"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.711" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.723" endtime="20201117 14:42:43.741"></status>
</kw>
<msg timestamp="20201117 14:42:43.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.722" endtime="20201117 14:42:43.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.742" endtime="20201117 14:42:43.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.745" endtime="20201117 14:42:43.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.715" endtime="20201117 14:42:43.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.713" endtime="20201117 14:42:43.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.754" endtime="20201117 14:42:44.040"></status>
</kw>
<msg timestamp="20201117 14:42:44.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027259639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.752" endtime="20201117 14:42:44.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027259639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.044" endtime="20201117 14:42:44.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.053" endtime="20201117 14:42:44.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.750" endtime="20201117 14:42:44.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.748" endtime="20201117 14:42:44.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.059" level="INFO">${RESULT} = [{'time': 0.027259639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.873599999999755e-05, 'source_diff': 3.873599999999755e-05}, {'time': 0.027306653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.056" endtime="20201117 14:42:44.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.073" level="INFO">${ACCURACY} = {'time': [0.027259639, 0.027306653, 0.027349708, 0.027396653, 0.027441667, 0.027489708, 0.027535708, 0.027578681, 0.027622681, 0.027667694, 0.027710694, 0.027755708, 0.027802708, 0.027846708, 0.027892...</msg>
<status status="PASS" starttime="20201117 14:42:44.060" endtime="20201117 14:42:44.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.077" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.076" endtime="20201117 14:42:44.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.080" level="INFO">VALUE: [3.873599999999755e-05, 3.848600000000077e-05, 3.9139000000000534e-05, 3.8916999999999424e-05, 3.8625000000000465e-05, 3.8389000000003254e-05, 3.915200000000063e-05, 3.852799999999948e-05, 3.8889000000000284e-05, 3.870799999999841e-05, 3.8847000000001575e-05, 3.917999999999977e-05, 3.8554999999999146e-05, 3.8819000000002435e-05, 3.873599999999755e-05, 3.8375000000000214e-05, 3.8652999999999604e-05, 3.87919999999993e-05, 3.8318999999998465e-05, 3.8568999999998715e-05, 3.854200000000252e-05, 3.852799999999948e-05, 3.8361000000000645e-05, 3.873599999999755e-05, 3.8431000000001964e-05, 3.8195000000001283e-05, 3.8611000000000895e-05, 3.8625000000000465e-05, 3.8361000000000645e-05, 3.9124999999997495e-05, 3.902799999999998e-05, 3.908399999999826e-05, 3.8375000000000214e-05, 3.825000000000009e-05, 3.8625000000000465e-05, 3.8582999999998285e-05, 3.875000000000059e-05, 3.8847000000001575e-05, 3.902799999999998e-05, 3.897199999999823e-05, 3.902799999999998e-05, 3.8861000000001145e-05, 3.850000000000034e-05, 3.874999999999712e-05, 3.8667000000002644e-05, 3.8304999999998895e-05, 3.898600000000127e-05, 3.8681000000002214e-05, 3.877799999999973e-05, 3.830599999999837e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.078" endtime="20201117 14:42:44.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.074" endtime="20201117 14:42:44.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.083" endtime="20201117 14:42:44.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.086" endtime="20201117 14:42:44.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.085" endtime="20201117 14:42:44.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.081" endtime="20201117 14:42:44.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.711" endtime="20201117 14:42:44.108"></status>
</kw>
<msg timestamp="20201117 14:42:44.108" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.116" endtime="20201117 14:42:44.131"></status>
</kw>
<msg timestamp="20201117 14:42:44.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.114" endtime="20201117 14:42:44.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.133" endtime="20201117 14:42:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.136" endtime="20201117 14:42:44.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.112" endtime="20201117 14:42:44.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.110" endtime="20201117 14:42:44.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.145" endtime="20201117 14:42:44.430"></status>
</kw>
<msg timestamp="20201117 14:42:44.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01995125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01999, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201117 14:42:44.143" endtime="20201117 14:42:44.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01995125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01999, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201117 14:42:44.434" endtime="20201117 14:42:44.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.442" endtime="20201117 14:42:44.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.140" endtime="20201117 14:42:44.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.139" endtime="20201117 14:42:44.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.449" level="INFO">${RESULT} = [{'time': 0.01999, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000059e-05, 'source_diff': 3.875000000000059e-05}, {'time': 0.020034986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201117 14:42:44.446" endtime="20201117 14:42:44.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.462" level="INFO">${ACCURACY} = {'time': [0.01999, 0.020034986, 0.020080986, 0.020128, 0.020175, 0.020221014, 0.020264028, 0.020311014, 0.020353028, 0.020398042, 0.020441042, 0.020484042, 0.020531056, 0.020579069, 0.020624056, 0.020...</msg>
<status status="PASS" starttime="20201117 14:42:44.450" endtime="20201117 14:42:44.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.467" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.466" endtime="20201117 14:42:44.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.470" level="INFO">VALUE: [3.875000000000059e-05, 3.8861000000001145e-05, 3.872199999999798e-05, 3.823600000000052e-05, 3.869399999999884e-05, 3.8680999999998744e-05, 3.854199999999905e-05, 3.847199999999773e-05, 3.87919999999993e-05, 3.8945000000002034e-05, 3.8611000000000895e-05, 3.877799999999973e-05, 3.902799999999998e-05, 3.838799999999684e-05, 3.886200000000062e-05, 3.827799999999923e-05, 3.888799999999734e-05, 3.9054999999999646e-05, 3.9013000000000936e-05, 3.8832999999998535e-05, 3.823600000000052e-05, 3.845800000000163e-05, 3.898600000000127e-05, 3.8833000000002005e-05, 3.877799999999973e-05, 3.902799999999998e-05, 3.897199999999823e-05, 3.8569000000002185e-05, 3.8388999999999784e-05, 3.9166999999999674e-05, 3.826400000000313e-05, 3.905600000000259e-05, 3.875000000000059e-05, 3.8361000000000645e-05, 3.830599999999837e-05, 3.8653000000003074e-05, 3.873599999999755e-05, 3.861200000000037e-05, 3.850000000000034e-05, 3.873600000000102e-05, 3.842999999999902e-05, 3.848600000000077e-05, 3.895799999999866e-05, 3.841599999999945e-05, 3.898600000000127e-05, 3.872199999999798e-05, 3.841599999999945e-05, 3.872200000000145e-05, 3.826399999999966e-05, 3.917999999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.468" endtime="20201117 14:42:44.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.463" endtime="20201117 14:42:44.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.473" endtime="20201117 14:42:44.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.477" endtime="20201117 14:42:44.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.475" endtime="20201117 14:42:44.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.471" endtime="20201117 14:42:44.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.108" endtime="20201117 14:42:44.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.710" endtime="20201117 14:42:44.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.709" endtime="20201117 14:42:44.498"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.500" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.509" endtime="20201117 14:42:44.523"></status>
</kw>
<msg timestamp="20201117 14:42:44.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.507" endtime="20201117 14:42:44.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.525" endtime="20201117 14:42:44.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.527" endtime="20201117 14:42:44.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.505" endtime="20201117 14:42:44.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.502" endtime="20201117 14:42:44.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.536" endtime="20201117 14:42:44.825"></status>
</kw>
<msg timestamp="20201117 14:42:44.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:44.535" endtime="20201117 14:42:44.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:44.829" endtime="20201117 14:42:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.838" endtime="20201117 14:42:44.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.532" endtime="20201117 14:42:44.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.531" endtime="20201117 14:42:44.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.844" level="INFO">${RESULT} = [{'time': 0.02233925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.001400000000141e-05, 'source_diff': 4.001400000000141e-05}, {'time': 0.02238825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:44.841" endtime="20201117 14:42:44.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.859" level="INFO">${ACCURACY} = {'time': [0.02233925, 0.02238825, 0.022431264, 0.022476278, 0.022522292, 0.022566306, 0.022614292, 0.022658292, 0.022705306, 0.022750292, 0.022793361, 0.022839306, 0.022882375, 0.022928333, 0.02297431...</msg>
<status status="PASS" starttime="20201117 14:42:44.845" endtime="20201117 14:42:44.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.864" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.863" endtime="20201117 14:42:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.866" level="INFO">VALUE: [4.001400000000141e-05, 3.999999999999837e-05, 3.9944999999999564e-05, 3.9346999999998605e-05, 4.0110999999998925e-05, 3.9389000000000784e-05, 3.923600000000152e-05, 3.959799999999833e-05, 3.976400000000116e-05, 4.005599999999665e-05, 3.9583000000002755e-05, 3.9653000000000604e-05, 4.001400000000141e-05, 3.940199999999741e-05, 3.991600000000095e-05, 3.9652999999997135e-05, 4.0055000000000646e-05, 3.973599999999855e-05, 3.972200000000245e-05, 4.0083000000003255e-05, 3.9860999999998675e-05, 4.002799999999751e-05, 3.9611000000001895e-05, 4.0181000000000244e-05, 3.9930999999999994e-05, 3.923600000000152e-05, 3.9680999999999744e-05, 3.9596999999998855e-05, 3.976400000000116e-05, 4.002800000000098e-05, 3.9708999999998884e-05, 3.9458999999998634e-05, 3.9930999999999994e-05, 3.9917000000000424e-05, 3.936200000000112e-05, 3.981999999999944e-05, 3.951400000000091e-05, 3.9291000000000326e-05, 3.9276999999997286e-05, 3.9291000000000326e-05, 3.993000000000052e-05, 3.9318999999999465e-05, 4.0055000000000646e-05, 3.976399999999769e-05, 3.9846999999999105e-05, 3.9596999999998855e-05, 3.9833000000003005e-05, 3.974999999999812e-05, 3.9403000000000354e-05, 3.9722999999998454e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.865" endtime="20201117 14:42:44.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.860" endtime="20201117 14:42:44.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.870" endtime="20201117 14:42:44.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.873" endtime="20201117 14:42:44.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.872" endtime="20201117 14:42:44.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.868" endtime="20201117 14:42:44.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.501" endtime="20201117 14:42:44.894"></status>
</kw>
<msg timestamp="20201117 14:42:44.894" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.903" endtime="20201117 14:42:44.919"></status>
</kw>
<msg timestamp="20201117 14:42:44.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.901" endtime="20201117 14:42:44.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.921" endtime="20201117 14:42:44.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.923" endtime="20201117 14:42:44.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.898" endtime="20201117 14:42:44.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.896" endtime="20201117 14:42:44.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.932" endtime="20201117 14:42:45.218"></status>
</kw>
<msg timestamp="20201117 14:42:45.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.931" endtime="20201117 14:42:45.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.222" endtime="20201117 14:42:45.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.230" endtime="20201117 14:42:45.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.928" endtime="20201117 14:42:45.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.926" endtime="20201117 14:42:45.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.237" level="INFO">${RESULT} = [{'time': 0.019892069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944399999999959e-05, 'source_diff': 3.944399999999959e-05}, {'time': 0.019935069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.234" endtime="20201117 14:42:45.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.250" level="INFO">${ACCURACY} = {'time': [0.019892069, 0.019935069, 0.019978069, 0.020024111, 0.020069097, 0.020114097, 0.020157097, 0.020205111, 0.020247097, 0.020292111, 0.020337111, 0.020385139, 0.020432125, 0.020480139, 0.020523...</msg>
<status status="PASS" starttime="20201117 14:42:45.238" endtime="20201117 14:42:45.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.255" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.254" endtime="20201117 14:42:45.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.257" level="INFO">VALUE: [3.944399999999959e-05, 3.972199999999898e-05, 3.9763000000001686e-05, 3.9332999999999035e-05, 3.9903000000000854e-05, 3.9568999999999716e-05, 3.972199999999898e-05, 3.973600000000202e-05, 3.9652999999997135e-05, 3.9569000000003185e-05, 3.9611000000001895e-05, 3.925000000000109e-05, 4.0152999999997635e-05, 3.980599999999987e-05, 4.0194999999999814e-05, 3.931999999999894e-05, 3.9680999999999744e-05, 4.01799999999973e-05, 3.924999999999762e-05, 3.99859999999988e-05, 3.977800000000073e-05, 3.9416999999999924e-05, 3.9791000000000826e-05, 3.961200000000137e-05, 3.980599999999987e-05, 3.9318999999999465e-05, 3.9568999999999716e-05, 3.923599999999805e-05, 3.9596999999998855e-05, 3.920799999999891e-05, 3.9846999999999105e-05, 4.018000000000077e-05, 3.969399999999984e-05, 3.975000000000159e-05, 3.99720000000027e-05, 4.022199999999948e-05, 3.9596999999998855e-05, 3.954200000000005e-05, 4.0181000000000244e-05, 3.9694999999999314e-05, 3.9181000000002714e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.930600000000284e-05, 4.004200000000055e-05, 3.9695000000002784e-05, 4.0194999999999814e-05, 3.999999999999837e-05, 3.9777000000001256e-05, 3.941600000000045e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.256" endtime="20201117 14:42:45.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.251" endtime="20201117 14:42:45.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.261" endtime="20201117 14:42:45.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.264" endtime="20201117 14:42:45.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.263" endtime="20201117 14:42:45.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.259" endtime="20201117 14:42:45.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.895" endtime="20201117 14:42:45.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.499" endtime="20201117 14:42:45.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.498" endtime="20201117 14:42:45.286"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.288" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.296" endtime="20201117 14:42:45.313"></status>
</kw>
<msg timestamp="20201117 14:42:45.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.295" endtime="20201117 14:42:45.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.315" endtime="20201117 14:42:45.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.317" endtime="20201117 14:42:45.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.292" endtime="20201117 14:42:45.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.290" endtime="20201117 14:42:45.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.326" endtime="20201117 14:42:45.613"></status>
</kw>
<msg timestamp="20201117 14:42:45.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:45.325" endtime="20201117 14:42:45.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:45.617" endtime="20201117 14:42:45.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.625" endtime="20201117 14:42:45.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.322" endtime="20201117 14:42:45.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.320" endtime="20201117 14:42:45.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.632" level="INFO">${RESULT} = [{'time': 0.022554403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1153000000002105e-05, 'source_diff': 4.1153000000002105e-05}, {'time': 0.022603417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:45.628" endtime="20201117 14:42:45.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.645" level="INFO">${ACCURACY} = {'time': [0.022554403, 0.022603417, 0.022648431, 0.022695417, 0.022743431, 0.022787431, 0.022832444, 0.022878458, 0.022923458, 0.022970458, 0.023020486, 0.023069472, 0.023118514, 0.023167472, 0.023213...</msg>
<status status="PASS" starttime="20201117 14:42:45.633" endtime="20201117 14:42:45.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.650" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.649" endtime="20201117 14:42:45.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.653" level="INFO">VALUE: [4.1153000000002105e-05, 4.104200000000155e-05, 4.077800000000173e-05, 4.0624999999998995e-05, 4.0625000000002465e-05, 4.1195000000000814e-05, 4.0360999999999175e-05, 4.0833000000000536e-05, 4.0527000000002006e-05, 4.1110999999999925e-05, 4.07920000000013e-05, 4.0805000000001396e-05, 4.031999999999994e-05, 4.118000000000177e-05, 4.076399999999869e-05, 4.0360999999999175e-05, 4.08059999999974e-05, 4.101399999999894e-05, 4.022200000000295e-05, 4.120800000000091e-05, 4.097200000000023e-05, 4.0875000000002715e-05, 4.083400000000001e-05, 4.0346999999999605e-05, 4.0596999999999855e-05, 4.058399999999976e-05, 4.0374999999998745e-05, 4.0374999999998745e-05, 4.0276999999998286e-05, 4.077800000000173e-05, 4.0860999999999675e-05, 4.073599999999955e-05, 4.0568999999997246e-05, 4.119400000000134e-05, 4.0596999999999855e-05, 4.025000000000209e-05, 4.076399999999869e-05, 4.0902999999998385e-05, 4.051399999999844e-05, 4.027799999999776e-05, 4.0903000000001855e-05, 4.100000000000284e-05, 4.095799999999719e-05, 4.1138999999999065e-05, 4.0360999999999175e-05, 4.1209000000000384e-05, 4.104199999999808e-05, 4.083400000000001e-05, 4.030600000000037e-05, 4.02920000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.651" endtime="20201117 14:42:45.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.646" endtime="20201117 14:42:45.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.656" endtime="20201117 14:42:45.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.659" endtime="20201117 14:42:45.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.658" endtime="20201117 14:42:45.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.654" endtime="20201117 14:42:45.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.289" endtime="20201117 14:42:45.680"></status>
</kw>
<msg timestamp="20201117 14:42:45.680" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.688" endtime="20201117 14:42:45.704"></status>
</kw>
<msg timestamp="20201117 14:42:45.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.687" endtime="20201117 14:42:45.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.705" endtime="20201117 14:42:45.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.708" endtime="20201117 14:42:45.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.684" endtime="20201117 14:42:45.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.682" endtime="20201117 14:42:45.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.717" endtime="20201117 14:42:46.004"></status>
</kw>
<msg timestamp="20201117 14:42:46.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.715" endtime="20201117 14:42:46.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.008" endtime="20201117 14:42:46.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.017" endtime="20201117 14:42:46.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.713" endtime="20201117 14:42:46.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.711" endtime="20201117 14:42:46.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.023" level="INFO">${RESULT} = [{'time': 0.019542431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.076399999999869e-05, 'source_diff': 4.076399999999869e-05}, {'time': 0.019591444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.020" endtime="20201117 14:42:46.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.037" level="INFO">${ACCURACY} = {'time': [0.019542431, 0.019591444, 0.019639444, 0.019689458, 0.019736458, 0.019781472, 0.019825486, 0.019868486, 0.019914486, 0.019958486, 0.020001486, 0.020049514, 0.0200935, 0.0201425, 0.020186514,...</msg>
<status status="PASS" starttime="20201117 14:42:46.024" endtime="20201117 14:42:46.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.041" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.040" endtime="20201117 14:42:46.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.044" level="INFO">VALUE: [4.076399999999869e-05, 4.0790999999998356e-05, 4.065199999999866e-05, 4.1083000000000786e-05, 4.0847000000000105e-05, 4.048600000000277e-05, 4.0805000000001396e-05, 4.073599999999955e-05, 4.0583000000000286e-05, 4.102800000000198e-05, 4.0666999999997705e-05, 4.0931000000000994e-05, 4.095800000000066e-05, 4.047199999999973e-05, 4.0930999999997525e-05, 4.0596999999999855e-05, 4.077800000000173e-05, 4.0790999999998356e-05, 4.0431000000000494e-05, 4.073599999999955e-05, 4.027800000000123e-05, 4.074999999999912e-05, 4.070800000000041e-05, 4.1153000000002105e-05, 4.0596999999999855e-05, 4.063800000000256e-05, 4.073599999999955e-05, 4.1138999999999065e-05, 4.0596999999999855e-05, 4.052799999999801e-05, 4.052799999999801e-05, 4.119400000000134e-05, 4.074999999999912e-05, 4.026400000000166e-05, 4.024999999999862e-05, 4.0680999999997275e-05, 4.0931000000000994e-05, 4.1139000000002535e-05, 4.077799999999826e-05, 4.072199999999998e-05, 4.1209000000000384e-05, 4.101399999999894e-05, 4.0431000000000494e-05, 4.1026999999999036e-05, 4.054200000000105e-05, 4.0972999999999704e-05, 4.031999999999994e-05, 4.0194999999999814e-05, 4.0305000000000896e-05, 4.0513000000002436e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.042" endtime="20201117 14:42:46.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.038" endtime="20201117 14:42:46.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.047" endtime="20201117 14:42:46.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.050" endtime="20201117 14:42:46.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.049" endtime="20201117 14:42:46.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.045" endtime="20201117 14:42:46.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.681" endtime="20201117 14:42:46.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.287" endtime="20201117 14:42:46.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.286" endtime="20201117 14:42:46.072"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.074" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.082" endtime="20201117 14:42:46.100"></status>
</kw>
<msg timestamp="20201117 14:42:46.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.081" endtime="20201117 14:42:46.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.101" endtime="20201117 14:42:46.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.104" endtime="20201117 14:42:46.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.078" endtime="20201117 14:42:46.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.076" endtime="20201117 14:42:46.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.113" endtime="20201117 14:42:46.398"></status>
</kw>
<msg timestamp="20201117 14:42:46.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.111" endtime="20201117 14:42:46.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.402" endtime="20201117 14:42:46.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.410" endtime="20201117 14:42:46.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.109" endtime="20201117 14:42:46.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.107" endtime="20201117 14:42:46.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.418" level="INFO">${RESULT} = [{'time': 0.022905819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.118000000000177e-05, 'source_diff': 4.118000000000177e-05}, {'time': 0.022950819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.414" endtime="20201117 14:42:46.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.432" level="INFO">${ACCURACY} = {'time': [0.022905819, 0.022950819, 0.022996875, 0.023045833, 0.023093833, 0.023139917, 0.023184861, 0.023229875, 0.023278875, 0.023323861, 0.023374889, 0.023425903, 0.023470875, 0.023521903, 0.023569...</msg>
<status status="PASS" starttime="20201117 14:42:46.419" endtime="20201117 14:42:46.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.437" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.436" endtime="20201117 14:42:46.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.439" level="INFO">VALUE: [4.118000000000177e-05, 4.219400000000234e-05, 4.1638999999999565e-05, 4.151400000000291e-05, 4.115200000000263e-05, 4.2152999999999635e-05, 4.1805000000002396e-05, 4.1319000000001466e-05, 4.2167000000002675e-05, 4.201399999999994e-05, 4.1861000000000675e-05, 4.1624999999999995e-05, 4.123600000000005e-05, 4.1624999999999995e-05, 4.2097000000001356e-05, 4.2139000000000065e-05, 4.1624999999999995e-05, 4.1709000000000884e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.209800000000083e-05, 4.201399999999994e-05, 4.17920000000023e-05, 4.144400000000159e-05, 4.140199999999941e-05, 4.147200000000073e-05, 4.175000000000012e-05, 4.140199999999941e-05, 4.2069000000002216e-05, 4.2096999999997886e-05, 4.201399999999994e-05, 4.219399999999887e-05, 4.219400000000234e-05, 4.12920000000018e-05, 4.1374999999999745e-05, 4.1847000000001106e-05, 4.149999999999987e-05, 4.183399999999754e-05, 4.13059999999979e-05, 4.176399999999969e-05, 4.2083000000001786e-05, 4.209799999999736e-05, 4.19860000000008e-05, 4.1459000000000634e-05, 4.126400000000266e-05, 4.1375000000003215e-05, 4.188800000000034e-05, 4.2111000000000925e-05, 4.1776999999999787e-05, 4.2027000000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.438" endtime="20201117 14:42:46.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.433" endtime="20201117 14:42:46.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.443" endtime="20201117 14:42:46.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.446" endtime="20201117 14:42:46.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.445" endtime="20201117 14:42:46.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.441" endtime="20201117 14:42:46.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.075" endtime="20201117 14:42:46.467"></status>
</kw>
<msg timestamp="20201117 14:42:46.467" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.475" endtime="20201117 14:42:46.493"></status>
</kw>
<msg timestamp="20201117 14:42:46.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.474" endtime="20201117 14:42:46.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.495" endtime="20201117 14:42:46.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.497" endtime="20201117 14:42:46.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.471" endtime="20201117 14:42:46.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.469" endtime="20201117 14:42:46.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.506" endtime="20201117 14:42:46.792"></status>
</kw>
<msg timestamp="20201117 14:42:46.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.505" endtime="20201117 14:42:46.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.797" endtime="20201117 14:42:46.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.805" endtime="20201117 14:42:46.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.502" endtime="20201117 14:42:46.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.500" endtime="20201117 14:42:46.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.812" level="INFO">${RESULT} = [{'time': 0.020612764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.156999999999772e-05, 'source_diff': 4.156999999999772e-05}, {'time': 0.020658778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.809" endtime="20201117 14:42:46.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.825" level="INFO">${ACCURACY} = {'time': [0.020612764, 0.020658778, 0.020704792, 0.020749778, 0.020796792, 0.020846792, 0.020894806, 0.020939806, 0.020987819, 0.021034819, 0.021079889, 0.021125819, 0.021176833, 0.021221833, 0.021269...</msg>
<status status="PASS" starttime="20201117 14:42:46.813" endtime="20201117 14:42:46.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.830" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.829" endtime="20201117 14:42:46.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.832" level="INFO">VALUE: [4.156999999999772e-05, 4.201399999999994e-05, 4.206999999999822e-05, 4.1445000000001064e-05, 4.175000000000012e-05, 4.2194999999998345e-05, 4.1208999999996915e-05, 4.1930999999998525e-05, 4.194400000000209e-05, 4.1347000000000605e-05, 4.202799999999951e-05, 4.2069000000002216e-05, 4.1846999999997636e-05, 4.195799999999819e-05, 4.1875000000000245e-05, 4.1833000000001536e-05, 4.2125000000000495e-05, 4.16799999999988e-05, 4.149999999999987e-05, 4.14860000000003e-05, 4.122200000000048e-05, 4.155599999999815e-05, 4.1638999999999565e-05, 4.205599999999865e-05, 4.179199999999883e-05, 4.1624999999999995e-05, 4.151399999999944e-05, 4.14860000000003e-05, 4.1360999999996706e-05, 4.173600000000055e-05, 4.1554999999998676e-05, 4.186200000000015e-05, 4.16799999999988e-05, 4.175000000000012e-05, 4.1540999999999106e-05, 4.19860000000008e-05, 4.1319000000001466e-05, 4.1305000000001896e-05, 4.176399999999969e-05, 4.126399999999919e-05, 4.1818999999998496e-05, 4.1695000000001314e-05, 4.1861000000000675e-05, 4.1444999999997595e-05, 4.220800000000191e-05, 4.1611000000000425e-05, 4.155600000000162e-05, 4.1680999999998275e-05, 4.202799999999951e-05, 4.1694999999997845e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.831" endtime="20201117 14:42:46.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.826" endtime="20201117 14:42:46.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.835" endtime="20201117 14:42:46.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.839" endtime="20201117 14:42:46.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.837" endtime="20201117 14:42:46.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.834" endtime="20201117 14:42:46.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.468" endtime="20201117 14:42:46.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.073" endtime="20201117 14:42:46.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.072" endtime="20201117 14:42:46.860"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.862" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.871" endtime="20201117 14:42:46.887"></status>
</kw>
<msg timestamp="20201117 14:42:46.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.869" endtime="20201117 14:42:46.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.889" endtime="20201117 14:42:46.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.891" endtime="20201117 14:42:46.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.866" endtime="20201117 14:42:46.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.864" endtime="20201117 14:42:46.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.900" endtime="20201117 14:42:47.189"></status>
</kw>
<msg timestamp="20201117 14:42:47.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.899" endtime="20201117 14:42:47.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.193" endtime="20201117 14:42:47.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.201" endtime="20201117 14:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.896" endtime="20201117 14:42:47.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.894" endtime="20201117 14:42:47.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.208" level="INFO">${RESULT} = [{'time': 0.022151083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.290199999999744e-05, 'source_diff': 4.290199999999744e-05}, {'time': 0.022199111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.205" endtime="20201117 14:42:47.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.222" level="INFO">${ACCURACY} = {'time': [0.022151083, 0.022199111, 0.022251125, 0.022300097, 0.022348111, 0.022395125, 0.022441111, 0.022492111, 0.022539125, 0.022589139, 0.022640139, 0.022691153, 0.022740139, 0.022786153, 0.022837...</msg>
<status status="PASS" starttime="20201117 14:42:47.210" endtime="20201117 14:42:47.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.227" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.226" endtime="20201117 14:42:47.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.229" level="INFO">VALUE: [4.290199999999744e-05, 4.2375000000000745e-05, 4.2332999999998566e-05, 4.269400000000284e-05, 4.2416999999999455e-05, 4.2624999999997526e-05, 4.302800000000051e-05, 4.2554999999999676e-05, 4.300000000000137e-05, 4.2903000000000385e-05, 4.300000000000137e-05, 4.304200000000008e-05, 4.3167000000000205e-05, 4.3180999999999775e-05, 4.254199999999958e-05, 4.283400000000201e-05, 4.226400000000019e-05, 4.283399999999854e-05, 4.319399999999987e-05, 4.319399999999987e-05, 4.265200000000066e-05, 4.266600000000023e-05, 4.2846999999998636e-05, 4.319399999999987e-05, 4.2554999999999676e-05, 4.2804999999999926e-05, 4.2346999999998136e-05, 4.2361000000001175e-05, 4.3096999999998886e-05, 4.2305000000002896e-05, 4.251400000000044e-05, 4.2875000000001245e-05, 4.2403000000003355e-05, 4.230600000000237e-05, 4.3194999999999345e-05, 4.258400000000176e-05, 4.2666999999999705e-05, 4.2459000000001634e-05, 4.233399999999804e-05, 4.251399999999697e-05, 4.2333000000002036e-05, 4.29999999999979e-05, 4.263800000000109e-05, 4.225000000000062e-05, 4.297200000000223e-05, 4.277800000000026e-05, 4.2860999999998206e-05, 4.275000000000112e-05, 4.300000000000137e-05, 4.3068999999999746e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.228" endtime="20201117 14:42:47.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.223" endtime="20201117 14:42:47.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.233" endtime="20201117 14:42:47.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.236" endtime="20201117 14:42:47.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.235" endtime="20201117 14:42:47.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.231" endtime="20201117 14:42:47.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.863" endtime="20201117 14:42:47.257"></status>
</kw>
<msg timestamp="20201117 14:42:47.257" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.265" endtime="20201117 14:42:47.281"></status>
</kw>
<msg timestamp="20201117 14:42:47.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.264" endtime="20201117 14:42:47.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.283" endtime="20201117 14:42:47.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.286" endtime="20201117 14:42:47.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.261" endtime="20201117 14:42:47.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.259" endtime="20201117 14:42:47.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.295" endtime="20201117 14:42:47.582"></status>
</kw>
<msg timestamp="20201117 14:42:47.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.293" endtime="20201117 14:42:47.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.586" endtime="20201117 14:42:47.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.594" endtime="20201117 14:42:47.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.290" endtime="20201117 14:42:47.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.289" endtime="20201117 14:42:47.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.601" level="INFO">${RESULT} = [{'time': 0.019693944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2861000000001676e-05, 'source_diff': 4.2861000000001676e-05}, {'time': 0.019740931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:47.598" endtime="20201117 14:42:47.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.614" level="INFO">${ACCURACY} = {'time': [0.019693944, 0.019740931, 0.019791931, 0.019839986, 0.019887944, 0.019936944, 0.019986972, 0.020034972, 0.020085972, 0.020134972, 0.020186986, 0.020231986, 0.020279028, 0.020324, 0.020372, 0...</msg>
<status status="PASS" starttime="20201117 14:42:47.602" endtime="20201117 14:42:47.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.619" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.618" endtime="20201117 14:42:47.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.621" level="INFO">VALUE: [4.2861000000001676e-05, 4.227799999999976e-05, 4.224999999999715e-05, 4.294399999999962e-05, 4.241599999999998e-05, 4.2625000000000995e-05, 4.29999999999979e-05, 4.2597000000001856e-05, 4.2804999999999926e-05, 4.2625000000000995e-05, 4.251400000000044e-05, 4.275000000000112e-05, 4.279199999999983e-05, 4.226399999999672e-05, 4.3125000000001495e-05, 4.225000000000062e-05, 4.302800000000051e-05, 4.2638999999997096e-05, 4.275000000000112e-05, 4.2959000000002134e-05, 4.2916999999999955e-05, 4.2916999999999955e-05, 4.308399999999879e-05, 4.2402999999999885e-05, 4.2708999999998415e-05, 4.265200000000066e-05, 4.295799999999919e-05, 4.2666999999999705e-05, 4.276300000000122e-05, 4.219400000000234e-05, 4.2527000000000537e-05, 4.2846999999998636e-05, 4.2583000000002286e-05, 4.2582999999998816e-05, 4.2361000000001175e-05, 4.22920000000028e-05, 4.223599999999758e-05, 4.254199999999958e-05, 4.2389000000000315e-05, 4.2916999999999955e-05, 4.2653000000000135e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.272200000000198e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.254199999999958e-05, 4.284799999999811e-05, 4.266600000000023e-05, 4.225000000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.620" endtime="20201117 14:42:47.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.615" endtime="20201117 14:42:47.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.625" endtime="20201117 14:42:47.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.628" endtime="20201117 14:42:47.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.626" endtime="20201117 14:42:47.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.623" endtime="20201117 14:42:47.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.258" endtime="20201117 14:42:47.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.861" endtime="20201117 14:42:47.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.860" endtime="20201117 14:42:47.649"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.651" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.660" endtime="20201117 14:42:47.678"></status>
</kw>
<msg timestamp="20201117 14:42:47.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.659" endtime="20201117 14:42:47.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.679" endtime="20201117 14:42:47.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.682" endtime="20201117 14:42:47.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.656" endtime="20201117 14:42:47.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.653" endtime="20201117 14:42:47.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.691" endtime="20201117 14:42:47.977"></status>
</kw>
<msg timestamp="20201117 14:42:47.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.689" endtime="20201117 14:42:47.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.981" endtime="20201117 14:42:47.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.989" endtime="20201117 14:42:47.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.687" endtime="20201117 14:42:47.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.685" endtime="20201117 14:42:47.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.996" level="INFO">${RESULT} = [{'time': 0.023798528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3403000000000885e-05, 'source_diff': 4.3403000000000885e-05}, {'time': 0.023845542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:47.992" endtime="20201117 14:42:47.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.011" level="INFO">${ACCURACY} = {'time': [0.023798528, 0.023845542, 0.023898528, 0.023945569, 0.023998542, 0.024050556, 0.024097556, 0.024143556, 0.024189583, 0.024241583, 0.024289583, 0.024341583, 0.024390597, 0.024437597, 0.024490...</msg>
<status status="PASS" starttime="20201117 14:42:47.997" endtime="20201117 14:42:48.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.015" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.014" endtime="20201117 14:42:48.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.018" level="INFO">VALUE: [4.3403000000000885e-05, 4.331999999999947e-05, 4.329200000000033e-05, 4.398599999999933e-05, 4.351400000000144e-05, 4.402800000000151e-05, 4.3486999999998305e-05, 4.3736999999998555e-05, 4.372199999999951e-05, 4.379100000000136e-05, 4.3374999999998276e-05, 4.3555000000000677e-05, 4.3346999999999136e-05, 4.3318999999999996e-05, 4.374999999999865e-05, 4.3652999999997666e-05, 4.372199999999951e-05, 4.395800000000019e-05, 4.3610999999998956e-05, 4.323600000000205e-05, 4.3444999999999595e-05, 4.407000000000022e-05, 4.331999999999947e-05, 4.3930999999997056e-05, 4.3903000000001385e-05, 4.386200000000215e-05, 4.3722999999998985e-05, 4.422200000000001e-05, 4.4167000000001205e-05, 4.3318999999999996e-05, 4.419400000000087e-05, 4.352700000000154e-05, 4.417999999999783e-05, 4.3610999999998956e-05, 4.375000000000212e-05, 4.327800000000076e-05, 4.373600000000255e-05, 4.419400000000087e-05, 4.323600000000205e-05, 4.380599999999693e-05, 4.343000000000055e-05, 4.34860000000023e-05, 4.325000000000162e-05, 4.407000000000022e-05, 4.408399999999979e-05, 4.39999999999989e-05, 4.3902999999997916e-05, 4.376399999999822e-05, 4.402799999999804e-05, 4.3987000000002274e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.016" endtime="20201117 14:42:48.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.012" endtime="20201117 14:42:48.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.021" endtime="20201117 14:42:48.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.024" endtime="20201117 14:42:48.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.023" endtime="20201117 14:42:48.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.019" endtime="20201117 14:42:48.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.652" endtime="20201117 14:42:48.045"></status>
</kw>
<msg timestamp="20201117 14:42:48.046" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.054" endtime="20201117 14:42:48.071"></status>
</kw>
<msg timestamp="20201117 14:42:48.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.052" endtime="20201117 14:42:48.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.072" endtime="20201117 14:42:48.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.075" endtime="20201117 14:42:48.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.050" endtime="20201117 14:42:48.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.048" endtime="20201117 14:42:48.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.084" endtime="20201117 14:42:48.371"></status>
</kw>
<msg timestamp="20201117 14:42:48.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.082" endtime="20201117 14:42:48.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.375" endtime="20201117 14:42:48.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.383" endtime="20201117 14:42:48.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.080" endtime="20201117 14:42:48.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.078" endtime="20201117 14:42:48.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.390" level="INFO">${RESULT} = [{'time': 0.019548444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3583000000003286e-05, 'source_diff': 4.3583000000003286e-05}, {'time': 0.019598458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:48.387" endtime="20201117 14:42:48.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.403" level="INFO">${ACCURACY} = {'time': [0.019548444, 0.019598458, 0.019650514, 0.019702458, 0.019754472, 0.019800472, 0.019852472, 0.019901486, 0.019953486, 0.020005514, 0.0200575, 0.020107514, 0.020160514, 0.020206514, 0.02025452...</msg>
<status status="PASS" starttime="20201117 14:42:48.391" endtime="20201117 14:42:48.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.408" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.407" endtime="20201117 14:42:48.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.410" level="INFO">VALUE: [4.3583000000003286e-05, 4.322199999999901e-05, 4.424999999999915e-05, 4.3318999999999996e-05, 4.354099999999764e-05, 4.34999999999984e-05, 4.373599999999908e-05, 4.3417000000000455e-05, 4.395800000000019e-05, 4.356999999999972e-05, 4.355600000000015e-05, 4.4110999999999456e-05, 4.397199999999976e-05, 4.3416999999996986e-05, 4.329200000000033e-05, 4.350000000000187e-05, 4.3667000000000705e-05, 4.351400000000144e-05, 4.3486999999998305e-05, 4.41800000000013e-05, 4.402699999999857e-05, 4.380499999999746e-05, 4.366600000000123e-05, 4.366600000000123e-05, 4.394400000000062e-05, 4.379200000000083e-05, 4.34999999999984e-05, 4.383399999999954e-05, 4.3375000000001745e-05, 4.348599999999883e-05, 4.3596999999999386e-05, 4.402800000000151e-05, 4.352800000000101e-05, 4.4111000000002926e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.384799999999911e-05, 4.3459000000002634e-05, 4.3444999999999595e-05, 4.327800000000076e-05, 4.3931000000000525e-05, 4.327700000000129e-05, 4.3987000000002274e-05, 4.398599999999933e-05, 4.391599999999801e-05, 4.4096999999999886e-05, 4.352699999999807e-05, 4.327700000000129e-05, 4.3917000000000955e-05, 4.326399999999772e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.409" endtime="20201117 14:42:48.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.404" endtime="20201117 14:42:48.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.414" endtime="20201117 14:42:48.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.417" endtime="20201117 14:42:48.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.416" endtime="20201117 14:42:48.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.412" endtime="20201117 14:42:48.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.046" endtime="20201117 14:42:48.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.650" endtime="20201117 14:42:48.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.649" endtime="20201117 14:42:48.439"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.441" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.449" endtime="20201117 14:42:48.465"></status>
</kw>
<msg timestamp="20201117 14:42:48.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.448" endtime="20201117 14:42:48.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.467" endtime="20201117 14:42:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.469" endtime="20201117 14:42:48.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.445" endtime="20201117 14:42:48.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.443" endtime="20201117 14:42:48.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.478" endtime="20201117 14:42:48.766"></status>
</kw>
<msg timestamp="20201117 14:42:48.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:48.477" endtime="20201117 14:42:48.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:48.770" endtime="20201117 14:42:48.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.778" endtime="20201117 14:42:48.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.474" endtime="20201117 14:42:48.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.472" endtime="20201117 14:42:48.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.785" level="INFO">${RESULT} = [{'time': 0.022117, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.520800000000144e-05, 'source_diff': 4.520800000000144e-05}, {'time': 0.02217, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.44...</msg>
<status status="PASS" starttime="20201117 14:42:48.782" endtime="20201117 14:42:48.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.798" level="INFO">${ACCURACY} = {'time': [0.022117, 0.02217, 0.022224, 0.022276014, 0.022325042, 0.022376028, 0.022429042, 0.022476028, 0.022526028, 0.022580042, 0.022632042, 0.022679056, 0.022733056, 0.022781069, 0.022835069, 0.022...</msg>
<status status="PASS" starttime="20201117 14:42:48.786" endtime="20201117 14:42:48.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.803" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.802" endtime="20201117 14:42:48.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.810" level="INFO">VALUE: [4.520800000000144e-05, 4.447200000000026e-05, 4.4360999999999706e-05, 4.4902999999998916e-05, 4.479199999999836e-05, 4.4402999999998416e-05, 4.48060000000014e-05, 4.4666999999998236e-05, 4.48060000000014e-05, 4.49999999999999e-05, 4.425000000000262e-05, 4.4666999999998236e-05, 4.429200000000133e-05, 4.502699999999957e-05, 4.452699999999907e-05, 4.488799999999987e-05, 4.452799999999854e-05, 4.4555000000001677e-05, 4.479199999999836e-05, 4.506899999999828e-05, 4.504200000000208e-05, 4.5111000000000456e-05, 4.495800000000119e-05, 4.452800000000201e-05, 4.519400000000187e-05, 4.451400000000244e-05, 4.447200000000026e-05, 4.5181000000001775e-05, 4.424999999999915e-05, 4.427800000000176e-05, 4.4973000000000235e-05, 4.4360999999999706e-05, 4.4360999999999706e-05, 4.434799999999961e-05, 4.448599999999983e-05, 4.494400000000162e-05, 4.429100000000186e-05, 4.4624999999999526e-05, 4.495800000000119e-05, 4.447200000000026e-05, 4.494399999999815e-05, 4.504200000000208e-05, 4.492999999999858e-05, 4.456899999999778e-05, 4.4902999999998916e-05, 4.4431000000001025e-05, 4.469400000000137e-05, 4.436199999999918e-05, 4.5167000000002205e-05, 4.4610999999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.804" endtime="20201117 14:42:48.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.799" endtime="20201117 14:42:48.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.814" endtime="20201117 14:42:48.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.817" endtime="20201117 14:42:48.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.815" endtime="20201117 14:42:48.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.812" endtime="20201117 14:42:48.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.441" endtime="20201117 14:42:48.838"></status>
</kw>
<msg timestamp="20201117 14:42:48.838" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.846" endtime="20201117 14:42:48.862"></status>
</kw>
<msg timestamp="20201117 14:42:48.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.845" endtime="20201117 14:42:48.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.864" endtime="20201117 14:42:48.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.866" endtime="20201117 14:42:48.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.842" endtime="20201117 14:42:48.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.840" endtime="20201117 14:42:48.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.875" endtime="20201117 14:42:49.161"></status>
</kw>
<msg timestamp="20201117 14:42:49.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.873" endtime="20201117 14:42:49.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.166" endtime="20201117 14:42:49.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.174" endtime="20201117 14:42:49.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.871" endtime="20201117 14:42:49.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.869" endtime="20201117 14:42:49.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.180" level="INFO">${RESULT} = [{'time': 0.019572611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.501399999999947e-05, 'source_diff': 4.501399999999947e-05}, {'time': 0.019619625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.177" endtime="20201117 14:42:49.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.194" level="INFO">${ACCURACY} = {'time': [0.019572611, 0.019619625, 0.019669639, 0.019721639, 0.019771667, 0.019820653, 0.019869681, 0.019917667, 0.019965653, 0.020013667, 0.020063667, 0.020115694, 0.020166681, 0.020214694, 0.020265...</msg>
<status status="PASS" starttime="20201117 14:42:49.181" endtime="20201117 14:42:49.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.199" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.198" endtime="20201117 14:42:49.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.201" level="INFO">VALUE: [4.501399999999947e-05, 4.444400000000112e-05, 4.505599999999818e-05, 4.4445000000000595e-05, 4.5152999999999166e-05, 4.4610999999999956e-05, 4.504199999999861e-05, 4.4722999999999985e-05, 4.479199999999836e-05, 4.455599999999768e-05, 4.5125000000000026e-05, 4.467999999999833e-05, 4.436199999999918e-05, 4.5013e-05, 4.445800000000069e-05, 4.5111000000000456e-05, 4.441599999999851e-05, 4.451400000000244e-05, 4.497200000000076e-05, 4.4333000000000566e-05, 4.4639000000002566e-05, 4.474999999999965e-05, 4.497200000000076e-05, 4.5125000000000026e-05, 4.4403000000001885e-05, 4.484699999999717e-05, 4.476399999999922e-05, 4.470800000000094e-05, 4.501400000000294e-05, 4.4902999999998916e-05, 4.476399999999922e-05, 4.451399999999897e-05, 4.505499999999871e-05, 4.484800000000011e-05, 4.426399999999872e-05, 4.515199999999969e-05, 4.515199999999969e-05, 4.451399999999897e-05, 4.426399999999872e-05, 4.505500000000218e-05, 4.4360999999999706e-05, 4.447200000000026e-05, 4.434699999999667e-05, 4.472200000000051e-05, 4.434799999999961e-05, 4.457000000000072e-05, 4.476400000000269e-05, 4.477799999999879e-05, 4.477699999999932e-05, 4.502799999999904e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.200" endtime="20201117 14:42:49.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.195" endtime="20201117 14:42:49.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.204" endtime="20201117 14:42:49.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.208" endtime="20201117 14:42:49.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.206" endtime="20201117 14:42:49.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.202" endtime="20201117 14:42:49.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.839" endtime="20201117 14:42:49.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.440" endtime="20201117 14:42:49.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.439" endtime="20201117 14:42:49.229"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.231" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.240" endtime="20201117 14:42:49.256"></status>
</kw>
<msg timestamp="20201117 14:42:49.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.238" endtime="20201117 14:42:49.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.257" endtime="20201117 14:42:49.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.260" endtime="20201117 14:42:49.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.235" endtime="20201117 14:42:49.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.233" endtime="20201117 14:42:49.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.269" endtime="20201117 14:42:49.554"></status>
</kw>
<msg timestamp="20201117 14:42:49.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.267" endtime="20201117 14:42:49.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.558" endtime="20201117 14:42:49.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.566" endtime="20201117 14:42:49.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.265" endtime="20201117 14:42:49.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.263" endtime="20201117 14:42:49.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.573" level="INFO">${RESULT} = [{'time': 0.022669347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.529099999999939e-05, 'source_diff': 4.529099999999939e-05}, {'time': 0.022718306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.570" endtime="20201117 14:42:49.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.588" level="INFO">${ACCURACY} = {'time': [0.022669347, 0.022718306, 0.022768347, 0.022822347, 0.022871319, 0.022920333, 0.022969347, 0.023020347, 0.023075375, 0.023125347, 0.023174347, 0.023225389, 0.023273375, 0.023328375, 0.023379...</msg>
<status status="PASS" starttime="20201117 14:42:49.574" endtime="20201117 14:42:49.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.592" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.591" endtime="20201117 14:42:49.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.595" level="INFO">VALUE: [4.529099999999939e-05, 4.532000000000147e-05, 4.5333000000001566e-05, 4.623599999999811e-05, 4.5319000000001997e-05, 4.5319000000001997e-05, 4.547200000000126e-05, 4.5902999999999916e-05, 4.586099999999774e-05, 4.552799999999954e-05, 4.530500000000243e-05, 4.606999999999875e-05, 4.575000000000065e-05, 4.58329999999986e-05, 4.5431000000002025e-05, 4.5847000000001636e-05, 4.526399999999972e-05, 4.587499999999731e-05, 4.6180999999999306e-05, 4.5916999999999486e-05, 4.552799999999954e-05, 4.580599999999893e-05, 4.5375000000000276e-05, 4.531899999999853e-05, 4.5430999999998556e-05, 4.5639000000000096e-05, 4.591600000000001e-05, 4.604100000000014e-05, 4.60269999999971e-05, 4.565200000000019e-05, 4.536099999999724e-05, 4.597200000000176e-05, 4.567999999999933e-05, 4.5319000000001997e-05, 4.575000000000065e-05, 4.5347000000001136e-05, 4.554200000000258e-05, 4.525000000000015e-05, 4.522200000000101e-05, 4.6111000000001456e-05, 4.5347000000001136e-05, 4.555599999999868e-05, 4.6194999999998876e-05, 4.60000000000009e-05, 4.5987000000000805e-05, 4.604100000000014e-05, 4.588800000000087e-05, 4.617999999999983e-05, 4.552799999999954e-05, 4.523599999999711e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.594" endtime="20201117 14:42:49.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.589" endtime="20201117 14:42:49.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.598" endtime="20201117 14:42:49.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.601" endtime="20201117 14:42:49.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.600" endtime="20201117 14:42:49.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.596" endtime="20201117 14:42:49.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.232" endtime="20201117 14:42:49.622"></status>
</kw>
<msg timestamp="20201117 14:42:49.622" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.631" endtime="20201117 14:42:49.647"></status>
</kw>
<msg timestamp="20201117 14:42:49.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.629" endtime="20201117 14:42:49.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.648" endtime="20201117 14:42:49.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.651" endtime="20201117 14:42:49.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.627" endtime="20201117 14:42:49.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.624" endtime="20201117 14:42:49.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.660" endtime="20201117 14:42:49.947"></status>
</kw>
<msg timestamp="20201117 14:42:49.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.658" endtime="20201117 14:42:49.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019805583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.951" endtime="20201117 14:42:49.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.959" endtime="20201117 14:42:49.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.656" endtime="20201117 14:42:49.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.654" endtime="20201117 14:42:49.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.966" level="INFO">${RESULT} = [{'time': 0.019851556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5972999999997766e-05, 'source_diff': 4.5972999999997766e-05}, {'time': 0.019899556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:49.963" endtime="20201117 14:42:49.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.980" level="INFO">${ACCURACY} = {'time': [0.019851556, 0.019899556, 0.019953569, 0.020007583, 0.020061569, 0.020110583, 0.020164583, 0.020216597, 0.020268625, 0.020322597, 0.020372611, 0.020426611, 0.020481625, 0.020529653, 0.020580...</msg>
<status status="PASS" starttime="20201117 14:42:49.967" endtime="20201117 14:42:49.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.984" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.983" endtime="20201117 14:42:49.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.987" level="INFO">VALUE: [4.5972999999997766e-05, 4.5487000000000305e-05, 4.572200000000151e-05, 4.548599999999736e-05, 4.55000000000004e-05, 4.5319000000001997e-05, 4.61939999999994e-05, 4.520799999999797e-05, 4.548599999999736e-05, 4.523600000000058e-05, 4.576400000000022e-05, 4.602800000000004e-05, 4.577799999999979e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.555599999999868e-05, 4.5625000000000526e-05, 4.55130000000005e-05, 4.5639000000000096e-05, 4.548599999999736e-05, 4.573599999999761e-05, 4.6153000000000166e-05, 4.608400000000179e-05, 4.554099999999964e-05, 4.541600000000298e-05, 4.555499999999921e-05, 4.529099999999939e-05, 4.586099999999774e-05, 4.536099999999724e-05, 4.576400000000022e-05, 4.525000000000015e-05, 4.617999999999983e-05, 4.5666999999999236e-05, 4.623599999999811e-05, 4.5597000000001386e-05, 4.5666999999999236e-05, 4.526399999999972e-05, 4.5652999999999666e-05, 4.559699999999792e-05, 4.5459000000001165e-05, 4.6195000000002345e-05, 4.583399999999807e-05, 4.5833000000002067e-05, 4.552700000000007e-05, 4.557000000000172e-05, 4.523600000000058e-05, 4.616600000000026e-05, 4.597199999999829e-05, 4.5402999999999416e-05, 4.620800000000244e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.985" endtime="20201117 14:42:49.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.980" endtime="20201117 14:42:49.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.990" endtime="20201117 14:42:49.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.993" endtime="20201117 14:42:50.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.992" endtime="20201117 14:42:50.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.988" endtime="20201117 14:42:50.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.623" endtime="20201117 14:42:50.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.230" endtime="20201117 14:42:50.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.229" endtime="20201117 14:42:50.014"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.017" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.025" endtime="20201117 14:42:50.040"></status>
</kw>
<msg timestamp="20201117 14:42:50.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.023" endtime="20201117 14:42:50.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.042" endtime="20201117 14:42:50.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.044" endtime="20201117 14:42:50.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.021" endtime="20201117 14:42:50.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.019" endtime="20201117 14:42:50.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.054" endtime="20201117 14:42:50.340"></status>
</kw>
<msg timestamp="20201117 14:42:50.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.052" endtime="20201117 14:42:50.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.345" endtime="20201117 14:42:50.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.353" endtime="20201117 14:42:50.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.050" endtime="20201117 14:42:50.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.048" endtime="20201117 14:42:50.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.359" level="INFO">${RESULT} = [{'time': 0.022082986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.634699999999867e-05, 'source_diff': 4.634699999999867e-05}, {'time': 0.022134, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:50.356" endtime="20201117 14:42:50.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.373" level="INFO">${ACCURACY} = {'time': [0.022082986, 0.022134, 0.022188, 0.022242014, 0.022295014, 0.022350028, 0.022402028, 0.022454028, 0.022507028, 0.022557042, 0.022612042, 0.022662056, 0.022717056, 0.022768056, 0.022821069, 0...</msg>
<status status="PASS" starttime="20201117 14:42:50.360" endtime="20201117 14:42:50.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.377" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.376" endtime="20201117 14:42:50.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.380" level="INFO">VALUE: [4.634699999999867e-05, 4.681900000000003e-05, 4.71529999999977e-05, 4.676400000000122e-05, 4.638899999999738e-05, 4.7208999999999446e-05, 4.7139000000001596e-05, 4.6889000000001346e-05, 4.6680999999999806e-05, 4.6944999999999626e-05, 4.6958999999999196e-05, 4.625000000000115e-05, 4.630599999999943e-05, 4.659799999999839e-05, 4.63879999999979e-05, 4.652700000000107e-05, 4.691600000000101e-05, 4.626399999999725e-05, 4.654100000000064e-05, 4.68329999999996e-05, 4.629099999999692e-05, 4.647199999999879e-05, 4.6639000000001096e-05, 4.658299999999935e-05, 4.6389000000000846e-05, 4.679199999999689e-05, 4.625000000000115e-05, 4.680599999999993e-05, 4.6611000000001956e-05, 4.679200000000036e-05, 4.684799999999864e-05, 4.706999999999975e-05, 4.625000000000115e-05, 4.70269999999981e-05, 4.654200000000011e-05, 4.655500000000021e-05, 4.698599999999886e-05, 4.656899999999978e-05, 4.681900000000003e-05, 4.636099999999824e-05, 4.66939999999999e-05, 4.6667000000000236e-05, 4.679200000000036e-05, 4.6681000000003275e-05, 4.6847000000002637e-05, 4.654200000000011e-05, 4.697200000000276e-05, 4.630599999999943e-05, 4.6958999999999196e-05, 4.6473000000001735e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.378" endtime="20201117 14:42:50.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.374" endtime="20201117 14:42:50.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.383" endtime="20201117 14:42:50.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.386" endtime="20201117 14:42:50.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.385" endtime="20201117 14:42:50.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.381" endtime="20201117 14:42:50.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.017" endtime="20201117 14:42:50.407"></status>
</kw>
<msg timestamp="20201117 14:42:50.407" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.416" endtime="20201117 14:42:50.433"></status>
</kw>
<msg timestamp="20201117 14:42:50.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.414" endtime="20201117 14:42:50.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.434" endtime="20201117 14:42:50.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.437" endtime="20201117 14:42:50.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.411" endtime="20201117 14:42:50.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.409" endtime="20201117 14:42:50.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.446" endtime="20201117 14:42:50.733"></status>
</kw>
<msg timestamp="20201117 14:42:50.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.445" endtime="20201117 14:42:50.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.737" endtime="20201117 14:42:50.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.745" endtime="20201117 14:42:50.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.442" endtime="20201117 14:42:50.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.440" endtime="20201117 14:42:50.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.752" level="INFO">${RESULT} = [{'time': 0.019696056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7139000000001596e-05, 'source_diff': 4.7139000000001596e-05}, {'time': 0.019749042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:50.749" endtime="20201117 14:42:50.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.766" level="INFO">${ACCURACY} = {'time': [0.019696056, 0.019749042, 0.019804056, 0.019860056, 0.019912056, 0.019965111, 0.020019069, 0.020074083, 0.020126097, 0.020177097, 0.020232097, 0.020288111, 0.020338111, 0.020388111, 0.020442...</msg>
<status status="PASS" starttime="20201117 14:42:50.753" endtime="20201117 14:42:50.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.770" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.769" endtime="20201117 14:42:50.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.773" level="INFO">VALUE: [4.7139000000001596e-05, 4.709800000000236e-05, 4.6237000000001055e-05, 4.683400000000254e-05, 4.6625000000001526e-05, 4.6917000000000486e-05, 4.643000000000008e-05, 4.655500000000021e-05, 4.634699999999867e-05, 4.623600000000158e-05, 4.695799999999972e-05, 4.677800000000079e-05, 4.672199999999904e-05, 4.695799999999972e-05, 4.698599999999886e-05, 4.698599999999886e-05, 4.68329999999996e-05, 4.7194999999999876e-05, 4.711099999999899e-05, 4.684699999999917e-05, 4.6917000000000486e-05, 4.706999999999975e-05, 4.629199999999986e-05, 4.709699999999942e-05, 4.676400000000122e-05, 4.677699999999785e-05, 4.641600000000051e-05, 4.702799999999757e-05, 4.654099999999717e-05, 4.662499999999806e-05, 4.626400000000072e-05, 4.676400000000122e-05, 4.702800000000104e-05, 4.677800000000079e-05, 4.661099999999849e-05, 4.629199999999986e-05, 4.676400000000122e-05, 4.6847000000002637e-05, 4.6875000000001776e-05, 4.674999999999818e-05, 4.65269999999976e-05, 4.6972999999998766e-05, 4.654200000000011e-05, 4.631899999999953e-05, 4.65139999999975e-05, 4.629199999999986e-05, 4.630499999999996e-05, 4.680500000000046e-05, 4.687499999999831e-05, 4.645799999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.771" endtime="20201117 14:42:50.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.766" endtime="20201117 14:42:50.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.776" endtime="20201117 14:42:50.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.779" endtime="20201117 14:42:50.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.778" endtime="20201117 14:42:50.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.774" endtime="20201117 14:42:50.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.408" endtime="20201117 14:42:50.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.016" endtime="20201117 14:42:50.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.015" endtime="20201117 14:42:50.800"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.803" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.811" endtime="20201117 14:42:50.827"></status>
</kw>
<msg timestamp="20201117 14:42:50.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.810" endtime="20201117 14:42:50.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.829" endtime="20201117 14:42:50.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.831" endtime="20201117 14:42:50.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.807" endtime="20201117 14:42:50.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.805" endtime="20201117 14:42:50.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.840" endtime="20201117 14:42:51.127"></status>
</kw>
<msg timestamp="20201117 14:42:51.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.839" endtime="20201117 14:42:51.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.131" endtime="20201117 14:42:51.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.139" endtime="20201117 14:42:51.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.836" endtime="20201117 14:42:51.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.834" endtime="20201117 14:42:51.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.146" level="INFO">${RESULT} = [{'time': 0.022530083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805499999999824e-05, 'source_diff': 4.805499999999824e-05}, {'time': 0.022582083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.143" endtime="20201117 14:42:51.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.161" level="INFO">${ACCURACY} = {'time': [0.022530083, 0.022582083, 0.022633097, 0.022688097, 0.022742111, 0.022799125, 0.022850139, 0.022906125, 0.022959139, 0.023010139, 0.023063139, 0.023118181, 0.023172181, 0.023226167, 0.023282...</msg>
<status status="PASS" starttime="20201117 14:42:51.147" endtime="20201117 14:42:51.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.165" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.164" endtime="20201117 14:42:51.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.168" level="INFO">VALUE: [4.805499999999824e-05, 4.75269999999986e-05, 4.755500000000121e-05, 4.75000000000024e-05, 4.767999999999786e-05, 4.754200000000111e-05, 4.73330000000001e-05, 4.731900000000053e-05, 4.7653000000001666e-05, 4.730600000000043e-05, 4.805600000000118e-05, 4.7431000000000556e-05, 4.7403000000001416e-05, 4.7708999999999946e-05, 4.754200000000111e-05, 4.7695000000000376e-05, 4.762499999999906e-05, 4.816600000000226e-05, 4.772200000000004e-05, 4.751299999999903e-05, 4.809700000000042e-05, 4.731900000000053e-05, 4.773599999999961e-05, 4.797200000000029e-05, 4.774999999999918e-05, 4.8013999999999e-05, 4.81529999999987e-05, 4.7707999999997e-05, 4.807000000000075e-05, 4.755600000000068e-05, 4.770800000000047e-05, 4.75139999999985e-05, 4.724999999999868e-05, 4.730600000000043e-05, 4.7972999999999766e-05, 4.7403000000001416e-05, 4.807000000000075e-05, 4.751400000000197e-05, 4.756900000000078e-05, 4.748599999999936e-05, 4.772200000000004e-05, 4.734699999999967e-05, 4.736099999999924e-05, 4.770800000000047e-05, 4.780499999999799e-05, 4.755499999999774e-05, 4.7667000000001236e-05, 4.774999999999918e-05, 4.76529999999982e-05, 4.798599999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.166" endtime="20201117 14:42:51.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.162" endtime="20201117 14:42:51.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.171" endtime="20201117 14:42:51.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.174" endtime="20201117 14:42:51.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.173" endtime="20201117 14:42:51.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.169" endtime="20201117 14:42:51.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.803" endtime="20201117 14:42:51.196"></status>
</kw>
<msg timestamp="20201117 14:42:51.196" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.204" endtime="20201117 14:42:51.221"></status>
</kw>
<msg timestamp="20201117 14:42:51.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.202" endtime="20201117 14:42:51.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.222" endtime="20201117 14:42:51.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.225" endtime="20201117 14:42:51.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.200" endtime="20201117 14:42:51.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.198" endtime="20201117 14:42:51.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.234" endtime="20201117 14:42:51.520"></status>
</kw>
<msg timestamp="20201117 14:42:51.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.232" endtime="20201117 14:42:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020793542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.525" endtime="20201117 14:42:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.533" endtime="20201117 14:42:51.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.230" endtime="20201117 14:42:51.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.228" endtime="20201117 14:42:51.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.539" level="INFO">${RESULT} = [{'time': 0.020793542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.808400000000032e-05, 'source_diff': 4.808400000000032e-05}, {'time': 0.020843528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.536" endtime="20201117 14:42:51.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.553" level="INFO">${ACCURACY} = {'time': [0.020793542, 0.020843528, 0.020897556, 0.020947542, 0.021004556, 0.021058569, 0.021114569, 0.021167569, 0.021223569, 0.021278597, 0.021329583, 0.021386611, 0.021443597, 0.021494625, 0.021545...</msg>
<status status="PASS" starttime="20201117 14:42:51.540" endtime="20201117 14:42:51.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.557" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.556" endtime="20201117 14:42:51.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.560" level="INFO">VALUE: [4.808400000000032e-05, 4.748599999999936e-05, 4.8195000000000876e-05, 4.7708999999999946e-05, 4.754200000000111e-05, 4.784700000000017e-05, 4.820800000000097e-05, 4.734699999999967e-05, 4.794400000000115e-05, 4.743000000000108e-05, 4.747199999999979e-05, 4.786099999999974e-05, 4.759699999999992e-05, 4.756900000000078e-05, 4.747199999999979e-05, 4.720799999999997e-05, 4.7931000000001056e-05, 4.720799999999997e-05, 4.729200000000086e-05, 4.759699999999992e-05, 4.7958999999996726e-05, 4.801400000000247e-05, 4.783400000000007e-05, 4.748599999999936e-05, 4.799999999999943e-05, 4.75130000000025e-05, 4.779200000000136e-05, 4.776299999999928e-05, 4.745799999999675e-05, 4.7639000000002096e-05, 4.730500000000096e-05, 4.747199999999979e-05, 4.8167000000001736e-05, 4.8013999999999e-05, 4.744400000000065e-05, 4.8013999999999e-05, 4.761099999999949e-05, 4.7445000000000126e-05, 4.7361000000002706e-05, 4.738899999999838e-05, 4.786099999999974e-05, 4.7445000000000126e-05, 4.758300000000035e-05, 4.724999999999868e-05, 4.7945000000000626e-05, 4.7681000000000806e-05, 4.776400000000222e-05, 4.82079999999975e-05, 4.795799999999725e-05, 4.734699999999967e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.558" endtime="20201117 14:42:51.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.554" endtime="20201117 14:42:51.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.563" endtime="20201117 14:42:51.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.567" endtime="20201117 14:42:51.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.565" endtime="20201117 14:42:51.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.562" endtime="20201117 14:42:51.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.196" endtime="20201117 14:42:51.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.801" endtime="20201117 14:42:51.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.801" endtime="20201117 14:42:51.588"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.590" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.599" endtime="20201117 14:42:51.614"></status>
</kw>
<msg timestamp="20201117 14:42:51.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.597" endtime="20201117 14:42:51.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.616" endtime="20201117 14:42:51.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.618" endtime="20201117 14:42:51.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.595" endtime="20201117 14:42:51.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.592" endtime="20201117 14:42:51.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.627" endtime="20201117 14:42:51.913"></status>
</kw>
<msg timestamp="20201117 14:42:51.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.626" endtime="20201117 14:42:51.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.918" endtime="20201117 14:42:51.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.926" endtime="20201117 14:42:51.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.623" endtime="20201117 14:42:51.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.622" endtime="20201117 14:42:51.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.933" level="INFO">${RESULT} = [{'time': 0.021949528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830599999999796e-05, 'source_diff': 4.830599999999796e-05}, {'time': 0.022006569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.929" endtime="20201117 14:42:51.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.946" level="INFO">${ACCURACY} = {'time': [0.021949528, 0.022006569, 0.022061611, 0.022114611, 0.022168569, 0.022224569, 0.022279597, 0.022332583, 0.022387583, 0.022445597, 0.022496597, 0.022553597, 0.022608694, 0.022661611, 0.022714...</msg>
<status status="PASS" starttime="20201117 14:42:51.934" endtime="20201117 14:42:51.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.950" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.949" endtime="20201117 14:42:51.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.953" level="INFO">VALUE: [4.830599999999796e-05, 4.904099999999967e-05, 4.845799999999775e-05, 4.881899999999856e-05, 4.913800000000065e-05, 4.875000000000018e-05, 4.894400000000215e-05, 4.827699999999935e-05, 4.909699999999795e-05, 4.854100000000264e-05, 4.826399999999925e-05, 4.879100000000289e-05, 4.877699999999985e-05, 4.875000000000018e-05, 4.838899999999938e-05, 4.873600000000061e-05, 4.897199999999782e-05, 4.897200000000129e-05, 4.861100000000049e-05, 4.9014e-05, 4.852799999999907e-05, 4.9014e-05, 4.906999999999828e-05, 4.830600000000143e-05, 4.904199999999914e-05, 4.852799999999907e-05, 4.869399999999843e-05, 4.9014e-05, 4.876399999999975e-05, 4.841599999999904e-05, 4.906899999999881e-05, 4.844399999999818e-05, 4.827800000000229e-05, 4.902799999999957e-05, 4.887500000000031e-05, 4.872200000000104e-05, 4.824999999999968e-05, 4.847200000000079e-05, 4.830600000000143e-05, 4.908399999999785e-05, 4.9014e-05, 4.8709000000000946e-05, 4.8209000000000446e-05, 4.849999999999993e-05, 4.845800000000122e-05, 4.897199999999782e-05, 4.867999999999886e-05, 4.9014e-05, 4.827799999999882e-05, 4.887500000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.952" endtime="20201117 14:42:51.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.947" endtime="20201117 14:42:51.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.957" endtime="20201117 14:42:51.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.960" endtime="20201117 14:42:51.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.958" endtime="20201117 14:42:51.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.955" endtime="20201117 14:42:51.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.591" endtime="20201117 14:42:51.981"></status>
</kw>
<msg timestamp="20201117 14:42:51.981" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.989" endtime="20201117 14:42:52.007"></status>
</kw>
<msg timestamp="20201117 14:42:52.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.988" endtime="20201117 14:42:52.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.008" endtime="20201117 14:42:52.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.011" endtime="20201117 14:42:52.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.985" endtime="20201117 14:42:52.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.983" endtime="20201117 14:42:52.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.020" endtime="20201117 14:42:52.305"></status>
</kw>
<msg timestamp="20201117 14:42:52.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.018" endtime="20201117 14:42:52.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.309" endtime="20201117 14:42:52.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.318" endtime="20201117 14:42:52.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.016" endtime="20201117 14:42:52.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.014" endtime="20201117 14:42:52.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.324" level="INFO">${RESULT} = [{'time': 0.019590819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.841599999999904e-05, 'source_diff': 4.841599999999904e-05}, {'time': 0.019647861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.321" endtime="20201117 14:42:52.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.338" level="INFO">${ACCURACY} = {'time': [0.019590819, 0.019647861, 0.019701847, 0.019755875, 0.019806861, 0.019861847, 0.019913917, 0.019970875, 0.020023889, 0.020074875, 0.020130889, 0.020185889, 0.020239917, 0.020295917, 0.020347...</msg>
<status status="PASS" starttime="20201117 14:42:52.326" endtime="20201117 14:42:52.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.342" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.341" endtime="20201117 14:42:52.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.345" level="INFO">VALUE: [4.841599999999904e-05, 4.856899999999831e-05, 4.843000000000208e-05, 4.888899999999988e-05, 4.867999999999886e-05, 4.886099999999727e-05, 4.925000000000068e-05, 4.849999999999993e-05, 4.886100000000074e-05, 4.849999999999993e-05, 4.91529999999997e-05, 4.869499999999791e-05, 4.905599999999871e-05, 4.893099999999859e-05, 4.9208999999997977e-05, 4.881999999999803e-05, 4.8431000000001556e-05, 4.8487000000003305e-05, 4.876399999999975e-05, 4.838899999999938e-05, 4.825000000000315e-05, 4.902799999999957e-05, 4.90270000000001e-05, 4.859700000000092e-05, 4.883400000000107e-05, 4.826399999999925e-05, 4.849999999999993e-05, 4.861100000000049e-05, 4.884700000000117e-05, 4.848600000000036e-05, 4.904199999999914e-05, 4.902799999999957e-05, 4.9014e-05, 4.826399999999925e-05, 4.863899999999963e-05, 4.880499999999899e-05, 4.851300000000003e-05, 4.918099999999884e-05, 4.8486999999999836e-05, 4.827699999999935e-05, 4.876300000000028e-05, 4.916699999999927e-05, 4.881899999999856e-05, 4.85269999999996e-05, 4.881900000000203e-05, 4.875000000000018e-05, 4.898600000000086e-05, 4.91529999999997e-05, 4.8417000000001986e-05, 4.863899999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.344" endtime="20201117 14:42:52.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.339" endtime="20201117 14:42:52.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.349" endtime="20201117 14:42:52.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.352" endtime="20201117 14:42:52.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.350" endtime="20201117 14:42:52.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.347" endtime="20201117 14:42:52.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.982" endtime="20201117 14:42:52.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.589" endtime="20201117 14:42:52.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.588" endtime="20201117 14:42:52.373"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.376" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.384" endtime="20201117 14:42:52.400"></status>
</kw>
<msg timestamp="20201117 14:42:52.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.382" endtime="20201117 14:42:52.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.401" endtime="20201117 14:42:52.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.404" endtime="20201117 14:42:52.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.380" endtime="20201117 14:42:52.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.377" endtime="20201117 14:42:52.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.413" endtime="20201117 14:42:52.699"></status>
</kw>
<msg timestamp="20201117 14:42:52.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.411" endtime="20201117 14:42:52.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.703" endtime="20201117 14:42:52.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.711" endtime="20201117 14:42:52.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.409" endtime="20201117 14:42:52.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.407" endtime="20201117 14:42:52.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.718" level="INFO">${RESULT} = [{'time': 0.022321111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.993000000000011e-05, 'source_diff': 4.993000000000011e-05}, {'time': 0.022377097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.714" endtime="20201117 14:42:52.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.732" level="INFO">${ACCURACY} = {'time': [0.022321111, 0.022377097, 0.022435125, 0.022490111, 0.022547125, 0.022605125, 0.022664139, 0.022717153, 0.022774167, 0.022828208, 0.022884167, 0.022941181, 0.023000181, 0.023054181, 0.023108...</msg>
<status status="PASS" starttime="20201117 14:42:52.719" endtime="20201117 14:42:52.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.737" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.736" endtime="20201117 14:42:52.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.740" level="INFO">VALUE: [4.993000000000011e-05, 4.993000000000011e-05, 5.02079999999995e-05, 4.979199999999989e-05, 4.941699999999952e-05, 4.976400000000075e-05, 4.936100000000124e-05, 4.948600000000136e-05, 4.9931000000003056e-05, 5.004100000000067e-05, 4.987500000000131e-05, 4.9987000000001336e-05, 4.976400000000075e-05, 4.976400000000075e-05, 4.933299999999863e-05, 4.926400000000025e-05, 4.940200000000047e-05, 4.966600000000029e-05, 5.009700000000242e-05, 4.979199999999989e-05, 4.922200000000154e-05, 4.973599999999814e-05, 4.990299999999698e-05, 5.008300000000285e-05, 5.006899999999981e-05, 4.926400000000025e-05, 4.947200000000179e-05, 5.016700000000027e-05, 4.959800000000139e-05, 4.949999999999746e-05, 5.01530000000007e-05, 4.936099999999777e-05, 4.926300000000078e-05, 4.9737000000001086e-05, 4.986099999999827e-05, 5.006900000000328e-05, 4.9901999999997504e-05, 5.006899999999981e-05, 4.933299999999863e-05, 5.02079999999995e-05, 4.987500000000131e-05, 4.961099999999802e-05, 4.947200000000179e-05, 4.929199999999939e-05, 4.950000000000093e-05, 5.0209000000002446e-05, 4.948600000000136e-05, 4.937500000000081e-05, 4.929199999999939e-05, 4.9486999999997366e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.738" endtime="20201117 14:42:52.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.733" endtime="20201117 14:42:52.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.743" endtime="20201117 14:42:52.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.747" endtime="20201117 14:42:52.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.745" endtime="20201117 14:42:52.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.741" endtime="20201117 14:42:52.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.376" endtime="20201117 14:42:52.767"></status>
</kw>
<msg timestamp="20201117 14:42:52.768" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.776" endtime="20201117 14:42:52.793"></status>
</kw>
<msg timestamp="20201117 14:42:52.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.774" endtime="20201117 14:42:52.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.794" endtime="20201117 14:42:52.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.797" endtime="20201117 14:42:52.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.772" endtime="20201117 14:42:52.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.770" endtime="20201117 14:42:52.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.806" endtime="20201117 14:42:53.092"></status>
</kw>
<msg timestamp="20201117 14:42:53.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.804" endtime="20201117 14:42:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.096" endtime="20201117 14:42:53.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.104" endtime="20201117 14:42:53.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.802" endtime="20201117 14:42:53.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.800" endtime="20201117 14:42:53.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.111" level="INFO">${RESULT} = [{'time': 0.020150556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.977800000000032e-05, 'source_diff': 4.977800000000032e-05}, {'time': 0.020205556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.107" endtime="20201117 14:42:53.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.124" level="INFO">${ACCURACY} = {'time': [0.020150556, 0.020205556, 0.020264556, 0.020317569, 0.020370569, 0.020426597, 0.020480583, 0.020536597, 0.020588597, 0.020641611, 0.020693611, 0.020750653, 0.020804653, 0.020859639, 0.020916...</msg>
<status status="PASS" starttime="20201117 14:42:53.112" endtime="20201117 14:42:53.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.129" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.128" endtime="20201117 14:42:53.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.131" level="INFO">VALUE: [4.977800000000032e-05, 5.012499999999809e-05, 4.9986999999997866e-05, 5.019399999999993e-05, 4.929099999999992e-05, 4.970800000000247e-05, 4.950000000000093e-05, 4.922200000000154e-05, 4.962500000000106e-05, 4.955499999999974e-05, 4.966699999999977e-05, 5.018099999999984e-05, 4.931999999999853e-05, 4.981999999999903e-05, 4.950000000000093e-05, 4.943099999999909e-05, 4.968099999999934e-05, 5.009699999999895e-05, 4.938899999999691e-05, 5.016700000000027e-05, 4.944499999999866e-05, 4.930599999999896e-05, 4.979100000000042e-05, 4.967999999999986e-05, 4.931899999999906e-05, 4.974999999999771e-05, 4.922199999999807e-05, 4.979100000000042e-05, 4.955499999999974e-05, 5.018099999999984e-05, 4.995800000000272e-05, 4.941699999999952e-05, 5.009699999999895e-05, 4.969399999999943e-05, 4.970800000000247e-05, 5.000000000000143e-05, 4.994499999999916e-05, 4.967999999999986e-05, 4.930599999999896e-05, 5.016700000000027e-05, 4.924999999999721e-05, 5.002800000000057e-05, 5.011099999999852e-05, 4.955499999999974e-05, 4.966600000000029e-05, 4.967999999999986e-05, 4.966600000000029e-05, 4.930499999999949e-05, 5.0014000000001e-05, 4.994399999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.130" endtime="20201117 14:42:53.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.125" endtime="20201117 14:42:53.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.135" endtime="20201117 14:42:53.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.138" endtime="20201117 14:42:53.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.137" endtime="20201117 14:42:53.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.133" endtime="20201117 14:42:53.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.768" endtime="20201117 14:42:53.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.374" endtime="20201117 14:42:53.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.374" endtime="20201117 14:42:53.159"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.162" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.170" endtime="20201117 14:42:53.187"></status>
</kw>
<msg timestamp="20201117 14:42:53.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.168" endtime="20201117 14:42:53.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.188" endtime="20201117 14:42:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.191" endtime="20201117 14:42:53.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.166" endtime="20201117 14:42:53.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.164" endtime="20201117 14:42:53.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.200" endtime="20201117 14:42:53.487"></status>
</kw>
<msg timestamp="20201117 14:42:53.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.198" endtime="20201117 14:42:53.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.491" endtime="20201117 14:42:53.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.499" endtime="20201117 14:42:53.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.196" endtime="20201117 14:42:53.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.194" endtime="20201117 14:42:53.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.506" level="INFO">${RESULT} = [{'time': 0.022918556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.116700000000127e-05, 'source_diff': 5.116700000000127e-05}, {'time': 0.022973542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.503" endtime="20201117 14:42:53.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.519" level="INFO">${ACCURACY} = {'time': [0.022918556, 0.022973542, 0.023028583, 0.023088556, 0.023147625, 0.023204569, 0.023260583, 0.023315597, 0.023371583, 0.023431597, 0.023488597, 0.023544625, 0.023602611, 0.023660653, 0.023719...</msg>
<status status="PASS" starttime="20201117 14:42:53.507" endtime="20201117 14:42:53.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.524" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.523" endtime="20201117 14:42:53.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.527" level="INFO">VALUE: [5.116700000000127e-05, 5.107000000000028e-05, 5.0401999999998004e-05, 5.104200000000114e-05, 5.029200000000039e-05, 5.116600000000179e-05, 5.063900000000163e-05, 5.109699999999995e-05, 5.038900000000138e-05, 5.026399999999778e-05, 5.038900000000138e-05, 5.083300000000013e-05, 5.065299999999773e-05, 5.025000000000168e-05, 5.079200000000089e-05, 5.06530000000012e-05, 5.072200000000304e-05, 5.027800000000082e-05, 5.054199999999717e-05, 5.09729999999993e-05, 5.08339999999996e-05, 5.120899999999998e-05, 5.102800000000157e-05, 5.109699999999995e-05, 5.080600000000046e-05, 5.082000000000003e-05, 5.033299999999963e-05, 5.061099999999902e-05, 5.084700000000317e-05, 5.030499999999702e-05, 5.024999999999821e-05, 5.063899999999816e-05, 5.043100000000009e-05, 5.1014000000002e-05, 5.041700000000052e-05, 5.03469999999992e-05, 5.054200000000064e-05, 5.043100000000009e-05, 5.0223000000002016e-05, 5.027800000000082e-05, 5.05140000000015e-05, 5.109799999999942e-05, 5.0986999999998867e-05, 5.043000000000061e-05, 5.10270000000021e-05, 5.1179999999997894e-05, 5.081900000000056e-05, 5.095800000000025e-05, 5.093000000000111e-05, 5.090300000000145e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.525" endtime="20201117 14:42:53.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.520" endtime="20201117 14:42:53.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.530" endtime="20201117 14:42:53.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.533" endtime="20201117 14:42:53.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.532" endtime="20201117 14:42:53.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.528" endtime="20201117 14:42:53.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.162" endtime="20201117 14:42:53.554"></status>
</kw>
<msg timestamp="20201117 14:42:53.554" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.562" endtime="20201117 14:42:53.580"></status>
</kw>
<msg timestamp="20201117 14:42:53.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.561" endtime="20201117 14:42:53.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.582" endtime="20201117 14:42:53.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.584" endtime="20201117 14:42:53.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.558" endtime="20201117 14:42:53.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.556" endtime="20201117 14:42:53.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.593" endtime="20201117 14:42:53.881"></status>
</kw>
<msg timestamp="20201117 14:42:53.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.592" endtime="20201117 14:42:53.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.885" endtime="20201117 14:42:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.898" endtime="20201117 14:42:53.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.589" endtime="20201117 14:42:53.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.587" endtime="20201117 14:42:53.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.904" level="INFO">${RESULT} = [{'time': 0.020629153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.019499999999941e-05, 'source_diff': 5.019499999999941e-05}, {'time': 0.020688167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.901" endtime="20201117 14:42:53.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.918" level="INFO">${ACCURACY} = {'time': [0.020629153, 0.020688167, 0.020745208, 0.020801194, 0.020860194, 0.020917194, 0.020977208, 0.021035222, 0.021090208, 0.02114925, 0.021207222, 0.021264236, 0.021324236, 0.021382236, 0.0214422...</msg>
<status status="PASS" starttime="20201117 14:42:53.905" endtime="20201117 14:42:53.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.922" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.921" endtime="20201117 14:42:53.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.925" level="INFO">VALUE: [5.019499999999941e-05, 5.070899999999948e-05, 5.048600000000236e-05, 5.1137999999999184e-05, 5.1207999999997034e-05, 5.0637999999998684e-05, 5.059699999999945e-05, 5.098599999999939e-05, 5.052699999999813e-05, 5.03330000000031e-05, 5.026400000000125e-05, 5.1179999999997894e-05, 5.054200000000064e-05, 5.041700000000052e-05, 5.076399999999828e-05, 5.077800000000132e-05, 5.063900000000163e-05, 5.062499999999859e-05, 5.088899999999841e-05, 5.107000000000028e-05, 5.090300000000145e-05, 5.120899999999998e-05, 5.093099999999712e-05, 5.091600000000154e-05, 5.036100000000224e-05, 5.048600000000236e-05, 5.059700000000292e-05, 5.029099999999745e-05, 5.109699999999995e-05, 5.115299999999823e-05, 5.043000000000061e-05, 5.104199999999767e-05, 5.040300000000095e-05, 5.05140000000015e-05, 5.11530000000017e-05, 5.074999999999871e-05, 5.097199999999982e-05, 5.029200000000039e-05, 5.076399999999828e-05, 5.056999999999978e-05, 5.030599999999996e-05, 5.0223000000002016e-05, 5.0237000000001586e-05, 5.097199999999982e-05, 5.112500000000256e-05, 5.0708e-05, 5.1152000000002223e-05, 5.116700000000127e-05, 5.0957999999996784e-05, 5.10279999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.924" endtime="20201117 14:42:53.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.919" endtime="20201117 14:42:53.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.928" endtime="20201117 14:42:53.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.932" endtime="20201117 14:42:53.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.930" endtime="20201117 14:42:53.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.926" endtime="20201117 14:42:53.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.555" endtime="20201117 14:42:53.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.160" endtime="20201117 14:42:53.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.160" endtime="20201117 14:42:53.953"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.955" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.964" endtime="20201117 14:42:53.981"></status>
</kw>
<msg timestamp="20201117 14:42:53.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.962" endtime="20201117 14:42:53.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.982" endtime="20201117 14:42:53.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.985" endtime="20201117 14:42:53.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.959" endtime="20201117 14:42:53.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.957" endtime="20201117 14:42:53.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.995" endtime="20201117 14:42:54.280"></status>
</kw>
<msg timestamp="20201117 14:42:54.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.993" endtime="20201117 14:42:54.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.284" endtime="20201117 14:42:54.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.292" endtime="20201117 14:42:54.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.990" endtime="20201117 14:42:54.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.988" endtime="20201117 14:42:54.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.299" level="INFO">${RESULT} = [{'time': 0.022756986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.140299999999848e-05, 'source_diff': 5.140299999999848e-05}, {'time': 0.022812972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.296" endtime="20201117 14:42:54.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.314" level="INFO">${ACCURACY} = {'time': [0.022756986, 0.022812972, 0.022871986, 0.022926986, 0.022982028, 0.023042, 0.023100014, 0.023159014, 0.023217028, 0.023272042, 0.023329042, 0.023388042, 0.023448056, 0.023509056, 0.023563069...</msg>
<status status="PASS" starttime="20201117 14:42:54.300" endtime="20201117 14:42:54.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.319" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.318" endtime="20201117 14:42:54.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.322" level="INFO">VALUE: [5.140299999999848e-05, 5.183300000000113e-05, 5.215299999999923e-05, 5.1708000000001e-05, 5.130600000000096e-05, 5.172200000000057e-05, 5.162499999999959e-05, 5.1985999999996924e-05, 5.141700000000152e-05, 5.204199999999867e-05, 5.187499999999984e-05, 5.125000000000268e-05, 5.172300000000005e-05, 5.199999999999996e-05, 5.1665999999998824e-05, 5.218000000000236e-05, 5.180499999999852e-05, 5.124999999999921e-05, 5.219500000000141e-05, 5.144400000000118e-05, 5.186100000000027e-05, 5.127800000000182e-05, 5.186199999999974e-05, 5.197200000000082e-05, 5.159700000000045e-05, 5.206999999999781e-05, 5.1708000000001e-05, 5.219500000000141e-05, 5.172300000000005e-05, 5.176399999999928e-05, 5.15140000000025e-05, 5.177800000000232e-05, 5.169500000000091e-05, 5.195800000000125e-05, 5.1665999999998824e-05, 5.158300000000088e-05, 5.15270000000026e-05, 5.1902000000002974e-05, 5.158300000000088e-05, 5.145800000000075e-05, 5.208300000000138e-05, 5.181899999999809e-05, 5.188899999999941e-05, 5.211100000000052e-05, 5.199999999999996e-05, 5.169499999999744e-05, 5.18470000000007e-05, 5.149999999999946e-05, 5.201399999999953e-05, 5.137499999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.320" endtime="20201117 14:42:54.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.315" endtime="20201117 14:42:54.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.325" endtime="20201117 14:42:54.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.329" endtime="20201117 14:42:54.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.327" endtime="20201117 14:42:54.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.323" endtime="20201117 14:42:54.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.956" endtime="20201117 14:42:54.350"></status>
</kw>
<msg timestamp="20201117 14:42:54.350" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.358" endtime="20201117 14:42:54.375"></status>
</kw>
<msg timestamp="20201117 14:42:54.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.357" endtime="20201117 14:42:54.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.376" endtime="20201117 14:42:54.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.379" endtime="20201117 14:42:54.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.354" endtime="20201117 14:42:54.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.352" endtime="20201117 14:42:54.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.388" endtime="20201117 14:42:54.675"></status>
</kw>
<msg timestamp="20201117 14:42:54.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.387" endtime="20201117 14:42:54.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.679" endtime="20201117 14:42:54.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.688" endtime="20201117 14:42:54.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.384" endtime="20201117 14:42:54.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.382" endtime="20201117 14:42:54.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.694" level="INFO">${RESULT} = [{'time': 0.019680194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.173600000000014e-05, 'source_diff': 5.173600000000014e-05}, {'time': 0.019736181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.691" endtime="20201117 14:42:54.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.708" level="INFO">${ACCURACY} = {'time': [0.019680194, 0.019736181, 0.019793181, 0.019854194, 0.019911208, 0.019967208, 0.020021264, 0.020082222, 0.020143236, 0.02020025, 0.020255236, 0.020315236, 0.020372264, 0.02043225, 0.02049326...</msg>
<status status="PASS" starttime="20201117 14:42:54.695" endtime="20201117 14:42:54.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.712" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.711" endtime="20201117 14:42:54.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.715" level="INFO">VALUE: [5.173600000000014e-05, 5.177799999999885e-05, 5.205599999999824e-05, 5.161100000000002e-05, 5.159700000000045e-05, 5.159700000000045e-05, 5.179200000000189e-05, 5.201399999999953e-05, 5.161100000000002e-05, 5.159700000000045e-05, 5.154199999999817e-05, 5.130500000000149e-05, 5.143100000000109e-05, 5.20279999999991e-05, 5.199999999999996e-05, 5.1708000000001e-05, 5.143099999999762e-05, 5.18470000000007e-05, 5.20279999999991e-05, 5.129200000000139e-05, 5.127799999999835e-05, 5.206900000000181e-05, 5.1651999999999254e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.1415999999998574e-05, 5.219499999999794e-05, 5.193000000000211e-05, 5.2221999999997604e-05, 5.199999999999996e-05, 5.179199999999842e-05, 5.195800000000125e-05, 5.13470000000002e-05, 5.158400000000035e-05, 5.158400000000035e-05, 5.13340000000001e-05, 5.148599999999989e-05, 5.157000000000078e-05, 5.1415999999998574e-05, 5.168000000000186e-05, 5.2138000000000184e-05, 5.209700000000095e-05, 5.123599999999964e-05, 5.18470000000007e-05, 5.174999999999971e-05, 5.197200000000082e-05, 5.140300000000195e-05, 5.206899999999834e-05, 5.148599999999989e-05, 5.129199999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.713" endtime="20201117 14:42:54.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.708" endtime="20201117 14:42:54.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.718" endtime="20201117 14:42:54.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.721" endtime="20201117 14:42:54.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.719" endtime="20201117 14:42:54.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.716" endtime="20201117 14:42:54.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.351" endtime="20201117 14:42:54.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.954" endtime="20201117 14:42:54.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.953" endtime="20201117 14:42:54.743"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.745" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.755" endtime="20201117 14:42:54.772"></status>
</kw>
<msg timestamp="20201117 14:42:54.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.753" endtime="20201117 14:42:54.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.774" endtime="20201117 14:42:54.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.776" endtime="20201117 14:42:54.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.750" endtime="20201117 14:42:54.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.747" endtime="20201117 14:42:54.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.785" endtime="20201117 14:42:55.072"></status>
</kw>
<msg timestamp="20201117 14:42:55.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.784" endtime="20201117 14:42:55.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.076" endtime="20201117 14:42:55.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.085" endtime="20201117 14:42:55.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.781" endtime="20201117 14:42:55.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.779" endtime="20201117 14:42:55.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.091" level="INFO">${RESULT} = [{'time': 0.025210833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2665999999999824e-05, 'source_diff': 5.2665999999999824e-05}, {'time': 0.025269847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:55.088" endtime="20201117 14:42:55.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.105" level="INFO">${ACCURACY} = {'time': [0.025210833, 0.025269847, 0.025331847, 0.025389875, 0.025448861, 0.025509861, 0.025566917, 0.025624931, 0.025684889, 0.025742903, 0.025804917, 0.025859903, 0.025915931, 0.025973931, 0.026030...</msg>
<status status="PASS" starttime="20201117 14:42:55.092" endtime="20201117 14:42:55.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.109" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.108" endtime="20201117 14:42:55.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.111" level="INFO">VALUE: [5.2665999999999824e-05, 5.263900000000016e-05, 5.229099999999945e-05, 5.291699999999955e-05, 5.2929999999999644e-05, 5.277800000000332e-05, 5.312500000000109e-05, 5.284800000000117e-05, 5.288900000000041e-05, 5.307000000000228e-05, 5.279199999999942e-05, 5.245900000000123e-05, 5.272300000000105e-05, 5.306999999999881e-05, 5.311099999999805e-05, 5.2693999999998964e-05, 5.302700000000063e-05, 5.234699999999773e-05, 5.305499999999977e-05, 5.245800000000175e-05, 5.304199999999967e-05, 5.2429999999999144e-05, 5.2707999999998534e-05, 5.3179999999999894e-05, 5.232000000000153e-05, 5.2985999999997924e-05, 5.306999999999881e-05, 5.283299999999866e-05, 5.280600000000246e-05, 5.247200000000132e-05, 5.295899999999826e-05, 5.229199999999892e-05, 5.268099999999887e-05, 5.245800000000175e-05, 5.255499999999927e-05, 5.2429999999999144e-05, 5.259700000000145e-05, 5.252700000000013e-05, 5.2235999999997174e-05, 5.223600000000064e-05, 5.281899999999909e-05, 5.2485999999997424e-05, 5.225000000000021e-05, 5.2249999999996743e-05, 5.229200000000239e-05, 5.2749999999997244e-05, 5.284800000000117e-05, 5.261099999999755e-05, 5.280600000000246e-05, 5.234800000000067e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.110" endtime="20201117 14:42:55.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.105" endtime="20201117 14:42:55.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.115" endtime="20201117 14:42:55.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.118" endtime="20201117 14:42:55.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.117" endtime="20201117 14:42:55.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.113" endtime="20201117 14:42:55.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.746" endtime="20201117 14:42:55.139"></status>
</kw>
<msg timestamp="20201117 14:42:55.140" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.148" endtime="20201117 14:42:55.165"></status>
</kw>
<msg timestamp="20201117 14:42:55.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.146" endtime="20201117 14:42:55.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.167" endtime="20201117 14:42:55.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.169" endtime="20201117 14:42:55.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.144" endtime="20201117 14:42:55.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.142" endtime="20201117 14:42:55.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.178" endtime="20201117 14:42:55.465"></status>
</kw>
<msg timestamp="20201117 14:42:55.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.177" endtime="20201117 14:42:55.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.469" endtime="20201117 14:42:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.477" endtime="20201117 14:42:55.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.174" endtime="20201117 14:42:55.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.172" endtime="20201117 14:42:55.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.484" level="INFO">${RESULT} = [{'time': 0.020943167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.315300000000023e-05, 'source_diff': 5.315300000000023e-05}, {'time': 0.020999167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.481" endtime="20201117 14:42:55.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.497" level="INFO">${ACCURACY} = {'time': [0.020943167, 0.020999167, 0.021061181, 0.021118236, 0.021176181, 0.021231194, 0.021292181, 0.021349194, 0.021411194, 0.021467236, 0.021527208, 0.021584222, 0.021643236, 0.021705236, 0.021767...</msg>
<status status="PASS" starttime="20201117 14:42:55.485" endtime="20201117 14:42:55.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.502" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.501" endtime="20201117 14:42:55.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.504" level="INFO">VALUE: [5.315300000000023e-05, 5.256999999999831e-05, 5.238900000000338e-05, 5.23609999999973e-05, 5.305599999999924e-05, 5.2679999999999394e-05, 5.24730000000008e-05, 5.283299999999866e-05, 5.229100000000292e-05, 5.233300000000163e-05, 5.2429999999999144e-05, 5.276400000000028e-05, 5.3179999999999894e-05, 5.308299999999891e-05, 5.25279999999996e-05, 5.301400000000053e-05, 5.244500000000166e-05, 5.269500000000191e-05, 5.287500000000084e-05, 5.270899999999801e-05, 5.2902000000000504e-05, 5.255599999999874e-05, 5.272300000000105e-05, 5.255599999999874e-05, 5.3166000000000324e-05, 5.288900000000041e-05, 5.2443999999998714e-05, 5.2721999999998104e-05, 5.238899999999991e-05, 5.232000000000153e-05, 5.279099999999995e-05, 5.2429999999999144e-05, 5.2249999999996743e-05, 5.272200000000157e-05, 5.269499999999844e-05, 5.2721999999998104e-05, 5.293099999999912e-05, 5.234699999999773e-05, 5.294500000000216e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.266700000000277e-05, 5.240299999999948e-05, 5.305599999999924e-05, 5.229099999999945e-05, 5.251400000000003e-05, 5.2679999999999394e-05, 5.2457999999998284e-05, 5.312500000000109e-05, 5.277799999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.503" endtime="20201117 14:42:55.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.498" endtime="20201117 14:42:55.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.508" endtime="20201117 14:42:55.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.511" endtime="20201117 14:42:55.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.510" endtime="20201117 14:42:55.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.506" endtime="20201117 14:42:55.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.140" endtime="20201117 14:42:55.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.744" endtime="20201117 14:42:55.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.743" endtime="20201117 14:42:55.532"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.535" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.543" endtime="20201117 14:42:55.559"></status>
</kw>
<msg timestamp="20201117 14:42:55.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.541" endtime="20201117 14:42:55.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.561" endtime="20201117 14:42:55.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.564" endtime="20201117 14:42:55.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.539" endtime="20201117 14:42:55.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.537" endtime="20201117 14:42:55.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.574" endtime="20201117 14:42:55.861"></status>
</kw>
<msg timestamp="20201117 14:42:55.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.572" endtime="20201117 14:42:55.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.866" endtime="20201117 14:42:55.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.874" endtime="20201117 14:42:55.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.569" endtime="20201117 14:42:55.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.567" endtime="20201117 14:42:55.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.881" level="INFO">${RESULT} = [{'time': 0.022272292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.363899999999769e-05, 'source_diff': 5.363899999999769e-05}, {'time': 0.022328292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.877" endtime="20201117 14:42:55.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.895" level="INFO">${ACCURACY} = {'time': [0.022272292, 0.022328292, 0.022390306, 0.022453319, 0.022516319, 0.022578319, 0.022641333, 0.022697347, 0.022754347, 0.022812361, 0.022873431, 0.022934361, 0.022997375, 0.023059375, 0.023117...</msg>
<status status="PASS" starttime="20201117 14:42:55.882" endtime="20201117 14:42:55.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.900" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.899" endtime="20201117 14:42:55.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.902" level="INFO">VALUE: [5.363899999999769e-05, 5.365300000000073e-05, 5.380599999999999e-05, 5.376299999999834e-05, 5.337500000000134e-05, 5.3235999999998174e-05, 5.376400000000128e-05, 5.351400000000103e-05, 5.325000000000121e-05, 5.330500000000002e-05, 5.351400000000103e-05, 5.325000000000121e-05, 5.354200000000017e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.391700000000055e-05, 5.331999999999906e-05, 5.38479999999987e-05, 5.415299999999776e-05, 5.411099999999905e-05, 5.362499999999812e-05, 5.35280000000006e-05, 5.333299999999916e-05, 5.3235999999998174e-05, 5.359700000000245e-05, 5.3707999999999534e-05, 5.3666000000000824e-05, 5.415300000000123e-05, 5.354200000000017e-05, 5.40280000000011e-05, 5.3513999999997564e-05, 5.365299999999726e-05, 5.415300000000123e-05, 5.341700000000005e-05, 5.355599999999974e-05, 5.351400000000103e-05, 5.372299999999858e-05, 5.387499999999837e-05, 5.341700000000005e-05, 5.35549999999968e-05, 5.3443999999999714e-05, 5.4235999999999174e-05, 5.327700000000088e-05, 5.334699999999873e-05, 5.348600000000189e-05, 5.365300000000073e-05, 5.40280000000011e-05, 5.358399999999888e-05, 5.390300000000098e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.901" endtime="20201117 14:42:55.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.896" endtime="20201117 14:42:55.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.906" endtime="20201117 14:42:55.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.909" endtime="20201117 14:42:55.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.908" endtime="20201117 14:42:55.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.904" endtime="20201117 14:42:55.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.536" endtime="20201117 14:42:55.930"></status>
</kw>
<msg timestamp="20201117 14:42:55.930" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.939" endtime="20201117 14:42:55.956"></status>
</kw>
<msg timestamp="20201117 14:42:55.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.937" endtime="20201117 14:42:55.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.957" endtime="20201117 14:42:55.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.960" endtime="20201117 14:42:55.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.935" endtime="20201117 14:42:55.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.932" endtime="20201117 14:42:55.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.969" endtime="20201117 14:42:56.257"></status>
</kw>
<msg timestamp="20201117 14:42:56.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.967" endtime="20201117 14:42:56.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.261" endtime="20201117 14:42:56.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.269" endtime="20201117 14:42:56.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.965" endtime="20201117 14:42:56.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.963" endtime="20201117 14:42:56.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.276" level="INFO">${RESULT} = [{'time': 0.020506306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.329199999999992e-05, 'source_diff': 5.329199999999992e-05}, {'time': 0.020565319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.273" endtime="20201117 14:42:56.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.289" level="INFO">${ACCURACY} = {'time': [0.020506306, 0.020565319, 0.020624319, 0.020682319, 0.020743333, 0.020803333, 0.020860347, 0.020923347, 0.020986403, 0.021043361, 0.021099375, 0.021158375, 0.021221389, 0.021282389, 0.021339...</msg>
<status status="PASS" starttime="20201117 14:42:56.277" endtime="20201117 14:42:56.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.294" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.293" endtime="20201117 14:42:56.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.296" level="INFO">VALUE: [5.329199999999992e-05, 5.3901999999998035e-05, 5.3651999999997785e-05, 5.33470000000022e-05, 5.3443999999999714e-05, 5.38609999999988e-05, 5.355500000000027e-05, 5.3999999999998494e-05, 5.365300000000073e-05, 5.31669999999998e-05, 5.327800000000035e-05, 5.333299999999916e-05, 5.358299999999941e-05, 5.3499999999997994e-05, 5.404200000000067e-05, 5.41670000000008e-05, 5.3263999999997313e-05, 5.419499999999994e-05, 5.379100000000095e-05, 5.413900000000166e-05, 5.4166000000001324e-05, 5.40410000000012e-05, 5.380500000000052e-05, 5.377700000000138e-05, 5.380500000000052e-05, 5.348600000000189e-05, 5.365299999999726e-05, 5.408299999999991e-05, 5.356899999999984e-05, 5.354200000000017e-05, 5.333299999999916e-05, 5.3971999999999354e-05, 5.383299999999966e-05, 5.376400000000128e-05, 5.3485999999998424e-05, 5.359800000000192e-05, 5.356999999999931e-05, 5.3263999999997313e-05, 5.3721999999999104e-05, 5.361099999999855e-05, 5.381900000000009e-05, 5.3235999999998174e-05, 5.3721999999999104e-05, 5.325000000000121e-05, 5.412499999999862e-05, 5.3443999999999714e-05, 5.387499999999837e-05, 5.350000000000146e-05, 5.375000000000171e-05, 5.3221999999998604e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.295" endtime="20201117 14:42:56.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.290" endtime="20201117 14:42:56.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.300" endtime="20201117 14:42:56.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.303" endtime="20201117 14:42:56.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.302" endtime="20201117 14:42:56.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.298" endtime="20201117 14:42:56.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.931" endtime="20201117 14:42:56.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.534" endtime="20201117 14:42:56.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.533" endtime="20201117 14:42:56.325"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.327" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.335" endtime="20201117 14:42:56.353"></status>
</kw>
<msg timestamp="20201117 14:42:56.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.334" endtime="20201117 14:42:56.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.354" endtime="20201117 14:42:56.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.357" endtime="20201117 14:42:56.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.331" endtime="20201117 14:42:56.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.329" endtime="20201117 14:42:56.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.367" endtime="20201117 14:42:56.652"></status>
</kw>
<msg timestamp="20201117 14:42:56.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.365" endtime="20201117 14:42:56.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.656" endtime="20201117 14:42:56.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.664" endtime="20201117 14:42:56.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.362" endtime="20201117 14:42:56.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.361" endtime="20201117 14:42:56.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.671" level="INFO">${RESULT} = [{'time': 0.022862458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.461099999999955e-05, 'source_diff': 5.461099999999955e-05}, {'time': 0.022921472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.668" endtime="20201117 14:42:56.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.684" level="INFO">${ACCURACY} = {'time': [0.022862458, 0.022921472, 0.022980486, 0.0230405, 0.023100486, 0.0231595, 0.0232165, 0.023276514, 0.023334556, 0.023391542, 0.023452542, 0.023510528, 0.023571542, 0.023635556, 0.023698556, 0...</msg>
<status status="PASS" starttime="20201117 14:42:56.672" endtime="20201117 14:42:56.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.689" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.688" endtime="20201117 14:42:56.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.692" level="INFO">VALUE: [5.461099999999955e-05, 5.459699999999998e-05, 5.461100000000302e-05, 5.458299999999694e-05, 5.465299999999826e-05, 5.4527999999998134e-05, 5.426400000000178e-05, 5.480600000000099e-05, 5.4999999999999494e-05, 5.429200000000092e-05, 5.462499999999912e-05, 5.5027999999998634e-05, 5.469500000000044e-05, 5.481999999999709e-05, 5.4527999999998134e-05, 5.511200000000299e-05, 5.4666000000001824e-05, 5.4430000000001144e-05, 5.437499999999887e-05, 5.487499999999937e-05, 5.5194000000001464e-05, 5.440300000000148e-05, 5.504200000000167e-05, 5.50280000000021e-05, 5.519500000000094e-05, 5.4735999999999674e-05, 5.519500000000094e-05, 5.444500000000019e-05, 5.463899999999869e-05, 5.508400000000038e-05, 5.43479999999992e-05, 5.4930000000001644e-05, 5.4249999999998744e-05, 5.5137999999999715e-05, 5.501299999999959e-05, 5.4444000000000714e-05, 5.51670000000018e-05, 5.430600000000049e-05, 5.426400000000178e-05, 5.448600000000289e-05, 5.4208000000000034e-05, 5.505600000000124e-05, 5.4957999999997315e-05, 5.5041999999998203e-05, 5.46809999999974e-05, 5.437499999999887e-05, 5.480599999999752e-05, 5.5013999999999064e-05, 5.4985999999999924e-05, 5.432000000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.690" endtime="20201117 14:42:56.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.685" endtime="20201117 14:42:56.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.695" endtime="20201117 14:42:56.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.698" endtime="20201117 14:42:56.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.697" endtime="20201117 14:42:56.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.693" endtime="20201117 14:42:56.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.328" endtime="20201117 14:42:56.719"></status>
</kw>
<msg timestamp="20201117 14:42:56.719" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.728" endtime="20201117 14:42:56.745"></status>
</kw>
<msg timestamp="20201117 14:42:56.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.726" endtime="20201117 14:42:56.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.747" endtime="20201117 14:42:56.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.749" endtime="20201117 14:42:56.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.723" endtime="20201117 14:42:56.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.721" endtime="20201117 14:42:56.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.758" endtime="20201117 14:42:57.046"></status>
</kw>
<msg timestamp="20201117 14:42:57.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.757" endtime="20201117 14:42:57.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.050" endtime="20201117 14:42:57.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.059" endtime="20201117 14:42:57.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.754" endtime="20201117 14:42:57.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.753" endtime="20201117 14:42:57.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.065" level="INFO">${RESULT} = [{'time': 0.019726986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4221999999999604e-05, 'source_diff': 5.4221999999999604e-05}, {'time': 0.019784014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:57.062" endtime="20201117 14:42:57.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.079" level="INFO">${ACCURACY} = {'time': [0.019726986, 0.019784014, 0.019842028, 0.019900014, 0.019964028, 0.020024028, 0.020082028, 0.020145042, 0.020204042, 0.020263056, 0.020324056, 0.020388083, 0.020449069, 0.020508139, 0.020568...</msg>
<status status="PASS" starttime="20201117 14:42:57.066" endtime="20201117 14:42:57.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.084" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.082" endtime="20201117 14:42:57.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.087" level="INFO">VALUE: [5.4221999999999604e-05, 5.4221999999999604e-05, 5.470900000000001e-05, 5.425000000000221e-05, 5.437500000000234e-05, 5.487499999999937e-05, 5.519499999999747e-05, 5.432000000000006e-05, 5.459799999999945e-05, 5.477800000000185e-05, 5.486199999999927e-05, 5.501400000000253e-05, 5.4694000000000964e-05, 5.507000000000081e-05, 5.490300000000198e-05, 5.4735999999999674e-05, 5.5165999999998855e-05, 5.427800000000135e-05, 5.4694000000000964e-05, 5.440300000000148e-05, 5.463899999999869e-05, 5.444500000000019e-05, 5.5013999999999064e-05, 5.427800000000135e-05, 5.438899999999844e-05, 5.433399999999963e-05, 5.459799999999945e-05, 5.419499999999994e-05, 5.462500000000259e-05, 5.4637999999999215e-05, 5.4471999999999854e-05, 5.479100000000195e-05, 5.434699999999973e-05, 5.506899999999787e-05, 5.490299999999851e-05, 5.486199999999927e-05, 5.4957999999997315e-05, 5.48609999999998e-05, 5.484700000000023e-05, 5.4694000000000964e-05, 5.4291999999997453e-05, 5.473700000000262e-05, 5.480600000000099e-05, 5.511100000000005e-05, 5.433399999999963e-05, 5.423700000000212e-05, 5.472299999999958e-05, 5.477699999999891e-05, 5.45549999999978e-05, 5.4235999999999174e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.085" endtime="20201117 14:42:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.080" endtime="20201117 14:42:57.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.090" endtime="20201117 14:42:57.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.094" endtime="20201117 14:42:57.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.092" endtime="20201117 14:42:57.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.088" endtime="20201117 14:42:57.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.720" endtime="20201117 14:42:57.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.326" endtime="20201117 14:42:57.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.325" endtime="20201117 14:42:57.115"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.117" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.126" endtime="20201117 14:42:57.144"></status>
</kw>
<msg timestamp="20201117 14:42:57.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.124" endtime="20201117 14:42:57.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.145" endtime="20201117 14:42:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.147" endtime="20201117 14:42:57.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.121" endtime="20201117 14:42:57.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.119" endtime="20201117 14:42:57.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.156" endtime="20201117 14:42:57.444"></status>
</kw>
<msg timestamp="20201117 14:42:57.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.155" endtime="20201117 14:42:57.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023231194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.449" endtime="20201117 14:42:57.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.457" endtime="20201117 14:42:57.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.152" endtime="20201117 14:42:57.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.151" endtime="20201117 14:42:57.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.464" level="INFO">${RESULT} = [{'time': 0.023231194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6207999999998565e-05, 'source_diff': 5.6207999999998565e-05}, {'time': 0.023296167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:57.460" endtime="20201117 14:42:57.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.479" level="INFO">${ACCURACY} = {'time': [0.023231194, 0.023296167, 0.023355181, 0.023414181, 0.023478194, 0.023543208, 0.023607208, 0.023665208, 0.023724208, 0.023785208, 0.023850222, 0.023909236, 0.023971292, 0.02403425, 0.0240932...</msg>
<status status="PASS" starttime="20201117 14:42:57.465" endtime="20201117 14:42:57.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.483" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.482" endtime="20201117 14:42:57.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.486" level="INFO">VALUE: [5.6207999999998565e-05, 5.5305999999998023e-05, 5.5791999999998954e-05, 5.597300000000083e-05, 5.533300000000116e-05, 5.55549999999988e-05, 5.604099999999973e-05, 5.5222000000000604e-05, 5.5958000000001784e-05, 5.604099999999973e-05, 5.5527999999999134e-05, 5.531900000000159e-05, 5.544500000000119e-05, 5.565299999999926e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.562500000000012e-05, 5.5527999999999134e-05, 5.558400000000088e-05, 5.558400000000088e-05, 5.605600000000224e-05, 5.5527999999999134e-05, 5.559700000000098e-05, 5.5263999999999314e-05, 5.602700000000016e-05, 5.5722000000001104e-05, 5.531899999999812e-05, 5.5943999999998745e-05, 5.529100000000245e-05, 5.5291999999998453e-05, 5.5513999999999564e-05, 5.531899999999812e-05, 5.612500000000062e-05, 5.587500000000037e-05, 5.530600000000149e-05, 5.611199999999705e-05, 5.5235999999996704e-05, 5.5513999999999564e-05, 5.538899999999944e-05, 5.5721999999997635e-05, 5.562500000000012e-05, 5.533300000000116e-05, 5.559699999999751e-05, 5.579100000000295e-05, 5.5263999999999314e-05, 5.611099999999758e-05, 5.5222000000000604e-05, 5.613900000000019e-05, 5.5527999999999134e-05, 5.531900000000159e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.484" endtime="20201117 14:42:57.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.480" endtime="20201117 14:42:57.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.489" endtime="20201117 14:42:57.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.492" endtime="20201117 14:42:57.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.491" endtime="20201117 14:42:57.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.487" endtime="20201117 14:42:57.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.118" endtime="20201117 14:42:57.513"></status>
</kw>
<msg timestamp="20201117 14:42:57.513" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.521" endtime="20201117 14:42:57.538"></status>
</kw>
<msg timestamp="20201117 14:42:57.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.520" endtime="20201117 14:42:57.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.539" endtime="20201117 14:42:57.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.541" endtime="20201117 14:42:57.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.517" endtime="20201117 14:42:57.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.515" endtime="20201117 14:42:57.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.550" endtime="20201117 14:42:57.836"></status>
</kw>
<msg timestamp="20201117 14:42:57.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.549" endtime="20201117 14:42:57.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.840" endtime="20201117 14:42:57.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.849" endtime="20201117 14:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.546" endtime="20201117 14:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.545" endtime="20201117 14:42:57.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.856" level="INFO">${RESULT} = [{'time': 0.019523722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556900000000184e-05, 'source_diff': 5.556900000000184e-05}, {'time': 0.01958475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:57.852" endtime="20201117 14:42:57.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.869" level="INFO">${ACCURACY} = {'time': [0.019523722, 0.01958475, 0.01964575, 0.019708778, 0.01977075, 0.019833778, 0.019895764, 0.019956778, 0.020018778, 0.020082806, 0.020144792, 0.020206806, 0.020266806, 0.020327819, 0.020391833...</msg>
<status status="PASS" starttime="20201117 14:42:57.857" endtime="20201117 14:42:57.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.873" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.872" endtime="20201117 14:42:57.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.876" level="INFO">VALUE: [5.556900000000184e-05, 5.590300000000298e-05, 5.583300000000166e-05, 5.6014000000000064e-05, 5.537499999999987e-05, 5.545900000000076e-05, 5.537499999999987e-05, 5.604200000000267e-05, 5.584700000000123e-05, 5.572300000000058e-05, 5.61670000000028e-05, 5.611200000000052e-05, 5.5277999999998884e-05, 5.533300000000116e-05, 5.6208000000002034e-05, 5.588899999999994e-05, 5.563899999999969e-05, 5.5986000000000924e-05, 5.5958000000001784e-05, 5.6027999999999634e-05, 5.5541999999998704e-05, 5.562500000000012e-05, 5.604200000000267e-05, 5.545900000000076e-05, 5.545899999999729e-05, 5.619500000000194e-05, 5.583400000000113e-05, 5.547300000000033e-05, 5.588899999999994e-05, 5.588899999999994e-05, 5.53610000000003e-05, 5.563899999999969e-05, 5.581899999999862e-05, 5.5652000000003254e-05, 5.580499999999905e-05, 5.5444000000001714e-05, 5.590300000000298e-05, 5.5707999999998065e-05, 5.5499999999999994e-05, 5.5457999999997815e-05, 5.590299999999951e-05, 5.616699999999933e-05, 5.5541999999998704e-05, 5.5486000000000424e-05, 5.588899999999994e-05, 5.5527999999999134e-05, 5.593099999999865e-05, 5.612500000000062e-05, 5.5387999999999965e-05, 5.606899999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.875" endtime="20201117 14:42:57.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.870" endtime="20201117 14:42:57.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.879" endtime="20201117 14:42:57.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.883" endtime="20201117 14:42:57.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.881" endtime="20201117 14:42:57.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.878" endtime="20201117 14:42:57.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.514" endtime="20201117 14:42:57.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.116" endtime="20201117 14:42:57.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.115" endtime="20201117 14:42:57.904"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.906" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.915" endtime="20201117 14:42:57.931"></status>
</kw>
<msg timestamp="20201117 14:42:57.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.913" endtime="20201117 14:42:57.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.933" endtime="20201117 14:42:57.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.935" endtime="20201117 14:42:57.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.910" endtime="20201117 14:42:57.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.908" endtime="20201117 14:42:57.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.945" endtime="20201117 14:42:58.232"></status>
</kw>
<msg timestamp="20201117 14:42:58.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:57.943" endtime="20201117 14:42:58.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:58.236" endtime="20201117 14:42:58.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.245" endtime="20201117 14:42:58.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.940" endtime="20201117 14:42:58.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.938" endtime="20201117 14:42:58.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.251" level="INFO">${RESULT} = [{'time': 0.022314, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6778000000000384e-05, 'source_diff': 5.6778000000000384e-05}, {'time': 0.022375986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:58.248" endtime="20201117 14:42:58.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.265" level="INFO">${ACCURACY} = {'time': [0.022314, 0.022375986, 0.022440014, 0.0225, 0.022563028, 0.022624042, 0.022688042, 0.022748028, 0.022811042, 0.022877056, 0.022940056, 0.023005125, 0.023071069, 0.023136083, 0.023197083, 0.0...</msg>
<status status="PASS" starttime="20201117 14:42:58.252" endtime="20201117 14:42:58.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.269" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.268" endtime="20201117 14:42:58.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.271" level="INFO">VALUE: [5.6778000000000384e-05, 5.662500000000112e-05, 5.6750000000001244e-05, 5.6221999999998135e-05, 5.670899999999854e-05, 5.662500000000112e-05, 5.6985999999998455e-05, 5.616699999999933e-05, 5.68610000000018e-05, 5.637500000000087e-05, 5.645900000000176e-05, 5.659700000000198e-05, 5.701299999999812e-05, 5.7208000000003034e-05, 5.6764000000000814e-05, 5.688900000000094e-05, 5.6736000000001674e-05, 5.640300000000001e-05, 5.656899999999937e-05, 5.711099999999858e-05, 5.6486000000001424e-05, 5.662500000000112e-05, 5.6763999999997344e-05, 5.7193999999999995e-05, 5.662500000000112e-05, 5.659800000000145e-05, 5.688900000000094e-05, 5.6264000000000314e-05, 5.708299999999944e-05, 5.6985999999998455e-05, 5.65549999999998e-05, 5.7207999999999565e-05, 5.7000000000001494e-05, 5.7000000000001494e-05, 5.681899999999962e-05, 5.6486000000001424e-05, 5.6999999999998024e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.636099999999783e-05, 5.638899999999697e-05, 5.6264000000000314e-05, 5.6721999999998635e-05, 5.659700000000198e-05, 5.6541999999999704e-05, 5.6764000000000814e-05, 5.679099999999701e-05, 5.663900000000069e-05, 5.627699999999694e-05, 5.6457999999998815e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.270" endtime="20201117 14:42:58.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.265" endtime="20201117 14:42:58.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.275" endtime="20201117 14:42:58.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.278" endtime="20201117 14:42:58.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.277" endtime="20201117 14:42:58.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.273" endtime="20201117 14:42:58.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.907" endtime="20201117 14:42:58.299"></status>
</kw>
<msg timestamp="20201117 14:42:58.299" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.307" endtime="20201117 14:42:58.324"></status>
</kw>
<msg timestamp="20201117 14:42:58.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.306" endtime="20201117 14:42:58.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.325" endtime="20201117 14:42:58.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.328" endtime="20201117 14:42:58.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.303" endtime="20201117 14:42:58.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.301" endtime="20201117 14:42:58.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.338" endtime="20201117 14:42:58.625"></status>
</kw>
<msg timestamp="20201117 14:42:58.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.336" endtime="20201117 14:42:58.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.629" endtime="20201117 14:42:58.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.639" endtime="20201117 14:42:58.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.333" endtime="20201117 14:42:58.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.332" endtime="20201117 14:42:58.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.645" level="INFO">${RESULT} = [{'time': 0.019517208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6236000000001174e-05, 'source_diff': 5.6236000000001174e-05}, {'time': 0.019582208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:58.642" endtime="20201117 14:42:58.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.659" level="INFO">${ACCURACY} = {'time': [0.019517208, 0.019582208, 0.019642208, 0.019702236, 0.019761208, 0.019821208, 0.019882264, 0.019947264, 0.020007264, 0.020072236, 0.02013225, 0.020191264, 0.020257264, 0.020319278, 0.0203832...</msg>
<status status="PASS" starttime="20201117 14:42:58.646" endtime="20201117 14:42:58.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.663" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.662" endtime="20201117 14:42:58.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.666" level="INFO">VALUE: [5.6236000000001174e-05, 5.6971999999998885e-05, 5.6500000000000994e-05, 5.706899999999987e-05, 5.6749999999997774e-05, 5.6236000000001174e-05, 5.712500000000162e-05, 5.6971999999998885e-05, 5.6819999999999093e-05, 5.6250000000000744e-05, 5.6708000000002534e-05, 5.66809999999994e-05, 5.6957999999999315e-05, 5.713900000000119e-05, 5.713900000000119e-05, 5.6735999999998205e-05, 5.68480000000017e-05, 5.658399999999841e-05, 5.63749999999974e-05, 5.7055999999999774e-05, 5.6457999999998815e-05, 5.6471999999998385e-05, 5.6986000000001924e-05, 5.629099999999998e-05, 5.6764000000000814e-05, 5.638900000000044e-05, 5.7193999999999995e-05, 5.6764000000000814e-05, 5.631899999999912e-05, 5.6471999999998385e-05, 5.6778000000000384e-05, 5.713900000000119e-05, 5.6763999999997344e-05, 5.638900000000044e-05, 5.690300000000051e-05, 5.712500000000162e-05, 5.676300000000134e-05, 5.683300000000266e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6999999999998024e-05, 5.6957999999999315e-05, 5.7180000000000425e-05, 5.6499999999997524e-05, 5.6957999999999315e-05, 5.6236000000001174e-05, 5.665300000000026e-05, 5.7014000000001064e-05, 5.6485999999997955e-05, 5.645899999999829e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.664" endtime="20201117 14:42:58.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.660" endtime="20201117 14:42:58.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.669" endtime="20201117 14:42:58.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.672" endtime="20201117 14:42:58.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.671" endtime="20201117 14:42:58.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.667" endtime="20201117 14:42:58.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.300" endtime="20201117 14:42:58.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.905" endtime="20201117 14:42:58.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.904" endtime="20201117 14:42:58.693"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.696" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.704" endtime="20201117 14:42:58.721"></status>
</kw>
<msg timestamp="20201117 14:42:58.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.703" endtime="20201117 14:42:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.722" endtime="20201117 14:42:58.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.725" endtime="20201117 14:42:58.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.700" endtime="20201117 14:42:58.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.698" endtime="20201117 14:42:58.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.734" endtime="20201117 14:42:59.020"></status>
</kw>
<msg timestamp="20201117 14:42:59.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.732" endtime="20201117 14:42:59.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.024" endtime="20201117 14:42:59.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.033" endtime="20201117 14:42:59.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.730" endtime="20201117 14:42:59.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.728" endtime="20201117 14:42:59.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.039" level="INFO">${RESULT} = [{'time': 0.022632167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7556000000000274e-05, 'source_diff': 5.7556000000000274e-05}, {'time': 0.022693181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:59.036" endtime="20201117 14:42:59.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.054" level="INFO">${ACCURACY} = {'time': [0.022632167, 0.022693181, 0.022760181, 0.022825181, 0.022890208, 0.022951194, 0.023018222, 0.023078222, 0.023140236, 0.023204222, 0.023266264, 0.02332725, 0.023392264, 0.02345325, 0.02351727...</msg>
<status status="PASS" starttime="20201117 14:42:59.040" endtime="20201117 14:42:59.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.059" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.058" endtime="20201117 14:42:59.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.061" level="INFO">VALUE: [5.7556000000000274e-05, 5.772299999999911e-05, 5.736200000000177e-05, 5.7749999999998775e-05, 5.7693999999997025e-05, 5.8194000000000995e-05, 5.809700000000001e-05, 5.7513999999998094e-05, 5.762500000000212e-05, 5.759699999999951e-05, 5.7555999999996804e-05, 5.7958000000000315e-05, 5.765299999999779e-05, 5.7249999999998274e-05, 5.7235999999998705e-05, 5.762500000000212e-05, 5.765300000000126e-05, 5.7542000000000704e-05, 5.745899999999929e-05, 5.7778000000001384e-05, 5.797300000000283e-05, 5.7736000000002674e-05, 5.7457999999999815e-05, 5.7971999999999885e-05, 5.8179999999997956e-05, 5.754100000000123e-05, 5.7249999999998274e-05, 5.798699999999893e-05, 5.78749999999989e-05, 5.731900000000012e-05, 5.7806000000000524e-05, 5.7292000000000454e-05, 5.7319999999999593e-05, 5.8027999999998164e-05, 5.81810000000009e-05, 5.8056000000000774e-05, 5.7805999999997054e-05, 5.7778000000001384e-05, 5.8028000000001634e-05, 5.815299999999829e-05, 5.733299999999969e-05, 5.761099999999908e-05, 5.8151999999998816e-05, 5.7708000000000065e-05, 5.7457999999999815e-05, 5.787500000000237e-05, 5.811099999999958e-05, 5.738899999999797e-05, 5.76810000000004e-05, 5.758300000000341e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.060" endtime="20201117 14:42:59.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.055" endtime="20201117 14:42:59.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.064" endtime="20201117 14:42:59.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.068" endtime="20201117 14:42:59.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.066" endtime="20201117 14:42:59.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.063" endtime="20201117 14:42:59.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.696" endtime="20201117 14:42:59.089"></status>
</kw>
<msg timestamp="20201117 14:42:59.089" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.097" endtime="20201117 14:42:59.115"></status>
</kw>
<msg timestamp="20201117 14:42:59.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.096" endtime="20201117 14:42:59.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.116" endtime="20201117 14:42:59.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.119" endtime="20201117 14:42:59.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.093" endtime="20201117 14:42:59.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.091" endtime="20201117 14:42:59.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.128" endtime="20201117 14:42:59.414"></status>
</kw>
<msg timestamp="20201117 14:42:59.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.126" endtime="20201117 14:42:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020837319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.418" endtime="20201117 14:42:59.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.426" endtime="20201117 14:42:59.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.123" endtime="20201117 14:42:59.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.122" endtime="20201117 14:42:59.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.433" level="INFO">${RESULT} = [{'time': 0.020895458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.813899999999872e-05, 'source_diff': 5.813899999999872e-05}, {'time': 0.020962458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.430" endtime="20201117 14:42:59.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.446" level="INFO">${ACCURACY} = {'time': [0.020895458, 0.020962458, 0.021023514, 0.021089528, 0.021154486, 0.021219486, 0.021283514, 0.0213465, 0.021409514, 0.021472514, 0.021535528, 0.021600542, 0.021665556, 0.021732542, 0.02179956...</msg>
<status status="PASS" starttime="20201117 14:42:59.434" endtime="20201117 14:42:59.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.451" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.450" endtime="20201117 14:42:59.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.453" level="INFO">VALUE: [5.813899999999872e-05, 5.808300000000044e-05, 5.7306000000000024e-05, 5.759699999999951e-05, 5.741700000000058e-05, 5.759699999999951e-05, 5.7721999999999635e-05, 5.781900000000062e-05, 5.734700000000273e-05, 5.812500000000262e-05, 5.757000000000331e-05, 5.7278000000000884e-05, 5.7749999999998775e-05, 5.7292000000000454e-05, 5.776300000000234e-05, 5.734700000000273e-05, 5.7264000000001314e-05, 5.788900000000194e-05, 5.7457999999999815e-05, 5.7485999999998955e-05, 5.7485999999998955e-05, 5.7444000000000245e-05, 5.7499999999998525e-05, 5.757000000000331e-05, 5.808300000000044e-05, 5.745899999999929e-05, 5.740300000000101e-05, 5.7528000000001134e-05, 5.8028000000001634e-05, 5.736099999999883e-05, 5.729099999999751e-05, 5.7930000000001175e-05, 5.7292000000000454e-05, 5.731900000000012e-05, 5.7915999999998136e-05, 5.736099999999883e-05, 5.78749999999989e-05, 5.7292000000000454e-05, 5.73610000000023e-05, 5.7278000000000884e-05, 5.8235999999999705e-05, 5.7735999999999205e-05, 5.7542000000000704e-05, 5.765299999999779e-05, 5.733400000000263e-05, 5.773699999999868e-05, 5.798699999999893e-05, 5.80550000000013e-05, 5.734799999999873e-05, 5.7319999999999593e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.452" endtime="20201117 14:42:59.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.447" endtime="20201117 14:42:59.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.457" endtime="20201117 14:42:59.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.460" endtime="20201117 14:42:59.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.459" endtime="20201117 14:42:59.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.455" endtime="20201117 14:42:59.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.090" endtime="20201117 14:42:59.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.695" endtime="20201117 14:42:59.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.694" endtime="20201117 14:42:59.482"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.484" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.492" endtime="20201117 14:42:59.510"></status>
</kw>
<msg timestamp="20201117 14:42:59.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.491" endtime="20201117 14:42:59.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.512" endtime="20201117 14:42:59.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.514" endtime="20201117 14:42:59.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.488" endtime="20201117 14:42:59.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.486" endtime="20201117 14:42:59.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.523" endtime="20201117 14:42:59.810"></status>
</kw>
<msg timestamp="20201117 14:42:59.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.522" endtime="20201117 14:42:59.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.814" endtime="20201117 14:42:59.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.822" endtime="20201117 14:42:59.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.519" endtime="20201117 14:42:59.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.517" endtime="20201117 14:42:59.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.829" level="INFO">${RESULT} = [{'time': 0.022197347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.886100000000033e-05, 'source_diff': 5.886100000000033e-05}, {'time': 0.022264306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.825" endtime="20201117 14:42:59.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.842" level="INFO">${ACCURACY} = {'time': [0.022197347, 0.022264306, 0.022326306, 0.022391333, 0.022457333, 0.022520333, 0.022582333, 0.022647347, 0.022715431, 0.022777361, 0.022840375, 0.022905417, 0.022969389, 0.023032389, 0.023093...</msg>
<status status="PASS" starttime="20201117 14:42:59.830" endtime="20201117 14:42:59.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.847" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.846" endtime="20201117 14:42:59.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.850" level="INFO">VALUE: [5.886100000000033e-05, 5.847299999999986e-05, 5.8763999999999345e-05, 5.9179999999998956e-05, 5.8263999999998844e-05, 5.9000000000000025e-05, 5.9179999999998956e-05, 5.9180000000002425e-05, 5.841700000000158e-05, 5.831900000000112e-05, 5.9013999999999595e-05, 5.897300000000036e-05, 5.863899999999922e-05, 5.9000000000000025e-05, 5.847299999999986e-05, 5.9028000000002634e-05, 5.8264000000002314e-05, 5.9083999999997444e-05, 5.8277999999998414e-05, 5.9000000000000025e-05, 5.8749999999999775e-05, 5.829099999999851e-05, 5.8915999999999136e-05, 5.8485999999999955e-05, 5.9027999999999164e-05, 5.831900000000112e-05, 5.834700000000026e-05, 5.8305999999997554e-05, 5.8791999999998484e-05, 5.9041999999998734e-05, 5.840299999999854e-05, 5.8334000000000163e-05, 5.862499999999965e-05, 5.8250000000002744e-05, 5.8569999999997374e-05, 5.833300000000069e-05, 5.8777999999998914e-05, 5.9194000000001995e-05, 5.911100000000058e-05, 5.912500000000015e-05, 5.869500000000097e-05, 5.912500000000015e-05, 5.815299999999829e-05, 5.8944000000001745e-05, 5.8722000000000635e-05, 5.831899999999765e-05, 5.844500000000072e-05, 5.8499999999999525e-05, 5.9000000000000025e-05, 5.8222000000000135e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.848" endtime="20201117 14:42:59.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.843" endtime="20201117 14:42:59.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.853" endtime="20201117 14:42:59.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.856" endtime="20201117 14:42:59.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.855" endtime="20201117 14:42:59.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.851" endtime="20201117 14:42:59.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.485" endtime="20201117 14:42:59.877"></status>
</kw>
<msg timestamp="20201117 14:42:59.877" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.886" endtime="20201117 14:42:59.904"></status>
</kw>
<msg timestamp="20201117 14:42:59.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.884" endtime="20201117 14:42:59.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.905" endtime="20201117 14:42:59.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.908" endtime="20201117 14:42:59.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.881" endtime="20201117 14:42:59.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.879" endtime="20201117 14:42:59.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.918" endtime="20201117 14:43:00.205"></status>
</kw>
<msg timestamp="20201117 14:43:00.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.916" endtime="20201117 14:43:00.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.209" endtime="20201117 14:43:00.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.217" endtime="20201117 14:43:00.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.912" endtime="20201117 14:43:00.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.911" endtime="20201117 14:43:00.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.224" level="INFO">${RESULT} = [{'time': 0.019789125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.893100000000165e-05, 'source_diff': 5.893100000000165e-05}, {'time': 0.019854139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.220" endtime="20201117 14:43:00.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.237" level="INFO">${ACCURACY} = {'time': [0.019789125, 0.019854139, 0.019916153, 0.019980153, 0.020043153, 0.020106194, 0.020171181, 0.020237194, 0.020299194, 0.020363222, 0.020430222, 0.020498208, 0.020560236, 0.020623222, 0.020690...</msg>
<status status="PASS" starttime="20201117 14:43:00.224" endtime="20201117 14:43:00.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.242" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.241" endtime="20201117 14:43:00.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.244" level="INFO">VALUE: [5.893100000000165e-05, 5.918099999999843e-05, 5.8736000000000205e-05, 5.8528000000002134e-05, 5.859700000000051e-05, 5.830500000000155e-05, 5.823699999999918e-05, 5.8694000000001495e-05, 5.8249999999999275e-05, 5.834700000000026e-05, 5.90550000000023e-05, 5.852699999999919e-05, 5.880499999999858e-05, 5.8986000000000455e-05, 5.9042000000002204e-05, 5.8292000000001454e-05, 5.8277999999998414e-05, 5.9250000000000275e-05, 5.9027999999999164e-05, 5.8306000000001024e-05, 5.8584000000000414e-05, 5.873699999999968e-05, 5.912500000000015e-05, 5.8472000000000385e-05, 5.8792000000001954e-05, 5.8444000000001245e-05, 5.844500000000072e-05, 5.862500000000312e-05, 5.886100000000033e-05, 5.8249999999999275e-05, 5.9000000000000025e-05, 5.8542000000001704e-05, 5.890300000000251e-05, 5.8736000000000205e-05, 5.884700000000076e-05, 5.8528000000002134e-05, 5.869500000000097e-05, 5.865299999999879e-05, 5.8584000000000414e-05, 5.9000000000000025e-05, 5.9056000000001774e-05, 5.8347999999999733e-05, 5.886100000000033e-05, 5.8986000000000455e-05, 5.827699999999894e-05, 5.8763999999999345e-05, 5.8528000000002134e-05, 5.9028000000002634e-05, 5.8736000000000205e-05, 5.863899999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.243" endtime="20201117 14:43:00.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.238" endtime="20201117 14:43:00.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.248" endtime="20201117 14:43:00.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.251" endtime="20201117 14:43:00.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.249" endtime="20201117 14:43:00.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.246" endtime="20201117 14:43:00.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.878" endtime="20201117 14:43:00.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.483" endtime="20201117 14:43:00.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.482" endtime="20201117 14:43:00.272"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.275" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.283" endtime="20201117 14:43:00.301"></status>
</kw>
<msg timestamp="20201117 14:43:00.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.281" endtime="20201117 14:43:00.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.302" endtime="20201117 14:43:00.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.305" endtime="20201117 14:43:00.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.279" endtime="20201117 14:43:00.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.277" endtime="20201117 14:43:00.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.314" endtime="20201117 14:43:00.601"></status>
</kw>
<msg timestamp="20201117 14:43:00.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.312" endtime="20201117 14:43:00.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.605" endtime="20201117 14:43:00.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.614" endtime="20201117 14:43:00.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.310" endtime="20201117 14:43:00.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.308" endtime="20201117 14:43:00.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.621" level="INFO">${RESULT} = [{'time': 0.022245444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9652000000000316e-05, 'source_diff': 5.9652000000000316e-05}, {'time': 0.022313458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:00.617" endtime="20201117 14:43:00.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.636" level="INFO">${ACCURACY} = {'time': [0.022245444, 0.022313458, 0.022380472, 0.022447472, 0.022513486, 0.022576472, 0.022644542, 0.022710569, 0.0227735, 0.022842514, 0.022911528, 0.022978528, 0.023047542, 0.023110542, 0.02317654...</msg>
<status status="PASS" starttime="20201117 14:43:00.622" endtime="20201117 14:43:00.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.640" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.639" endtime="20201117 14:43:00.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.642" level="INFO">VALUE: [5.9652000000000316e-05, 5.9444000000002245e-05, 5.9527999999999665e-05, 5.9916000000000136e-05, 5.9957999999998846e-05, 5.9472000000001385e-05, 6.0250000000001275e-05, 6.001300000000112e-05, 5.9791999999999484e-05, 5.93750000000004e-05, 6.0041999999999734e-05, 5.9472000000001385e-05, 5.961100000000108e-05, 5.9320000000001594e-05, 5.9820000000002094e-05, 5.9514000000000095e-05, 5.923700000000018e-05, 5.984700000000176e-05, 6.0179999999999956e-05, 5.9957999999998846e-05, 5.962500000000065e-05, 5.930499999999908e-05, 6.0000000000001025e-05, 5.986099999999786e-05, 6.00689999999994e-05, 5.9556000000002274e-05, 5.9583999999997944e-05, 5.9320000000001594e-05, 5.947300000000086e-05, 5.988900000000047e-05, 5.9985999999997985e-05, 5.9598000000000984e-05, 5.9764000000000345e-05, 5.973699999999721e-05, 6.0193999999999526e-05, 5.933299999999822e-05, 6.0221999999998665e-05, 5.9527999999999665e-05, 5.930499999999908e-05, 5.9207999999998095e-05, 5.9472000000001385e-05, 5.987499999999743e-05, 6.0028000000000165e-05, 6.011100000000158e-05, 5.9320000000001594e-05, 5.9514000000000095e-05, 5.9500000000000525e-05, 5.972300000000111e-05, 5.9764000000000345e-05, 5.9763999999996875e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.641" endtime="20201117 14:43:00.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.636" endtime="20201117 14:43:00.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.646" endtime="20201117 14:43:00.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.649" endtime="20201117 14:43:00.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.647" endtime="20201117 14:43:00.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.644" endtime="20201117 14:43:00.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.275" endtime="20201117 14:43:00.670"></status>
</kw>
<msg timestamp="20201117 14:43:00.670" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.678" endtime="20201117 14:43:00.696"></status>
</kw>
<msg timestamp="20201117 14:43:00.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.677" endtime="20201117 14:43:00.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.697" endtime="20201117 14:43:00.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.699" endtime="20201117 14:43:00.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.674" endtime="20201117 14:43:00.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.672" endtime="20201117 14:43:00.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.708" endtime="20201117 14:43:00.995"></status>
</kw>
<msg timestamp="20201117 14:43:00.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.707" endtime="20201117 14:43:00.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.999" endtime="20201117 14:43:01.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.008" endtime="20201117 14:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.704" endtime="20201117 14:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.703" endtime="20201117 14:43:01.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.015" level="INFO">${RESULT} = [{'time': 0.019616347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9236000000000705e-05, 'source_diff': 5.9236000000000705e-05}, {'time': 0.019683361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:01.011" endtime="20201117 14:43:01.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.030" level="INFO">${ACCURACY} = {'time': [0.019616347, 0.019683361, 0.019747389, 0.019814375, 0.019883403, 0.019949417, 0.020015486, 0.020080417, 0.020145444, 0.020207417, 0.020270431, 0.020334486, 0.020396458, 0.020465458, 0.020534...</msg>
<status status="PASS" starttime="20201117 14:43:01.016" endtime="20201117 14:43:01.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.036" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.035" endtime="20201117 14:43:01.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.040" level="INFO">VALUE: [5.9236000000000705e-05, 5.9277999999999414e-05, 6.0028000000000165e-05, 5.9985999999997985e-05, 5.9541999999999234e-05, 6.012500000000115e-05, 5.9471999999997915e-05, 5.965299999999979e-05, 6.0137999999997777e-05, 5.9485999999997485e-05, 5.995899999999832e-05, 5.981899999999915e-05, 5.9764000000000345e-05, 5.93750000000004e-05, 6.00689999999994e-05, 5.93750000000004e-05, 5.9263999999999845e-05, 5.963900000000022e-05, 5.958299999999847e-05, 5.958300000000194e-05, 5.943100000000215e-05, 5.990300000000004e-05, 5.940299999999954e-05, 5.9486000000000955e-05, 5.9819999999998624e-05, 5.9348000000000734e-05, 5.948700000000043e-05, 5.9750000000000775e-05, 5.948700000000043e-05, 5.981899999999915e-05, 5.9679999999999456e-05, 5.983299999999872e-05, 5.9514000000000095e-05, 5.958299999999847e-05, 5.933299999999822e-05, 5.9764000000000345e-05, 5.9957999999998846e-05, 5.936100000000083e-05, 5.9957999999998846e-05, 5.9805999999999054e-05, 6.0041999999999734e-05, 5.984700000000176e-05, 5.9514000000000095e-05, 6.018099999999943e-05, 5.9791999999999484e-05, 5.9457999999998346e-05, 5.936100000000083e-05, 5.9679999999999456e-05, 6.002700000000069e-05, 5.9443999999998776e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.038" endtime="20201117 14:43:01.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.032" endtime="20201117 14:43:01.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.044" endtime="20201117 14:43:01.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.049" endtime="20201117 14:43:01.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.047" endtime="20201117 14:43:01.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.042" endtime="20201117 14:43:01.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.671" endtime="20201117 14:43:01.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.273" endtime="20201117 14:43:01.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.272" endtime="20201117 14:43:01.072"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.075" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.086" endtime="20201117 14:43:01.104"></status>
</kw>
<msg timestamp="20201117 14:43:01.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.084" endtime="20201117 14:43:01.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.105" endtime="20201117 14:43:01.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.108" endtime="20201117 14:43:01.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.081" endtime="20201117 14:43:01.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.078" endtime="20201117 14:43:01.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.117" endtime="20201117 14:43:01.404"></status>
</kw>
<msg timestamp="20201117 14:43:01.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027422944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027483514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.116" endtime="20201117 14:43:01.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027422944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027483514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.409" endtime="20201117 14:43:01.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.417" endtime="20201117 14:43:01.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.113" endtime="20201117 14:43:01.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.111" endtime="20201117 14:43:01.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.424" level="INFO">${RESULT} = [{'time': 0.027483514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0569999999999374e-05, 'source_diff': 6.0569999999999374e-05}, {'time': 0.0275525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.420" endtime="20201117 14:43:01.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.438" level="INFO">${ACCURACY} = {'time': [0.027483514, 0.0275525, 0.027618528, 0.027686542, 0.027753542, 0.027820542, 0.027890542, 0.027954556, 0.028018556, 0.028082569, 0.028148569, 0.028217583, 0.028283583, 0.028350611, 0.02841868...</msg>
<status status="PASS" starttime="20201117 14:43:01.425" endtime="20201117 14:43:01.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.442" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.441" endtime="20201117 14:43:01.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.445" level="INFO">VALUE: [6.0569999999999374e-05, 6.0721999999999166e-05, 6.036099999999836e-05, 6.045900000000229e-05, 6.03889999999975e-05, 6.086099999999886e-05, 6.0778000000000915e-05, 6.091699999999714e-05, 6.0542000000000235e-05, 6.0486000000001955e-05, 6.030499999999661e-05, 6.119400000000053e-05, 6.063900000000122e-05, 6.062500000000165e-05, 6.0334000000002164e-05, 6.118000000000096e-05, 6.068099999999993e-05, 6.0819999999999624e-05, 6.0264000000000845e-05, 6.079100000000101e-05, 6.0305999999999554e-05, 6.041700000000011e-05, 6.0319999999999124e-05, 6.098700000000193e-05, 6.0749999999998305e-05, 6.0514000000001095e-05, 6.1000000000002025e-05, 6.036100000000183e-05, 6.036099999999836e-05, 6.079100000000101e-05, 6.0264000000000845e-05, 6.0443999999999776e-05, 6.087499999999843e-05, 6.0584000000002414e-05, 6.0721999999999166e-05, 6.118100000000043e-05, 6.0235999999998235e-05, 6.0763999999997875e-05, 6.0263999999997375e-05, 6.122199999999967e-05, 6.038900000000097e-05, 6.12080000000001e-05, 6.10690000000004e-05, 6.086100000000233e-05, 6.0722000000002635e-05, 6.0471999999998916e-05, 6.10690000000004e-05, 6.080500000000058e-05, 6.119400000000053e-05, 6.0888999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.444" endtime="20201117 14:43:01.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.439" endtime="20201117 14:43:01.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.448" endtime="20201117 14:43:01.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.451" endtime="20201117 14:43:01.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.450" endtime="20201117 14:43:01.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.446" endtime="20201117 14:43:01.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.076" endtime="20201117 14:43:01.472"></status>
</kw>
<msg timestamp="20201117 14:43:01.472" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.481" endtime="20201117 14:43:01.498"></status>
</kw>
<msg timestamp="20201117 14:43:01.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.479" endtime="20201117 14:43:01.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.499" endtime="20201117 14:43:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.502" endtime="20201117 14:43:01.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.477" endtime="20201117 14:43:01.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.475" endtime="20201117 14:43:01.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.511" endtime="20201117 14:43:01.797"></status>
</kw>
<msg timestamp="20201117 14:43:01.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.510" endtime="20201117 14:43:01.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.801" endtime="20201117 14:43:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.809" endtime="20201117 14:43:01.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.507" endtime="20201117 14:43:01.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.505" endtime="20201117 14:43:01.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.816" level="INFO">${RESULT} = [{'time': 0.020074847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0278000000000415e-05, 'source_diff': 6.0278000000000415e-05}, {'time': 0.020142861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:01.813" endtime="20201117 14:43:01.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.829" level="INFO">${ACCURACY} = {'time': [0.020074847, 0.020142861, 0.020206875, 0.020275889, 0.020345889, 0.020410889, 0.020473917, 0.020539972, 0.020602917, 0.020666917, 0.020734931, 0.020799931, 0.020863972, 0.020926944, 0.020996...</msg>
<status status="PASS" starttime="20201117 14:43:01.817" endtime="20201117 14:43:01.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.834" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.833" endtime="20201117 14:43:01.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.836" level="INFO">VALUE: [6.0278000000000415e-05, 6.0264000000000845e-05, 6.0305999999999554e-05, 6.0263999999997375e-05, 6.0763999999997875e-05, 6.0291999999999984e-05, 6.040300000000054e-05, 6.040300000000054e-05, 6.0735999999998735e-05, 6.1028000000001165e-05, 6.048700000000143e-05, 6.106999999999987e-05, 6.104100000000126e-05, 6.02629999999979e-05, 6.1013999999998125e-05, 6.0528000000000665e-05, 6.0666000000000886e-05, 6.115299999999782e-05, 6.115300000000129e-05, 6.061099999999861e-05, 6.0736000000002205e-05, 6.0472000000002385e-05, 6.068099999999993e-05, 6.0221999999998665e-05, 6.0513999999997625e-05, 6.0319999999999124e-05, 6.0388000000001496e-05, 6.1000000000002025e-05, 6.033299999999922e-05, 6.051299999999815e-05, 6.105499999999736e-05, 6.0416000000000636e-05, 6.0721999999999166e-05, 6.113899999999825e-05, 6.062499999999818e-05, 6.1028000000001165e-05, 6.0514000000001095e-05, 6.088900000000147e-05, 6.0263999999997375e-05, 6.0806000000000054e-05, 6.0971999999999416e-05, 6.037499999999793e-05, 6.0319999999999124e-05, 6.0471999999998916e-05, 6.0833999999999194e-05, 6.052700000000119e-05, 6.0944000000000276e-05, 6.0485999999998485e-05, 6.0486000000001955e-05, 6.0499999999998055e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.835" endtime="20201117 14:43:01.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.830" endtime="20201117 14:43:01.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.840" endtime="20201117 14:43:01.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.843" endtime="20201117 14:43:01.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.842" endtime="20201117 14:43:01.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.838" endtime="20201117 14:43:01.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.473" endtime="20201117 14:43:01.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.074" endtime="20201117 14:43:01.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.073" endtime="20201117 14:43:01.864"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.867" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.875" endtime="20201117 14:43:01.891"></status>
</kw>
<msg timestamp="20201117 14:43:01.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.874" endtime="20201117 14:43:01.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.893" endtime="20201117 14:43:01.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.895" endtime="20201117 14:43:01.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.871" endtime="20201117 14:43:01.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.869" endtime="20201117 14:43:01.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.904" endtime="20201117 14:43:02.191"></status>
</kw>
<msg timestamp="20201117 14:43:02.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.903" endtime="20201117 14:43:02.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.195" endtime="20201117 14:43:02.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.203" endtime="20201117 14:43:02.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.900" endtime="20201117 14:43:02.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.899" endtime="20201117 14:43:02.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.209" level="INFO">${RESULT} = [{'time': 0.022562431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.145899999999982e-05, 'source_diff': 6.145899999999982e-05}, {'time': 0.022630458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.206" endtime="20201117 14:43:02.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.224" level="INFO">${ACCURACY} = {'time': [0.022562431, 0.022630458, 0.022696444, 0.022767486, 0.022832458, 0.022901486, 0.022970486, 0.023041486, 0.0231115, 0.0231795, 0.023249528, 0.023319556, 0.023386528, 0.023452528, 0.023523542,...</msg>
<status status="PASS" starttime="20201117 14:43:02.210" endtime="20201117 14:43:02.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.229" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.228" endtime="20201117 14:43:02.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.231" level="INFO">VALUE: [6.145899999999982e-05, 6.12499999999988e-05, 6.137499999999893e-05, 6.158300000000047e-05, 6.155500000000133e-05, 6.19439999999978e-05, 6.151399999999863e-05, 6.137499999999893e-05, 6.145800000000035e-05, 6.140299999999807e-05, 6.17499999999993e-05, 6.176400000000234e-05, 6.165300000000179e-05, 6.152800000000166e-05, 6.154200000000123e-05, 6.197299999999989e-05, 6.177800000000191e-05, 6.172200000000017e-05, 6.19300000000017e-05, 6.148599999999949e-05, 6.127800000000141e-05, 6.212499999999968e-05, 6.215299999999882e-05, 6.194499999999728e-05, 6.129200000000098e-05, 6.17219999999967e-05, 6.180600000000105e-05, 6.125000000000227e-05, 6.209700000000054e-05, 6.197200000000042e-05, 6.150000000000252e-05, 6.194500000000075e-05, 6.213899999999925e-05, 6.17499999999993e-05, 6.122199999999967e-05, 6.205499999999836e-05, 6.17080000000006e-05, 6.217999999999849e-05, 6.186099999999986e-05, 6.181900000000115e-05, 6.181900000000115e-05, 6.216699999999839e-05, 6.161099999999961e-05, 6.191700000000161e-05, 6.183299999999725e-05, 6.125000000000227e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.199999999999956e-05, 6.168100000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.230" endtime="20201117 14:43:02.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.225" endtime="20201117 14:43:02.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.234" endtime="20201117 14:43:02.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.238" endtime="20201117 14:43:02.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.237" endtime="20201117 14:43:02.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.233" endtime="20201117 14:43:02.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.867" endtime="20201117 14:43:02.259"></status>
</kw>
<msg timestamp="20201117 14:43:02.259" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.268" endtime="20201117 14:43:02.285"></status>
</kw>
<msg timestamp="20201117 14:43:02.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.266" endtime="20201117 14:43:02.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.286" endtime="20201117 14:43:02.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.289" endtime="20201117 14:43:02.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.264" endtime="20201117 14:43:02.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.261" endtime="20201117 14:43:02.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.298" endtime="20201117 14:43:02.585"></status>
</kw>
<msg timestamp="20201117 14:43:02.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.296" endtime="20201117 14:43:02.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.589" endtime="20201117 14:43:02.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.598" endtime="20201117 14:43:02.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.294" endtime="20201117 14:43:02.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.292" endtime="20201117 14:43:02.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.604" level="INFO">${RESULT} = [{'time': 0.020330931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.127800000000141e-05, 'source_diff': 6.127800000000141e-05}, {'time': 0.020398931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.601" endtime="20201117 14:43:02.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.617" level="INFO">${ACCURACY} = {'time': [0.020330931, 0.020398931, 0.020468931, 0.020532958, 0.020598958, 0.020667028, 0.020736958, 0.020804972, 0.020873986, 0.020939986, 0.021009, 0.021079014, 0.021144014, 0.021212014, 0.021280097...</msg>
<status status="PASS" starttime="20201117 14:43:02.605" endtime="20201117 14:43:02.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.622" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.621" endtime="20201117 14:43:02.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.624" level="INFO">VALUE: [6.127800000000141e-05, 6.194499999999728e-05, 6.20279999999987e-05, 6.145800000000035e-05, 6.154100000000176e-05, 6.199999999999956e-05, 6.216599999999892e-05, 6.218000000000196e-05, 6.126400000000184e-05, 6.136099999999936e-05, 6.215299999999882e-05, 6.17080000000006e-05, 6.220799999999763e-05, 6.183300000000072e-05, 6.169400000000103e-05, 6.18340000000002e-05, 6.182000000000062e-05, 6.162500000000265e-05, 6.145800000000035e-05, 6.177700000000244e-05, 6.158300000000047e-05, 6.127799999999795e-05, 6.14300000000012e-05, 6.15140000000021e-05, 6.162499999999918e-05, 6.126399999999838e-05, 6.188900000000247e-05, 6.17219999999967e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.182000000000062e-05, 6.215300000000229e-05, 6.20279999999987e-05, 6.159799999999951e-05, 6.162499999999918e-05, 6.148700000000243e-05, 6.173599999999974e-05, 6.186099999999986e-05, 6.187499999999943e-05, 6.184700000000029e-05, 6.211199999999958e-05, 6.204200000000173e-05, 6.20560000000013e-05, 6.20560000000013e-05, 6.173599999999974e-05, 6.129199999999752e-05, 6.147199999999992e-05, 6.208400000000044e-05, 6.197299999999989e-05, 6.13339999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.623" endtime="20201117 14:43:02.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.618" endtime="20201117 14:43:02.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.628" endtime="20201117 14:43:02.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.631" endtime="20201117 14:43:02.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.630" endtime="20201117 14:43:02.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.626" endtime="20201117 14:43:02.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.260" endtime="20201117 14:43:02.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.866" endtime="20201117 14:43:02.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.865" endtime="20201117 14:43:02.653"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.655" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.663" endtime="20201117 14:43:02.681"></status>
</kw>
<msg timestamp="20201117 14:43:02.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.662" endtime="20201117 14:43:02.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.683" endtime="20201117 14:43:02.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.685" endtime="20201117 14:43:02.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.659" endtime="20201117 14:43:02.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.657" endtime="20201117 14:43:02.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.694" endtime="20201117 14:43:02.981"></status>
</kw>
<msg timestamp="20201117 14:43:02.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.693" endtime="20201117 14:43:02.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.985" endtime="20201117 14:43:02.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.993" endtime="20201117 14:43:02.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.690" endtime="20201117 14:43:02.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.688" endtime="20201117 14:43:02.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.000" level="INFO">${RESULT} = [{'time': 0.022779833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.022848778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:02.997" endtime="20201117 14:43:03.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.013" level="INFO">${ACCURACY} = {'time': [0.022779833, 0.022848778, 0.022917806, 0.022989806, 0.023056806, 0.023122819, 0.023190833, 0.023261889, 0.023331847, 0.023400875, 0.023468889, 0.023539861, 0.023608875, 0.023675875, 0.023746...</msg>
<status status="PASS" starttime="20201117 14:43:03.001" endtime="20201117 14:43:03.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.018" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.017" endtime="20201117 14:43:03.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.021" level="INFO">VALUE: [6.27500000000003e-05, 6.245900000000082e-05, 6.312499999999721e-05, 6.261200000000008e-05, 6.259800000000051e-05, 6.297199999999795e-05, 6.265199999999985e-05, 6.261100000000061e-05, 6.227799999999895e-05, 6.241700000000211e-05, 6.268099999999846e-05, 6.22499999999998e-05, 6.238900000000297e-05, 6.306899999999893e-05, 6.25279999999992e-05, 6.234700000000079e-05, 6.301400000000013e-05, 6.281899999999868e-05, 6.298600000000099e-05, 6.231900000000165e-05, 6.300000000000056e-05, 6.226399999999938e-05, 6.309699999999807e-05, 6.267999999999899e-05, 6.259700000000104e-05, 6.266700000000236e-05, 6.30279999999997e-05, 6.272200000000117e-05, 6.322200000000167e-05, 6.283299999999825e-05, 6.240299999999907e-05, 6.23889999999995e-05, 6.313900000000025e-05, 6.222300000000014e-05, 6.319400000000253e-05, 6.251399999999963e-05, 6.262500000000018e-05, 6.294400000000228e-05, 6.22629999999999e-05, 6.252699999999972e-05, 6.230499999999861e-05, 6.301400000000013e-05, 6.252800000000266e-05, 6.279200000000248e-05, 6.284699999999782e-05, 6.304200000000273e-05, 6.301400000000013e-05, 6.233300000000122e-05, 6.317999999999949e-05, 6.291700000000261e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.019" endtime="20201117 14:43:03.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.014" endtime="20201117 14:43:03.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.024" endtime="20201117 14:43:03.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.027" endtime="20201117 14:43:03.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.026" endtime="20201117 14:43:03.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.022" endtime="20201117 14:43:03.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.656" endtime="20201117 14:43:03.048"></status>
</kw>
<msg timestamp="20201117 14:43:03.048" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.057" endtime="20201117 14:43:03.075"></status>
</kw>
<msg timestamp="20201117 14:43:03.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.055" endtime="20201117 14:43:03.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.076" endtime="20201117 14:43:03.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.079" endtime="20201117 14:43:03.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.052" endtime="20201117 14:43:03.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.050" endtime="20201117 14:43:03.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.088" endtime="20201117 14:43:03.375"></status>
</kw>
<msg timestamp="20201117 14:43:03.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020568847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.086" endtime="20201117 14:43:03.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020568847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.379" endtime="20201117 14:43:03.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.387" endtime="20201117 14:43:03.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.084" endtime="20201117 14:43:03.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.082" endtime="20201117 14:43:03.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.394" level="INFO">${RESULT} = [{'time': 0.020568847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.248600000000049e-05, 'source_diff': 6.248600000000049e-05}, {'time': 0.020634875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.391" endtime="20201117 14:43:03.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.408" level="INFO">${ACCURACY} = {'time': [0.020568847, 0.020634875, 0.020703875, 0.020774875, 0.020846875, 0.020918917, 0.020989903, 0.021060903, 0.021127931, 0.021197972, 0.021263931, 0.021329931, 0.021398972, 0.021469986, 0.021535...</msg>
<status status="PASS" starttime="20201117 14:43:03.395" endtime="20201117 14:43:03.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.413" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.412" endtime="20201117 14:43:03.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.415" level="INFO">VALUE: [6.248600000000049e-05, 6.273600000000074e-05, 6.27080000000016e-05, 6.32080000000021e-05, 6.25279999999992e-05, 6.309799999999754e-05, 6.22499999999998e-05, 6.248600000000049e-05, 6.262500000000018e-05, 6.248600000000049e-05, 6.272300000000064e-05, 6.272300000000064e-05, 6.248599999999702e-05, 6.283299999999825e-05, 6.295800000000185e-05, 6.317999999999949e-05, 6.272200000000117e-05, 6.284700000000129e-05, 6.283299999999825e-05, 6.247200000000092e-05, 6.306899999999893e-05, 6.297200000000142e-05, 6.257000000000137e-05, 6.26950000000015e-05, 6.283399999999773e-05, 6.315299999999982e-05, 6.297200000000142e-05, 6.279200000000248e-05, 6.229099999999904e-05, 6.252699999999972e-05, 6.27219999999977e-05, 6.295800000000185e-05, 6.241599999999917e-05, 6.234700000000079e-05, 6.30279999999997e-05, 6.261100000000061e-05, 6.279199999999902e-05, 6.27500000000003e-05, 6.230599999999809e-05, 6.243100000000168e-05, 6.254200000000223e-05, 6.283399999999773e-05, 6.268099999999846e-05, 6.22499999999998e-05, 6.281899999999868e-05, 6.267999999999899e-05, 6.309700000000154e-05, 6.244400000000178e-05, 6.230499999999861e-05, 6.317999999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.414" endtime="20201117 14:43:03.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.409" endtime="20201117 14:43:03.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.418" endtime="20201117 14:43:03.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.422" endtime="20201117 14:43:03.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.420" endtime="20201117 14:43:03.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.417" endtime="20201117 14:43:03.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.049" endtime="20201117 14:43:03.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.654" endtime="20201117 14:43:03.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.653" endtime="20201117 14:43:03.443"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.445" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.454" endtime="20201117 14:43:03.472"></status>
</kw>
<msg timestamp="20201117 14:43:03.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.452" endtime="20201117 14:43:03.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.474" endtime="20201117 14:43:03.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.476" endtime="20201117 14:43:03.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.449" endtime="20201117 14:43:03.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.447" endtime="20201117 14:43:03.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.485" endtime="20201117 14:43:03.772"></status>
</kw>
<msg timestamp="20201117 14:43:03.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023780833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.484" endtime="20201117 14:43:03.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023780833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.776" endtime="20201117 14:43:03.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.785" endtime="20201117 14:43:03.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.481" endtime="20201117 14:43:03.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.479" endtime="20201117 14:43:03.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.792" level="INFO">${RESULT} = [{'time': 0.023844653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381999999999916e-05, 'source_diff': 6.381999999999916e-05}, {'time': 0.023916667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.788" endtime="20201117 14:43:03.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.807" level="INFO">${ACCURACY} = {'time': [0.023844653, 0.023916667, 0.023985667, 0.024054708, 0.024125708, 0.024196694, 0.024262694, 0.024334708, 0.024401722, 0.024471722, 0.024542736, 0.024615736, 0.02468675, 0.02475775, 0.02482676...</msg>
<status status="PASS" starttime="20201117 14:43:03.793" endtime="20201117 14:43:03.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.811" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.810" endtime="20201117 14:43:03.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.814" level="INFO">VALUE: [6.381999999999916e-05, 6.404200000000027e-05, 6.412499999999821e-05, 6.416600000000092e-05, 6.418000000000049e-05, 6.398600000000199e-05, 6.366600000000042e-05, 6.395799999999938e-05, 6.380500000000011e-05, 6.359700000000204e-05, 6.367999999999999e-05, 6.35280000000002e-05, 6.366699999999989e-05, 6.366699999999989e-05, 6.401400000000113e-05, 6.391700000000014e-05, 6.4195000000003e-05, 6.326400000000038e-05, 6.338899999999703e-05, 6.409700000000254e-05, 6.322300000000114e-05, 6.361099999999814e-05, 6.398599999999852e-05, 6.40829999999995e-05, 6.397199999999895e-05, 6.331899999999918e-05, 6.379199999999655e-05, 6.341699999999964e-05, 6.341699999999964e-05, 6.369499999999903e-05, 6.359700000000204e-05, 6.331999999999866e-05, 6.415299999999735e-05, 6.408399999999898e-05, 6.336199999999736e-05, 6.419499999999953e-05, 6.381899999999968e-05, 6.330499999999961e-05, 6.39439999999998e-05, 6.361099999999814e-05, 6.337500000000093e-05, 6.416600000000092e-05, 6.336100000000136e-05, 6.358300000000247e-05, 6.369399999999956e-05, 6.354199999999977e-05, 6.397199999999895e-05, 6.412500000000168e-05, 6.343099999999921e-05, 6.37500000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.812" endtime="20201117 14:43:03.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.808" endtime="20201117 14:43:03.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.817" endtime="20201117 14:43:03.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.820" endtime="20201117 14:43:03.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.819" endtime="20201117 14:43:03.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.815" endtime="20201117 14:43:03.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.446" endtime="20201117 14:43:03.841"></status>
</kw>
<msg timestamp="20201117 14:43:03.841" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.850" endtime="20201117 14:43:03.866"></status>
</kw>
<msg timestamp="20201117 14:43:03.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.848" endtime="20201117 14:43:03.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.868" endtime="20201117 14:43:03.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.870" endtime="20201117 14:43:03.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.846" endtime="20201117 14:43:03.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.843" endtime="20201117 14:43:03.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.879" endtime="20201117 14:43:04.166"></status>
</kw>
<msg timestamp="20201117 14:43:04.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.878" endtime="20201117 14:43:04.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.170" endtime="20201117 14:43:04.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.185" endtime="20201117 14:43:04.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.875" endtime="20201117 14:43:04.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.873" endtime="20201117 14:43:04.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.192" level="INFO">${RESULT} = [{'time': 0.019764958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.393000000000024e-05, 'source_diff': 6.393000000000024e-05}, {'time': 0.019834958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.189" endtime="20201117 14:43:04.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.205" level="INFO">${ACCURACY} = {'time': [0.019764958, 0.019834958, 0.019901972, 0.019969972, 0.020040986, 0.020108986, 0.02018, 0.020248028, 0.020318014, 0.020390028, 0.020460028, 0.020533056, 0.020605083, 0.020676056, 0.020744097,...</msg>
<status status="PASS" starttime="20201117 14:43:04.193" endtime="20201117 14:43:04.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.210" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.209" endtime="20201117 14:43:04.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.212" level="INFO">VALUE: [6.393000000000024e-05, 6.32219999999982e-05, 6.379100000000054e-05, 6.399999999999809e-05, 6.366699999999989e-05, 6.336099999999789e-05, 6.37500000000013e-05, 6.330600000000255e-05, 6.369499999999903e-05, 6.370900000000207e-05, 6.416700000000039e-05, 6.35280000000002e-05, 6.383299999999925e-05, 6.343100000000268e-05, 6.333299999999875e-05, 6.398600000000199e-05, 6.377799999999698e-05, 6.330499999999961e-05, 6.376400000000088e-05, 6.401400000000113e-05, 6.406899999999993e-05, 6.404200000000027e-05, 6.323599999999777e-05, 6.348599999999802e-05, 6.387500000000143e-05, 6.334700000000179e-05, 6.33890000000005e-05, 6.397199999999895e-05, 6.379100000000054e-05, 6.372299999999817e-05, 6.34439999999993e-05, 6.416599999999745e-05, 6.37219999999987e-05, 6.331900000000265e-05, 6.365300000000032e-05, 6.398599999999852e-05, 6.416700000000039e-05, 6.347200000000192e-05, 6.32080000000021e-05, 6.343099999999921e-05, 6.359699999999857e-05, 6.35280000000002e-05, 6.377800000000045e-05, 6.330599999999909e-05, 6.387500000000143e-05, 6.341699999999964e-05, 6.404099999999732e-05, 6.393000000000024e-05, 6.324999999999734e-05, 6.32500000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.211" endtime="20201117 14:43:04.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.206" endtime="20201117 14:43:04.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.216" endtime="20201117 14:43:04.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.219" endtime="20201117 14:43:04.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.217" endtime="20201117 14:43:04.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.214" endtime="20201117 14:43:04.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.842" endtime="20201117 14:43:04.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.444" endtime="20201117 14:43:04.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.443" endtime="20201117 14:43:04.240"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.243" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.251" endtime="20201117 14:43:04.267"></status>
</kw>
<msg timestamp="20201117 14:43:04.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.249" endtime="20201117 14:43:04.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.268" endtime="20201117 14:43:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.271" endtime="20201117 14:43:04.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.247" endtime="20201117 14:43:04.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.245" endtime="20201117 14:43:04.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.280" endtime="20201117 14:43:04.570"></status>
</kw>
<msg timestamp="20201117 14:43:04.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.279" endtime="20201117 14:43:04.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.574" endtime="20201117 14:43:04.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.582" endtime="20201117 14:43:04.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.276" endtime="20201117 14:43:04.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.274" endtime="20201117 14:43:04.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.589" level="INFO">${RESULT} = [{'time': 0.022168736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.447200000000292e-05, 'source_diff': 6.447200000000292e-05}, {'time': 0.022237764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.585" endtime="20201117 14:43:04.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.602" level="INFO">${ACCURACY} = {'time': [0.022168736, 0.022237764, 0.022307778, 0.022377778, 0.022448833, 0.022516778, 0.022589833, 0.022661792, 0.022731806, 0.022801833, 0.022870819, 0.022938875, 0.023005847, 0.023077847, 0.023150...</msg>
<status status="PASS" starttime="20201117 14:43:04.590" endtime="20201117 14:43:04.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.607" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.606" endtime="20201117 14:43:04.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.609" level="INFO">VALUE: [6.447200000000292e-05, 6.430600000000009e-05, 6.441700000000064e-05, 6.490300000000157e-05, 6.44440000000003e-05, 6.501400000000213e-05, 6.436099999999889e-05, 6.448599999999902e-05, 6.512499999999921e-05, 6.515199999999888e-05, 6.4583e-05, 6.427800000000095e-05, 6.47639999999984e-05, 6.42639999999979e-05, 6.433299999999975e-05, 6.441699999999717e-05, 6.506999999999694e-05, 6.445899999999935e-05, 6.477800000000145e-05, 6.47769999999985e-05, 6.422200000000267e-05, 6.516699999999792e-05, 6.509800000000301e-05, 6.426299999999843e-05, 6.431999999999966e-05, 6.509700000000007e-05, 6.438800000000203e-05, 6.504100000000179e-05, 6.504100000000179e-05, 6.449999999999859e-05, 6.493000000000124e-05, 6.516699999999792e-05, 6.454200000000077e-05, 6.481899999999721e-05, 6.487499999999896e-05, 6.50700000000004e-05, 6.454200000000077e-05, 6.451400000000163e-05, 6.42089999999991e-05, 6.415200000000135e-05, 6.463900000000175e-05, 6.504099999999832e-05, 6.430500000000061e-05, 6.459699999999957e-05, 6.473599999999927e-05, 6.47219999999997e-05, 6.4583e-05, 6.511099999999964e-05, 6.47500000000023e-05, 6.520800000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.608" endtime="20201117 14:43:04.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.603" endtime="20201117 14:43:04.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.612" endtime="20201117 14:43:04.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.616" endtime="20201117 14:43:04.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.614" endtime="20201117 14:43:04.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.610" endtime="20201117 14:43:04.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.243" endtime="20201117 14:43:04.636"></status>
</kw>
<msg timestamp="20201117 14:43:04.636" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.645" endtime="20201117 14:43:04.663"></status>
</kw>
<msg timestamp="20201117 14:43:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.643" endtime="20201117 14:43:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.664" endtime="20201117 14:43:04.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.667" endtime="20201117 14:43:04.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.641" endtime="20201117 14:43:04.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.638" endtime="20201117 14:43:04.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.676" endtime="20201117 14:43:04.962"></status>
</kw>
<msg timestamp="20201117 14:43:04.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.675" endtime="20201117 14:43:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.967" endtime="20201117 14:43:04.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.975" endtime="20201117 14:43:04.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.672" endtime="20201117 14:43:04.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.670" endtime="20201117 14:43:04.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.981" level="INFO">${RESULT} = [{'time': 0.019731569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52220000000002e-05, 'source_diff': 6.52220000000002e-05}, {'time': 0.019801569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:04.978" endtime="20201117 14:43:04.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.995" level="INFO">${ACCURACY} = {'time': [0.019731569, 0.019801569, 0.019873569, 0.019944569, 0.020014583, 0.020082597, 0.020153597, 0.020220625, 0.020292611, 0.020365681, 0.020437625, 0.020507639, 0.020574639, 0.020642653, 0.020716...</msg>
<status status="PASS" starttime="20201117 14:43:04.982" endtime="20201117 14:43:04.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.999" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.998" endtime="20201117 14:43:04.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.002" level="INFO">VALUE: [6.52220000000002e-05, 6.513800000000278e-05, 6.513799999999931e-05, 6.469399999999709e-05, 6.511099999999964e-05, 6.443000000000074e-05, 6.487499999999896e-05, 6.429200000000052e-05, 6.442999999999727e-05, 6.52639999999989e-05, 6.47219999999997e-05, 6.45699999999999e-05, 6.444499999999978e-05, 6.431999999999966e-05, 6.508399999999998e-05, 6.449999999999859e-05, 6.516599999999845e-05, 6.480599999999712e-05, 6.42500000000018e-05, 6.466700000000089e-05, 6.516599999999845e-05, 6.436099999999889e-05, 6.451400000000163e-05, 6.427799999999748e-05, 6.512499999999921e-05, 6.447199999999945e-05, 6.484699999999982e-05, 6.444499999999978e-05, 6.444499999999978e-05, 6.516700000000139e-05, 6.518099999999749e-05, 6.423700000000171e-05, 6.479200000000102e-05, 6.519400000000106e-05, 6.47769999999985e-05, 6.504099999999832e-05, 6.466599999999795e-05, 6.462499999999871e-05, 6.484699999999982e-05, 6.50830000000005e-05, 6.451399999999816e-05, 6.506900000000093e-05, 6.437499999999846e-05, 6.52090000000001e-05, 6.473599999999927e-05, 6.480600000000059e-05, 6.499999999999909e-05, 6.461199999999861e-05, 6.455600000000034e-05, 6.427700000000147e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.000" endtime="20201117 14:43:05.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.996" endtime="20201117 14:43:05.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.005" endtime="20201117 14:43:05.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.008" endtime="20201117 14:43:05.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.007" endtime="20201117 14:43:05.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.003" endtime="20201117 14:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.637" endtime="20201117 14:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.241" endtime="20201117 14:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.241" endtime="20201117 14:43:05.029"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.032" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.040" endtime="20201117 14:43:05.058"></status>
</kw>
<msg timestamp="20201117 14:43:05.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.039" endtime="20201117 14:43:05.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.059" endtime="20201117 14:43:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.062" endtime="20201117 14:43:05.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.036" endtime="20201117 14:43:05.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.034" endtime="20201117 14:43:05.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.071" endtime="20201117 14:43:05.358"></status>
</kw>
<msg timestamp="20201117 14:43:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.069" endtime="20201117 14:43:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.362" endtime="20201117 14:43:05.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.370" endtime="20201117 14:43:05.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.066" endtime="20201117 14:43:05.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.065" endtime="20201117 14:43:05.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.376" level="INFO">${RESULT} = [{'time': 0.023236056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.53890000000025e-05, 'source_diff': 6.53890000000025e-05}, {'time': 0.023304056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:05.373" endtime="20201117 14:43:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.391" level="INFO">${ACCURACY} = {'time': [0.023236056, 0.023304056, 0.023376069, 0.023451069, 0.023522083, 0.023592097, 0.023662097, 0.023735111, 0.023809111, 0.023883139, 0.023958139, 0.024029139, 0.024100153, 0.024173153, 0.024241...</msg>
<status status="PASS" starttime="20201117 14:43:05.377" endtime="20201117 14:43:05.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.396" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.395" endtime="20201117 14:43:05.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.398" level="INFO">VALUE: [6.53890000000025e-05, 6.52639999999989e-05, 6.587499999999996e-05, 6.533300000000075e-05, 6.605499999999889e-05, 6.529099999999857e-05, 6.583300000000125e-05, 6.574999999999984e-05, 6.555500000000186e-05, 6.555600000000134e-05, 6.601399999999966e-05, 6.611100000000064e-05, 6.565299999999885e-05, 6.52639999999989e-05, 6.551400000000263e-05, 6.529199999999805e-05, 6.576299999999993e-05, 6.583300000000125e-05, 6.580499999999864e-05, 6.545799999999741e-05, 6.567999999999852e-05, 6.534700000000032e-05, 6.591699999999867e-05, 6.602799999999923e-05, 6.529200000000152e-05, 6.543099999999774e-05, 6.584700000000082e-05, 6.531999999999719e-05, 6.580600000000159e-05, 6.595900000000085e-05, 6.615299999999935e-05, 6.60969999999976e-05, 6.5583000000001e-05, 6.59440000000018e-05, 6.60830000000015e-05, 6.611100000000064e-05, 6.606900000000193e-05, 6.577799999999898e-05, 6.563899999999928e-05, 6.602799999999923e-05, 6.527800000000195e-05, 6.573600000000027e-05, 6.529199999999805e-05, 6.620899999999763e-05, 6.593100000000171e-05, 6.565199999999938e-05, 6.526299999999943e-05, 6.52639999999989e-05, 6.5583000000001e-05, 6.561100000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.397" endtime="20201117 14:43:05.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.392" endtime="20201117 14:43:05.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.401" endtime="20201117 14:43:05.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.405" endtime="20201117 14:43:05.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.403" endtime="20201117 14:43:05.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.400" endtime="20201117 14:43:05.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.032" endtime="20201117 14:43:05.426"></status>
</kw>
<msg timestamp="20201117 14:43:05.426" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.434" endtime="20201117 14:43:05.451"></status>
</kw>
<msg timestamp="20201117 14:43:05.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.433" endtime="20201117 14:43:05.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.452" endtime="20201117 14:43:05.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.455" endtime="20201117 14:43:05.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.430" endtime="20201117 14:43:05.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.428" endtime="20201117 14:43:05.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.464" endtime="20201117 14:43:05.751"></status>
</kw>
<msg timestamp="20201117 14:43:05.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.462" endtime="20201117 14:43:05.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.756" endtime="20201117 14:43:05.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.764" endtime="20201117 14:43:05.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.460" endtime="20201117 14:43:05.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.458" endtime="20201117 14:43:05.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.770" level="INFO">${RESULT} = [{'time': 0.019944722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.590300000000257e-05, 'source_diff': 6.590300000000257e-05}, {'time': 0.020012736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.767" endtime="20201117 14:43:05.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.784" level="INFO">${ACCURACY} = {'time': [0.019944722, 0.020012736, 0.020087736, 0.020161736, 0.020233792, 0.020307778, 0.020380764, 0.020453778, 0.020525778, 0.020593792, 0.020661792, 0.020730806, 0.020805819, 0.020878833, 0.020952...</msg>
<status status="PASS" starttime="20201117 14:43:05.771" endtime="20201117 14:43:05.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.788" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.787" endtime="20201117 14:43:05.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.791" level="INFO">VALUE: [6.590300000000257e-05, 6.552799999999873e-05, 6.530499999999814e-05, 6.579199999999855e-05, 6.549999999999959e-05, 6.5583999999997e-05, 6.573600000000027e-05, 6.566699999999842e-05, 6.52220000000002e-05, 6.573600000000027e-05, 6.57229999999967e-05, 6.526400000000238e-05, 6.57769999999995e-05, 6.548600000000002e-05, 6.530599999999762e-05, 6.547200000000045e-05, 6.533300000000075e-05, 6.565299999999885e-05, 6.586100000000039e-05, 6.554200000000177e-05, 6.584700000000082e-05, 6.591699999999867e-05, 6.53890000000025e-05, 6.561100000000014e-05, 6.541700000000164e-05, 6.543100000000121e-05, 6.574999999999984e-05, 6.601300000000018e-05, 6.619400000000206e-05, 6.609700000000107e-05, 6.602699999999975e-05, 6.615299999999935e-05, 6.548600000000002e-05, 6.615299999999935e-05, 6.54029999999986e-05, 6.609700000000107e-05, 6.618099999999849e-05, 6.55280000000022e-05, 6.619500000000153e-05, 6.605500000000236e-05, 6.605600000000184e-05, 6.597200000000095e-05, 6.559700000000057e-05, 6.588800000000006e-05, 6.581900000000168e-05, 6.530499999999814e-05, 6.538899999999903e-05, 6.555499999999839e-05, 6.601399999999966e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.789" endtime="20201117 14:43:05.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.785" endtime="20201117 14:43:05.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.794" endtime="20201117 14:43:05.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.798" endtime="20201117 14:43:05.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.796" endtime="20201117 14:43:05.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.792" endtime="20201117 14:43:05.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.427" endtime="20201117 14:43:05.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.031" endtime="20201117 14:43:05.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.030" endtime="20201117 14:43:05.819"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.821" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.829" endtime="20201117 14:43:05.847"></status>
</kw>
<msg timestamp="20201117 14:43:05.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.828" endtime="20201117 14:43:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.849" endtime="20201117 14:43:05.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.851" endtime="20201117 14:43:05.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.825" endtime="20201117 14:43:05.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.823" endtime="20201117 14:43:05.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.860" endtime="20201117 14:43:06.148"></status>
</kw>
<msg timestamp="20201117 14:43:06.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.859" endtime="20201117 14:43:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.152" endtime="20201117 14:43:06.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.160" endtime="20201117 14:43:06.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.856" endtime="20201117 14:43:06.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.855" endtime="20201117 14:43:06.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.167" level="INFO">${RESULT} = [{'time': 0.022746736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.645799999999841e-05, 'source_diff': 6.645799999999841e-05}, {'time': 0.022821792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.163" endtime="20201117 14:43:06.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.180" level="INFO">${ACCURACY} = {'time': [0.022746736, 0.022821792, 0.022891764, 0.022964764, 0.023035764, 0.023106792, 0.023182778, 0.023252792, 0.023326806, 0.023399806, 0.023472819, 0.023546819, 0.023616875, 0.023688875, 0.023757...</msg>
<status status="PASS" starttime="20201117 14:43:06.168" endtime="20201117 14:43:06.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.184" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.183" endtime="20201117 14:43:06.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.187" level="INFO">VALUE: [6.645799999999841e-05, 6.677799999999998e-05, 6.62639999999999e-05, 6.661099999999767e-05, 6.698600000000152e-05, 6.686100000000139e-05, 6.700000000000109e-05, 6.632000000000166e-05, 6.715299999999688e-05, 6.637499999999699e-05, 6.620799999999816e-05, 6.642999999999927e-05, 6.651400000000016e-05, 6.715300000000035e-05, 6.649999999999712e-05, 6.711099999999817e-05, 6.705599999999937e-05, 6.651400000000016e-05, 6.655599999999887e-05, 6.652699999999678e-05, 6.688800000000106e-05, 6.64159999999997e-05, 6.648599999999755e-05, 6.70700000000024e-05, 6.625000000000034e-05, 6.697199999999848e-05, 6.640200000000013e-05, 6.669399999999909e-05, 6.687500000000096e-05, 6.666700000000289e-05, 6.677799999999998e-05, 6.687500000000096e-05, 6.634699999999785e-05, 6.631999999999819e-05, 6.62639999999999e-05, 6.67640000000004e-05, 6.650000000000059e-05, 6.700000000000109e-05, 6.706999999999894e-05, 6.711199999999765e-05, 6.654099999999982e-05, 6.62359999999973e-05, 6.652799999999973e-05, 6.670800000000213e-05, 6.652799999999973e-05, 6.64029999999996e-05, 6.683300000000225e-05, 6.677799999999998e-05, 6.623600000000077e-05, 6.648599999999755e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.186" endtime="20201117 14:43:06.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.181" endtime="20201117 14:43:06.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.191" endtime="20201117 14:43:06.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.194" endtime="20201117 14:43:06.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.192" endtime="20201117 14:43:06.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.189" endtime="20201117 14:43:06.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.822" endtime="20201117 14:43:06.215"></status>
</kw>
<msg timestamp="20201117 14:43:06.215" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.223" endtime="20201117 14:43:06.241"></status>
</kw>
<msg timestamp="20201117 14:43:06.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.222" endtime="20201117 14:43:06.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.243" endtime="20201117 14:43:06.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.246" endtime="20201117 14:43:06.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.219" endtime="20201117 14:43:06.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.217" endtime="20201117 14:43:06.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.255" endtime="20201117 14:43:06.542"></status>
</kw>
<msg timestamp="20201117 14:43:06.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.253" endtime="20201117 14:43:06.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.546" endtime="20201117 14:43:06.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.554" endtime="20201117 14:43:06.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.250" endtime="20201117 14:43:06.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.249" endtime="20201117 14:43:06.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.561" level="INFO">${RESULT} = [{'time': 0.020501431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.67640000000004e-05, 'source_diff': 6.67640000000004e-05}, {'time': 0.020571444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:06.557" endtime="20201117 14:43:06.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.574" level="INFO">${ACCURACY} = {'time': [0.020501431, 0.020571444, 0.020647458, 0.020723472, 0.020799472, 0.020869472, 0.020942486, 0.021018556, 0.021088514, 0.021157514, 0.021227542, 0.021301528, 0.021377542, 0.021450542, 0.021523...</msg>
<status status="PASS" starttime="20201117 14:43:06.562" endtime="20201117 14:43:06.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.578" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.577" endtime="20201117 14:43:06.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.581" level="INFO">VALUE: [6.67640000000004e-05, 6.702700000000075e-05, 6.701400000000066e-05, 6.701400000000066e-05, 6.630499999999914e-05, 6.623600000000077e-05, 6.662500000000071e-05, 6.643100000000221e-05, 6.67640000000004e-05, 6.674999999999737e-05, 6.698599999999805e-05, 6.715300000000035e-05, 6.630599999999862e-05, 6.662500000000071e-05, 6.695799999999891e-05, 6.706899999999946e-05, 6.690200000000063e-05, 6.695799999999891e-05, 6.665200000000038e-05, 6.64440000000023e-05, 6.687500000000096e-05, 6.677799999999998e-05, 6.669399999999909e-05, 6.632000000000166e-05, 6.700000000000109e-05, 6.681899999999921e-05, 6.62359999999973e-05, 6.65280000000032e-05, 6.652799999999973e-05, 6.694399999999934e-05, 6.702800000000023e-05, 6.636100000000089e-05, 6.662500000000071e-05, 6.661099999999767e-05, 6.618000000000249e-05, 6.69030000000001e-05, 6.691699999999967e-05, 6.650000000000059e-05, 6.686099999999792e-05, 6.630599999999862e-05, 6.67640000000004e-05, 6.659799999999758e-05, 6.679100000000007e-05, 6.673699999999727e-05, 6.720800000000263e-05, 6.62639999999999e-05, 6.642999999999927e-05, 6.62639999999999e-05, 6.672199999999823e-05, 6.647199999999798e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.580" endtime="20201117 14:43:06.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.575" endtime="20201117 14:43:06.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.585" endtime="20201117 14:43:06.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.588" endtime="20201117 14:43:06.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.586" endtime="20201117 14:43:06.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.583" endtime="20201117 14:43:06.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.216" endtime="20201117 14:43:06.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.820" endtime="20201117 14:43:06.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.819" endtime="20201117 14:43:06.609"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.612" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.620" endtime="20201117 14:43:06.638"></status>
</kw>
<msg timestamp="20201117 14:43:06.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.618" endtime="20201117 14:43:06.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.639" endtime="20201117 14:43:06.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.642" endtime="20201117 14:43:06.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.616" endtime="20201117 14:43:06.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.614" endtime="20201117 14:43:06.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.651" endtime="20201117 14:43:06.937"></status>
</kw>
<msg timestamp="20201117 14:43:06.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.649" endtime="20201117 14:43:06.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.942" endtime="20201117 14:43:06.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.950" endtime="20201117 14:43:06.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.647" endtime="20201117 14:43:06.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.645" endtime="20201117 14:43:06.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.957" level="INFO">${RESULT} = [{'time': 0.022053639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.765300000000085e-05, 'source_diff': 6.765300000000085e-05}, {'time': 0.022125653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.953" endtime="20201117 14:43:06.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.971" level="INFO">${ACCURACY} = {'time': [0.022053639, 0.022125653, 0.022199667, 0.022275667, 0.022349681, 0.022419681, 0.022493708, 0.022568708, 0.022643708, 0.022715722, 0.022788722, 0.02285975, 0.022935736, 0.023006764, 0.0230767...</msg>
<status status="PASS" starttime="20201117 14:43:06.958" endtime="20201117 14:43:06.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.976" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.975" endtime="20201117 14:43:06.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.979" level="INFO">VALUE: [6.765300000000085e-05, 6.727799999999701e-05, 6.72359999999983e-05, 6.731999999999919e-05, 6.747299999999845e-05, 6.743099999999974e-05, 6.787500000000196e-05, 6.743000000000027e-05, 6.744399999999984e-05, 6.754100000000082e-05, 6.780500000000064e-05, 6.820800000000016e-05, 6.723600000000177e-05, 6.733299999999928e-05, 6.766700000000042e-05, 6.762500000000171e-05, 6.752800000000073e-05, 6.730599999999962e-05, 6.751400000000116e-05, 6.726299999999796e-05, 6.722300000000167e-05, 6.758299999999953e-05, 6.817999999999755e-05, 6.813899999999831e-05, 6.75420000000003e-05, 6.727800000000048e-05, 6.787499999999849e-05, 6.793100000000024e-05, 6.784699999999935e-05, 6.80420000000008e-05, 6.75420000000003e-05, 6.777799999999751e-05, 6.774999999999837e-05, 6.752800000000073e-05, 6.77359999999988e-05, 6.780499999999717e-05, 6.751299999999821e-05, 6.783299999999978e-05, 6.750000000000159e-05, 6.761100000000214e-05, 6.761099999999867e-05, 6.780500000000064e-05, 6.80420000000008e-05, 6.747300000000192e-05, 6.738900000000103e-05, 6.790199999999816e-05, 6.802799999999776e-05, 6.734699999999885e-05, 6.743100000000321e-05, 6.77359999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.977" endtime="20201117 14:43:06.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.972" endtime="20201117 14:43:06.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.982" endtime="20201117 14:43:06.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.986" endtime="20201117 14:43:07.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.984" endtime="20201117 14:43:07.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.980" endtime="20201117 14:43:07.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.612" endtime="20201117 14:43:07.006"></status>
</kw>
<msg timestamp="20201117 14:43:07.007" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.015" endtime="20201117 14:43:07.032"></status>
</kw>
<msg timestamp="20201117 14:43:07.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.013" endtime="20201117 14:43:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.034" endtime="20201117 14:43:07.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.036" endtime="20201117 14:43:07.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.011" endtime="20201117 14:43:07.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.009" endtime="20201117 14:43:07.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.045" endtime="20201117 14:43:07.331"></status>
</kw>
<msg timestamp="20201117 14:43:07.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:07.044" endtime="20201117 14:43:07.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:07.335" endtime="20201117 14:43:07.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.343" endtime="20201117 14:43:07.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.041" endtime="20201117 14:43:07.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.039" endtime="20201117 14:43:07.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.350" level="INFO">${RESULT} = [{'time': 0.019613417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.791700000000067e-05, 'source_diff': 6.791700000000067e-05}, {'time': 0.019689417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.347" endtime="20201117 14:43:07.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.363" level="INFO">${ACCURACY} = {'time': [0.019613417, 0.019689417, 0.019765417, 0.019835431, 0.019908514, 0.019981444, 0.020054458, 0.020130472, 0.020203472, 0.020280486, 0.0203535, 0.0204295, 0.020501528, 0.020576514, 0.020653528,...</msg>
<status status="PASS" starttime="20201117 14:43:07.351" endtime="20201117 14:43:07.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.368" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.367" endtime="20201117 14:43:07.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.371" level="INFO">VALUE: [6.791700000000067e-05, 6.813900000000178e-05, 6.755599999999987e-05, 6.751400000000116e-05, 6.797199999999948e-05, 6.811100000000264e-05, 6.763900000000128e-05, 6.779100000000107e-05, 6.811099999999917e-05, 6.808300000000003e-05, 6.765300000000085e-05, 6.755599999999987e-05, 6.802800000000123e-05, 6.797199999999948e-05, 6.800000000000209e-05, 6.819500000000006e-05, 6.736200000000137e-05, 6.755599999999987e-05, 6.82359999999993e-05, 6.776299999999846e-05, 6.731899999999971e-05, 6.731899999999971e-05, 6.80969999999996e-05, 6.748600000000202e-05, 6.819400000000059e-05, 6.815299999999788e-05, 6.727800000000048e-05, 6.788899999999806e-05, 6.808300000000003e-05, 6.748599999999855e-05, 6.722199999999873e-05, 6.77640000000014e-05, 6.780500000000064e-05, 6.72359999999983e-05, 6.743000000000027e-05, 6.725000000000134e-05, 6.74160000000007e-05, 6.812499999999874e-05, 6.727800000000048e-05, 6.794400000000034e-05, 6.765300000000085e-05, 6.797200000000295e-05, 6.72640000000009e-05, 6.79030000000011e-05, 6.733400000000223e-05, 6.768099999999999e-05, 6.755599999999987e-05, 6.768099999999999e-05, 6.815300000000135e-05, 6.749999999999812e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.369" endtime="20201117 14:43:07.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.365" endtime="20201117 14:43:07.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.374" endtime="20201117 14:43:07.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.377" endtime="20201117 14:43:07.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.376" endtime="20201117 14:43:07.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.372" endtime="20201117 14:43:07.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.007" endtime="20201117 14:43:07.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.610" endtime="20201117 14:43:07.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.610" endtime="20201117 14:43:07.398"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.401" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.409" endtime="20201117 14:43:07.426"></status>
</kw>
<msg timestamp="20201117 14:43:07.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.407" endtime="20201117 14:43:07.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.427" endtime="20201117 14:43:07.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.430" endtime="20201117 14:43:07.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.405" endtime="20201117 14:43:07.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.403" endtime="20201117 14:43:07.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.439" endtime="20201117 14:43:07.725"></status>
</kw>
<msg timestamp="20201117 14:43:07.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.437" endtime="20201117 14:43:07.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.730" endtime="20201117 14:43:07.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.738" endtime="20201117 14:43:07.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.435" endtime="20201117 14:43:07.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.433" endtime="20201117 14:43:07.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.745" level="INFO">${RESULT} = [{'time': 0.022155639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898600000000005e-05, 'source_diff': 6.898600000000005e-05}, {'time': 0.022230583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.742" endtime="20201117 14:43:07.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.758" level="INFO">${ACCURACY} = {'time': [0.022155639, 0.022230583, 0.022307597, 0.022382667, 0.022459611, 0.022531611, 0.022604625, 0.022675639, 0.022747681, 0.022823639, 0.022900694, 0.022973667, 0.023046681, 0.023121681, 0.023196...</msg>
<status status="PASS" starttime="20201117 14:43:07.746" endtime="20201117 14:43:07.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.763" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.762" endtime="20201117 14:43:07.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.765" level="INFO">VALUE: [6.898600000000005e-05, 6.838900000000203e-05, 6.904099999999885e-05, 6.876399999999894e-05, 6.850000000000259e-05, 6.919400000000159e-05, 6.837499999999899e-05, 6.843100000000074e-05, 6.852799999999826e-05, 6.87359999999998e-05, 6.85970000000001e-05, 6.905600000000137e-05, 6.830600000000062e-05, 6.911200000000312e-05, 6.869500000000056e-05, 6.831900000000071e-05, 6.912499999999974e-05, 6.847199999999998e-05, 6.916599999999898e-05, 6.825000000000234e-05, 6.829200000000105e-05, 6.852799999999826e-05, 6.893100000000124e-05, 6.87640000000024e-05, 6.851400000000216e-05, 6.838899999999856e-05, 6.859799999999958e-05, 6.894500000000081e-05, 6.847199999999998e-05, 6.912499999999974e-05, 6.833300000000028e-05, 6.874999999999937e-05, 6.900000000000309e-05, 6.884700000000035e-05, 6.891700000000167e-05, 6.905500000000189e-05, 6.85970000000001e-05, 6.894499999999734e-05, 6.840299999999813e-05, 6.89169999999982e-05, 6.886099999999992e-05, 6.859799999999958e-05, 6.894500000000081e-05, 6.827699999999853e-05, 6.834700000000332e-05, 6.919400000000159e-05, 6.886099999999992e-05, 6.87909999999986e-05, 6.890299999999863e-05, 6.824999999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.764" endtime="20201117 14:43:07.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.759" endtime="20201117 14:43:07.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.768" endtime="20201117 14:43:07.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.772" endtime="20201117 14:43:07.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.770" endtime="20201117 14:43:07.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.767" endtime="20201117 14:43:07.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.401" endtime="20201117 14:43:07.793"></status>
</kw>
<msg timestamp="20201117 14:43:07.793" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.801" endtime="20201117 14:43:07.819"></status>
</kw>
<msg timestamp="20201117 14:43:07.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.800" endtime="20201117 14:43:07.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.820" endtime="20201117 14:43:07.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.823" endtime="20201117 14:43:07.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.797" endtime="20201117 14:43:07.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.795" endtime="20201117 14:43:07.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.832" endtime="20201117 14:43:08.118"></status>
</kw>
<msg timestamp="20201117 14:43:08.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.830" endtime="20201117 14:43:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.122" endtime="20201117 14:43:08.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.131" endtime="20201117 14:43:08.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.828" endtime="20201117 14:43:08.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.826" endtime="20201117 14:43:08.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.137" level="INFO">${RESULT} = [{'time': 0.019906319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.849999999999912e-05, 'source_diff': 6.849999999999912e-05}, {'time': 0.019978292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.134" endtime="20201117 14:43:08.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.151" level="INFO">${ACCURACY} = {'time': [0.019906319, 0.019978292, 0.020055292, 0.020133292, 0.020208306, 0.020279319, 0.020356319, 0.020434333, 0.020512333, 0.020586347, 0.020664431, 0.020741361, 0.020819431, 0.020892375, 0.020968...</msg>
<status status="PASS" starttime="20201117 14:43:08.138" endtime="20201117 14:43:08.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.155" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.154" endtime="20201117 14:43:08.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.158" level="INFO">VALUE: [6.849999999999912e-05, 6.90420000000018e-05, 6.85559999999974e-05, 6.829200000000105e-05, 6.911199999999965e-05, 6.843000000000127e-05, 6.879100000000207e-05, 6.883299999999731e-05, 6.905500000000189e-05, 6.84160000000017e-05, 6.883400000000026e-05, 6.879200000000155e-05, 6.888899999999906e-05, 6.881900000000121e-05, 6.87229999999997e-05, 6.915200000000288e-05, 6.866700000000142e-05, 6.858300000000053e-05, 6.901400000000266e-05, 6.877800000000198e-05, 6.876299999999946e-05, 6.854099999999835e-05, 6.820800000000016e-05, 6.820800000000016e-05, 6.848599999999955e-05, 6.82640000000019e-05, 6.848600000000302e-05, 6.869500000000056e-05, 6.888899999999906e-05, 6.855600000000087e-05, 6.888799999999959e-05, 6.816700000000092e-05, 6.911100000000017e-05, 6.868100000000099e-05, 6.824999999999887e-05, 6.897200000000048e-05, 6.872200000000023e-05, 6.82359999999993e-05, 6.845799999999694e-05, 6.82359999999993e-05, 6.908299999999756e-05, 6.874999999999937e-05, 6.830600000000062e-05, 6.851400000000216e-05, 6.848599999999955e-05, 6.883400000000026e-05, 6.894499999999734e-05, 6.897299999999995e-05, 6.874999999999937e-05, 6.824999999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.156" endtime="20201117 14:43:08.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.152" endtime="20201117 14:43:08.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.161" endtime="20201117 14:43:08.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.164" endtime="20201117 14:43:08.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.163" endtime="20201117 14:43:08.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.159" endtime="20201117 14:43:08.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.794" endtime="20201117 14:43:08.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.400" endtime="20201117 14:43:08.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.399" endtime="20201117 14:43:08.186"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.188" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.196" endtime="20201117 14:43:08.214"></status>
</kw>
<msg timestamp="20201117 14:43:08.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.195" endtime="20201117 14:43:08.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.215" endtime="20201117 14:43:08.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.218" endtime="20201117 14:43:08.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.192" endtime="20201117 14:43:08.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.190" endtime="20201117 14:43:08.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.227" endtime="20201117 14:43:08.514"></status>
</kw>
<msg timestamp="20201117 14:43:08.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.226" endtime="20201117 14:43:08.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.518" endtime="20201117 14:43:08.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.527" endtime="20201117 14:43:08.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.222" endtime="20201117 14:43:08.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.221" endtime="20201117 14:43:08.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.534" level="INFO">${RESULT} = [{'time': 0.022051389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.948600000000055e-05, 'source_diff': 6.948600000000055e-05}, {'time': 0.022124375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.530" endtime="20201117 14:43:08.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.592" level="INFO">${ACCURACY} = {'time': [0.022051389, 0.022124375, 0.022203389, 0.022281417, 0.022357417, 0.022430417, 0.022505417, 0.022581431, 0.022660444, 0.022737458, 0.022813472, 0.022889472, 0.0229685, 0.023044486, 0.0231235,...</msg>
<status status="PASS" starttime="20201117 14:43:08.535" endtime="20201117 14:43:08.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.597" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.596" endtime="20201117 14:43:08.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.599" level="INFO">VALUE: [6.948600000000055e-05, 6.979200000000255e-05, 6.950000000000012e-05, 6.92640000000029e-05, 7.018100000000249e-05, 6.995900000000138e-05, 6.933400000000076e-05, 7.00979999999976e-05, 6.936099999999695e-05, 7.016599999999998e-05, 7.019400000000259e-05, 6.970800000000166e-05, 6.954199999999883e-05, 7.011100000000117e-05, 6.977800000000298e-05, 6.95559999999984e-05, 6.982000000000169e-05, 6.940199999999966e-05, 6.927799999999901e-05, 6.97360000000008e-05, 6.933399999999729e-05, 6.92230000000002e-05, 6.987500000000049e-05, 7.001400000000019e-05, 6.97360000000008e-05, 6.976399999999994e-05, 7.019400000000259e-05, 6.929199999999858e-05, 6.926399999999944e-05, 6.998600000000105e-05, 6.944499999999784e-05, 6.94030000000026e-05, 6.975000000000037e-05, 6.94030000000026e-05, 6.923699999999977e-05, 6.994400000000234e-05, 6.980600000000212e-05, 6.963899999999981e-05, 6.988900000000006e-05, 6.976399999999994e-05, 6.991700000000267e-05, 7.001400000000019e-05, 7.020800000000216e-05, 6.993100000000224e-05, 6.990299999999963e-05, 6.998600000000105e-05, 7.001400000000019e-05, 7.001400000000019e-05, 6.982000000000169e-05, 6.92230000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.598" endtime="20201117 14:43:08.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.593" endtime="20201117 14:43:08.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.602" endtime="20201117 14:43:08.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.606" endtime="20201117 14:43:08.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.604" endtime="20201117 14:43:08.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.601" endtime="20201117 14:43:08.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.189" endtime="20201117 14:43:08.627"></status>
</kw>
<msg timestamp="20201117 14:43:08.627" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.635" endtime="20201117 14:43:08.653"></status>
</kw>
<msg timestamp="20201117 14:43:08.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.633" endtime="20201117 14:43:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.654" endtime="20201117 14:43:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.657" endtime="20201117 14:43:08.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.631" endtime="20201117 14:43:08.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.629" endtime="20201117 14:43:08.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.666" endtime="20201117 14:43:08.951"></status>
</kw>
<msg timestamp="20201117 14:43:08.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.665" endtime="20201117 14:43:08.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.956" endtime="20201117 14:43:08.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.964" endtime="20201117 14:43:08.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.662" endtime="20201117 14:43:08.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.661" endtime="20201117 14:43:08.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.970" level="INFO">${RESULT} = [{'time': 0.020440778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.950000000000012e-05, 'source_diff': 6.950000000000012e-05}, {'time': 0.020512708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.967" endtime="20201117 14:43:08.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.984" level="INFO">${ACCURACY} = {'time': [0.020440778, 0.020512708, 0.020589722, 0.02066575, 0.02074175, 0.020816806, 0.020895778, 0.020970778, 0.021042819, 0.021119792, 0.021195792, 0.021270806, 0.021347806, 0.021422819, 0.02150083...</msg>
<status status="PASS" starttime="20201117 14:43:08.971" endtime="20201117 14:43:08.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.988" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.987" endtime="20201117 14:43:08.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.990" level="INFO">VALUE: [6.950000000000012e-05, 6.97360000000008e-05, 6.92640000000029e-05, 7.018099999999902e-05, 7.018099999999902e-05, 6.940299999999913e-05, 6.936100000000042e-05, 7.006999999999847e-05, 6.970800000000166e-05, 6.976399999999994e-05, 6.92230000000002e-05, 6.940299999999913e-05, 7.015299999999988e-05, 6.965199999999991e-05, 7.020800000000216e-05, 6.955499999999892e-05, 7.000000000000062e-05, 6.922200000000073e-05, 7.000000000000062e-05, 6.982000000000169e-05, 6.973599999999733e-05, 6.954199999999883e-05, 6.980499999999917e-05, 6.926399999999944e-05, 7.001400000000019e-05, 6.926399999999944e-05, 6.959699999999763e-05, 7.002700000000028e-05, 7.015200000000041e-05, 6.988900000000006e-05, 6.956900000000196e-05, 6.976399999999994e-05, 7.015299999999988e-05, 6.952800000000273e-05, 7.002799999999976e-05, 6.973599999999733e-05, 7.008299999999856e-05, 6.956899999999849e-05, 7.001400000000019e-05, 6.933299999999781e-05, 6.937499999999999e-05, 6.926299999999996e-05, 6.975000000000037e-05, 6.986100000000092e-05, 6.94299999999988e-05, 7.008300000000203e-05, 6.976399999999994e-05, 6.950000000000012e-05, 6.991700000000267e-05, 6.938900000000303e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.989" endtime="20201117 14:43:08.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.984" endtime="20201117 14:43:08.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.994" endtime="20201117 14:43:08.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.997" endtime="20201117 14:43:09.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.996" endtime="20201117 14:43:09.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.992" endtime="20201117 14:43:09.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.627" endtime="20201117 14:43:09.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.187" endtime="20201117 14:43:09.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.186" endtime="20201117 14:43:09.018"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.021" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.030" endtime="20201117 14:43:09.047"></status>
</kw>
<msg timestamp="20201117 14:43:09.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.029" endtime="20201117 14:43:09.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.049" endtime="20201117 14:43:09.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.051" endtime="20201117 14:43:09.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.026" endtime="20201117 14:43:09.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.023" endtime="20201117 14:43:09.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.060" endtime="20201117 14:43:09.345"></status>
</kw>
<msg timestamp="20201117 14:43:09.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023909431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.059" endtime="20201117 14:43:09.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023909431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.349" endtime="20201117 14:43:09.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.358" endtime="20201117 14:43:09.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.056" endtime="20201117 14:43:09.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.055" endtime="20201117 14:43:09.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.364" level="INFO">${RESULT} = [{'time': 0.023980014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.058300000000253e-05, 'source_diff': 7.058300000000253e-05}, {'time': 0.024059028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.361" endtime="20201117 14:43:09.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.378" level="INFO">${ACCURACY} = {'time': [0.023980014, 0.024059028, 0.024135042, 0.024214042, 0.024292056, 0.024372069, 0.024449069, 0.024522083, 0.024599097, 0.024678097, 0.024757125, 0.024837111, 0.024911125, 0.024991139, 0.025070...</msg>
<status status="PASS" starttime="20201117 14:43:09.365" endtime="20201117 14:43:09.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.382" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.381" endtime="20201117 14:43:09.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.385" level="INFO">VALUE: [7.058300000000253e-05, 7.119499999999959e-05, 7.080599999999965e-05, 7.048600000000155e-05, 7.043099999999927e-05, 7.030499999999967e-05, 7.091600000000073e-05, 7.041600000000023e-05, 7.022200000000173e-05, 7.025000000000087e-05, 7.072200000000223e-05, 7.105499999999695e-05, 7.118100000000002e-05, 7.084699999999888e-05, 7.102800000000076e-05, 7.094499999999934e-05, 7.069399999999962e-05, 7.038799999999762e-05, 7.027699999999706e-05, 7.033300000000228e-05, 7.108299999999956e-05, 7.031899999999924e-05, 7.049999999999765e-05, 7.065300000000038e-05, 7.080500000000017e-05, 7.087499999999802e-05, 7.122199999999926e-05, 7.025000000000087e-05, 7.065200000000091e-05, 7.025000000000087e-05, 7.066699999999995e-05, 7.079200000000008e-05, 7.077800000000051e-05, 7.116600000000098e-05, 7.047200000000198e-05, 7.048600000000155e-05, 7.108300000000303e-05, 7.07910000000006e-05, 7.105500000000042e-05, 7.063900000000081e-05, 7.044499999999884e-05, 7.036100000000142e-05, 7.057000000000244e-05, 7.02499999999974e-05, 7.094499999999934e-05, 7.048600000000155e-05, 7.102700000000128e-05, 7.047199999999851e-05, 7.05689999999995e-05, 7.023599999999783e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.383" endtime="20201117 14:43:09.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.379" endtime="20201117 14:43:09.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.388" endtime="20201117 14:43:09.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.391" endtime="20201117 14:43:09.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.390" endtime="20201117 14:43:09.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.386" endtime="20201117 14:43:09.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.021" endtime="20201117 14:43:09.416"></status>
</kw>
<msg timestamp="20201117 14:43:09.416" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.425" endtime="20201117 14:43:09.443"></status>
</kw>
<msg timestamp="20201117 14:43:09.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.424" endtime="20201117 14:43:09.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.445" endtime="20201117 14:43:09.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.447" endtime="20201117 14:43:09.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.420" endtime="20201117 14:43:09.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.418" endtime="20201117 14:43:09.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.456" endtime="20201117 14:43:09.744"></status>
</kw>
<msg timestamp="20201117 14:43:09.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.455" endtime="20201117 14:43:09.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024505931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.748" endtime="20201117 14:43:09.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.757" endtime="20201117 14:43:09.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.452" endtime="20201117 14:43:09.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.450" endtime="20201117 14:43:09.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.763" level="INFO">${RESULT} = [{'time': 0.024505931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.063900000000081e-05, 'source_diff': 7.063900000000081e-05}, {'time': 0.024583986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.760" endtime="20201117 14:43:09.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.777" level="INFO">${ACCURACY} = {'time': [0.024505931, 0.024583986, 0.024657958, 0.024732944, 0.024812958, 0.024891972, 0.024971972, 0.025047986, 0.025126014, 0.025205028, 0.025284042, 0.025364028, 0.025442028, 0.025519042, 0.025598...</msg>
<status status="PASS" starttime="20201117 14:43:09.764" endtime="20201117 14:43:09.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.781" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.780" endtime="20201117 14:43:09.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.784" level="INFO">VALUE: [7.063900000000081e-05, 7.073599999999833e-05, 7.07360000000018e-05, 7.099999999999815e-05, 7.101400000000119e-05, 7.055499999999992e-05, 7.097199999999901e-05, 7.065300000000038e-05, 7.098599999999858e-05, 7.033400000000176e-05, 7.098599999999858e-05, 7.052800000000026e-05, 7.047199999999851e-05, 7.022299999999773e-05, 7.120799999999969e-05, 7.112500000000174e-05, 7.02360000000013e-05, 7.048600000000155e-05, 7.068000000000005e-05, 7.07910000000006e-05, 7.095799999999944e-05, 7.101400000000119e-05, 7.063900000000081e-05, 7.05559999999994e-05, 7.120799999999969e-05, 7.088899999999759e-05, 7.070899999999866e-05, 7.029199999999958e-05, 7.065300000000038e-05, 7.075000000000137e-05, 7.083299999999931e-05, 7.034700000000185e-05, 7.07910000000006e-05, 7.083300000000278e-05, 7.084700000000235e-05, 7.086099999999845e-05, 7.101400000000119e-05, 7.052800000000026e-05, 7.027800000000001e-05, 7.048600000000155e-05, 7.120899999999916e-05, 7.03620000000009e-05, 7.047300000000145e-05, 7.027800000000001e-05, 7.02360000000013e-05, 7.118000000000055e-05, 7.038900000000056e-05, 7.100000000000162e-05, 7.075000000000137e-05, 7.072199999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.782" endtime="20201117 14:43:09.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.778" endtime="20201117 14:43:09.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.787" endtime="20201117 14:43:09.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.791" endtime="20201117 14:43:09.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.789" endtime="20201117 14:43:09.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.785" endtime="20201117 14:43:09.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.417" endtime="20201117 14:43:09.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.019" endtime="20201117 14:43:09.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.019" endtime="20201117 14:43:09.812"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.814" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.822" endtime="20201117 14:43:09.841"></status>
</kw>
<msg timestamp="20201117 14:43:09.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.821" endtime="20201117 14:43:09.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.842" endtime="20201117 14:43:09.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.845" endtime="20201117 14:43:09.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.818" endtime="20201117 14:43:09.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.816" endtime="20201117 14:43:09.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.854" endtime="20201117 14:43:10.140"></status>
</kw>
<msg timestamp="20201117 14:43:10.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.853" endtime="20201117 14:43:10.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.144" endtime="20201117 14:43:10.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.152" endtime="20201117 14:43:10.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.850" endtime="20201117 14:43:10.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.848" endtime="20201117 14:43:10.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.159" level="INFO">${RESULT} = [{'time': 0.023400833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.162499999999877e-05, 'source_diff': 7.162499999999877e-05}, {'time': 0.023481847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.156" endtime="20201117 14:43:10.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.173" level="INFO">${ACCURACY} = {'time': [0.023400833, 0.023481847, 0.023555861, 0.023635861, 0.023713875, 0.023789903, 0.023867889, 0.023942889, 0.024022917, 0.024097917, 0.024175986, 0.024251958, 0.024326944, 0.024400944, 0.024477...</msg>
<status status="PASS" starttime="20201117 14:43:10.160" endtime="20201117 14:43:10.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.178" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.177" endtime="20201117 14:43:10.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.180" level="INFO">VALUE: [7.162499999999877e-05, 7.208300000000056e-05, 7.126400000000144e-05, 7.195800000000044e-05, 7.187499999999902e-05, 7.130600000000015e-05, 7.218100000000102e-05, 7.219499999999712e-05, 7.127800000000101e-05, 7.154200000000083e-05, 7.152800000000126e-05, 7.130500000000067e-05, 7.173599999999933e-05, 7.126300000000196e-05, 7.205500000000142e-05, 7.130500000000067e-05, 7.130500000000067e-05, 7.154200000000083e-05, 7.168100000000052e-05, 7.197200000000001e-05, 7.154200000000083e-05, 7.14170000000007e-05, 7.151399999999822e-05, 7.209799999999961e-05, 7.219499999999712e-05, 7.220900000000016e-05, 7.173599999999933e-05, 7.12629999999985e-05, 7.184699999999988e-05, 7.201399999999872e-05, 7.151399999999822e-05, 7.129200000000058e-05, 7.204199999999786e-05, 7.179200000000108e-05, 7.209699999999666e-05, 7.168100000000052e-05, 7.208400000000004e-05, 7.201399999999872e-05, 7.148599999999908e-05, 7.197299999999948e-05, 7.195800000000044e-05, 7.184699999999988e-05, 7.176400000000194e-05, 7.147199999999951e-05, 7.180600000000065e-05, 7.150000000000212e-05, 7.182000000000022e-05, 7.205599999999743e-05, 7.143100000000027e-05, 7.179200000000108e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.179" endtime="20201117 14:43:10.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.174" endtime="20201117 14:43:10.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.184" endtime="20201117 14:43:10.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.187" endtime="20201117 14:43:10.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.186" endtime="20201117 14:43:10.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.182" endtime="20201117 14:43:10.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.815" endtime="20201117 14:43:10.208"></status>
</kw>
<msg timestamp="20201117 14:43:10.208" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.216" endtime="20201117 14:43:10.235"></status>
</kw>
<msg timestamp="20201117 14:43:10.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.215" endtime="20201117 14:43:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.236" endtime="20201117 14:43:10.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.238" endtime="20201117 14:43:10.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.212" endtime="20201117 14:43:10.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.210" endtime="20201117 14:43:10.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.248" endtime="20201117 14:43:10.533"></status>
</kw>
<msg timestamp="20201117 14:43:10.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.247" endtime="20201117 14:43:10.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.538" endtime="20201117 14:43:10.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.546" endtime="20201117 14:43:10.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.244" endtime="20201117 14:43:10.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.243" endtime="20201117 14:43:10.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.552" level="INFO">${RESULT} = [{'time': 0.020255069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.186099999999945e-05, 'source_diff': 7.186099999999945e-05}, {'time': 0.020333042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.549" endtime="20201117 14:43:10.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.566" level="INFO">${ACCURACY} = {'time': [0.020255069, 0.020333042, 0.020413069, 0.020494069, 0.020572069, 0.020652097, 0.020731097, 0.020808111, 0.020887111, 0.020962153, 0.021039167, 0.021119153, 0.021197139, 0.021272153, 0.021347...</msg>
<status status="PASS" starttime="20201117 14:43:10.553" endtime="20201117 14:43:10.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.571" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.570" endtime="20201117 14:43:10.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.574" level="INFO">VALUE: [7.186099999999945e-05, 7.186099999999945e-05, 7.204099999999838e-05, 7.201299999999924e-05, 7.191599999999826e-05, 7.204100000000185e-05, 7.126400000000144e-05, 7.134699999999938e-05, 7.195800000000044e-05, 7.158399999999954e-05, 7.161100000000267e-05, 7.156999999999997e-05, 7.184699999999988e-05, 7.12499999999984e-05, 7.143100000000027e-05, 7.163899999999834e-05, 7.162499999999877e-05, 7.134700000000285e-05, 7.219400000000112e-05, 7.147199999999951e-05, 7.222200000000026e-05, 7.209700000000013e-05, 7.130600000000015e-05, 7.129200000000058e-05, 7.169400000000062e-05, 7.137499999999852e-05, 7.200000000000262e-05, 7.188899999999859e-05, 7.208400000000004e-05, 7.144499999999984e-05, 7.182000000000022e-05, 7.154100000000135e-05, 7.127699999999806e-05, 7.194400000000087e-05, 7.187499999999902e-05, 7.180500000000117e-05, 7.16109999999992e-05, 7.134699999999938e-05, 7.165300000000138e-05, 7.168099999999705e-05, 7.158300000000006e-05, 7.177800000000151e-05, 7.127800000000101e-05, 7.127700000000153e-05, 7.198699999999905e-05, 7.16109999999992e-05, 7.155500000000092e-05, 7.154100000000135e-05, 7.172199999999976e-05, 7.177799999999804e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.572" endtime="20201117 14:43:10.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.567" endtime="20201117 14:43:10.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.577" endtime="20201117 14:43:10.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.580" endtime="20201117 14:43:10.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.579" endtime="20201117 14:43:10.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.575" endtime="20201117 14:43:10.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.209" endtime="20201117 14:43:10.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.813" endtime="20201117 14:43:10.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.812" endtime="20201117 14:43:10.602"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.604" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.612" endtime="20201117 14:43:10.631"></status>
</kw>
<msg timestamp="20201117 14:43:10.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.611" endtime="20201117 14:43:10.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.632" endtime="20201117 14:43:10.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.635" endtime="20201117 14:43:10.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.608" endtime="20201117 14:43:10.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.606" endtime="20201117 14:43:10.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.644" endtime="20201117 14:43:10.929"></status>
</kw>
<msg timestamp="20201117 14:43:10.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.642" endtime="20201117 14:43:10.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.933" endtime="20201117 14:43:10.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.941" endtime="20201117 14:43:10.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.640" endtime="20201117 14:43:10.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.638" endtime="20201117 14:43:10.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.948" level="INFO">${RESULT} = [{'time': 0.022287694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.227699999999906e-05, 'source_diff': 7.227699999999906e-05}, {'time': 0.022364736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.944" endtime="20201117 14:43:10.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.961" level="INFO">${ACCURACY} = {'time': [0.022287694, 0.022364736, 0.022440708, 0.022519764, 0.022601722, 0.022677736, 0.022756806, 0.02283775, 0.022913764, 0.022994778, 0.023070819, 0.023152792, 0.023231889, 0.023313861, 0.0233888...</msg>
<status status="PASS" starttime="20201117 14:43:10.949" endtime="20201117 14:43:10.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.966" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.965" endtime="20201117 14:43:10.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.969" level="INFO">VALUE: [7.227699999999906e-05, 7.233300000000081e-05, 7.255499999999845e-05, 7.244500000000084e-05, 7.259700000000063e-05, 7.317999999999908e-05, 7.320900000000116e-05, 7.277799999999904e-05, 7.223599999999983e-05, 7.304199999999886e-05, 7.300000000000015e-05, 7.283399999999732e-05, 7.326399999999997e-05, 7.305500000000242e-05, 7.227700000000253e-05, 7.231900000000124e-05, 7.312500000000027e-05, 7.262499999999977e-05, 7.262499999999977e-05, 7.286100000000045e-05, 7.237500000000299e-05, 7.231900000000124e-05, 7.266600000000248e-05, 7.241699999999823e-05, 7.24439999999979e-05, 7.270900000000066e-05, 7.288899999999959e-05, 7.226400000000244e-05, 7.301300000000024e-05, 7.231900000000124e-05, 7.295800000000144e-05, 7.227800000000201e-05, 7.269399999999815e-05, 7.226399999999897e-05, 7.320800000000169e-05, 7.262499999999977e-05, 7.315299999999941e-05, 7.269500000000109e-05, 7.305599999999843e-05, 7.254199999999836e-05, 7.255599999999793e-05, 7.27369999999998e-05, 7.249999999999965e-05, 7.263899999999934e-05, 7.302800000000276e-05, 7.309700000000113e-05, 7.288899999999959e-05, 7.284700000000088e-05, 7.241699999999823e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.967" endtime="20201117 14:43:10.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.962" endtime="20201117 14:43:10.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.972" endtime="20201117 14:43:10.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.975" endtime="20201117 14:43:10.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.974" endtime="20201117 14:43:10.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.970" endtime="20201117 14:43:10.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.605" endtime="20201117 14:43:10.996"></status>
</kw>
<msg timestamp="20201117 14:43:10.996" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.005" endtime="20201117 14:43:11.022"></status>
</kw>
<msg timestamp="20201117 14:43:11.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.003" endtime="20201117 14:43:11.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.024" endtime="20201117 14:43:11.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.026" endtime="20201117 14:43:11.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.000" endtime="20201117 14:43:11.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.998" endtime="20201117 14:43:11.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.036" endtime="20201117 14:43:11.322"></status>
</kw>
<msg timestamp="20201117 14:43:11.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.035" endtime="20201117 14:43:11.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.326" endtime="20201117 14:43:11.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.334" endtime="20201117 14:43:11.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.032" endtime="20201117 14:43:11.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.030" endtime="20201117 14:43:11.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.341" level="INFO">${RESULT} = [{'time': 0.019887903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.251399999999922e-05, 'source_diff': 7.251399999999922e-05}, {'time': 0.019965889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.338" endtime="20201117 14:43:11.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.354" level="INFO">${ACCURACY} = {'time': [0.019887903, 0.019965889, 0.020046903, 0.020123917, 0.020203917, 0.020284931, 0.020366944, 0.020443944, 0.020523972, 0.020599972, 0.020679986, 0.020762014, 0.020841014, 0.020921014, 0.021003...</msg>
<status status="PASS" starttime="20201117 14:43:11.342" endtime="20201117 14:43:11.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.359" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.358" endtime="20201117 14:43:11.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.362" level="INFO">VALUE: [7.251399999999922e-05, 7.24170000000017e-05, 7.25560000000014e-05, 7.237500000000299e-05, 7.24309999999978e-05, 7.248699999999955e-05, 7.2763e-05, 7.236099999999995e-05, 7.29300000000023e-05, 7.273600000000033e-05, 7.244400000000137e-05, 7.233299999999734e-05, 7.318100000000202e-05, 7.276400000000294e-05, 7.227800000000201e-05, 7.262499999999977e-05, 7.281899999999827e-05, 7.268099999999805e-05, 7.231999999999725e-05, 7.300000000000015e-05, 7.231899999999777e-05, 7.30829999999981e-05, 7.22910000000021e-05, 7.302799999999929e-05, 7.237499999999952e-05, 7.25690000000015e-05, 7.280600000000165e-05, 7.309700000000113e-05, 7.240299999999866e-05, 7.295800000000144e-05, 7.222299999999973e-05, 7.255599999999793e-05, 7.227799999999854e-05, 7.301399999999972e-05, 7.263799999999987e-05, 7.277699999999956e-05, 7.315199999999994e-05, 7.26110000000002e-05, 7.28049999999987e-05, 7.245800000000094e-05, 7.270800000000119e-05, 7.309700000000113e-05, 7.247200000000051e-05, 7.265300000000238e-05, 7.313899999999984e-05, 7.290299999999916e-05, 7.305599999999843e-05, 7.309700000000113e-05, 7.237499999999952e-05, 7.279200000000208e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.360" endtime="20201117 14:43:11.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.355" endtime="20201117 14:43:11.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.365" endtime="20201117 14:43:11.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.368" endtime="20201117 14:43:11.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.367" endtime="20201117 14:43:11.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.363" endtime="20201117 14:43:11.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.997" endtime="20201117 14:43:11.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.603" endtime="20201117 14:43:11.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.602" endtime="20201117 14:43:11.389"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.392" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.400" endtime="20201117 14:43:11.419"></status>
</kw>
<msg timestamp="20201117 14:43:11.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.398" endtime="20201117 14:43:11.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.420" endtime="20201117 14:43:11.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.423" endtime="20201117 14:43:11.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.396" endtime="20201117 14:43:11.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.394" endtime="20201117 14:43:11.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.432" endtime="20201117 14:43:11.717"></status>
</kw>
<msg timestamp="20201117 14:43:11.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.430" endtime="20201117 14:43:11.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.721" endtime="20201117 14:43:11.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.730" endtime="20201117 14:43:11.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.428" endtime="20201117 14:43:11.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.426" endtime="20201117 14:43:11.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.737" level="INFO">${RESULT} = [{'time': 0.022892792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.347299999999751e-05, 'source_diff': 7.347299999999751e-05}, {'time': 0.022969792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.733" endtime="20201117 14:43:11.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.751" level="INFO">${ACCURACY} = {'time': [0.022892792, 0.022969792, 0.023047819, 0.023129875, 0.023208861, 0.023289861, 0.023370861, 0.023448847, 0.023525875, 0.023602931, 0.023683875, 0.023760931, 0.023841903, 0.023923917, 0.024003...</msg>
<status status="PASS" starttime="20201117 14:43:11.738" endtime="20201117 14:43:11.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.756" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.755" endtime="20201117 14:43:11.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.758" level="INFO">VALUE: [7.347299999999751e-05, 7.370899999999819e-05, 7.40829999999991e-05, 7.386100000000145e-05, 7.386100000000145e-05, 7.397199999999854e-05, 7.34439999999989e-05, 7.374999999999743e-05, 7.404200000000333e-05, 7.377800000000004e-05, 7.326399999999997e-05, 7.358399999999807e-05, 7.373600000000133e-05, 7.35699999999985e-05, 7.340299999999966e-05, 7.32500000000004e-05, 7.420799999999922e-05, 7.395799999999897e-05, 7.336099999999748e-05, 7.419399999999965e-05, 7.388900000000059e-05, 7.377800000000004e-05, 7.412500000000127e-05, 7.362500000000077e-05, 7.373599999999786e-05, 7.416699999999998e-05, 7.365299999999991e-05, 7.336100000000095e-05, 7.336100000000095e-05, 7.344499999999837e-05, 7.395900000000191e-05, 7.33049999999992e-05, 7.323600000000083e-05, 7.331899999999877e-05, 7.37500000000009e-05, 7.39439999999994e-05, 7.392999999999983e-05, 7.420799999999922e-05, 7.368099999999905e-05, 7.345799999999847e-05, 7.343100000000227e-05, 7.32500000000004e-05, 7.397299999999801e-05, 7.391699999999973e-05, 7.379100000000013e-05, 7.359699999999816e-05, 7.419399999999965e-05, 7.367999999999958e-05, 7.398599999999811e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.757" endtime="20201117 14:43:11.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.752" endtime="20201117 14:43:11.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.762" endtime="20201117 14:43:11.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.765" endtime="20201117 14:43:11.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.763" endtime="20201117 14:43:11.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.760" endtime="20201117 14:43:11.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.392" endtime="20201117 14:43:11.786"></status>
</kw>
<msg timestamp="20201117 14:43:11.786" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.794" endtime="20201117 14:43:11.811"></status>
</kw>
<msg timestamp="20201117 14:43:11.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.793" endtime="20201117 14:43:11.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.813" endtime="20201117 14:43:11.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.815" endtime="20201117 14:43:11.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.790" endtime="20201117 14:43:11.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.788" endtime="20201117 14:43:11.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.825" endtime="20201117 14:43:12.111"></status>
</kw>
<msg timestamp="20201117 14:43:12.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.824" endtime="20201117 14:43:12.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.116" endtime="20201117 14:43:12.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.124" endtime="20201117 14:43:12.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.821" endtime="20201117 14:43:12.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.819" endtime="20201117 14:43:12.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.131" level="INFO">${RESULT} = [{'time': 0.019801222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.345800000000194e-05, 'source_diff': 7.345800000000194e-05}, {'time': 0.019884236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.127" endtime="20201117 14:43:12.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.144" level="INFO">${ACCURACY} = {'time': [0.019801222, 0.019884236, 0.019961236, 0.020044264, 0.020120264, 0.020200264, 0.020283278, 0.020365306, 0.020448333, 0.020526319, 0.020603319, 0.020685333, 0.020766333, 0.020842375, 0.020921...</msg>
<status status="PASS" starttime="20201117 14:43:12.132" endtime="20201117 14:43:12.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.149" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.148" endtime="20201117 14:43:12.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.151" level="INFO">VALUE: [7.345800000000194e-05, 7.377800000000004e-05, 7.331899999999877e-05, 7.336099999999748e-05, 7.349999999999718e-05, 7.331999999999825e-05, 7.327799999999954e-05, 7.381999999999875e-05, 7.379100000000013e-05, 7.402700000000081e-05, 7.33049999999992e-05, 7.333300000000181e-05, 7.350000000000065e-05, 7.354199999999936e-05, 7.387500000000102e-05, 7.368099999999905e-05, 7.398600000000158e-05, 7.386100000000145e-05, 7.347200000000151e-05, 7.380599999999918e-05, 7.348600000000108e-05, 7.380599999999918e-05, 7.329099999999963e-05, 7.336200000000043e-05, 7.365200000000044e-05, 7.405499999999995e-05, 7.384700000000188e-05, 7.376400000000047e-05, 7.323600000000083e-05, 7.402700000000081e-05, 7.330600000000215e-05, 7.361199999999721e-05, 7.35560000000024e-05, 7.402800000000029e-05, 7.390300000000016e-05, 7.41249999999978e-05, 7.39309999999993e-05, 7.331999999999825e-05, 7.40829999999991e-05, 7.344400000000237e-05, 7.384699999999841e-05, 7.359700000000163e-05, 7.329199999999911e-05, 7.315299999999941e-05, 7.402800000000029e-05, 7.341600000000323e-05, 7.405599999999943e-05, 7.34309999999988e-05, 7.42500000000014e-05, 7.379199999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.150" endtime="20201117 14:43:12.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.145" endtime="20201117 14:43:12.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.154" endtime="20201117 14:43:12.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.158" endtime="20201117 14:43:12.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.156" endtime="20201117 14:43:12.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.153" endtime="20201117 14:43:12.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.787" endtime="20201117 14:43:12.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.390" endtime="20201117 14:43:12.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.390" endtime="20201117 14:43:12.179"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.181" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.189" endtime="20201117 14:43:12.207"></status>
</kw>
<msg timestamp="20201117 14:43:12.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.188" endtime="20201117 14:43:12.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.209" endtime="20201117 14:43:12.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.211" endtime="20201117 14:43:12.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.185" endtime="20201117 14:43:12.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.183" endtime="20201117 14:43:12.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.221" endtime="20201117 14:43:12.506"></status>
</kw>
<msg timestamp="20201117 14:43:12.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:12.219" endtime="20201117 14:43:12.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:12.510" endtime="20201117 14:43:12.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.518" endtime="20201117 14:43:12.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.216" endtime="20201117 14:43:12.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.215" endtime="20201117 14:43:12.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.525" level="INFO">${RESULT} = [{'time': 0.022023764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.476400000000147e-05, 'source_diff': 7.476400000000147e-05}, {'time': 0.022105764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.522" endtime="20201117 14:43:12.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.539" level="INFO">${ACCURACY} = {'time': [0.022023764, 0.022105764, 0.022182778, 0.022261778, 0.022343806, 0.022421806, 0.022500806, 0.022581819, 0.022660819, 0.022742847, 0.022825875, 0.022909861, 0.022992861, 0.023073889, 0.023154...</msg>
<status status="PASS" starttime="20201117 14:43:12.526" endtime="20201117 14:43:12.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.543" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.542" endtime="20201117 14:43:12.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.546" level="INFO">VALUE: [7.476400000000147e-05, 7.466700000000048e-05, 7.444499999999937e-05, 7.459699999999916e-05, 7.500000000000215e-05, 7.455599999999993e-05, 7.508400000000304e-05, 7.420799999999922e-05, 7.436099999999848e-05, 7.511099999999923e-05, 7.427800000000054e-05, 7.461099999999873e-05, 7.431899999999977e-05, 7.434699999999891e-05, 7.416699999999998e-05, 7.430600000000315e-05, 7.49310000000003e-05, 7.457000000000297e-05, 7.444499999999937e-05, 7.506900000000052e-05, 7.451400000000122e-05, 7.455500000000045e-05, 7.451400000000122e-05, 7.513899999999837e-05, 7.516699999999751e-05, 7.46249999999983e-05, 7.427800000000054e-05, 7.437500000000152e-05, 7.479200000000061e-05, 7.434700000000238e-05, 7.509799999999914e-05, 7.488900000000159e-05, 7.483399999999932e-05, 7.498699999999858e-05, 7.45699999999995e-05, 7.450000000000165e-05, 7.438899999999762e-05, 7.501400000000172e-05, 7.49029999999977e-05, 7.50830000000001e-05, 7.465299999999744e-05, 7.454200000000036e-05, 7.501399999999825e-05, 7.51249999999988e-05, 7.519500000000012e-05, 7.451400000000122e-05, 7.469400000000015e-05, 7.484699999999941e-05, 7.42500000000014e-05, 7.426400000000097e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.544" endtime="20201117 14:43:12.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.539" endtime="20201117 14:43:12.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.549" endtime="20201117 14:43:12.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.552" endtime="20201117 14:43:12.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.551" endtime="20201117 14:43:12.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.547" endtime="20201117 14:43:12.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.182" endtime="20201117 14:43:12.573"></status>
</kw>
<msg timestamp="20201117 14:43:12.573" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.581" endtime="20201117 14:43:12.599"></status>
</kw>
<msg timestamp="20201117 14:43:12.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.580" endtime="20201117 14:43:12.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.601" endtime="20201117 14:43:12.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.604" endtime="20201117 14:43:12.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.577" endtime="20201117 14:43:12.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.575" endtime="20201117 14:43:12.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.614" endtime="20201117 14:43:12.899"></status>
</kw>
<msg timestamp="20201117 14:43:12.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.612" endtime="20201117 14:43:12.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.904" endtime="20201117 14:43:12.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.912" endtime="20201117 14:43:12.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.610" endtime="20201117 14:43:12.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.608" endtime="20201117 14:43:12.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.919" level="INFO">${RESULT} = [{'time': 0.020328861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.515300000000141e-05, 'source_diff': 7.515300000000141e-05}, {'time': 0.020408875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.915" endtime="20201117 14:43:12.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.932" level="INFO">${ACCURACY} = {'time': [0.020328861, 0.020408875, 0.020487889, 0.020567889, 0.020648917, 0.020729903, 0.020808917, 0.020887944, 0.020969944, 0.021051986, 0.021136, 0.021218958, 0.021299972, 0.021382986, 0.021464, 0...</msg>
<status status="PASS" starttime="20201117 14:43:12.920" endtime="20201117 14:43:12.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.937" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.936" endtime="20201117 14:43:12.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.939" level="INFO">VALUE: [7.515300000000141e-05, 7.45829999999996e-05, 7.50830000000001e-05, 7.481999999999975e-05, 7.465300000000091e-05, 7.46110000000022e-05, 7.508399999999957e-05, 7.502699999999835e-05, 7.493000000000083e-05, 7.448600000000208e-05, 7.51249999999988e-05, 7.495799999999997e-05, 7.49440000000004e-05, 7.447199999999904e-05, 7.463900000000134e-05, 7.434700000000238e-05, 7.51249999999988e-05, 7.441700000000023e-05, 7.44309999999998e-05, 7.513900000000184e-05, 7.448699999999808e-05, 7.511099999999923e-05, 7.463899999999787e-05, 7.516600000000151e-05, 7.497199999999954e-05, 7.473599999999886e-05, 7.454200000000036e-05, 7.427800000000054e-05, 7.448600000000208e-05, 7.432000000000272e-05, 7.473600000000233e-05, 7.522199999999979e-05, 7.516700000000098e-05, 7.487500000000202e-05, 7.473699999999833e-05, 7.4763000000002e-05, 7.499999999999868e-05, 7.517999999999761e-05, 7.452699999999784e-05, 7.507e-05, 7.498600000000258e-05, 7.466699999999701e-05, 7.433299999999934e-05, 7.483400000000279e-05, 7.511099999999923e-05, 7.466700000000048e-05, 7.46379999999984e-05, 7.455599999999993e-05, 7.455500000000045e-05, 7.470799999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.938" endtime="20201117 14:43:12.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.933" endtime="20201117 14:43:12.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.942" endtime="20201117 14:43:12.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.946" endtime="20201117 14:43:12.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.944" endtime="20201117 14:43:12.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.941" endtime="20201117 14:43:12.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.574" endtime="20201117 14:43:12.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.180" endtime="20201117 14:43:12.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.179" endtime="20201117 14:43:12.967"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.969" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.978" endtime="20201117 14:43:12.996"></status>
</kw>
<msg timestamp="20201117 14:43:12.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.976" endtime="20201117 14:43:12.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.998" endtime="20201117 14:43:12.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.000" endtime="20201117 14:43:13.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.973" endtime="20201117 14:43:13.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.971" endtime="20201117 14:43:13.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.010" endtime="20201117 14:43:13.295"></status>
</kw>
<msg timestamp="20201117 14:43:13.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024013389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024088972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.008" endtime="20201117 14:43:13.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024013389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024088972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.299" endtime="20201117 14:43:13.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.307" endtime="20201117 14:43:13.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.005" endtime="20201117 14:43:13.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.004" endtime="20201117 14:43:13.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.314" level="INFO">${RESULT} = [{'time': 0.024088972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55830000000006e-05, 'source_diff': 7.55830000000006e-05}, {'time': 0.024173972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:13.311" endtime="20201117 14:43:13.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.328" level="INFO">${ACCURACY} = {'time': [0.024088972, 0.024173972, 0.024257972, 0.024338014, 0.024422986, 0.024503014, 0.024587028, 0.024670014, 0.024755028, 0.024838042, 0.024921042, 0.025000056, 0.025078097, 0.025160069, 0.025244...</msg>
<status status="PASS" starttime="20201117 14:43:13.315" endtime="20201117 14:43:13.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.333" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.332" endtime="20201117 14:43:13.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.335" level="INFO">VALUE: [7.55830000000006e-05, 7.530499999999773e-05, 7.59579999999975e-05, 7.609700000000066e-05, 7.60830000000011e-05, 7.530600000000068e-05, 7.555600000000093e-05, 7.598600000000011e-05, 7.536099999999948e-05, 7.54310000000008e-05, 7.573599999999986e-05, 7.548699999999908e-05, 7.53050000000012e-05, 7.591599999999879e-05, 7.570800000000072e-05, 7.548599999999961e-05, 7.522199999999979e-05, 7.534699999999991e-05, 7.601400000000272e-05, 7.530600000000068e-05, 7.598600000000011e-05, 7.56249999999993e-05, 7.559700000000016e-05, 7.601399999999925e-05, 7.572299999999976e-05, 7.620799999999775e-05, 7.608299999999762e-05, 7.561099999999973e-05, 7.591599999999879e-05, 7.584700000000041e-05, 7.58890000000026e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.55700000000005e-05, 7.537499999999905e-05, 7.540300000000166e-05, 7.523699999999883e-05, 7.533399999999982e-05, 7.609700000000066e-05, 7.552700000000231e-05, 7.611100000000023e-05, 7.594399999999793e-05, 7.623600000000036e-05, 7.544399999999743e-05, 7.54310000000008e-05, 7.537499999999905e-05, 7.558400000000007e-05, 7.620899999999722e-05, 7.591699999999826e-05, 7.523600000000283e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.334" endtime="20201117 14:43:13.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.329" endtime="20201117 14:43:13.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.338" endtime="20201117 14:43:13.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.342" endtime="20201117 14:43:13.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.340" endtime="20201117 14:43:13.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.337" endtime="20201117 14:43:13.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.970" endtime="20201117 14:43:13.363"></status>
</kw>
<msg timestamp="20201117 14:43:13.363" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.371" endtime="20201117 14:43:13.389"></status>
</kw>
<msg timestamp="20201117 14:43:13.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.370" endtime="20201117 14:43:13.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.391" endtime="20201117 14:43:13.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.393" endtime="20201117 14:43:13.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.367" endtime="20201117 14:43:13.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.365" endtime="20201117 14:43:13.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.403" endtime="20201117 14:43:13.689"></status>
</kw>
<msg timestamp="20201117 14:43:13.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.402" endtime="20201117 14:43:13.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.693" endtime="20201117 14:43:13.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.702" endtime="20201117 14:43:13.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.399" endtime="20201117 14:43:13.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.397" endtime="20201117 14:43:13.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.708" level="INFO">${RESULT} = [{'time': 0.019861722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.580499999999823e-05, 'source_diff': 7.580499999999823e-05}, {'time': 0.019942708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:13.705" endtime="20201117 14:43:13.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.722" level="INFO">${ACCURACY} = {'time': [0.019861722, 0.019942708, 0.020027722, 0.02011075, 0.02019375, 0.020272833, 0.020357764, 0.020436764, 0.020521778, 0.020599806, 0.020678792, 0.020762806, 0.020845903, 0.020927819, 0.02100883...</msg>
<status status="PASS" starttime="20201117 14:43:13.709" endtime="20201117 14:43:13.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.726" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.725" endtime="20201117 14:43:13.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.729" level="INFO">VALUE: [7.580499999999823e-05, 7.61249999999998e-05, 7.554100000000188e-05, 7.545800000000047e-05, 7.551399999999875e-05, 7.611100000000023e-05, 7.583300000000084e-05, 7.530600000000068e-05, 7.529200000000111e-05, 7.569499999999715e-05, 7.594500000000087e-05, 7.595900000000044e-05, 7.559700000000016e-05, 7.616599999999904e-05, 7.61249999999998e-05, 7.569400000000115e-05, 7.533300000000034e-05, 7.53890000000021e-05, 7.547200000000004e-05, 7.559700000000016e-05, 7.5763999999999e-05, 7.556900000000102e-05, 7.598599999999664e-05, 7.574999999999943e-05, 7.52639999999985e-05, 7.53050000000012e-05, 7.536099999999948e-05, 7.552799999999832e-05, 7.55830000000006e-05, 7.551399999999875e-05, 7.524999999999893e-05, 7.579199999999814e-05, 7.540300000000166e-05, 7.604200000000186e-05, 7.608400000000057e-05, 7.590199999999922e-05, 7.583300000000084e-05, 7.601300000000324e-05, 7.613900000000284e-05, 7.572200000000029e-05, 7.561099999999973e-05, 7.619399999999818e-05, 7.534699999999991e-05, 7.530499999999773e-05, 7.545800000000047e-05, 7.584700000000041e-05, 7.584700000000041e-05, 7.552800000000179e-05, 7.554200000000136e-05, 7.620800000000122e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.727" endtime="20201117 14:43:13.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.722" endtime="20201117 14:43:13.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.732" endtime="20201117 14:43:13.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.736" endtime="20201117 14:43:13.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.734" endtime="20201117 14:43:13.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.730" endtime="20201117 14:43:13.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.364" endtime="20201117 14:43:13.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.968" endtime="20201117 14:43:13.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.967" endtime="20201117 14:43:13.757"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.759" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.768" endtime="20201117 14:43:13.786"></status>
</kw>
<msg timestamp="20201117 14:43:13.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.766" endtime="20201117 14:43:13.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.788" endtime="20201117 14:43:13.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.790" endtime="20201117 14:43:13.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.763" endtime="20201117 14:43:13.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.761" endtime="20201117 14:43:13.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.799" endtime="20201117 14:43:14.086"></status>
</kw>
<msg timestamp="20201117 14:43:14.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.798" endtime="20201117 14:43:14.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.090" endtime="20201117 14:43:14.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.098" endtime="20201117 14:43:14.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.795" endtime="20201117 14:43:14.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.793" endtime="20201117 14:43:14.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.105" level="INFO">${RESULT} = [{'time': 0.022237583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.706899999999905e-05, 'source_diff': 7.706899999999905e-05}, {'time': 0.022317583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:14.102" endtime="20201117 14:43:14.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.118" level="INFO">${ACCURACY} = {'time': [0.022237583, 0.022317583, 0.022399597, 0.022481597, 0.022565625, 0.022645625, 0.022725625, 0.022808681, 0.022893653, 0.022974653, 0.023059681, 0.023143694, 0.023223778, 0.023305708, 0.023387...</msg>
<status status="PASS" starttime="20201117 14:43:14.106" endtime="20201117 14:43:14.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.123" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.122" endtime="20201117 14:43:14.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.125" level="INFO">VALUE: [7.706899999999905e-05, 7.719399999999918e-05, 7.641599999999929e-05, 7.712499999999733e-05, 7.716699999999951e-05, 7.677799999999957e-05, 7.623600000000036e-05, 7.64310000000018e-05, 7.719499999999865e-05, 7.636100000000048e-05, 7.673699999999686e-05, 7.676300000000053e-05, 7.682000000000175e-05, 7.683300000000184e-05, 7.68189999999988e-05, 7.679099999999967e-05, 7.688900000000012e-05, 7.700000000000068e-05, 7.64029999999992e-05, 7.63890000000031e-05, 7.655499999999898e-05, 7.668099999999858e-05, 7.670900000000119e-05, 7.654200000000236e-05, 7.716700000000298e-05, 7.65830000000016e-05, 7.670800000000172e-05, 7.727800000000007e-05, 7.69579999999985e-05, 7.709799999999767e-05, 7.704199999999939e-05, 7.673599999999739e-05, 7.71250000000008e-05, 7.673600000000086e-05, 7.654200000000236e-05, 7.669500000000162e-05, 7.641699999999876e-05, 7.654100000000288e-05, 7.713799999999743e-05, 7.654099999999942e-05, 7.688900000000012e-05, 7.704099999999992e-05, 7.709700000000166e-05, 7.679199999999914e-05, 7.688900000000012e-05, 7.65700000000015e-05, 7.718099999999908e-05, 7.688900000000012e-05, 7.627799999999907e-05, 7.650000000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:43:14.124" endtime="20201117 14:43:14.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.119" endtime="20201117 14:43:14.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.129" endtime="20201117 14:43:14.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.132" endtime="20201117 14:43:14.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.131" endtime="20201117 14:43:14.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.127" endtime="20201117 14:43:14.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.760" endtime="20201117 14:43:14.153"></status>
</kw>
<msg timestamp="20201117 14:43:14.153" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.162" endtime="20201117 14:43:14.180"></status>
</kw>
<msg timestamp="20201117 14:43:14.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.160" endtime="20201117 14:43:14.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.182" endtime="20201117 14:43:14.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.184" endtime="20201117 14:43:14.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.157" endtime="20201117 14:43:14.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.155" endtime="20201117 14:43:14.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.194" endtime="20201117 14:43:14.479"></status>
</kw>
<msg timestamp="20201117 14:43:14.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:14.192" endtime="20201117 14:43:14.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:14.483" endtime="20201117 14:43:14.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.492" endtime="20201117 14:43:14.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.190" endtime="20201117 14:43:14.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.188" endtime="20201117 14:43:14.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.498" level="INFO">${RESULT} = [{'time': 0.01988325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.677800000000304e-05, 'source_diff': 7.677800000000304e-05}, {'time': 0.019968319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:14.495" endtime="20201117 14:43:14.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.512" level="INFO">${ACCURACY} = {'time': [0.01988325, 0.019968319, 0.020053278, 0.020139278, 0.020219278, 0.020302292, 0.020384319, 0.020470375, 0.020553319, 0.020633347, 0.020713347, 0.020795389, 0.020875375, 0.020954375, 0.0210343...</msg>
<status status="PASS" starttime="20201117 14:43:14.499" endtime="20201117 14:43:14.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.516" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.515" endtime="20201117 14:43:14.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.519" level="INFO">VALUE: [7.677800000000304e-05, 7.709700000000166e-05, 7.672200000000129e-05, 7.677799999999957e-05, 7.719499999999865e-05, 7.622300000000026e-05, 7.683300000000184e-05, 7.666699999999901e-05, 7.66250000000003e-05, 7.705499999999949e-05, 7.655499999999898e-05, 7.638899999999962e-05, 7.633300000000134e-05, 7.641700000000223e-05, 7.624999999999993e-05, 7.65700000000015e-05, 7.631999999999778e-05, 7.672200000000129e-05, 7.638899999999962e-05, 7.695800000000197e-05, 7.640199999999972e-05, 7.667999999999911e-05, 7.624999999999993e-05, 7.691599999999979e-05, 7.688900000000012e-05, 7.623600000000036e-05, 7.720799999999875e-05, 7.648599999999714e-05, 7.677799999999957e-05, 7.623600000000036e-05, 7.682000000000175e-05, 7.715200000000047e-05, 7.672300000000076e-05, 7.670799999999825e-05, 7.681999999999828e-05, 7.636099999999701e-05, 7.717999999999961e-05, 7.675000000000043e-05, 7.698599999999764e-05, 7.633300000000134e-05, 7.658400000000107e-05, 7.684699999999794e-05, 7.682000000000175e-05, 7.650000000000018e-05, 7.645900000000094e-05, 7.661100000000073e-05, 7.684699999999794e-05, 7.698700000000058e-05, 7.643000000000233e-05, 7.652699999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:43:14.518" endtime="20201117 14:43:14.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.513" endtime="20201117 14:43:14.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.527" endtime="20201117 14:43:14.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.530" endtime="20201117 14:43:14.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.529" endtime="20201117 14:43:14.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.525" endtime="20201117 14:43:14.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.154" endtime="20201117 14:43:14.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.758" endtime="20201117 14:43:14.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.757" endtime="20201117 14:43:14.551"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.554" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.562" endtime="20201117 14:43:14.581"></status>
</kw>
<msg timestamp="20201117 14:43:14.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.560" endtime="20201117 14:43:14.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.583" endtime="20201117 14:43:14.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.586" endtime="20201117 14:43:14.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.558" endtime="20201117 14:43:14.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.556" endtime="20201117 14:43:14.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.595" endtime="20201117 14:43:14.882"></status>
</kw>
<msg timestamp="20201117 14:43:14.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.593" endtime="20201117 14:43:14.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.886" endtime="20201117 14:43:14.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.894" endtime="20201117 14:43:14.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.590" endtime="20201117 14:43:14.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.589" endtime="20201117 14:43:14.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.901" level="INFO">${RESULT} = [{'time': 0.024281611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.813900000000137e-05, 'source_diff': 7.813900000000137e-05}, {'time': 0.024362625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:14.898" endtime="20201117 14:43:14.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.916" level="INFO">${ACCURACY} = {'time': [0.024281611, 0.024362625, 0.024445639, 0.024526639, 0.024611681, 0.024693667, 0.024776667, 0.024860694, 0.024944694, 0.025025708, 0.025110708, 0.02519775, 0.02527975, 0.02536075, 0.025444792...</msg>
<status status="PASS" starttime="20201117 14:43:14.902" endtime="20201117 14:43:14.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.920" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.919" endtime="20201117 14:43:14.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.923" level="INFO">VALUE: [7.813900000000137e-05, 7.802799999999735e-05, 7.763900000000087e-05, 7.723599999999789e-05, 7.747300000000151e-05, 7.79449999999994e-05, 7.733399999999835e-05, 7.787499999999808e-05, 7.806900000000006e-05, 7.802700000000135e-05, 7.768000000000011e-05, 7.731900000000277e-05, 7.761100000000173e-05, 7.795800000000297e-05, 7.791700000000026e-05, 7.797200000000254e-05, 7.7764000000001e-05, 7.809700000000266e-05, 7.793099999999983e-05, 7.773599999999839e-05, 7.783300000000284e-05, 7.804099999999745e-05, 7.77770000000011e-05, 7.72770000000006e-05, 7.820799999999975e-05, 7.820799999999975e-05, 7.750000000000118e-05, 7.819400000000018e-05, 7.791700000000026e-05, 7.773600000000186e-05, 7.780599999999971e-05, 7.816599999999757e-05, 7.783399999999885e-05, 7.79449999999994e-05, 7.801300000000178e-05, 7.742999999999986e-05, 7.736099999999801e-05, 7.784699999999894e-05, 7.761099999999826e-05, 7.776399999999753e-05, 7.811099999999876e-05, 7.79579999999995e-05, 7.755599999999946e-05, 7.769499999999915e-05, 7.818100000000008e-05, 7.791700000000026e-05, 7.818100000000008e-05, 7.729100000000017e-05, 7.80129999999983e-05, 7.794399999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:43:14.921" endtime="20201117 14:43:14.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.916" endtime="20201117 14:43:14.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.926" endtime="20201117 14:43:14.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.930" endtime="20201117 14:43:14.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.928" endtime="20201117 14:43:14.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.925" endtime="20201117 14:43:14.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.554" endtime="20201117 14:43:14.951"></status>
</kw>
<msg timestamp="20201117 14:43:14.951" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.959" endtime="20201117 14:43:14.978"></status>
</kw>
<msg timestamp="20201117 14:43:14.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.958" endtime="20201117 14:43:14.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.979" endtime="20201117 14:43:14.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.982" endtime="20201117 14:43:14.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.955" endtime="20201117 14:43:14.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.953" endtime="20201117 14:43:14.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.992" endtime="20201117 14:43:15.277"></status>
</kw>
<msg timestamp="20201117 14:43:15.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.990" endtime="20201117 14:43:15.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.281" endtime="20201117 14:43:15.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.290" endtime="20201117 14:43:15.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.987" endtime="20201117 14:43:15.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.986" endtime="20201117 14:43:15.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.296" level="INFO">${RESULT} = [{'time': 0.019517903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.019601903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.293" endtime="20201117 14:43:15.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.310" level="INFO">${ACCURACY} = {'time': [0.019517903, 0.019601903, 0.019686903, 0.019769917, 0.019852944, 0.019938931, 0.020025944, 0.020111972, 0.020195958, 0.020282972, 0.020363986, 0.020448014, 0.020529, 0.020614028, 0.020699056...</msg>
<status status="PASS" starttime="20201117 14:43:15.297" endtime="20201117 14:43:15.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.315" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.314" endtime="20201117 14:43:15.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.317" level="INFO">VALUE: [7.723600000000136e-05, 7.80969999999992e-05, 7.798599999999864e-05, 7.782000000000275e-05, 7.742999999999986e-05, 7.802800000000082e-05, 7.748600000000161e-05, 7.773599999999839e-05, 7.76250000000013e-05, 7.777800000000057e-05, 7.725000000000093e-05, 7.791700000000026e-05, 7.79579999999995e-05, 7.798599999999864e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.751400000000075e-05, 7.732000000000225e-05, 7.733400000000182e-05, 7.720800000000222e-05, 7.737500000000105e-05, 7.794399999999993e-05, 7.747200000000204e-05, 7.74440000000029e-05, 7.772199999999882e-05, 7.802800000000082e-05, 7.723600000000136e-05, 7.737499999999758e-05, 7.755599999999946e-05, 7.779200000000014e-05, 7.804200000000039e-05, 7.780500000000024e-05, 7.75969999999987e-05, 7.733299999999887e-05, 7.801399999999778e-05, 7.754100000000042e-05, 7.748600000000161e-05, 7.755499999999999e-05, 7.751400000000075e-05, 7.755599999999946e-05, 7.809799999999867e-05, 7.761100000000173e-05, 7.755599999999946e-05, 7.780499999999677e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.818000000000061e-05, 7.783299999999937e-05, 7.74030000000002e-05, 7.823599999999889e-05]</msg>
<status status="PASS" starttime="20201117 14:43:15.316" endtime="20201117 14:43:15.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.311" endtime="20201117 14:43:15.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.320" endtime="20201117 14:43:15.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.324" endtime="20201117 14:43:15.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.322" endtime="20201117 14:43:15.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.319" endtime="20201117 14:43:15.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.952" endtime="20201117 14:43:15.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.552" endtime="20201117 14:43:15.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.552" endtime="20201117 14:43:15.345"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.348" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.356" endtime="20201117 14:43:15.374"></status>
</kw>
<msg timestamp="20201117 14:43:15.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.354" endtime="20201117 14:43:15.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.376" endtime="20201117 14:43:15.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.379" endtime="20201117 14:43:15.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.352" endtime="20201117 14:43:15.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.350" endtime="20201117 14:43:15.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.388" endtime="20201117 14:43:15.674"></status>
</kw>
<msg timestamp="20201117 14:43:15.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.386" endtime="20201117 14:43:15.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.678" endtime="20201117 14:43:15.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.686" endtime="20201117 14:43:15.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.383" endtime="20201117 14:43:15.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.382" endtime="20201117 14:43:15.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.693" level="INFO">${RESULT} = [{'time': 0.022053653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847199999999957e-05, 'source_diff': 7.847199999999957e-05}, {'time': 0.022138639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.690" endtime="20201117 14:43:15.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.707" level="INFO">${ACCURACY} = {'time': [0.022053653, 0.022138639, 0.022222653, 0.022307667, 0.022392667, 0.022479694, 0.022561694, 0.022646694, 0.022727708, 0.022813722, 0.022897722, 0.022985778, 0.023069764, 0.023157764, 0.023244...</msg>
<status status="PASS" starttime="20201117 14:43:15.694" endtime="20201117 14:43:15.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.711" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.710" endtime="20201117 14:43:15.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.714" level="INFO">VALUE: [7.847199999999957e-05, 7.918100000000108e-05, 7.865299999999797e-05, 7.911099999999976e-05, 7.869500000000015e-05, 7.873600000000286e-05, 7.904100000000192e-05, 7.916599999999857e-05, 7.841599999999782e-05, 7.898600000000311e-05, 7.899999999999921e-05, 7.906999999999706e-05, 7.85969999999997e-05, 7.829200000000064e-05, 7.8458e-05, 7.909800000000314e-05, 7.899999999999921e-05, 7.905600000000096e-05, 7.920800000000075e-05, 7.851300000000228e-05, 7.838899999999815e-05, 7.876399999999853e-05, 7.869499999999668e-05, 7.856900000000056e-05, 7.908299999999716e-05, 7.827800000000107e-05, 7.898599999999964e-05, 7.843099999999686e-05, 7.851399999999828e-05, 7.909799999999967e-05, 7.923599999999989e-05, 7.873699999999886e-05, 7.86519999999985e-05, 7.83190000000003e-05, 7.898599999999964e-05, 7.86250000000023e-05, 7.865299999999797e-05, 7.897200000000007e-05, 7.848599999999914e-05, 7.836200000000196e-05, 7.897200000000007e-05, 7.883300000000037e-05, 7.85129999999988e-05, 7.857000000000003e-05, 7.823699999999836e-05, 7.887499999999908e-05, 7.9151999999999e-05, 7.852699999999838e-05, 7.833299999999987e-05, 7.920799999999728e-05]</msg>
<status status="PASS" starttime="20201117 14:43:15.712" endtime="20201117 14:43:15.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.708" endtime="20201117 14:43:15.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.717" endtime="20201117 14:43:15.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.720" endtime="20201117 14:43:15.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.719" endtime="20201117 14:43:15.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.715" endtime="20201117 14:43:15.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.348" endtime="20201117 14:43:15.741"></status>
</kw>
<msg timestamp="20201117 14:43:15.741" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.750" endtime="20201117 14:43:15.768"></status>
</kw>
<msg timestamp="20201117 14:43:15.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.748" endtime="20201117 14:43:15.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.770" endtime="20201117 14:43:15.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.772" endtime="20201117 14:43:15.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.746" endtime="20201117 14:43:15.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.744" endtime="20201117 14:43:15.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.782" endtime="20201117 14:43:16.068"></status>
</kw>
<msg timestamp="20201117 14:43:16.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.781" endtime="20201117 14:43:16.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.072" endtime="20201117 14:43:16.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.081" endtime="20201117 14:43:16.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.778" endtime="20201117 14:43:16.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.776" endtime="20201117 14:43:16.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.088" level="INFO">${RESULT} = [{'time': 0.019612444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.019699444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.084" endtime="20201117 14:43:16.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.101" level="INFO">${ACCURACY} = {'time': [0.019612444, 0.019699444, 0.019784472, 0.019870472, 0.019955472, 0.020042486, 0.020127486, 0.0202125, 0.020293556, 0.020377528, 0.020460528, 0.020542542, 0.020627556, 0.020711556, 0.02079456...</msg>
<status status="PASS" starttime="20201117 14:43:16.089" endtime="20201117 14:43:16.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.105" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.104" endtime="20201117 14:43:16.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.108" level="INFO">VALUE: [7.861099999999926e-05, 7.848599999999914e-05, 7.919400000000118e-05, 7.916599999999857e-05, 7.909699999999673e-05, 7.897200000000007e-05, 7.822199999999932e-05, 7.918100000000108e-05, 7.855600000000046e-05, 7.882000000000028e-05, 7.852799999999785e-05, 7.831999999999978e-05, 7.904199999999792e-05, 7.888899999999865e-05, 7.85969999999997e-05, 7.883300000000037e-05, 7.908300000000063e-05, 7.879100000000167e-05, 7.824999999999846e-05, 7.865299999999797e-05, 7.886099999999951e-05, 7.831999999999978e-05, 7.874999999999896e-05, 7.829200000000064e-05, 7.825000000000193e-05, 7.827800000000107e-05, 7.916699999999804e-05, 7.837499999999858e-05, 7.855499999999752e-05, 7.855499999999752e-05, 7.82640000000015e-05, 7.898599999999964e-05, 7.822200000000279e-05, 7.859700000000316e-05, 7.898599999999964e-05, 7.874999999999896e-05, 7.82640000000015e-05, 7.825000000000193e-05, 7.854200000000089e-05, 7.905600000000096e-05, 7.877699999999863e-05, 7.82909999999977e-05, 7.880499999999777e-05, 7.888899999999865e-05, 7.869400000000068e-05, 7.880600000000071e-05, 7.838899999999815e-05, 7.830500000000074e-05, 7.883300000000037e-05, 7.882000000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:43:16.107" endtime="20201117 14:43:16.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.102" endtime="20201117 14:43:16.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.111" endtime="20201117 14:43:16.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.114" endtime="20201117 14:43:16.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.113" endtime="20201117 14:43:16.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.109" endtime="20201117 14:43:16.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.742" endtime="20201117 14:43:16.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.346" endtime="20201117 14:43:16.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.346" endtime="20201117 14:43:16.136"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.138" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.146" endtime="20201117 14:43:16.166"></status>
</kw>
<msg timestamp="20201117 14:43:16.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.145" endtime="20201117 14:43:16.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.167" endtime="20201117 14:43:16.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.170" endtime="20201117 14:43:16.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.142" endtime="20201117 14:43:16.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.140" endtime="20201117 14:43:16.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.179" endtime="20201117 14:43:16.465"></status>
</kw>
<msg timestamp="20201117 14:43:16.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02287425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:16.178" endtime="20201117 14:43:16.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02287425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:16.469" endtime="20201117 14:43:16.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.478" endtime="20201117 14:43:16.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.175" endtime="20201117 14:43:16.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.173" endtime="20201117 14:43:16.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.484" level="INFO">${RESULT} = [{'time': 0.02287425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.926399999999903e-05, 'source_diff': 7.926399999999903e-05}, {'time': 0.022959264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:16.481" endtime="20201117 14:43:16.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.499" level="INFO">${ACCURACY} = {'time': [0.02287425, 0.022959264, 0.023045264, 0.023128292, 0.023213278, 0.023302306, 0.023384306, 0.023471333, 0.023555319, 0.023640333, 0.023728347, 0.023817347, 0.023901361, 0.023988375, 0.0240723...</msg>
<status status="PASS" starttime="20201117 14:43:16.485" endtime="20201117 14:43:16.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.503" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.502" endtime="20201117 14:43:16.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.506" level="INFO">VALUE: [7.926399999999903e-05, 7.958300000000113e-05, 7.922200000000032e-05, 7.980600000000171e-05, 7.940299999999872e-05, 7.934799999999992e-05, 7.974999999999996e-05, 7.951399999999928e-05, 7.92770000000026e-05, 7.941599999999882e-05, 8.020800000000175e-05, 8.000000000000021e-05, 7.951399999999928e-05, 8.01389999999999e-05, 7.97779999999991e-05, 7.969499999999768e-05, 7.929200000000164e-05, 7.993099999999836e-05, 7.959800000000017e-05, 7.948699999999961e-05, 7.970799999999778e-05, 7.976300000000006e-05, 7.983300000000138e-05, 7.93190000000013e-05, 8.01389999999999e-05, 8.008299999999816e-05, 7.99450000000014e-05, 7.970800000000125e-05, 8.002799999999935e-05, 7.957000000000103e-05, 8.005599999999849e-05, 7.955499999999852e-05, 7.930600000000121e-05, 7.926399999999903e-05, 7.944400000000143e-05, 7.976399999999953e-05, 7.950000000000318e-05, 7.936100000000001e-05, 8.001399999999978e-05, 7.968100000000158e-05, 7.92770000000026e-05, 7.998600000000064e-05, 7.951399999999928e-05, 7.976399999999953e-05, 7.986100000000051e-05, 7.924999999999946e-05, 7.966599999999907e-05, 7.931899999999784e-05, 7.962499999999983e-05, 7.933400000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:43:16.505" endtime="20201117 14:43:16.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.500" endtime="20201117 14:43:16.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.509" endtime="20201117 14:43:16.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.512" endtime="20201117 14:43:16.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.511" endtime="20201117 14:43:16.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.507" endtime="20201117 14:43:16.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.139" endtime="20201117 14:43:16.533"></status>
</kw>
<msg timestamp="20201117 14:43:16.533" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.542" endtime="20201117 14:43:16.560"></status>
</kw>
<msg timestamp="20201117 14:43:16.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.540" endtime="20201117 14:43:16.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.561" endtime="20201117 14:43:16.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.564" endtime="20201117 14:43:16.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.538" endtime="20201117 14:43:16.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.535" endtime="20201117 14:43:16.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.574" endtime="20201117 14:43:16.860"></status>
</kw>
<msg timestamp="20201117 14:43:16.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.573" endtime="20201117 14:43:16.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.865" endtime="20201117 14:43:16.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.873" endtime="20201117 14:43:16.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.570" endtime="20201117 14:43:16.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.568" endtime="20201117 14:43:16.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.879" level="INFO">${RESULT} = [{'time': 0.019536611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945799999999753e-05, 'source_diff': 7.945799999999753e-05}, {'time': 0.019622625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.876" endtime="20201117 14:43:16.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.893" level="INFO">${ACCURACY} = {'time': [0.019536611, 0.019622625, 0.019707639, 0.019790653, 0.019876667, 0.019959681, 0.020048722, 0.020136694, 0.020222694, 0.020310722, 0.020397722, 0.020484722, 0.020570736, 0.02065475, 0.0207407...</msg>
<status status="PASS" starttime="20201117 14:43:16.880" endtime="20201117 14:43:16.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.897" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.896" endtime="20201117 14:43:16.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.900" level="INFO">VALUE: [7.945799999999753e-05, 7.986100000000051e-05, 7.965299999999897e-05, 7.933399999999688e-05, 7.96389999999994e-05, 7.979199999999867e-05, 7.941600000000229e-05, 7.924999999999946e-05, 8.011100000000076e-05, 7.933300000000088e-05, 7.966599999999907e-05, 7.973600000000039e-05, 7.944399999999796e-05, 7.937499999999958e-05, 7.99169999999988e-05, 7.920800000000075e-05, 7.95840000000006e-05, 8.011100000000076e-05, 8.012500000000033e-05, 7.987500000000008e-05, 7.941600000000229e-05, 7.93190000000013e-05, 8.017999999999914e-05, 7.945799999999753e-05, 7.952800000000232e-05, 7.916700000000151e-05, 7.958300000000113e-05, 7.924999999999946e-05, 7.974999999999996e-05, 7.930500000000174e-05, 7.99589999999975e-05, 8.018099999999861e-05, 7.95970000000007e-05, 7.99719999999976e-05, 7.92770000000026e-05, 7.988899999999965e-05, 7.9764000000003e-05, 7.984700000000094e-05, 7.986100000000051e-05, 7.997200000000107e-05, 7.948600000000014e-05, 7.926399999999903e-05, 7.968100000000158e-05, 8.001400000000325e-05, 8.018099999999861e-05, 7.9458999999997e-05, 7.976399999999953e-05, 7.934700000000044e-05, 7.990299999999922e-05, 7.992999999999889e-05]</msg>
<status status="PASS" starttime="20201117 14:43:16.898" endtime="20201117 14:43:16.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.894" endtime="20201117 14:43:16.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.903" endtime="20201117 14:43:16.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.906" endtime="20201117 14:43:16.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.905" endtime="20201117 14:43:16.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.901" endtime="20201117 14:43:16.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.534" endtime="20201117 14:43:16.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.137" endtime="20201117 14:43:16.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.136" endtime="20201117 14:43:16.927"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.930" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.939" endtime="20201117 14:43:16.957"></status>
</kw>
<msg timestamp="20201117 14:43:16.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.937" endtime="20201117 14:43:16.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.959" endtime="20201117 14:43:16.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.961" endtime="20201117 14:43:16.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.934" endtime="20201117 14:43:16.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.932" endtime="20201117 14:43:16.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.970" endtime="20201117 14:43:17.256"></status>
</kw>
<msg timestamp="20201117 14:43:17.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.969" endtime="20201117 14:43:17.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.260" endtime="20201117 14:43:17.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.268" endtime="20201117 14:43:17.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.966" endtime="20201117 14:43:17.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.964" endtime="20201117 14:43:17.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.275" level="INFO">${RESULT} = [{'time': 0.022827653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069499999999868e-05, 'source_diff': 8.069499999999868e-05}, {'time': 0.022917667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:17.272" endtime="20201117 14:43:17.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.288" level="INFO">${ACCURACY} = {'time': [0.022827653, 0.022917667, 0.023006653, 0.023094681, 0.023178681, 0.023266694, 0.023353708, 0.023440708, 0.023528722, 0.023615792, 0.023705736, 0.023790764, 0.023877764, 0.023966819, 0.024050...</msg>
<status status="PASS" starttime="20201117 14:43:17.276" endtime="20201117 14:43:17.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.293" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.292" endtime="20201117 14:43:17.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.295" level="INFO">VALUE: [8.069499999999868e-05, 8.031999999999831e-05, 8.119499999999918e-05, 8.099999999999774e-05, 8.069499999999868e-05, 8.073600000000139e-05, 8.047200000000157e-05, 8.087500000000108e-05, 8.067999999999964e-05, 8.115300000000047e-05, 8.07780000000001e-05, 8.06109999999978e-05, 8.070799999999878e-05, 8.052700000000038e-05, 8.102800000000035e-05, 8.097200000000207e-05, 8.112500000000133e-05, 8.061199999999727e-05, 8.102700000000088e-05, 8.080499999999977e-05, 8.038900000000015e-05, 8.025000000000046e-05, 8.044399999999896e-05, 8.095799999999903e-05, 8.033300000000188e-05, 8.029200000000264e-05, 8.1152999999997e-05, 8.084800000000142e-05, 8.07369999999974e-05, 8.048600000000114e-05, 8.073599999999792e-05, 8.109699999999873e-05, 8.088900000000065e-05, 8.067999999999964e-05, 8.120800000000275e-05, 8.026400000000003e-05, 8.084699999999848e-05, 8.08329999999989e-05, 8.050000000000071e-05, 8.098600000000164e-05, 8.06109999999978e-05, 8.036200000000049e-05, 8.082000000000228e-05, 8.076300000000106e-05, 8.048600000000114e-05, 8.02779999999996e-05, 8.056900000000256e-05, 8.054199999999942e-05, 8.105600000000296e-05, 8.06390000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:43:17.294" endtime="20201117 14:43:17.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.289" endtime="20201117 14:43:17.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.299" endtime="20201117 14:43:17.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.302" endtime="20201117 14:43:17.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.300" endtime="20201117 14:43:17.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.297" endtime="20201117 14:43:17.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.931" endtime="20201117 14:43:17.323"></status>
</kw>
<msg timestamp="20201117 14:43:17.323" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.332" endtime="20201117 14:43:17.349"></status>
</kw>
<msg timestamp="20201117 14:43:17.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.330" endtime="20201117 14:43:17.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.351" endtime="20201117 14:43:17.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.353" endtime="20201117 14:43:17.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.327" endtime="20201117 14:43:17.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.325" endtime="20201117 14:43:17.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.363" endtime="20201117 14:43:17.650"></status>
</kw>
<msg timestamp="20201117 14:43:17.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:17.361" endtime="20201117 14:43:17.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:17.654" endtime="20201117 14:43:17.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.662" endtime="20201117 14:43:17.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.359" endtime="20201117 14:43:17.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.357" endtime="20201117 14:43:17.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.669" level="INFO">${RESULT} = [{'time': 0.020161778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.07780000000001e-05, 'source_diff': 8.07780000000001e-05}, {'time': 0.020251778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:17.666" endtime="20201117 14:43:17.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.683" level="INFO">${ACCURACY} = {'time': [0.020161778, 0.020251778, 0.020337847, 0.020427806, 0.020513819, 0.020602833, 0.020685833, 0.020768875, 0.020852875, 0.020937875, 0.021021875, 0.021107903, 0.021192889, 0.021281917, 0.021366...</msg>
<status status="PASS" starttime="20201117 14:43:17.670" endtime="20201117 14:43:17.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.688" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.687" endtime="20201117 14:43:17.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.690" level="INFO">VALUE: [8.07780000000001e-05, 8.051400000000028e-05, 8.040299999999972e-05, 8.101400000000078e-05, 8.06520000000005e-05, 8.026400000000003e-05, 8.050000000000071e-05, 8.04169999999993e-05, 8.026400000000003e-05, 8.102800000000035e-05, 8.054199999999942e-05, 8.10840000000021e-05, 8.036100000000101e-05, 8.097300000000154e-05, 8.030599999999874e-05, 8.026400000000003e-05, 8.030499999999927e-05, 8.1152000000001e-05, 8.073600000000139e-05, 8.109699999999873e-05, 8.02909999999997e-05, 8.066699999999954e-05, 8.106899999999959e-05, 8.026400000000003e-05, 8.048600000000114e-05, 8.09719999999986e-05, 8.034799999999745e-05, 8.031999999999831e-05, 8.111200000000124e-05, 8.115199999999753e-05, 8.043000000000286e-05, 8.105600000000296e-05, 8.052799999999985e-05, 8.042999999999939e-05, 8.081899999999934e-05, 8.04719999999981e-05, 8.08329999999989e-05, 8.022199999999785e-05, 8.122299999999832e-05, 8.062500000000083e-05, 8.050000000000071e-05, 8.061100000000126e-05, 8.108299999999916e-05, 8.069399999999921e-05, 8.031899999999884e-05, 8.088900000000065e-05, 8.05970000000017e-05, 8.050000000000071e-05, 8.05840000000016e-05, 8.084800000000142e-05]</msg>
<status status="PASS" starttime="20201117 14:43:17.689" endtime="20201117 14:43:17.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.684" endtime="20201117 14:43:17.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.694" endtime="20201117 14:43:17.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.697" endtime="20201117 14:43:17.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.696" endtime="20201117 14:43:17.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.691" endtime="20201117 14:43:17.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.324" endtime="20201117 14:43:17.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.929" endtime="20201117 14:43:17.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.928" endtime="20201117 14:43:17.718"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.721" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.729" endtime="20201117 14:43:17.748"></status>
</kw>
<msg timestamp="20201117 14:43:17.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.728" endtime="20201117 14:43:17.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.750" endtime="20201117 14:43:17.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.752" endtime="20201117 14:43:17.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.725" endtime="20201117 14:43:17.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.723" endtime="20201117 14:43:17.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.761" endtime="20201117 14:43:18.047"></status>
</kw>
<msg timestamp="20201117 14:43:18.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023350889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.760" endtime="20201117 14:43:18.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023350889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.051" endtime="20201117 14:43:18.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.059" endtime="20201117 14:43:18.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.757" endtime="20201117 14:43:18.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.756" endtime="20201117 14:43:18.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.066" level="INFO">${RESULT} = [{'time': 0.023350889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.13329999999994e-05, 'source_diff': 8.13329999999994e-05}, {'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:18.063" endtime="20201117 14:43:18.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.081" level="INFO">${ACCURACY} = {'time': [0.023350889, 0.023437903, 0.023525917, 0.023615917, 0.023705931, 0.023796958, 0.023883958, 0.023970958, 0.024059972, 0.024151, 0.024240042, 0.024329, 0.024417014, 0.024507042, 0.024592056, 0...</msg>
<status status="PASS" starttime="20201117 14:43:18.067" endtime="20201117 14:43:18.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.085" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.084" endtime="20201117 14:43:18.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.088" level="INFO">VALUE: [8.13329999999994e-05, 8.156999999999956e-05, 8.16109999999988e-05, 8.148599999999867e-05, 8.148699999999814e-05, 8.209699999999973e-05, 8.206900000000059e-05, 8.21109999999993e-05, 8.198599999999917e-05, 8.209699999999973e-05, 8.172299999999882e-05, 8.144399999999996e-05, 8.145799999999953e-05, 8.222299999999932e-05, 8.175000000000196e-05, 8.138899999999769e-05, 8.195900000000297e-05, 8.208300000000016e-05, 8.144399999999996e-05, 8.155499999999705e-05, 8.181900000000034e-05, 8.168000000000064e-05, 8.181900000000034e-05, 8.194399999999699e-05, 8.194400000000046e-05, 8.180600000000024e-05, 8.168100000000011e-05, 8.184799999999895e-05, 8.134800000000192e-05, 8.17910000000012e-05, 8.155500000000052e-05, 8.199999999999874e-05, 8.15269999999979e-05, 8.198599999999917e-05, 8.155599999999999e-05, 8.18329999999999e-05, 8.119399999999971e-05, 8.170799999999978e-05, 8.130599999999974e-05, 8.136099999999855e-05, 8.1458999999999e-05, 8.202799999999788e-05, 8.199999999999874e-05, 8.166600000000107e-05, 8.16109999999988e-05, 8.180500000000077e-05, 8.1458000000003e-05, 8.180600000000024e-05, 8.22369999999989e-05, 8.152799999999738e-05]</msg>
<status status="PASS" starttime="20201117 14:43:18.086" endtime="20201117 14:43:18.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.082" endtime="20201117 14:43:18.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.091" endtime="20201117 14:43:18.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.095" endtime="20201117 14:43:18.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.093" endtime="20201117 14:43:18.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.090" endtime="20201117 14:43:18.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.721" endtime="20201117 14:43:18.115"></status>
</kw>
<msg timestamp="20201117 14:43:18.116" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.124" endtime="20201117 14:43:18.142"></status>
</kw>
<msg timestamp="20201117 14:43:18.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.122" endtime="20201117 14:43:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.144" endtime="20201117 14:43:18.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.146" endtime="20201117 14:43:18.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.120" endtime="20201117 14:43:18.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.118" endtime="20201117 14:43:18.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.156" endtime="20201117 14:43:18.441"></status>
</kw>
<msg timestamp="20201117 14:43:18.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.155" endtime="20201117 14:43:18.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.446" endtime="20201117 14:43:18.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.454" endtime="20201117 14:43:18.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.152" endtime="20201117 14:43:18.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.151" endtime="20201117 14:43:18.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.460" level="INFO">${RESULT} = [{'time': 0.019757403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.16109999999988e-05, 'source_diff': 8.16109999999988e-05}, {'time': 0.019846417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:18.457" endtime="20201117 14:43:18.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.474" level="INFO">${ACCURACY} = {'time': [0.019757403, 0.019846417, 0.019936431, 0.020026486, 0.020117444, 0.020208486, 0.020299458, 0.020386472, 0.020476486, 0.0205675, 0.0206565, 0.020743514, 0.020830528, 0.020919556, 0.021005569,...</msg>
<status status="PASS" starttime="20201117 14:43:18.461" endtime="20201117 14:43:18.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.478" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.477" endtime="20201117 14:43:18.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.481" level="INFO">VALUE: [8.16109999999988e-05, 8.14450000000029e-05, 8.173700000000186e-05, 8.137499999999812e-05, 8.184700000000295e-05, 8.180500000000077e-05, 8.201399999999831e-05, 8.187499999999862e-05, 8.17919999999972e-05, 8.137499999999812e-05, 8.165300000000097e-05, 8.187500000000208e-05, 8.133400000000235e-05, 8.190299999999776e-05, 8.186100000000252e-05, 8.173599999999892e-05, 8.127700000000113e-05, 8.220800000000028e-05, 8.125000000000146e-05, 8.161100000000227e-05, 8.155599999999999e-05, 8.187499999999862e-05, 8.172199999999935e-05, 8.177799999999763e-05, 8.150000000000171e-05, 8.201400000000178e-05, 8.223599999999942e-05, 8.137499999999812e-05, 8.194400000000046e-05, 8.19719999999996e-05, 8.204099999999798e-05, 8.138899999999769e-05, 8.161100000000227e-05, 8.175000000000196e-05, 8.154200000000042e-05, 8.125000000000146e-05, 8.168100000000011e-05, 8.170899999999925e-05, 8.208399999999963e-05, 8.179099999999773e-05, 8.14170000000003e-05, 8.159699999999923e-05, 8.198600000000264e-05, 8.20269999999984e-05, 8.176399999999806e-05, 8.197200000000307e-05, 8.176400000000153e-05, 8.162500000000183e-05, 8.195800000000003e-05, 8.19589999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:43:18.479" endtime="20201117 14:43:18.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.475" endtime="20201117 14:43:18.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.484" endtime="20201117 14:43:18.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.488" endtime="20201117 14:43:18.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.486" endtime="20201117 14:43:18.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.483" endtime="20201117 14:43:18.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.116" endtime="20201117 14:43:18.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.720" endtime="20201117 14:43:18.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.719" endtime="20201117 14:43:18.509"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.511" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.519" endtime="20201117 14:43:18.537"></status>
</kw>
<msg timestamp="20201117 14:43:18.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.518" endtime="20201117 14:43:18.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.539" endtime="20201117 14:43:18.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.541" endtime="20201117 14:43:18.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.515" endtime="20201117 14:43:18.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.513" endtime="20201117 14:43:18.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.550" endtime="20201117 14:43:18.836"></status>
</kw>
<msg timestamp="20201117 14:43:18.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.549" endtime="20201117 14:43:18.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.840" endtime="20201117 14:43:18.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.848" endtime="20201117 14:43:18.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.546" endtime="20201117 14:43:18.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.545" endtime="20201117 14:43:18.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.855" level="INFO">${RESULT} = [{'time': 0.022469833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.290200000000275e-05, 'source_diff': 8.290200000000275e-05}, {'time': 0.022557847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:18.851" endtime="20201117 14:43:18.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.868" level="INFO">${ACCURACY} = {'time': [0.022469833, 0.022557847, 0.022643847, 0.022728861, 0.022819875, 0.022910889, 0.022997903, 0.023085889, 0.023174903, 0.023264931, 0.023356944, 0.023446931, 0.023535014, 0.023620972, 0.023707...</msg>
<status status="PASS" starttime="20201117 14:43:18.856" endtime="20201117 14:43:18.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.873" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.871" endtime="20201117 14:43:18.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.876" level="INFO">VALUE: [8.290200000000275e-05, 8.290299999999876e-05, 8.295800000000103e-05, 8.274999999999949e-05, 8.273599999999992e-05, 8.305600000000149e-05, 8.279200000000167e-05, 8.240299999999826e-05, 8.286100000000005e-05, 8.226399999999856e-05, 8.238800000000268e-05, 8.313899999999944e-05, 8.319500000000118e-05, 8.320800000000128e-05, 8.259700000000023e-05, 8.3152999999999e-05, 8.319399999999824e-05, 8.26520000000025e-05, 8.272200000000035e-05, 8.222199999999985e-05, 8.282000000000081e-05, 8.26390000000024e-05, 8.255600000000099e-05, 8.288899999999919e-05, 8.295800000000103e-05, 8.224999999999899e-05, 8.308300000000116e-05, 8.22919999999977e-05, 8.305599999999802e-05, 8.299999999999974e-05, 8.272200000000035e-05, 8.286100000000005e-05, 8.240299999999826e-05, 8.311199999999977e-05, 8.252800000000185e-05, 8.320899999999729e-05, 8.298600000000017e-05, 8.23330000000004e-05, 8.277700000000263e-05, 8.304200000000192e-05, 8.323600000000042e-05, 8.319400000000171e-05, 8.308299999999769e-05, 8.290299999999876e-05, 8.251399999999881e-05, 8.223599999999942e-05, 8.255500000000152e-05, 8.258300000000066e-05, 8.307000000000106e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201117 14:43:18.874" endtime="20201117 14:43:18.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.869" endtime="20201117 14:43:18.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.879" endtime="20201117 14:43:18.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.882" endtime="20201117 14:43:18.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.881" endtime="20201117 14:43:18.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.877" endtime="20201117 14:43:18.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.512" endtime="20201117 14:43:18.903"></status>
</kw>
<msg timestamp="20201117 14:43:18.903" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.911" endtime="20201117 14:43:18.930"></status>
</kw>
<msg timestamp="20201117 14:43:18.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.910" endtime="20201117 14:43:18.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.931" endtime="20201117 14:43:18.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.934" endtime="20201117 14:43:18.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.907" endtime="20201117 14:43:18.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.905" endtime="20201117 14:43:18.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.944" endtime="20201117 14:43:19.230"></status>
</kw>
<msg timestamp="20201117 14:43:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.942" endtime="20201117 14:43:19.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.234" endtime="20201117 14:43:19.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.242" endtime="20201117 14:43:19.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.940" endtime="20201117 14:43:19.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.938" endtime="20201117 14:43:19.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.248" level="INFO">${RESULT} = [{'time': 0.019487264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.257000000000056e-05, 'source_diff': 8.257000000000056e-05}, {'time': 0.019573264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:19.245" endtime="20201117 14:43:19.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.262" level="INFO">${ACCURACY} = {'time': [0.019487264, 0.019573264, 0.019661278, 0.019748319, 0.019837292, 0.019928306, 0.020019333, 0.020105333, 0.020195333, 0.020284361, 0.020373361, 0.020461389, 0.020547389, 0.020637389, 0.020729...</msg>
<status status="PASS" starttime="20201117 14:43:19.249" endtime="20201117 14:43:19.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.267" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.266" endtime="20201117 14:43:19.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.269" level="INFO">VALUE: [8.257000000000056e-05, 8.248599999999967e-05, 8.259700000000023e-05, 8.279099999999873e-05, 8.284799999999995e-05, 8.302799999999888e-05, 8.231900000000084e-05, 8.29720000000006e-05, 8.265199999999903e-05, 8.270800000000078e-05, 8.292999999999842e-05, 8.308300000000116e-05, 8.29309999999979e-05, 8.3152999999999e-05, 8.288899999999919e-05, 8.249999999999924e-05, 8.234799999999945e-05, 8.231900000000084e-05, 8.231900000000084e-05, 8.236099999999955e-05, 8.302800000000235e-05, 8.284700000000048e-05, 8.294400000000146e-05, 8.323600000000042e-05, 8.236099999999955e-05, 8.262499999999937e-05, 8.230600000000074e-05, 8.275000000000296e-05, 8.290300000000222e-05, 8.251399999999881e-05, 8.299999999999974e-05, 8.265199999999903e-05, 8.318000000000214e-05, 8.288899999999919e-05, 8.290299999999876e-05, 8.254199999999795e-05, 8.274999999999949e-05, 8.280600000000124e-05, 8.283399999999691e-05, 8.236099999999955e-05, 8.294499999999747e-05, 8.266700000000154e-05, 8.283400000000038e-05, 8.292999999999842e-05, 8.258300000000066e-05, 8.302699999999941e-05, 8.277799999999863e-05, 8.256900000000109e-05, 8.254199999999795e-05, 8.273599999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:43:19.268" endtime="20201117 14:43:19.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.263" endtime="20201117 14:43:19.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.272" endtime="20201117 14:43:19.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.276" endtime="20201117 14:43:19.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.274" endtime="20201117 14:43:19.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.271" endtime="20201117 14:43:19.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.904" endtime="20201117 14:43:19.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.510" endtime="20201117 14:43:19.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.509" endtime="20201117 14:43:19.297"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.300" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.308" endtime="20201117 14:43:19.327"></status>
</kw>
<msg timestamp="20201117 14:43:19.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.306" endtime="20201117 14:43:19.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.328" endtime="20201117 14:43:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.331" endtime="20201117 14:43:19.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.304" endtime="20201117 14:43:19.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.302" endtime="20201117 14:43:19.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.340" endtime="20201117 14:43:19.626"></status>
</kw>
<msg timestamp="20201117 14:43:19.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.338" endtime="20201117 14:43:19.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.630" endtime="20201117 14:43:19.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.638" endtime="20201117 14:43:19.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.336" endtime="20201117 14:43:19.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.334" endtime="20201117 14:43:19.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.652" level="INFO">${RESULT} = [{'time': 0.022969167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.383399999999791e-05, 'source_diff': 8.383399999999791e-05}, {'time': 0.023060167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:19.648" endtime="20201117 14:43:19.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.666" level="INFO">${ACCURACY} = {'time': [0.022969167, 0.023060167, 0.023147167, 0.023237181, 0.023324194, 0.023413208, 0.023499208, 0.023588236, 0.023676222, 0.023766236, 0.02385225, 0.023939264, 0.024031264, 0.024122278, 0.0242142...</msg>
<status status="PASS" starttime="20201117 14:43:19.653" endtime="20201117 14:43:19.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.671" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.670" endtime="20201117 14:43:19.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.673" level="INFO">VALUE: [8.383399999999791e-05, 8.340299999999926e-05, 8.354199999999895e-05, 8.394499999999847e-05, 8.324999999999999e-05, 8.390200000000028e-05, 8.342999999999892e-05, 8.33469999999975e-05, 8.401400000000031e-05, 8.362500000000037e-05, 8.344399999999849e-05, 8.330599999999827e-05, 8.377799999999963e-05, 8.391699999999933e-05, 8.354199999999895e-05, 8.415200000000053e-05, 8.395899999999804e-05, 8.324999999999999e-05, 8.377700000000016e-05, 8.324999999999999e-05, 8.416699999999958e-05, 8.327799999999913e-05, 8.390200000000028e-05, 8.384700000000148e-05, 8.402799999999988e-05, 8.366699999999908e-05, 8.337500000000012e-05, 8.354199999999895e-05, 8.419499999999872e-05, 8.331900000000184e-05, 8.32910000000027e-05, 8.413900000000044e-05, 8.401400000000031e-05, 8.32919999999987e-05, 8.420800000000228e-05, 8.413900000000044e-05, 8.387500000000062e-05, 8.354199999999895e-05, 8.402700000000041e-05, 8.35980000000007e-05, 8.40980000000012e-05, 8.338899999999969e-05, 8.366600000000307e-05, 8.372200000000135e-05, 8.354099999999948e-05, 8.34859999999972e-05, 8.369399999999874e-05, 8.327799999999913e-05, 8.327799999999913e-05, 8.422300000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:43:19.672" endtime="20201117 14:43:19.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.667" endtime="20201117 14:43:19.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.677" endtime="20201117 14:43:19.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.680" endtime="20201117 14:43:19.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.678" endtime="20201117 14:43:19.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.675" endtime="20201117 14:43:19.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.300" endtime="20201117 14:43:19.701"></status>
</kw>
<msg timestamp="20201117 14:43:19.701" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.710" endtime="20201117 14:43:19.729"></status>
</kw>
<msg timestamp="20201117 14:43:19.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.709" endtime="20201117 14:43:19.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.731" endtime="20201117 14:43:19.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.733" endtime="20201117 14:43:19.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.706" endtime="20201117 14:43:19.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.703" endtime="20201117 14:43:19.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.743" endtime="20201117 14:43:20.029"></status>
</kw>
<msg timestamp="20201117 14:43:20.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.741" endtime="20201117 14:43:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.033" endtime="20201117 14:43:20.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.042" endtime="20201117 14:43:20.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.739" endtime="20201117 14:43:20.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.737" endtime="20201117 14:43:20.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.048" level="INFO">${RESULT} = [{'time': 0.020889931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.37919999999992e-05, 'source_diff': 8.37919999999992e-05}, {'time': 0.020980958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:20.045" endtime="20201117 14:43:20.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.062" level="INFO">${ACCURACY} = {'time': [0.020889931, 0.020980958, 0.021067958, 0.021153972, 0.021244, 0.021333986, 0.021425014, 0.021518, 0.021611028, 0.021699028, 0.021786028, 0.021874042, 0.021965056, 0.022058069, 0.022145069, 0...</msg>
<status status="PASS" starttime="20201117 14:43:20.049" endtime="20201117 14:43:20.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.066" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.065" endtime="20201117 14:43:20.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.069" level="INFO">VALUE: [8.37919999999992e-05, 8.376400000000006e-05, 8.373600000000092e-05, 8.367999999999917e-05, 8.413900000000044e-05, 8.3846999999998e-05, 8.377799999999963e-05, 8.359699999999776e-05, 8.330600000000174e-05, 8.330599999999827e-05, 8.324999999999999e-05, 8.406999999999859e-05, 8.326399999999956e-05, 8.377700000000016e-05, 8.34720000000011e-05, 8.331899999999837e-05, 8.401400000000031e-05, 8.420799999999881e-05, 8.41110000000013e-05, 8.395799999999856e-05, 8.351399999999981e-05, 8.327799999999913e-05, 8.322199999999738e-05, 8.32919999999987e-05, 8.347300000000057e-05, 8.379099999999973e-05, 8.387500000000062e-05, 8.363899999999994e-05, 8.406899999999912e-05, 8.408300000000216e-05, 8.375000000000049e-05, 8.331999999999784e-05, 8.326399999999956e-05, 8.405600000000249e-05, 8.387499999999715e-05, 8.340300000000272e-05, 8.420899999999829e-05, 8.336200000000002e-05, 8.326300000000009e-05, 8.41110000000013e-05, 8.358400000000113e-05, 8.379099999999973e-05, 8.419400000000271e-05, 8.359699999999776e-05, 8.351399999999981e-05, 8.340299999999926e-05, 8.354199999999895e-05, 8.330600000000174e-05, 8.359799999999723e-05, 8.401400000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:43:20.067" endtime="20201117 14:43:20.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.063" endtime="20201117 14:43:20.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.072" endtime="20201117 14:43:20.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.075" endtime="20201117 14:43:20.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.074" endtime="20201117 14:43:20.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.070" endtime="20201117 14:43:20.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.702" endtime="20201117 14:43:20.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.298" endtime="20201117 14:43:20.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.298" endtime="20201117 14:43:20.097"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.099" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.107" endtime="20201117 14:43:20.126"></status>
</kw>
<msg timestamp="20201117 14:43:20.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.106" endtime="20201117 14:43:20.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.128" endtime="20201117 14:43:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.130" endtime="20201117 14:43:20.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.103" endtime="20201117 14:43:20.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.101" endtime="20201117 14:43:20.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.140" endtime="20201117 14:43:20.426"></status>
</kw>
<msg timestamp="20201117 14:43:20.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:20.138" endtime="20201117 14:43:20.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:20.430" endtime="20201117 14:43:20.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.438" endtime="20201117 14:43:20.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.135" endtime="20201117 14:43:20.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.133" endtime="20201117 14:43:20.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.445" level="INFO">${RESULT} = [{'time': 0.022025236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.448600000000167e-05, 'source_diff': 8.448600000000167e-05}, {'time': 0.022119278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:20.441" endtime="20201117 14:43:20.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.458" level="INFO">${ACCURACY} = {'time': [0.022025236, 0.022119278, 0.022211236, 0.02229925, 0.022389264, 0.022480278, 0.022567278, 0.022659292, 0.022751306, 0.022838319, 0.022927333, 0.023014333, 0.023108347, 0.023199417, 0.0232923...</msg>
<status status="PASS" starttime="20201117 14:43:20.446" endtime="20201117 14:43:20.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.462" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.461" endtime="20201117 14:43:20.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.465" level="INFO">VALUE: [8.448600000000167e-05, 8.508399999999916e-05, 8.442999999999992e-05, 8.444399999999949e-05, 8.441699999999983e-05, 8.516700000000058e-05, 8.426400000000056e-05, 8.426400000000056e-05, 8.436199999999755e-05, 8.468000000000017e-05, 8.509700000000273e-05, 8.440200000000078e-05, 8.46110000000018e-05, 8.499999999999827e-05, 8.480599999999977e-05, 8.444399999999949e-05, 8.423600000000142e-05, 8.481999999999934e-05, 8.450000000000124e-05, 8.42370000000009e-05, 8.437500000000112e-05, 8.46249999999979e-05, 8.437500000000112e-05, 8.508299999999969e-05, 8.452799999999691e-05, 8.450000000000124e-05, 8.426400000000056e-05, 8.499999999999827e-05, 8.470799999999931e-05, 8.490300000000076e-05, 8.452800000000038e-05, 8.518100000000015e-05, 8.459799999999823e-05, 8.508299999999969e-05, 8.493000000000042e-05, 8.456899999999962e-05, 8.451399999999734e-05, 8.487500000000162e-05, 8.476400000000106e-05, 8.472199999999888e-05, 8.494499999999947e-05, 8.456999999999909e-05, 8.501399999999784e-05, 8.494499999999947e-05, 8.504200000000045e-05, 8.433400000000188e-05, 8.450000000000124e-05, 8.473600000000192e-05, 8.490300000000076e-05, 8.504200000000045e-05]</msg>
<status status="PASS" starttime="20201117 14:43:20.463" endtime="20201117 14:43:20.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.459" endtime="20201117 14:43:20.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.468" endtime="20201117 14:43:20.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.471" endtime="20201117 14:43:20.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.470" endtime="20201117 14:43:20.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.466" endtime="20201117 14:43:20.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.099" endtime="20201117 14:43:20.492"></status>
</kw>
<msg timestamp="20201117 14:43:20.492" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.501" endtime="20201117 14:43:20.519"></status>
</kw>
<msg timestamp="20201117 14:43:20.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.499" endtime="20201117 14:43:20.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.521" endtime="20201117 14:43:20.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.524" endtime="20201117 14:43:20.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.497" endtime="20201117 14:43:20.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.494" endtime="20201117 14:43:20.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.534" endtime="20201117 14:43:20.820"></status>
</kw>
<msg timestamp="20201117 14:43:20.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.532" endtime="20201117 14:43:20.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.824" endtime="20201117 14:43:20.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.832" endtime="20201117 14:43:20.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.530" endtime="20201117 14:43:20.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.528" endtime="20201117 14:43:20.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.839" level="INFO">${RESULT} = [{'time': 0.019526319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.495799999999956e-05, 'source_diff': 8.495799999999956e-05}, {'time': 0.01961625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:20.836" endtime="20201117 14:43:20.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.853" level="INFO">${ACCURACY} = {'time': [0.019526319, 0.01961625, 0.019704278, 0.019791278, 0.019884292, 0.019976319, 0.020066319, 0.020158333, 0.020248347, 0.020342333, 0.020433347, 0.020520361, 0.020613375, 0.020703389, 0.0207914...</msg>
<status status="PASS" starttime="20201117 14:43:20.840" endtime="20201117 14:43:20.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.857" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.856" endtime="20201117 14:43:20.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.860" level="INFO">VALUE: [8.495799999999956e-05, 8.487499999999815e-05, 8.520899999999929e-05, 8.451399999999734e-05, 8.433400000000188e-05, 8.477699999999769e-05, 8.506900000000012e-05, 8.493000000000042e-05, 8.491600000000085e-05, 8.481899999999987e-05, 8.469399999999974e-05, 8.468000000000017e-05, 8.47920000000002e-05, 8.441699999999983e-05, 8.426400000000056e-05, 8.462500000000137e-05, 8.463900000000094e-05, 8.47920000000002e-05, 8.487500000000162e-05, 8.43049999999998e-05, 8.441699999999983e-05, 8.469399999999974e-05, 8.451400000000081e-05, 8.46249999999979e-05, 8.506900000000012e-05, 8.44309999999994e-05, 8.473599999999845e-05, 8.504100000000098e-05, 8.49590000000025e-05, 8.452700000000091e-05, 8.451400000000081e-05, 8.437500000000112e-05, 8.502699999999794e-05, 8.436099999999808e-05, 8.504200000000045e-05, 8.43330000000024e-05, 8.466700000000008e-05, 8.422199999999838e-05, 8.502800000000088e-05, 8.495899999999904e-05, 8.495899999999904e-05, 8.451400000000081e-05, 8.47370000000014e-05, 8.44859999999982e-05, 8.462500000000137e-05, 8.440300000000026e-05, 8.448600000000167e-05, 8.491700000000033e-05, 8.501400000000131e-05, 8.431900000000284e-05]</msg>
<status status="PASS" starttime="20201117 14:43:20.858" endtime="20201117 14:43:20.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.854" endtime="20201117 14:43:20.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.863" endtime="20201117 14:43:20.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.866" endtime="20201117 14:43:20.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.865" endtime="20201117 14:43:20.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.861" endtime="20201117 14:43:20.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.493" endtime="20201117 14:43:20.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.098" endtime="20201117 14:43:20.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.097" endtime="20201117 14:43:20.887"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.890" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.898" endtime="20201117 14:43:20.918"></status>
</kw>
<msg timestamp="20201117 14:43:20.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.897" endtime="20201117 14:43:20.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.919" endtime="20201117 14:43:20.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.922" endtime="20201117 14:43:20.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.894" endtime="20201117 14:43:20.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.892" endtime="20201117 14:43:20.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.931" endtime="20201117 14:43:21.217"></status>
</kw>
<msg timestamp="20201117 14:43:21.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024138361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.930" endtime="20201117 14:43:21.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024138361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.221" endtime="20201117 14:43:21.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.229" endtime="20201117 14:43:21.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.927" endtime="20201117 14:43:21.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.925" endtime="20201117 14:43:21.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.236" level="INFO">${RESULT} = [{'time': 0.024138361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.552800000000138e-05, 'source_diff': 8.552800000000138e-05}, {'time': 0.024232444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:21.233" endtime="20201117 14:43:21.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.251" level="INFO">${ACCURACY} = {'time': [0.024138361, 0.024232444, 0.024326375, 0.024421431, 0.024516403, 0.024607472, 0.024701431, 0.024794458, 0.024882458, 0.024973458, 0.025066472, 0.025158486, 0.025247486, 0.0253425, 0.02543252...</msg>
<status status="PASS" starttime="20201117 14:43:21.237" endtime="20201117 14:43:21.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.255" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.254" endtime="20201117 14:43:21.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.258" level="INFO">VALUE: [8.552800000000138e-05, 8.537499999999865e-05, 8.57920000000012e-05, 8.533399999999941e-05, 8.583399999999991e-05, 8.608299999999722e-05, 8.573699999999893e-05, 8.577699999999869e-05, 8.544400000000049e-05, 8.613899999999897e-05, 8.543000000000092e-05, 8.594400000000099e-05, 8.554200000000095e-05, 8.52920000000007e-05, 8.554200000000095e-05, 8.601399999999884e-05, 8.568100000000065e-05, 8.580600000000077e-05, 8.537499999999865e-05, 8.54310000000004e-05, 8.572199999999988e-05, 8.615200000000253e-05, 8.620800000000081e-05, 8.572199999999988e-05, 8.576399999999859e-05, 8.540299999999779e-05, 8.601399999999884e-05, 8.526400000000156e-05, 8.595900000000004e-05, 8.619400000000124e-05, 8.565199999999856e-05, 8.573699999999893e-05, 8.576400000000206e-05, 8.568000000000117e-05, 8.58050000000013e-05, 8.555500000000105e-05, 8.537499999999865e-05, 8.601399999999884e-05, 8.523599999999895e-05, 8.530600000000027e-05, 8.544499999999997e-05, 8.577800000000163e-05, 8.522299999999886e-05, 8.524999999999852e-05, 8.552700000000191e-05, 8.569400000000074e-05, 8.569400000000074e-05, 8.547199999999963e-05, 8.56530000000015e-05, 8.547300000000257e-05]</msg>
<status status="PASS" starttime="20201117 14:43:21.256" endtime="20201117 14:43:21.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.252" endtime="20201117 14:43:21.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.261" endtime="20201117 14:43:21.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.264" endtime="20201117 14:43:21.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.263" endtime="20201117 14:43:21.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.259" endtime="20201117 14:43:21.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.890" endtime="20201117 14:43:21.285"></status>
</kw>
<msg timestamp="20201117 14:43:21.286" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.294" endtime="20201117 14:43:21.311"></status>
</kw>
<msg timestamp="20201117 14:43:21.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.292" endtime="20201117 14:43:21.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.313" endtime="20201117 14:43:21.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.316" endtime="20201117 14:43:21.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.290" endtime="20201117 14:43:21.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.288" endtime="20201117 14:43:21.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.326" endtime="20201117 14:43:21.610"></status>
</kw>
<msg timestamp="20201117 14:43:21.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.324" endtime="20201117 14:43:21.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.614" endtime="20201117 14:43:21.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.623" endtime="20201117 14:43:21.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.321" endtime="20201117 14:43:21.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.320" endtime="20201117 14:43:21.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.629" level="INFO">${RESULT} = [{'time': 0.019933583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.522200000000285e-05, 'source_diff': 8.522200000000285e-05}, {'time': 0.020022597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:21.626" endtime="20201117 14:43:21.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.643" level="INFO">${ACCURACY} = {'time': [0.019933583, 0.020022597, 0.020111611, 0.020204611, 0.020293639, 0.020383639, 0.020478694, 0.020571653, 0.020663681, 0.020756681, 0.020845736, 0.020938694, 0.021029722, 0.021123722, 0.021216...</msg>
<status status="PASS" starttime="20201117 14:43:21.630" endtime="20201117 14:43:21.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.647" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.646" endtime="20201117 14:43:21.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.650" level="INFO">VALUE: [8.522200000000285e-05, 8.604099999999851e-05, 8.620800000000081e-05, 8.550000000000224e-05, 8.620799999999734e-05, 8.554199999999748e-05, 8.58189999999974e-05, 8.526399999999809e-05, 8.595900000000004e-05, 8.568100000000065e-05, 8.552800000000138e-05, 8.590200000000228e-05, 8.590300000000176e-05, 8.58050000000013e-05, 8.544400000000049e-05, 8.559699999999976e-05, 8.615299999999854e-05, 8.568100000000065e-05, 8.525000000000199e-05, 8.586099999999958e-05, 8.577700000000216e-05, 8.56249999999989e-05, 8.536099999999908e-05, 8.538800000000221e-05, 8.5847e-05, 8.574999999999902e-05, 8.54859999999992e-05, 8.526399999999809e-05, 8.570800000000031e-05, 8.520799999999981e-05, 8.584799999999948e-05, 8.615299999999854e-05, 8.52920000000007e-05, 8.594500000000047e-05, 8.568000000000117e-05, 8.53469999999995e-05, 8.579100000000173e-05, 8.555500000000105e-05, 8.533299999999994e-05, 8.573599999999945e-05, 8.619400000000124e-05, 8.52920000000007e-05, 8.568100000000065e-05, 8.522199999999938e-05, 8.568100000000065e-05, 8.552800000000138e-05, 8.531900000000037e-05, 8.595800000000056e-05, 8.536100000000255e-05, 8.543000000000092e-05]</msg>
<status status="PASS" starttime="20201117 14:43:21.648" endtime="20201117 14:43:21.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.644" endtime="20201117 14:43:21.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.653" endtime="20201117 14:43:21.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.657" endtime="20201117 14:43:21.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.655" endtime="20201117 14:43:21.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.651" endtime="20201117 14:43:21.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.286" endtime="20201117 14:43:21.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.888" endtime="20201117 14:43:21.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.888" endtime="20201117 14:43:21.678"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.680" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.689" endtime="20201117 14:43:21.707"></status>
</kw>
<msg timestamp="20201117 14:43:21.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.687" endtime="20201117 14:43:21.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.709" endtime="20201117 14:43:21.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.711" endtime="20201117 14:43:21.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.684" endtime="20201117 14:43:21.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.682" endtime="20201117 14:43:21.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.720" endtime="20201117 14:43:22.009"></status>
</kw>
<msg timestamp="20201117 14:43:22.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.719" endtime="20201117 14:43:22.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.014" endtime="20201117 14:43:22.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.022" endtime="20201117 14:43:22.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.716" endtime="20201117 14:43:22.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.715" endtime="20201117 14:43:22.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.029" level="INFO">${RESULT} = [{'time': 0.022186611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.663899999999947e-05, 'source_diff': 8.663899999999947e-05}, {'time': 0.022279611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:22.025" endtime="20201117 14:43:22.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.042" level="INFO">${ACCURACY} = {'time': [0.022186611, 0.022279611, 0.022368625, 0.022459639, 0.022552653, 0.022646667, 0.022737667, 0.022829681, 0.022923708, 0.023016694, 0.023111708, 0.023204722, 0.023297736, 0.023386819, 0.023475...</msg>
<status status="PASS" starttime="20201117 14:43:22.030" endtime="20201117 14:43:22.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.047" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.046" endtime="20201117 14:43:22.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.049" level="INFO">VALUE: [8.663899999999947e-05, 8.669400000000174e-05, 8.675000000000002e-05, 8.708300000000169e-05, 8.709699999999779e-05, 8.700000000000027e-05, 8.683400000000091e-05, 8.705600000000202e-05, 8.652699999999944e-05, 8.645800000000106e-05, 8.625000000000299e-05, 8.694400000000199e-05, 8.68189999999984e-05, 8.683299999999797e-05, 8.668100000000165e-05, 8.6847000000001e-05, 8.66669999999986e-05, 8.701399999999984e-05, 8.633400000000041e-05, 8.705600000000202e-05, 8.697200000000113e-05, 8.659700000000076e-05, 8.656899999999815e-05, 8.665299999999904e-05, 8.652799999999891e-05, 8.677799999999916e-05, 8.626400000000256e-05, 8.709700000000126e-05, 8.63059999999978e-05, 8.701399999999984e-05, 8.623599999999995e-05, 8.64310000000014e-05, 8.705500000000255e-05, 8.665199999999956e-05, 8.651399999999934e-05, 8.627799999999866e-05, 8.697199999999766e-05, 8.623599999999995e-05, 8.719400000000224e-05, 8.679199999999873e-05, 8.661100000000033e-05, 8.693000000000242e-05, 8.637499999999965e-05, 8.670800000000131e-05, 8.66799999999987e-05, 8.705500000000255e-05, 8.626399999999909e-05, 8.66799999999987e-05, 8.624999999999952e-05, 8.626399999999909e-05]</msg>
<status status="PASS" starttime="20201117 14:43:22.048" endtime="20201117 14:43:22.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.043" endtime="20201117 14:43:22.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.053" endtime="20201117 14:43:22.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.056" endtime="20201117 14:43:22.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.055" endtime="20201117 14:43:22.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.051" endtime="20201117 14:43:22.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.681" endtime="20201117 14:43:22.077"></status>
</kw>
<msg timestamp="20201117 14:43:22.077" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.086" endtime="20201117 14:43:22.104"></status>
</kw>
<msg timestamp="20201117 14:43:22.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.084" endtime="20201117 14:43:22.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.106" endtime="20201117 14:43:22.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.108" endtime="20201117 14:43:22.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.081" endtime="20201117 14:43:22.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.079" endtime="20201117 14:43:22.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.118" endtime="20201117 14:43:22.404"></status>
</kw>
<msg timestamp="20201117 14:43:22.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.117" endtime="20201117 14:43:22.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.408" endtime="20201117 14:43:22.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.416" endtime="20201117 14:43:22.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.114" endtime="20201117 14:43:22.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.112" endtime="20201117 14:43:22.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.423" level="INFO">${RESULT} = [{'time': 0.019803958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.641599999999888e-05, 'source_diff': 8.641599999999888e-05}, {'time': 0.019895958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:22.419" endtime="20201117 14:43:22.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.436" level="INFO">${ACCURACY} = {'time': [0.019803958, 0.019895958, 0.019985986, 0.020081972, 0.020171986, 0.020264014, 0.020353056, 0.020447028, 0.020539028, 0.020630056, 0.020722111, 0.020815069, 0.020904153, 0.020993153, 0.021088...</msg>
<status status="PASS" starttime="20201117 14:43:22.424" endtime="20201117 14:43:22.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.441" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.440" endtime="20201117 14:43:22.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.443" level="INFO">VALUE: [8.641599999999888e-05, 8.658299999999772e-05, 8.675000000000002e-05, 8.676399999999959e-05, 8.624999999999952e-05, 8.64310000000014e-05, 8.670900000000079e-05, 8.676399999999959e-05, 8.708400000000116e-05, 8.67920000000022e-05, 8.71250000000004e-05, 8.670799999999784e-05, 8.67920000000022e-05, 8.682000000000134e-05, 8.704099999999951e-05, 8.633399999999694e-05, 8.651399999999934e-05, 8.684699999999754e-05, 8.645900000000054e-05, 8.6944999999998e-05, 8.713899999999997e-05, 8.675000000000002e-05, 8.705499999999908e-05, 8.670799999999784e-05, 8.691599999999938e-05, 8.637499999999965e-05, 8.633300000000094e-05, 8.649999999999977e-05, 8.697200000000113e-05, 8.712499999999693e-05, 8.627800000000213e-05, 8.633400000000041e-05, 8.686100000000058e-05, 8.677800000000263e-05, 8.66119999999998e-05, 8.704099999999951e-05, 8.652799999999891e-05, 8.668000000000217e-05, 8.701399999999984e-05, 8.697199999999766e-05, 8.670800000000131e-05, 8.701399999999984e-05, 8.64860000000002e-05, 8.654200000000195e-05, 8.673600000000045e-05, 8.66249999999999e-05, 8.69730000000006e-05, 8.661100000000033e-05, 8.636100000000008e-05, 8.715299999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:43:22.442" endtime="20201117 14:43:22.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.437" endtime="20201117 14:43:22.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.447" endtime="20201117 14:43:22.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.450" endtime="20201117 14:43:22.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.448" endtime="20201117 14:43:22.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.445" endtime="20201117 14:43:22.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.078" endtime="20201117 14:43:22.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.679" endtime="20201117 14:43:22.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.678" endtime="20201117 14:43:22.471"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.474" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.482" endtime="20201117 14:43:22.502"></status>
</kw>
<msg timestamp="20201117 14:43:22.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.480" endtime="20201117 14:43:22.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.503" endtime="20201117 14:43:22.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.506" endtime="20201117 14:43:22.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.478" endtime="20201117 14:43:22.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.476" endtime="20201117 14:43:22.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.515" endtime="20201117 14:43:22.803"></status>
</kw>
<msg timestamp="20201117 14:43:22.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.513" endtime="20201117 14:43:22.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.808" endtime="20201117 14:43:22.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.816" endtime="20201117 14:43:22.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.511" endtime="20201117 14:43:22.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.509" endtime="20201117 14:43:22.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.822" level="INFO">${RESULT} = [{'time': 0.023183819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.801300000000137e-05, 'source_diff': 8.801300000000137e-05}, {'time': 0.023275903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:22.819" endtime="20201117 14:43:22.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.837" level="INFO">${ACCURACY} = {'time': [0.023183819, 0.023275903, 0.023371847, 0.023464847, 0.023554861, 0.023647861, 0.023744875, 0.023839931, 0.023933917, 0.024030903, 0.024124917, 0.024217972, 0.024311958, 0.024405944, 0.024501...</msg>
<status status="PASS" starttime="20201117 14:43:22.823" endtime="20201117 14:43:22.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.842" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.841" endtime="20201117 14:43:22.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.845" level="INFO">VALUE: [8.801300000000137e-05, 8.793099999999943e-05, 8.805500000000008e-05, 8.806899999999965e-05, 8.751400000000034e-05, 8.754199999999948e-05, 8.754199999999948e-05, 8.748700000000068e-05, 8.772299999999789e-05, 8.808399999999869e-05, 8.737500000000065e-05, 8.792999999999995e-05, 8.772200000000188e-05, 8.722199999999791e-05, 8.754100000000001e-05, 8.813900000000097e-05, 8.745799999999859e-05, 8.81800000000002e-05, 8.793099999999943e-05, 8.743099999999893e-05, 8.743099999999893e-05, 8.777800000000016e-05, 8.741699999999936e-05, 8.722300000000086e-05, 8.751400000000034e-05, 8.74999999999973e-05, 8.776399999999712e-05, 8.816600000000063e-05, 8.797200000000213e-05, 8.819399999999977e-05, 8.772199999999841e-05, 8.78059999999993e-05, 8.752699999999697e-05, 8.768099999999918e-05, 8.725000000000052e-05, 8.731999999999837e-05, 8.791600000000038e-05, 8.729099999999976e-05, 8.768000000000317e-05, 8.779199999999973e-05, 8.79860000000017e-05, 8.765200000000056e-05, 8.772199999999841e-05, 8.818099999999968e-05, 8.727799999999966e-05, 8.745900000000154e-05, 8.751400000000034e-05, 8.804100000000051e-05, 8.766600000000013e-05, 8.726400000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:43:22.843" endtime="20201117 14:43:22.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.838" endtime="20201117 14:43:22.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.848" endtime="20201117 14:43:22.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.851" endtime="20201117 14:43:22.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.850" endtime="20201117 14:43:22.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.846" endtime="20201117 14:43:22.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.474" endtime="20201117 14:43:22.872"></status>
</kw>
<msg timestamp="20201117 14:43:22.872" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.880" endtime="20201117 14:43:22.899"></status>
</kw>
<msg timestamp="20201117 14:43:22.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.879" endtime="20201117 14:43:22.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.900" endtime="20201117 14:43:22.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.903" endtime="20201117 14:43:22.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.876" endtime="20201117 14:43:22.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.874" endtime="20201117 14:43:22.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.913" endtime="20201117 14:43:23.199"></status>
</kw>
<msg timestamp="20201117 14:43:23.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.911" endtime="20201117 14:43:23.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.203" endtime="20201117 14:43:23.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.211" endtime="20201117 14:43:23.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.909" endtime="20201117 14:43:23.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.907" endtime="20201117 14:43:23.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.218" level="INFO">${RESULT} = [{'time': 0.019741097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.820799999999934e-05, 'source_diff': 8.820799999999934e-05}, {'time': 0.019833097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:23.215" endtime="20201117 14:43:23.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.231" level="INFO">${ACCURACY} = {'time': [0.019741097, 0.019833097, 0.019924111, 0.020017125, 0.020112139, 0.020204139, 0.020297181, 0.020388153, 0.020484208, 0.020581181, 0.020678208, 0.020775194, 0.020869236, 0.020959222, 0.021055...</msg>
<status status="PASS" starttime="20201117 14:43:23.219" endtime="20201117 14:43:23.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.236" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.235" endtime="20201117 14:43:23.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.239" level="INFO">VALUE: [8.820799999999934e-05, 8.806899999999965e-05, 8.804199999999998e-05, 8.743099999999893e-05, 8.793099999999943e-05, 8.801400000000084e-05, 8.745900000000154e-05, 8.777800000000016e-05, 8.770799999999884e-05, 8.736200000000055e-05, 8.754100000000001e-05, 8.727700000000019e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.77920000000032e-05, 8.747199999999816e-05, 8.73059999999988e-05, 8.787499999999768e-05, 8.808400000000216e-05, 8.783399999999844e-05, 8.78059999999993e-05, 8.801400000000084e-05, 8.774999999999755e-05, 8.722200000000138e-05, 8.78189999999994e-05, 8.812499999999793e-05, 8.797199999999866e-05, 8.81670000000001e-05, 8.738900000000022e-05, 8.76669999999996e-05, 8.797199999999866e-05, 8.725000000000052e-05, 8.788900000000072e-05, 8.772300000000136e-05, 8.779100000000026e-05, 8.806999999999912e-05, 8.730499999999933e-05, 8.745800000000206e-05, 8.801400000000084e-05, 8.741699999999936e-05, 8.758299999999872e-05, 8.781999999999887e-05, 8.808400000000216e-05, 8.78059999999993e-05, 8.798700000000118e-05, 8.733299999999847e-05, 8.759700000000176e-05, 8.809699999999879e-05, 8.731900000000237e-05, 8.801400000000084e-05]</msg>
<status status="PASS" starttime="20201117 14:43:23.237" endtime="20201117 14:43:23.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.233" endtime="20201117 14:43:23.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.242" endtime="20201117 14:43:23.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.245" endtime="20201117 14:43:23.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.244" endtime="20201117 14:43:23.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.240" endtime="20201117 14:43:23.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.873" endtime="20201117 14:43:23.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.472" endtime="20201117 14:43:23.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.472" endtime="20201117 14:43:23.267"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.269" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.277" endtime="20201117 14:43:23.296"></status>
</kw>
<msg timestamp="20201117 14:43:23.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.276" endtime="20201117 14:43:23.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.297" endtime="20201117 14:43:23.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.300" endtime="20201117 14:43:23.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.273" endtime="20201117 14:43:23.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.271" endtime="20201117 14:43:23.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.309" endtime="20201117 14:43:23.594"></status>
</kw>
<msg timestamp="20201117 14:43:23.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.307" endtime="20201117 14:43:23.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.598" endtime="20201117 14:43:23.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.606" endtime="20201117 14:43:23.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.305" endtime="20201117 14:43:23.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.303" endtime="20201117 14:43:23.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.613" level="INFO">${RESULT} = [{'time': 0.022043556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.826399999999762e-05, 'source_diff': 8.826399999999762e-05}, {'time': 0.022141542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:23.610" endtime="20201117 14:43:23.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.626" level="INFO">${ACCURACY} = {'time': [0.022043556, 0.022141542, 0.022236597, 0.022329569, 0.022424583, 0.022517583, 0.022609625, 0.022707611, 0.022799625, 0.022897639, 0.022989639, 0.023085667, 0.023177667, 0.023272681, 0.023367...</msg>
<status status="PASS" starttime="20201117 14:43:23.614" endtime="20201117 14:43:23.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.631" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.630" endtime="20201117 14:43:23.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.634" level="INFO">VALUE: [8.826399999999762e-05, 8.884799999999901e-05, 8.922199999999991e-05, 8.830500000000033e-05, 8.91800000000012e-05, 8.908300000000022e-05, 8.858299999999972e-05, 8.861099999999886e-05, 8.852800000000091e-05, 8.883299999999997e-05, 8.83059999999998e-05, 8.876400000000159e-05, 8.904199999999751e-05, 8.911199999999883e-05, 8.886200000000205e-05, 8.908300000000022e-05, 8.851399999999787e-05, 8.83189999999999e-05, 8.874999999999855e-05, 8.836099999999861e-05, 8.879199999999726e-05, 8.8638999999998e-05, 8.854200000000048e-05, 8.916699999999764e-05, 8.862499999999843e-05, 8.848700000000168e-05, 8.90129999999989e-05, 8.830500000000033e-05, 8.825000000000152e-05, 8.840300000000079e-05, 8.847199999999916e-05, 8.838900000000122e-05, 8.900000000000227e-05, 8.826399999999762e-05, 8.888899999999825e-05, 8.837499999999818e-05, 8.879200000000073e-05, 8.836200000000155e-05, 8.841600000000088e-05, 8.905500000000108e-05, 8.890300000000129e-05, 8.844400000000002e-05, 8.858299999999972e-05, 8.912499999999893e-05, 8.907000000000012e-05, 8.909799999999926e-05, 8.912499999999893e-05, 8.879199999999726e-05, 8.852700000000144e-05, 8.81800000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:43:23.632" endtime="20201117 14:43:23.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.627" endtime="20201117 14:43:23.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.637" endtime="20201117 14:43:23.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.640" endtime="20201117 14:43:23.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.639" endtime="20201117 14:43:23.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.635" endtime="20201117 14:43:23.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.269" endtime="20201117 14:43:23.661"></status>
</kw>
<msg timestamp="20201117 14:43:23.661" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.669" endtime="20201117 14:43:23.689"></status>
</kw>
<msg timestamp="20201117 14:43:23.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.668" endtime="20201117 14:43:23.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.691" endtime="20201117 14:43:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.694" endtime="20201117 14:43:23.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.665" endtime="20201117 14:43:23.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.663" endtime="20201117 14:43:23.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.703" endtime="20201117 14:43:23.990"></status>
</kw>
<msg timestamp="20201117 14:43:23.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.702" endtime="20201117 14:43:23.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.994" endtime="20201117 14:43:24.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.003" endtime="20201117 14:43:24.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.699" endtime="20201117 14:43:24.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.698" endtime="20201117 14:43:24.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.010" level="INFO">${RESULT} = [{'time': 0.020495486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.836099999999861e-05, 'source_diff': 8.836099999999861e-05}, {'time': 0.020587486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:24.006" endtime="20201117 14:43:24.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.023" level="INFO">${ACCURACY} = {'time': [0.020495486, 0.020587486, 0.020684514, 0.020775514, 0.020872542, 0.020963542, 0.021060542, 0.021153569, 0.021247583, 0.021338583, 0.021433597, 0.021530611, 0.021623611, 0.021715625, 0.021807...</msg>
<status status="PASS" starttime="20201117 14:43:24.011" endtime="20201117 14:43:24.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.028" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.027" endtime="20201117 14:43:24.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.030" level="INFO">VALUE: [8.836099999999861e-05, 8.845799999999959e-05, 8.831999999999937e-05, 8.84449999999995e-05, 8.898599999999923e-05, 8.868100000000018e-05, 8.823600000000195e-05, 8.909699999999979e-05, 8.915200000000206e-05, 8.86800000000007e-05, 8.887499999999868e-05, 8.843000000000045e-05, 8.877800000000116e-05, 8.829200000000023e-05, 8.879200000000073e-05, 8.836099999999861e-05, 8.870799999999984e-05, 8.8638999999998e-05, 8.825000000000152e-05, 8.884799999999901e-05, 8.873599999999898e-05, 8.901399999999837e-05, 8.886099999999911e-05, 8.83189999999999e-05, 8.826400000000109e-05, 8.918100000000068e-05, 8.861099999999886e-05, 8.893100000000043e-05, 8.874999999999855e-05, 8.886199999999858e-05, 8.863900000000147e-05, 8.866600000000113e-05, 8.843000000000045e-05, 8.852700000000144e-05, 8.883299999999997e-05, 8.840299999999732e-05, 8.887499999999868e-05, 8.872200000000288e-05, 8.836100000000208e-05, 8.868100000000018e-05, 8.901400000000184e-05, 8.890299999999782e-05, 8.865300000000104e-05, 8.886100000000258e-05, 8.865300000000104e-05, 8.858299999999972e-05, 8.875000000000202e-05, 8.879200000000073e-05, 8.873599999999898e-05, 8.883299999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:43:24.029" endtime="20201117 14:43:24.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.024" endtime="20201117 14:43:24.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.033" endtime="20201117 14:43:24.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.037" endtime="20201117 14:43:24.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.035" endtime="20201117 14:43:24.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.031" endtime="20201117 14:43:24.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.662" endtime="20201117 14:43:24.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.268" endtime="20201117 14:43:24.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.267" endtime="20201117 14:43:24.058"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.060" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.068" endtime="20201117 14:43:24.088"></status>
</kw>
<msg timestamp="20201117 14:43:24.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.067" endtime="20201117 14:43:24.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.089" endtime="20201117 14:43:24.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.092" endtime="20201117 14:43:24.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.064" endtime="20201117 14:43:24.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.062" endtime="20201117 14:43:24.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.101" endtime="20201117 14:43:24.386"></status>
</kw>
<msg timestamp="20201117 14:43:24.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.100" endtime="20201117 14:43:24.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.390" endtime="20201117 14:43:24.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.398" endtime="20201117 14:43:24.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.097" endtime="20201117 14:43:24.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.095" endtime="20201117 14:43:24.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.405" level="INFO">${RESULT} = [{'time': 0.022903319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.96939999999978e-05, 'source_diff': 8.96939999999978e-05}, {'time': 0.022997319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:24.401" endtime="20201117 14:43:24.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.419" level="INFO">${ACCURACY} = {'time': [0.022903319, 0.022997319, 0.023092333, 0.023185347, 0.023278347, 0.023376375, 0.023474375, 0.023569375, 0.023665403, 0.023762403, 0.023861417, 0.023953417, 0.024051431, 0.024150444, 0.024249...</msg>
<status status="PASS" starttime="20201117 14:43:24.406" endtime="20201117 14:43:24.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.424" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.423" endtime="20201117 14:43:24.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.426" level="INFO">VALUE: [8.96939999999978e-05, 8.977699999999922e-05, 8.990199999999934e-05, 8.995799999999762e-05, 8.930500000000133e-05, 8.950000000000277e-05, 9.004199999999851e-05, 9.012499999999993e-05, 8.995900000000057e-05, 8.945900000000007e-05, 9.001399999999937e-05, 8.948599999999973e-05, 8.979200000000173e-05, 9.008300000000122e-05, 8.930500000000133e-05, 9.01939999999983e-05, 8.977800000000216e-05, 9.016699999999864e-05, 8.923599999999948e-05, 8.93060000000008e-05, 8.99999999999998e-05, 8.984800000000001e-05, 9.009800000000026e-05, 8.980499999999836e-05, 9.004099999999904e-05, 8.923599999999948e-05, 8.936099999999961e-05, 8.947200000000016e-05, 8.987499999999968e-05, 9.008299999999775e-05, 8.952800000000191e-05, 9.002799999999894e-05, 8.995900000000057e-05, 8.923599999999948e-05, 8.933399999999994e-05, 8.980499999999836e-05, 9.002699999999947e-05, 9.011100000000036e-05, 8.954100000000201e-05, 9.002799999999894e-05, 8.950000000000277e-05, 8.929199999999776e-05, 8.968099999999771e-05, 8.977799999999869e-05, 8.99999999999998e-05, 8.968100000000118e-05, 8.943100000000093e-05, 8.945800000000059e-05, 8.973599999999998e-05, 8.961099999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:43:24.425" endtime="20201117 14:43:24.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.420" endtime="20201117 14:43:24.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.429" endtime="20201117 14:43:24.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.433" endtime="20201117 14:43:24.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.431" endtime="20201117 14:43:24.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.428" endtime="20201117 14:43:24.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.061" endtime="20201117 14:43:24.454"></status>
</kw>
<msg timestamp="20201117 14:43:24.454" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.462" endtime="20201117 14:43:24.481"></status>
</kw>
<msg timestamp="20201117 14:43:24.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.461" endtime="20201117 14:43:24.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.482" endtime="20201117 14:43:24.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.486" endtime="20201117 14:43:24.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.458" endtime="20201117 14:43:24.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.456" endtime="20201117 14:43:24.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.496" endtime="20201117 14:43:24.782"></status>
</kw>
<msg timestamp="20201117 14:43:24.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:24.494" endtime="20201117 14:43:24.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:24.787" endtime="20201117 14:43:24.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.795" endtime="20201117 14:43:24.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.491" endtime="20201117 14:43:24.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.490" endtime="20201117 14:43:24.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.802" level="INFO">${RESULT} = [{'time': 0.0195395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.929200000000123e-05, 'source_diff': 8.929200000000123e-05}, {'time': 0.019631514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:24.798" endtime="20201117 14:43:24.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.815" level="INFO">${ACCURACY} = {'time': [0.0195395, 0.019631514, 0.019726528, 0.019824528, 0.019923569, 0.020018556, 0.020114583, 0.020208597, 0.020301597, 0.020396597, 0.020493611, 0.020590625, 0.020684681, 0.020783653, 0.02088065...</msg>
<status status="PASS" starttime="20201117 14:43:24.803" endtime="20201117 14:43:24.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.819" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.818" endtime="20201117 14:43:24.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.822" level="INFO">VALUE: [8.929200000000123e-05, 8.94450000000005e-05, 8.96670000000016e-05, 8.925000000000252e-05, 8.979099999999879e-05, 8.987499999999968e-05, 8.924999999999905e-05, 9.002799999999894e-05, 8.93190000000009e-05, 8.958299999999725e-05, 8.926399999999862e-05, 8.941700000000136e-05, 8.937499999999918e-05, 8.958400000000019e-05, 8.991699999999839e-05, 8.933399999999994e-05, 9.004199999999851e-05, 8.952799999999844e-05, 8.940199999999884e-05, 8.929100000000176e-05, 8.976400000000259e-05, 9.005499999999861e-05, 8.952800000000191e-05, 8.927800000000166e-05, 8.995900000000057e-05, 8.951399999999887e-05, 8.979199999999826e-05, 8.98060000000013e-05, 9.008400000000069e-05, 8.970800000000084e-05, 8.94999999999993e-05, 8.986100000000011e-05, 8.944399999999755e-05, 8.981899999999793e-05, 8.966699999999814e-05, 9.001399999999937e-05, 9.015299999999907e-05, 8.934700000000004e-05, 8.926399999999862e-05, 8.986100000000011e-05, 8.948599999999973e-05, 8.956900000000115e-05, 8.955600000000105e-05, 8.976399999999912e-05, 8.984700000000054e-05, 8.979199999999826e-05, 8.943099999999746e-05, 8.98060000000013e-05, 9.012499999999993e-05, 8.972200000000041e-05]</msg>
<status status="PASS" starttime="20201117 14:43:24.821" endtime="20201117 14:43:24.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.816" endtime="20201117 14:43:24.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.825" endtime="20201117 14:43:24.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.829" endtime="20201117 14:43:24.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.827" endtime="20201117 14:43:24.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.823" endtime="20201117 14:43:24.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.455" endtime="20201117 14:43:24.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.059" endtime="20201117 14:43:24.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.058" endtime="20201117 14:43:24.850"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.852" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.865" endtime="20201117 14:43:24.885"></status>
</kw>
<msg timestamp="20201117 14:43:24.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.864" endtime="20201117 14:43:24.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.887" endtime="20201117 14:43:24.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.889" endtime="20201117 14:43:24.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.856" endtime="20201117 14:43:24.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.854" endtime="20201117 14:43:24.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.898" endtime="20201117 14:43:25.184"></status>
</kw>
<msg timestamp="20201117 14:43:25.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027674583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02776575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:24.897" endtime="20201117 14:43:25.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027674583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02776575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:25.188" endtime="20201117 14:43:25.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.196" endtime="20201117 14:43:25.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.894" endtime="20201117 14:43:25.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.892" endtime="20201117 14:43:25.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.203" level="INFO">${RESULT} = [{'time': 0.02776575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.116699999999964e-05, 'source_diff': 9.116699999999964e-05}, {'time': 0.027860764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:25.200" endtime="20201117 14:43:25.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.216" level="INFO">${ACCURACY} = {'time': [0.02776575, 0.027860764, 0.027959778, 0.028057806, 0.028154792, 0.028249806, 0.028348819, 0.028441833, 0.028534847, 0.028633847, 0.028729861, 0.028824889, 0.028919917, 0.029015903, 0.0291119...</msg>
<status status="PASS" starttime="20201117 14:43:25.204" endtime="20201117 14:43:25.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.221" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.220" endtime="20201117 14:43:25.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.223" level="INFO">VALUE: [9.116699999999964e-05, 9.037500000000018e-05, 9.120900000000182e-05, 9.04450000000015e-05, 9.038899999999975e-05, 9.101400000000037e-05, 9.095800000000209e-05, 9.05000000000003e-05, 9.074999999999708e-05, 9.072200000000141e-05, 9.0332999999998e-05, 9.102799999999994e-05, 9.040299999999932e-05, 9.11390000000005e-05, 9.065300000000304e-05, 9.120899999999835e-05, 9.0332999999998e-05, 9.044400000000202e-05, 9.056900000000215e-05, 9.108299999999875e-05, 9.065300000000304e-05, 9.054199999999901e-05, 9.051399999999987e-05, 9.065299999999957e-05, 9.079199999999926e-05, 9.0945000000002e-05, 9.070899999999785e-05, 9.059699999999782e-05, 9.087500000000068e-05, 9.075000000000055e-05, 9.072199999999794e-05, 9.112500000000093e-05, 9.072200000000141e-05, 9.047200000000116e-05, 9.054200000000248e-05, 9.080599999999883e-05, 9.030599999999833e-05, 9.031899999999843e-05, 9.056999999999815e-05, 9.043100000000193e-05, 9.111099999999789e-05, 9.101399999999343e-05, 9.063900000000347e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.040300000000279e-05, 9.069500000000175e-05, 9.068100000000218e-05, 9.063899999999653e-05, 9.105500000000655e-05]</msg>
<status status="PASS" starttime="20201117 14:43:25.222" endtime="20201117 14:43:25.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.217" endtime="20201117 14:43:25.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.226" endtime="20201117 14:43:25.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.230" endtime="20201117 14:43:25.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.228" endtime="20201117 14:43:25.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.225" endtime="20201117 14:43:25.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.853" endtime="20201117 14:43:25.251"></status>
</kw>
<msg timestamp="20201117 14:43:25.251" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.259" endtime="20201117 14:43:25.279"></status>
</kw>
<msg timestamp="20201117 14:43:25.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.258" endtime="20201117 14:43:25.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.280" endtime="20201117 14:43:25.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.283" endtime="20201117 14:43:25.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.255" endtime="20201117 14:43:25.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.253" endtime="20201117 14:43:25.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.293" endtime="20201117 14:43:25.578"></status>
</kw>
<msg timestamp="20201117 14:43:25.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.291" endtime="20201117 14:43:25.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.582" endtime="20201117 14:43:25.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.591" endtime="20201117 14:43:25.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.289" endtime="20201117 14:43:25.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.287" endtime="20201117 14:43:25.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.597" level="INFO">${RESULT} = [{'time': 0.020072903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.118099999999921e-05, 'source_diff': 9.118099999999921e-05}, {'time': 0.020170917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:25.594" endtime="20201117 14:43:25.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.611" level="INFO">${ACCURACY} = {'time': [0.020072903, 0.020170917, 0.020264931, 0.020358958, 0.020454958, 0.020549028, 0.020646972, 0.020743986, 0.020841014, 0.020936028, 0.021031069, 0.021130028, 0.021228069, 0.021326097, 0.021419...</msg>
<status status="PASS" starttime="20201117 14:43:25.598" endtime="20201117 14:43:25.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.615" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.614" endtime="20201117 14:43:25.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.618" level="INFO">VALUE: [9.118099999999921e-05, 9.091699999999939e-05, 9.025000000000005e-05, 9.026399999999962e-05, 9.105499999999961e-05, 9.03060000000018e-05, 9.115300000000007e-05, 9.06939999999988e-05, 9.091700000000286e-05, 9.037500000000018e-05, 9.034700000000104e-05, 9.079199999999926e-05, 9.101299999999743e-05, 9.117999999999973e-05, 9.023699999999996e-05, 9.052699999999997e-05, 9.045799999999812e-05, 9.11800000000032e-05, 9.061100000000086e-05, 9.11939999999993e-05, 9.087500000000068e-05, 9.041699999999889e-05, 9.032000000000137e-05, 9.083399999999797e-05, 9.106999999999865e-05, 9.031899999999843e-05, 9.066599999999966e-05, 9.040299999999932e-05, 9.074999999999708e-05, 9.11390000000005e-05, 9.092999999999948e-05, 9.047199999999769e-05, 9.052799999999944e-05, 9.06670000000026e-05, 9.026399999999962e-05, 9.122200000000191e-05, 9.10000000000008e-05, 9.06800000000027e-05, 9.045800000000159e-05, 9.05000000000003e-05, 9.066599999999966e-05, 9.036100000000061e-05, 9.118099999999921e-05, 9.038900000000322e-05, 9.10000000000008e-05, 9.036100000000061e-05, 9.022300000000039e-05, 9.077799999999969e-05, 9.119499999999878e-05, 9.062500000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:43:25.616" endtime="20201117 14:43:25.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.612" endtime="20201117 14:43:25.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.621" endtime="20201117 14:43:25.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.625" endtime="20201117 14:43:25.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.623" endtime="20201117 14:43:25.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.619" endtime="20201117 14:43:25.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.252" endtime="20201117 14:43:25.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.851" endtime="20201117 14:43:25.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.850" endtime="20201117 14:43:25.646"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.648" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.657" endtime="20201117 14:43:25.676"></status>
</kw>
<msg timestamp="20201117 14:43:25.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.655" endtime="20201117 14:43:25.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.678" endtime="20201117 14:43:25.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.680" endtime="20201117 14:43:25.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.652" endtime="20201117 14:43:25.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.650" endtime="20201117 14:43:25.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.689" endtime="20201117 14:43:25.976"></status>
</kw>
<msg timestamp="20201117 14:43:25.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.688" endtime="20201117 14:43:25.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.980" endtime="20201117 14:43:25.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.989" endtime="20201117 14:43:25.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.685" endtime="20201117 14:43:25.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.683" endtime="20201117 14:43:25.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.995" level="INFO">${RESULT} = [{'time': 0.022971569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.159700000000229e-05, 'source_diff': 9.159700000000229e-05}, {'time': 0.023071556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:25.992" endtime="20201117 14:43:25.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:26.010" level="INFO">${ACCURACY} = {'time': [0.022971569, 0.023071556, 0.023168556, 0.023268597, 0.023367611, 0.023461597, 0.023557611, 0.023657625, 0.023756639, 0.023855694, 0.023956653, 0.024051667, 0.024147667, 0.024244681, 0.024340...</msg>
<status status="PASS" starttime="20201117 14:43:25.996" endtime="20201117 14:43:26.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.015" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:26.014" endtime="20201117 14:43:26.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.017" level="INFO">VALUE: [9.159700000000229e-05, 9.156999999999915e-05, 9.199999999999833e-05, 9.174999999999808e-05, 9.170799999999937e-05, 9.166600000000066e-05, 9.137499999999771e-05, 9.156900000000315e-05, 9.152800000000044e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.124999999999758e-05, 9.20000000000018e-05, 9.165300000000057e-05, 9.162499999999796e-05, 9.144399999999955e-05, 9.208299999999975e-05, 9.131899999999943e-05, 9.155599999999958e-05, 9.188900000000125e-05, 9.175000000000155e-05, 9.155599999999958e-05, 9.149999999999783e-05, 9.140300000000032e-05, 9.218100000000021e-05, 9.130499999999986e-05, 9.131899999999943e-05, 9.173600000000198e-05, 9.208299999999975e-05, 9.180500000000036e-05, 9.126400000000062e-05, 9.134700000000204e-05, 9.13199999999989e-05, 9.177800000000069e-05, 9.14870000000012e-05, 9.205500000000061e-05, 9.180599999999983e-05, 9.21940000000003e-05, 9.144399999999955e-05, 9.145799999999912e-05, 9.204200000000051e-05, 9.161099999999839e-05, 9.176399999999765e-05, 9.141700000000336e-05, 9.127800000000019e-05, 9.166700000000014e-05, 9.206999999999965e-05, 9.174999999999808e-05, 9.168000000000023e-05, 9.125000000000105e-05]</msg>
<status status="PASS" starttime="20201117 14:43:26.016" endtime="20201117 14:43:26.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.011" endtime="20201117 14:43:26.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.021" endtime="20201117 14:43:26.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:26.024" endtime="20201117 14:43:26.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.022" endtime="20201117 14:43:26.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.019" endtime="20201117 14:43:26.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.649" endtime="20201117 14:43:26.045"></status>
</kw>
<msg timestamp="20201117 14:43:26.045" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.053" endtime="20201117 14:43:26.073"></status>
</kw>
<msg timestamp="20201117 14:43:26.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.052" endtime="20201117 14:43:26.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.075" endtime="20201117 14:43:26.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.077" endtime="20201117 14:43:26.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.049" endtime="20201117 14:43:26.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.047" endtime="20201117 14:43:26.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.087" endtime="20201117 14:43:26.373"></status>
</kw>
<msg timestamp="20201117 14:43:26.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.086" endtime="20201117 14:43:26.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.377" endtime="20201117 14:43:26.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.385" endtime="20201117 14:43:26.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.083" endtime="20201117 14:43:26.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.081" endtime="20201117 14:43:26.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:26.392" level="INFO">${RESULT} = [{'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.216600000000116e-05, 'source_diff': 9.216600000000116e-05}, {'time': 0.020440736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:26.389" endtime="20201117 14:43:26.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:26.406" level="INFO">${ACCURACY} = {'time': [0.020343722, 0.020440736, 0.020536736, 0.02063375, 0.020732806, 0.020826764, 0.020923806, 0.021019792, 0.021116806, 0.021214819, 0.021315819, 0.021412861, 0.021510847, 0.021608889, 0.0217028...</msg>
<status status="PASS" starttime="20201117 14:43:26.393" endtime="20201117 14:43:26.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.410" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:26.409" endtime="20201117 14:43:26.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.413" level="INFO">VALUE: [9.216600000000116e-05, 9.142999999999998e-05, 9.161099999999839e-05, 9.205600000000008e-05, 9.197299999999867e-05, 9.143099999999946e-05, 9.18199999999994e-05, 9.184799999999854e-05, 9.13199999999989e-05, 9.14719999999987e-05, 9.136099999999814e-05, 9.216699999999717e-05, 9.14719999999987e-05, 9.126400000000062e-05, 9.127800000000019e-05, 9.165300000000057e-05, 9.216700000000064e-05, 9.134699999999857e-05, 9.173600000000198e-05, 9.1945000000003e-05, 9.20000000000018e-05, 9.205500000000061e-05, 9.161100000000186e-05, 9.21390000000015e-05, 9.156899999999968e-05, 9.145799999999912e-05, 9.136099999999814e-05, 9.132000000000237e-05, 9.156999999999915e-05, 9.173599999999851e-05, 9.155500000000011e-05, 9.14719999999987e-05, 9.187500000000168e-05, 9.163899999999753e-05, 9.130499999999986e-05, 9.149999999999783e-05, 9.125000000000105e-05, 9.170800000000284e-05, 9.151400000000087e-05, 9.126400000000062e-05, 9.190299999999735e-05, 9.126400000000062e-05, 9.165300000000057e-05, 9.123600000000148e-05, 9.14719999999987e-05, 9.145800000000259e-05, 9.19719999999992e-05, 9.18329999999995e-05, 9.14719999999987e-05, 9.144499999999903e-05]</msg>
<status status="PASS" starttime="20201117 14:43:26.411" endtime="20201117 14:43:26.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.407" endtime="20201117 14:43:26.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.416" endtime="20201117 14:43:26.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:26.420" endtime="20201117 14:43:26.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.418" endtime="20201117 14:43:26.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.415" endtime="20201117 14:43:26.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.046" endtime="20201117 14:43:26.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.647" endtime="20201117 14:43:26.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.646" endtime="20201117 14:43:26.441"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.443" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.451" endtime="20201117 14:43:26.471"></status>
</kw>
<msg timestamp="20201117 14:43:26.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.450" endtime="20201117 14:43:26.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.472" endtime="20201117 14:43:26.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.475" endtime="20201117 14:43:26.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.447" endtime="20201117 14:43:26.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.445" endtime="20201117 14:43:26.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.484" endtime="20201117 14:43:26.769"></status>
</kw>
<msg timestamp="20201117 14:43:26.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.482" endtime="20201117 14:43:26.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.773" endtime="20201117 14:43:26.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.781" endtime="20201117 14:43:26.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.480" endtime="20201117 14:43:26.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.478" endtime="20201117 14:43:26.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:26.788" level="INFO">${RESULT} = [{'time': 0.022051569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.230500000000086e-05, 'source_diff': 9.230500000000086e-05}, {'time': 0.022149583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:26.785" endtime="20201117 14:43:26.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:26.802" level="INFO">${ACCURACY} = {'time': [0.022051569, 0.022149583, 0.022250597, 0.022351611, 0.022452694, 0.022548625, 0.022645639, 0.022742653, 0.022837667, 0.022935681, 0.023034681, 0.023130694, 0.023231708, 0.023333722, 0.023434...</msg>
<status status="PASS" starttime="20201117 14:43:26.789" endtime="20201117 14:43:26.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.807" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:26.805" endtime="20201117 14:43:26.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.810" level="INFO">VALUE: [9.230500000000086e-05, 9.240200000000184e-05, 9.225000000000205e-05, 9.302800000000194e-05, 9.240199999999837e-05, 9.319399999999783e-05, 9.237499999999871e-05, 9.237500000000218e-05, 9.249999999999883e-05, 9.259799999999929e-05, 9.237500000000218e-05, 9.272199999999994e-05, 9.295800000000062e-05, 9.230500000000086e-05, 9.23199999999999e-05, 9.284700000000007e-05, 9.308299999999728e-05, 9.25139999999984e-05, 9.276399999999865e-05, 9.281899999999746e-05, 9.248600000000273e-05, 9.272299999999942e-05, 9.304099999999857e-05, 9.254100000000154e-05, 9.28330000000005e-05, 9.281900000000093e-05, 9.270800000000037e-05, 9.277800000000169e-05, 9.294500000000053e-05, 9.244500000000003e-05, 9.276399999999865e-05, 9.312499999999946e-05, 9.24589999999996e-05, 9.234699999999957e-05, 9.284700000000007e-05, 9.245800000000012e-05, 9.244399999999708e-05, 9.272199999999994e-05, 9.258300000000025e-05, 9.222199999999944e-05, 9.2333e-05, 9.230600000000033e-05, 9.291700000000139e-05, 9.277799999999822e-05, 9.231900000000043e-05, 9.254199999999754e-05, 9.31940000000013e-05, 9.281900000000093e-05, 9.226399999999815e-05, 9.299999999999933e-05]</msg>
<status status="PASS" starttime="20201117 14:43:26.808" endtime="20201117 14:43:26.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.803" endtime="20201117 14:43:26.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.813" endtime="20201117 14:43:26.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:26.817" endtime="20201117 14:43:26.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.815" endtime="20201117 14:43:26.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.811" endtime="20201117 14:43:26.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.444" endtime="20201117 14:43:26.838"></status>
</kw>
<msg timestamp="20201117 14:43:26.838" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.846" endtime="20201117 14:43:26.865"></status>
</kw>
<msg timestamp="20201117 14:43:26.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.845" endtime="20201117 14:43:26.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:26.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:26.866" endtime="20201117 14:43:26.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.869" endtime="20201117 14:43:26.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.842" endtime="20201117 14:43:26.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.840" endtime="20201117 14:43:26.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:26.879" endtime="20201117 14:43:27.166"></status>
</kw>
<msg timestamp="20201117 14:43:27.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:26.877" endtime="20201117 14:43:27.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.170" endtime="20201117 14:43:27.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.178" endtime="20201117 14:43:27.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.875" endtime="20201117 14:43:27.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.873" endtime="20201117 14:43:27.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:27.184" level="INFO">${RESULT} = [{'time': 0.019789528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320900000000035e-05, 'source_diff': 9.320900000000035e-05}, {'time': 0.019885528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:27.181" endtime="20201117 14:43:27.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:27.198" level="INFO">${ACCURACY} = {'time': [0.019789528, 0.019885528, 0.019982542, 0.020084583, 0.020186556, 0.020286556, 0.020381569, 0.020480611, 0.020578583, 0.020677597, 0.020776611, 0.020876625, 0.020976653, 0.021074639, 0.021173...</msg>
<status status="PASS" starttime="20201117 14:43:27.185" endtime="20201117 14:43:27.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.203" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:27.202" endtime="20201117 14:43:27.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.205" level="INFO">VALUE: [9.320900000000035e-05, 9.279200000000126e-05, 9.30139999999989e-05, 9.305499999999814e-05, 9.286200000000258e-05, 9.244500000000003e-05, 9.224999999999858e-05, 9.288899999999878e-05, 9.288900000000225e-05, 9.317999999999826e-05, 9.270800000000037e-05, 9.268100000000071e-05, 9.244500000000003e-05, 9.312499999999946e-05, 9.218100000000021e-05, 9.222299999999892e-05, 9.226400000000162e-05, 9.31520000000026e-05, 9.281900000000093e-05, 9.311099999999989e-05, 9.299999999999933e-05, 9.258300000000025e-05, 9.222199999999944e-05, 9.315300000000207e-05, 9.234699999999957e-05, 9.234799999999904e-05, 9.254199999999754e-05, 9.234699999999957e-05, 9.272199999999994e-05, 9.315199999999912e-05, 9.298599999999976e-05, 9.226400000000162e-05, 9.284700000000007e-05, 9.30139999999989e-05, 9.30139999999989e-05, 9.305599999999761e-05, 9.24719999999997e-05, 9.294500000000053e-05, 9.237499999999871e-05, 9.2333e-05, 9.25000000000023e-05, 9.25000000000023e-05, 9.244400000000055e-05, 9.294400000000105e-05, 9.274999999999908e-05, 9.262499999999896e-05, 9.290300000000182e-05, 9.293099999999749e-05, 9.244500000000003e-05, 9.231900000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:43:27.204" endtime="20201117 14:43:27.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.199" endtime="20201117 14:43:27.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.208" endtime="20201117 14:43:27.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:27.212" endtime="20201117 14:43:27.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.210" endtime="20201117 14:43:27.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.207" endtime="20201117 14:43:27.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.839" endtime="20201117 14:43:27.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.442" endtime="20201117 14:43:27.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:26.441" endtime="20201117 14:43:27.233"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.235" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.244" endtime="20201117 14:43:27.265"></status>
</kw>
<msg timestamp="20201117 14:43:27.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.242" endtime="20201117 14:43:27.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.267" endtime="20201117 14:43:27.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.269" endtime="20201117 14:43:27.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.240" endtime="20201117 14:43:27.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.237" endtime="20201117 14:43:27.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.278" endtime="20201117 14:43:27.565"></status>
</kw>
<msg timestamp="20201117 14:43:27.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02396, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:43:27.277" endtime="20201117 14:43:27.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02396, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:43:27.569" endtime="20201117 14:43:27.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.577" endtime="20201117 14:43:27.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.274" endtime="20201117 14:43:27.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.272" endtime="20201117 14:43:27.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:27.584" level="INFO">${RESULT} = [{'time': 0.024053472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.34720000000007e-05, 'source_diff': 9.34720000000007e-05}, {'time': 0.024156486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:27.581" endtime="20201117 14:43:27.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:27.599" level="INFO">${ACCURACY} = {'time': [0.024053472, 0.024156486, 0.024252514, 0.024354528, 0.024452514, 0.024554528, 0.024657556, 0.024754583, 0.024855569, 0.024957569, 0.025055583, 0.025155597, 0.025253625, 0.025350639, 0.025453...</msg>
<status status="PASS" starttime="20201117 14:43:27.585" endtime="20201117 14:43:27.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.603" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:27.602" endtime="20201117 14:43:27.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.606" level="INFO">VALUE: [9.34720000000007e-05, 9.408300000000175e-05, 9.368099999999824e-05, 9.326399999999915e-05, 9.357000000000115e-05, 9.419499999999831e-05, 9.402799999999947e-05, 9.348600000000026e-05, 9.400000000000033e-05, 9.4027e-05, 9.381899999999846e-05, 9.411099999999742e-05, 9.386099999999717e-05, 9.357000000000115e-05, 9.384700000000107e-05, 9.324999999999958e-05, 9.418099999999874e-05, 9.347300000000017e-05, 9.341599999999894e-05, 9.394399999999858e-05, 9.386100000000064e-05, 9.345800000000112e-05, 9.402799999999947e-05, 9.327800000000219e-05, 9.411100000000089e-05, 9.35139999999994e-05, 9.343099999999799e-05, 9.337499999999971e-05, 9.323699999999949e-05, 9.387500000000021e-05, 9.342999999999851e-05, 9.383299999999803e-05, 9.372200000000094e-05, 9.384700000000107e-05, 9.405599999999861e-05, 9.329200000000176e-05, 9.333299999999753e-05, 9.35139999999994e-05, 9.379199999999879e-05, 9.395899999999763e-05, 9.341599999999894e-05, 9.324999999999958e-05, 9.405500000000261e-05, 9.380499999999889e-05, 9.372199999999747e-05, 9.380499999999889e-05, 9.330600000000133e-05, 9.34590000000006e-05, 9.351299999999993e-05, 9.326400000000262e-05]</msg>
<status status="PASS" starttime="20201117 14:43:27.605" endtime="20201117 14:43:27.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.600" endtime="20201117 14:43:27.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.609" endtime="20201117 14:43:27.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:27.612" endtime="20201117 14:43:27.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.611" endtime="20201117 14:43:27.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.607" endtime="20201117 14:43:27.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.236" endtime="20201117 14:43:27.633"></status>
</kw>
<msg timestamp="20201117 14:43:27.633" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.642" endtime="20201117 14:43:27.662"></status>
</kw>
<msg timestamp="20201117 14:43:27.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.640" endtime="20201117 14:43:27.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:27.664" endtime="20201117 14:43:27.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.666" endtime="20201117 14:43:27.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.637" endtime="20201117 14:43:27.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.635" endtime="20201117 14:43:27.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.676" endtime="20201117 14:43:27.962"></status>
</kw>
<msg timestamp="20201117 14:43:27.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.675" endtime="20201117 14:43:27.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:27.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:27.966" endtime="20201117 14:43:27.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:27.975" endtime="20201117 14:43:27.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.672" endtime="20201117 14:43:27.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.671" endtime="20201117 14:43:27.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:27.982" level="INFO">${RESULT} = [{'time': 0.020664403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.368100000000171e-05, 'source_diff': 9.368100000000171e-05}, {'time': 0.020765417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:27.978" endtime="20201117 14:43:27.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:27.995" level="INFO">${ACCURACY} = {'time': [0.020664403, 0.020765417, 0.020863431, 0.020965431, 0.021062444, 0.021160514, 0.021260472, 0.021362486, 0.021461486, 0.0215645, 0.021661528, 0.021764542, 0.021863542, 0.021962569, 0.02206555...</msg>
<status status="PASS" starttime="20201117 14:43:27.983" endtime="20201117 14:43:27.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.000" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:27.999" endtime="20201117 14:43:28.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.002" level="INFO">VALUE: [9.368100000000171e-05, 9.390300000000282e-05, 9.325000000000305e-05, 9.33200000000009e-05, 9.379099999999932e-05, 9.413900000000003e-05, 9.34720000000007e-05, 9.404199999999904e-05, 9.379199999999879e-05, 9.38330000000015e-05, 9.404199999999904e-05, 9.361100000000039e-05, 9.357000000000115e-05, 9.343000000000198e-05, 9.383400000000097e-05, 9.395800000000162e-05, 9.344399999999808e-05, 9.338899999999928e-05, 9.380499999999889e-05, 9.377800000000269e-05, 9.366700000000214e-05, 9.352800000000244e-05, 9.331999999999743e-05, 9.405499999999914e-05, 9.420900000000135e-05, 9.355499999999864e-05, 9.390199999999987e-05, 9.3333000000001e-05, 9.370900000000085e-05, 9.359700000000082e-05, 9.343100000000146e-05, 9.368100000000171e-05, 9.419499999999831e-05, 9.341700000000189e-05, 9.401300000000043e-05, 9.375000000000008e-05, 9.379199999999879e-05, 9.329099999999882e-05, 9.354099999999907e-05, 9.333400000000047e-05, 9.387500000000021e-05, 9.379199999999879e-05, 9.394400000000205e-05, 9.393100000000196e-05, 9.358400000000072e-05, 9.40139999999999e-05, 9.349999999999983e-05, 9.419399999999883e-05, 9.361100000000039e-05, 9.400000000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:43:28.001" endtime="20201117 14:43:28.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.996" endtime="20201117 14:43:28.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.005" endtime="20201117 14:43:28.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:28.009" endtime="20201117 14:43:28.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.007" endtime="20201117 14:43:28.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.004" endtime="20201117 14:43:28.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.634" endtime="20201117 14:43:28.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.234" endtime="20201117 14:43:28.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:27.233" endtime="20201117 14:43:28.030"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.032" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.041" endtime="20201117 14:43:28.060"></status>
</kw>
<msg timestamp="20201117 14:43:28.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.039" endtime="20201117 14:43:28.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.062" endtime="20201117 14:43:28.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.064" endtime="20201117 14:43:28.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.036" endtime="20201117 14:43:28.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.034" endtime="20201117 14:43:28.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.074" endtime="20201117 14:43:28.360"></status>
</kw>
<msg timestamp="20201117 14:43:28.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.072" endtime="20201117 14:43:28.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.365" endtime="20201117 14:43:28.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.373" endtime="20201117 14:43:28.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.069" endtime="20201117 14:43:28.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.067" endtime="20201117 14:43:28.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:28.379" level="INFO">${RESULT} = [{'time': 0.022237847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.461100000000139e-05, 'source_diff': 9.461100000000139e-05}, {'time': 0.022339847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:28.376" endtime="20201117 14:43:28.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:28.393" level="INFO">${ACCURACY} = {'time': [0.022237847, 0.022339847, 0.022443861, 0.022546875, 0.022647903, 0.022746944, 0.022847958, 0.022950931, 0.023054931, 0.023157944, 0.023255972, 0.023358972, 0.023455986, 0.023554056, 0.023658...</msg>
<status status="PASS" starttime="20201117 14:43:28.380" endtime="20201117 14:43:28.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.397" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:28.396" endtime="20201117 14:43:28.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.400" level="INFO">VALUE: [9.461100000000139e-05, 9.46660000000002e-05, 9.501399999999743e-05, 9.52079999999994e-05, 9.472200000000194e-05, 9.434700000000157e-05, 9.468000000000323e-05, 9.49590000000021e-05, 9.473700000000099e-05, 9.454100000000007e-05, 9.52079999999994e-05, 9.473599999999804e-05, 9.444400000000255e-05, 9.477800000000022e-05, 9.462500000000096e-05, 9.468099999999924e-05, 9.431999999999843e-05, 9.444400000000255e-05, 9.508399999999875e-05, 9.43200000000019e-05, 9.476299999999771e-05, 9.459700000000182e-05, 9.481899999999946e-05, 9.505599999999961e-05, 9.461099999999792e-05, 9.473600000000151e-05, 9.440299999999985e-05, 9.516700000000017e-05, 9.483400000000197e-05, 9.499999999999786e-05, 9.51660000000007e-05, 9.440200000000037e-05, 9.476400000000065e-05, 9.4333000000002e-05, 9.436100000000114e-05, 9.455599999999911e-05, 9.508299999999928e-05, 9.425000000000058e-05, 9.505599999999961e-05, 9.430599999999886e-05, 9.487500000000121e-05, 9.476300000000118e-05, 9.434700000000157e-05, 9.513899999999756e-05, 9.47079999999989e-05, 9.484700000000207e-05, 9.480599999999936e-05, 9.449999999999736e-05, 9.449999999999736e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:43:28.399" endtime="20201117 14:43:28.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.394" endtime="20201117 14:43:28.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.403" endtime="20201117 14:43:28.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:28.406" endtime="20201117 14:43:28.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.405" endtime="20201117 14:43:28.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.401" endtime="20201117 14:43:28.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.033" endtime="20201117 14:43:28.427"></status>
</kw>
<msg timestamp="20201117 14:43:28.427" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.436" endtime="20201117 14:43:28.455"></status>
</kw>
<msg timestamp="20201117 14:43:28.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.434" endtime="20201117 14:43:28.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.456" endtime="20201117 14:43:28.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.459" endtime="20201117 14:43:28.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.432" endtime="20201117 14:43:28.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.429" endtime="20201117 14:43:28.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.469" endtime="20201117 14:43:28.754"></status>
</kw>
<msg timestamp="20201117 14:43:28.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.467" endtime="20201117 14:43:28.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.758" endtime="20201117 14:43:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.766" endtime="20201117 14:43:28.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.465" endtime="20201117 14:43:28.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.463" endtime="20201117 14:43:28.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:28.773" level="INFO">${RESULT} = [{'time': 0.019575889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.519499999999931e-05, 'source_diff': 9.519499999999931e-05}, {'time': 0.019674875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:28.770" endtime="20201117 14:43:28.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:28.786" level="INFO">${ACCURACY} = {'time': [0.019575889, 0.019674875, 0.019776917, 0.019878958, 0.019976958, 0.020075931, 0.020178931, 0.020275944, 0.020376958, 0.020473972, 0.020574986, 0.020675014, 0.020773069, 0.020877028, 0.020979...</msg>
<status status="PASS" starttime="20201117 14:43:28.774" endtime="20201117 14:43:28.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.791" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:28.790" endtime="20201117 14:43:28.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.794" level="INFO">VALUE: [9.519499999999931e-05, 9.50140000000009e-05, 9.46530000000001e-05, 9.480499999999989e-05, 9.43469999999981e-05, 9.423700000000049e-05, 9.50140000000009e-05, 9.467999999999976e-05, 9.441599999999994e-05, 9.427799999999972e-05, 9.47079999999989e-05, 9.461099999999792e-05, 9.429100000000329e-05, 9.452799999999997e-05, 9.444499999999856e-05, 9.519499999999931e-05, 9.491600000000044e-05, 9.45270000000005e-05, 9.448600000000126e-05, 9.518099999999974e-05, 9.522200000000244e-05, 9.513899999999756e-05, 9.426400000000015e-05, 9.487499999999774e-05, 9.426400000000015e-05, 9.494499999999906e-05, 9.502800000000047e-05, 9.480599999999936e-05, 9.43469999999981e-05, 9.450000000000083e-05, 9.495800000000262e-05, 9.436100000000114e-05, 9.426400000000015e-05, 9.51530000000006e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.518099999999974e-05, 9.479200000000326e-05, 9.506899999999971e-05, 9.467999999999976e-05, 9.513899999999756e-05, 9.46660000000002e-05, 9.458399999999825e-05, 9.479199999999979e-05, 9.458299999999878e-05, 9.490300000000035e-05, 9.465299999999663e-05, 9.463899999999706e-05, 9.480499999999989e-05, 9.495899999999863e-05]</msg>
<status status="PASS" starttime="20201117 14:43:28.792" endtime="20201117 14:43:28.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.787" endtime="20201117 14:43:28.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.797" endtime="20201117 14:43:28.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:28.800" endtime="20201117 14:43:28.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.799" endtime="20201117 14:43:28.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.795" endtime="20201117 14:43:28.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.428" endtime="20201117 14:43:28.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.031" endtime="20201117 14:43:28.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.030" endtime="20201117 14:43:28.821"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.824" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.833" endtime="20201117 14:43:28.855"></status>
</kw>
<msg timestamp="20201117 14:43:28.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.831" endtime="20201117 14:43:28.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:28.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:28.856" endtime="20201117 14:43:28.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.859" endtime="20201117 14:43:28.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.828" endtime="20201117 14:43:28.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.826" endtime="20201117 14:43:28.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:28.868" endtime="20201117 14:43:29.153"></status>
</kw>
<msg timestamp="20201117 14:43:29.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:28.866" endtime="20201117 14:43:29.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.158" endtime="20201117 14:43:29.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.166" endtime="20201117 14:43:29.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.864" endtime="20201117 14:43:29.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.862" endtime="20201117 14:43:29.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:29.172" level="INFO">${RESULT} = [{'time': 0.025018625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.563899999999806e-05, 'source_diff': 9.563899999999806e-05}, {'time': 0.025120681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:29.169" endtime="20201117 14:43:29.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:29.187" level="INFO">${ACCURACY} = {'time': [0.025018625, 0.025120681, 0.025224667, 0.025326653, 0.025428667, 0.025531681, 0.025629694, 0.025734708, 0.025834722, 0.025933736, 0.026032736, 0.02613575, 0.026236764, 0.026334792, 0.0264357...</msg>
<status status="PASS" starttime="20201117 14:43:29.173" endtime="20201117 14:43:29.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.192" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:29.191" endtime="20201117 14:43:29.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.194" level="INFO">VALUE: [9.563899999999806e-05, 9.622299999999945e-05, 9.549999999999836e-05, 9.522200000000244e-05, 9.562499999999849e-05, 9.569499999999981e-05, 9.573600000000251e-05, 9.561099999999892e-05, 9.600000000000233e-05, 9.549999999999836e-05, 9.548600000000226e-05, 9.587499999999874e-05, 9.581999999999993e-05, 9.527800000000072e-05, 9.58339999999995e-05, 9.605600000000061e-05, 9.536099999999867e-05, 9.53880000000018e-05, 9.588900000000178e-05, 9.611099999999942e-05, 9.544400000000008e-05, 9.537499999999824e-05, 9.595800000000015e-05, 9.588899999999831e-05, 9.618100000000074e-05, 9.525000000000158e-05, 9.550000000000183e-05, 9.581999999999993e-05, 9.569400000000033e-05, 9.541600000000094e-05, 9.611100000000289e-05, 9.586099999999917e-05, 9.531899999999996e-05, 9.543099999999999e-05, 9.547199999999922e-05, 9.59729999999992e-05, 9.581999999999993e-05, 9.559699999999935e-05, 9.541600000000094e-05, 9.593000000000101e-05, 9.612499999999899e-05, 9.604200000000104e-05, 9.530599999999986e-05, 9.591700000000092e-05, 9.530599999999986e-05, 9.550000000000183e-05, 9.555600000000011e-05, 9.556999999999968e-05, 9.544500000000303e-05, 9.526399999999768e-05]</msg>
<status status="PASS" starttime="20201117 14:43:29.193" endtime="20201117 14:43:29.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.188" endtime="20201117 14:43:29.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.197" endtime="20201117 14:43:29.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:29.201" endtime="20201117 14:43:29.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.199" endtime="20201117 14:43:29.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.196" endtime="20201117 14:43:29.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.824" endtime="20201117 14:43:29.222"></status>
</kw>
<msg timestamp="20201117 14:43:29.222" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.230" endtime="20201117 14:43:29.249"></status>
</kw>
<msg timestamp="20201117 14:43:29.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.229" endtime="20201117 14:43:29.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.251" endtime="20201117 14:43:29.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.253" endtime="20201117 14:43:29.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.226" endtime="20201117 14:43:29.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.224" endtime="20201117 14:43:29.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.263" endtime="20201117 14:43:29.548"></status>
</kw>
<msg timestamp="20201117 14:43:29.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.262" endtime="20201117 14:43:29.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.552" endtime="20201117 14:43:29.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.560" endtime="20201117 14:43:29.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.259" endtime="20201117 14:43:29.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.257" endtime="20201117 14:43:29.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:29.567" level="INFO">${RESULT} = [{'time': 0.020055014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.590299999999788e-05, 'source_diff': 9.590299999999788e-05}, {'time': 0.020153986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:29.564" endtime="20201117 14:43:29.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:29.580" level="INFO">${ACCURACY} = {'time': [0.020055014, 0.020153986, 0.020255014, 0.020357986, 0.020458014, 0.020557014, 0.020657042, 0.020757042, 0.020859056, 0.020964069, 0.021067069, 0.021166097, 0.021269125, 0.021373111, 0.021478...</msg>
<status status="PASS" starttime="20201117 14:43:29.568" endtime="20201117 14:43:29.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.585" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:29.584" endtime="20201117 14:43:29.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.587" level="INFO">VALUE: [9.590299999999788e-05, 9.573599999999904e-05, 9.569499999999981e-05, 9.55140000000014e-05, 9.601399999999843e-05, 9.555600000000011e-05, 9.579200000000079e-05, 9.530599999999986e-05, 9.616700000000117e-05, 9.602699999999853e-05, 9.568000000000076e-05, 9.6027999999998e-05, 9.597199999999972e-05, 9.555500000000064e-05, 9.562500000000196e-05, 9.595899999999963e-05, 9.609699999999985e-05, 9.581999999999993e-05, 9.548700000000174e-05, 9.549999999999836e-05, 9.531899999999996e-05, 9.597199999999972e-05, 9.57079999999999e-05, 9.536100000000214e-05, 9.591700000000092e-05, 9.580600000000036e-05, 9.563899999999806e-05, 9.60140000000019e-05, 9.570899999999938e-05, 9.605600000000061e-05, 9.609800000000279e-05, 9.599999999999886e-05, 9.56530000000011e-05, 9.583300000000003e-05, 9.522200000000244e-05, 9.577799999999775e-05, 9.59859999999993e-05, 9.608300000000028e-05, 9.545899999999913e-05, 9.609799999999932e-05, 9.559799999999882e-05, 9.577700000000175e-05, 9.533299999999953e-05, 9.57079999999999e-05, 9.597199999999972e-05, 9.544400000000008e-05, 9.619400000000083e-05, 9.606900000000071e-05, 9.540300000000085e-05, 9.543099999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:43:29.586" endtime="20201117 14:43:29.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.581" endtime="20201117 14:43:29.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.591" endtime="20201117 14:43:29.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:29.595" endtime="20201117 14:43:29.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.593" endtime="20201117 14:43:29.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.589" endtime="20201117 14:43:29.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.223" endtime="20201117 14:43:29.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.822" endtime="20201117 14:43:29.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:28.822" endtime="20201117 14:43:29.616"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.618" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.626" endtime="20201117 14:43:29.646"></status>
</kw>
<msg timestamp="20201117 14:43:29.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.625" endtime="20201117 14:43:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:29.647" endtime="20201117 14:43:29.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.650" endtime="20201117 14:43:29.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.622" endtime="20201117 14:43:29.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.620" endtime="20201117 14:43:29.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.659" endtime="20201117 14:43:29.944"></status>
</kw>
<msg timestamp="20201117 14:43:29.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.657" endtime="20201117 14:43:29.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:29.949" endtime="20201117 14:43:29.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.957" endtime="20201117 14:43:29.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.655" endtime="20201117 14:43:29.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.653" endtime="20201117 14:43:29.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:29.963" level="INFO">${RESULT} = [{'time': 0.022065264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.654200000000154e-05, 'source_diff': 9.654200000000154e-05}, {'time': 0.022164333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:29.960" endtime="20201117 14:43:29.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:29.977" level="INFO">${ACCURACY} = {'time': [0.022065264, 0.022164333, 0.022263306, 0.022367306, 0.022467319, 0.022572333, 0.022672333, 0.022778347, 0.022878375, 0.022978389, 0.023079389, 0.023179389, 0.023280458, 0.023383417, 0.023484...</msg>
<status status="PASS" starttime="20201117 14:43:29.964" endtime="20201117 14:43:29.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.981" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:29.980" endtime="20201117 14:43:29.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:29.984" level="INFO">VALUE: [9.654200000000154e-05, 9.633300000000053e-05, 9.645900000000013e-05, 9.651399999999893e-05, 9.720799999999793e-05, 9.633300000000053e-05, 9.679099999999885e-05, 9.65140000000024e-05, 9.649999999999936e-05, 9.72219999999975e-05, 9.704199999999857e-05, 9.623600000000301e-05, 9.687499999999974e-05, 9.620899999999988e-05, 9.684800000000007e-05, 9.659700000000035e-05, 9.697199999999725e-05, 9.662499999999949e-05, 9.638899999999881e-05, 9.63470000000001e-05, 9.62920000000013e-05, 9.662499999999949e-05, 9.711100000000042e-05, 9.694500000000106e-05, 9.632000000000043e-05, 9.708400000000075e-05, 9.651300000000293e-05, 9.629099999999835e-05, 9.668099999999777e-05, 9.674999999999961e-05, 9.637499999999924e-05, 9.631900000000096e-05, 9.711100000000042e-05, 9.713899999999956e-05, 9.719500000000131e-05, 9.709699999999738e-05, 9.705499999999867e-05, 9.705500000000214e-05, 9.633300000000053e-05, 9.649999999999936e-05, 9.631900000000096e-05, 9.672299999999995e-05, 9.638899999999881e-05, 9.701399999999943e-05, 9.718099999999827e-05, 9.622299999999945e-05, 9.701399999999943e-05, 9.702699999999953e-05, 9.636099999999967e-05, 9.643000000000151e-05]</msg>
<status status="PASS" starttime="20201117 14:43:29.982" endtime="20201117 14:43:29.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.978" endtime="20201117 14:43:29.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:29.991" endtime="20201117 14:43:29.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:29.995" endtime="20201117 14:43:30.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.993" endtime="20201117 14:43:30.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.990" endtime="20201117 14:43:30.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.619" endtime="20201117 14:43:30.016"></status>
</kw>
<msg timestamp="20201117 14:43:30.016" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.024" endtime="20201117 14:43:30.043"></status>
</kw>
<msg timestamp="20201117 14:43:30.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.023" endtime="20201117 14:43:30.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.045" endtime="20201117 14:43:30.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.047" endtime="20201117 14:43:30.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.020" endtime="20201117 14:43:30.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.018" endtime="20201117 14:43:30.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.058" endtime="20201117 14:43:30.343"></status>
</kw>
<msg timestamp="20201117 14:43:30.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019652861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.056" endtime="20201117 14:43:30.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019652861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.347" endtime="20201117 14:43:30.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.355" endtime="20201117 14:43:30.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.053" endtime="20201117 14:43:30.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.052" endtime="20201117 14:43:30.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:30.362" level="INFO">${RESULT} = [{'time': 0.019652861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.672200000000047e-05, 'source_diff': 9.672200000000047e-05}, {'time': 0.019756819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:30.358" endtime="20201117 14:43:30.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:30.375" level="INFO">${ACCURACY} = {'time': [0.019652861, 0.019756819, 0.019856847, 0.019955889, 0.020057847, 0.020161861, 0.020266875, 0.020369903, 0.020469917, 0.020568917, 0.020673972, 0.020773931, 0.020872944, 0.020978958, 0.021081...</msg>
<status status="PASS" starttime="20201117 14:43:30.363" endtime="20201117 14:43:30.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.380" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:30.379" endtime="20201117 14:43:30.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.382" level="INFO">VALUE: [9.672200000000047e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.67920000000018e-05, 9.70409999999991e-05, 9.623599999999954e-05, 9.64859999999998e-05, 9.640300000000185e-05, 9.705600000000161e-05, 9.66669999999982e-05, 9.677799999999875e-05, 9.655599999999764e-05, 9.66660000000022e-05, 9.683299999999756e-05, 9.663900000000253e-05, 9.627799999999825e-05, 9.695800000000115e-05, 9.636100000000314e-05, 9.662499999999949e-05, 9.64859999999998e-05, 9.673699999999952e-05, 9.681899999999799e-05, 9.666700000000167e-05, 9.629100000000182e-05, 9.67080000000009e-05, 9.643000000000151e-05, 9.62080000000004e-05, 9.649999999999936e-05, 9.636099999999967e-05, 9.677799999999875e-05, 9.626399999999868e-05, 9.673600000000004e-05, 9.634799999999957e-05, 9.644400000000108e-05, 9.624999999999911e-05, 9.647200000000022e-05, 9.647199999999675e-05, 9.691699999999845e-05, 9.672200000000047e-05, 9.6334e-05, 9.680600000000136e-05, 9.632000000000043e-05, 9.66530000000021e-05, 9.641700000000142e-05, 9.718000000000226e-05, 9.630500000000139e-05, 9.686100000000017e-05, 9.644399999999761e-05, 9.63470000000001e-05, 9.674999999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:43:30.381" endtime="20201117 14:43:30.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.376" endtime="20201117 14:43:30.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.386" endtime="20201117 14:43:30.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:30.389" endtime="20201117 14:43:30.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.388" endtime="20201117 14:43:30.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.384" endtime="20201117 14:43:30.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.017" endtime="20201117 14:43:30.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.617" endtime="20201117 14:43:30.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:29.616" endtime="20201117 14:43:30.410"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.413" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.421" endtime="20201117 14:43:30.441"></status>
</kw>
<msg timestamp="20201117 14:43:30.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.420" endtime="20201117 14:43:30.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.442" endtime="20201117 14:43:30.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.445" endtime="20201117 14:43:30.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.417" endtime="20201117 14:43:30.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.415" endtime="20201117 14:43:30.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.454" endtime="20201117 14:43:30.740"></status>
</kw>
<msg timestamp="20201117 14:43:30.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.452" endtime="20201117 14:43:30.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.744" endtime="20201117 14:43:30.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.752" endtime="20201117 14:43:30.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.450" endtime="20201117 14:43:30.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.448" endtime="20201117 14:43:30.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:30.759" level="INFO">${RESULT} = [{'time': 0.022965264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.765299999999963e-05, 'source_diff': 9.765299999999963e-05}, {'time': 0.023067222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:30.755" endtime="20201117 14:43:30.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:30.773" level="INFO">${ACCURACY} = {'time': [0.022965264, 0.023067222, 0.023169236, 0.02326925, 0.023376264, 0.023477292, 0.023580278, 0.023681375, 0.023782306, 0.023889333, 0.023996333, 0.024098347, 0.024203361, 0.024307375, 0.0244093...</msg>
<status status="PASS" starttime="20201117 14:43:30.760" endtime="20201117 14:43:30.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.778" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:30.777" endtime="20201117 14:43:30.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.781" level="INFO">VALUE: [9.765299999999963e-05, 9.729099999999935e-05, 9.808299999999881e-05, 9.773599999999757e-05, 9.808300000000228e-05, 9.775000000000061e-05, 9.812500000000099e-05, 9.827800000000025e-05, 9.73059999999984e-05, 9.737500000000024e-05, 9.737500000000024e-05, 9.761099999999745e-05, 9.775000000000061e-05, 9.747199999999775e-05, 9.776400000000018e-05, 9.777799999999975e-05, 9.748599999999732e-05, 9.756999999999821e-05, 9.794399999999912e-05, 9.732000000000143e-05, 9.727699999999978e-05, 9.813899999999709e-05, 9.808299999999881e-05, 9.8028e-05, 9.768099999999877e-05, 9.812500000000099e-05, 9.759699999999788e-05, 9.793099999999902e-05, 9.744499999999809e-05, 9.811100000000142e-05, 9.809699999999838e-05, 9.818000000000326e-05, 9.80410000000001e-05, 9.82080000000024e-05, 9.751399999999993e-05, 9.800000000000086e-05, 9.756999999999821e-05, 9.740300000000285e-05, 9.744499999999809e-05, 9.741699999999895e-05, 9.808300000000228e-05, 9.741699999999895e-05, 9.788900000000031e-05, 9.79860000000013e-05, 9.809700000000185e-05, 9.819399999999937e-05, 9.815300000000013e-05, 9.76530000000031e-05, 9.750000000000036e-05, 9.808399999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:43:30.779" endtime="20201117 14:43:30.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.774" endtime="20201117 14:43:30.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.784" endtime="20201117 14:43:30.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:30.787" endtime="20201117 14:43:30.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.786" endtime="20201117 14:43:30.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.782" endtime="20201117 14:43:30.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.414" endtime="20201117 14:43:30.808"></status>
</kw>
<msg timestamp="20201117 14:43:30.808" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.817" endtime="20201117 14:43:30.837"></status>
</kw>
<msg timestamp="20201117 14:43:30.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.815" endtime="20201117 14:43:30.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:30.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:30.839" endtime="20201117 14:43:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.841" endtime="20201117 14:43:30.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.812" endtime="20201117 14:43:30.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.810" endtime="20201117 14:43:30.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:30.851" endtime="20201117 14:43:31.137"></status>
</kw>
<msg timestamp="20201117 14:43:31.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:30.850" endtime="20201117 14:43:31.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.141" endtime="20201117 14:43:31.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.149" endtime="20201117 14:43:31.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.847" endtime="20201117 14:43:31.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.846" endtime="20201117 14:43:31.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:31.156" level="INFO">${RESULT} = [{'time': 0.020620069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.788800000000084e-05, 'source_diff': 9.788800000000084e-05}, {'time': 0.020725069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:31.153" endtime="20201117 14:43:31.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:31.170" level="INFO">${ACCURACY} = {'time': [0.020620069, 0.020725069, 0.020828083, 0.020930111, 0.021031111, 0.021132125, 0.021236153, 0.021338139, 0.021443153, 0.021545167, 0.021645181, 0.021750194, 0.021855222, 0.021962208, 0.022069...</msg>
<status status="PASS" starttime="20201117 14:43:31.157" endtime="20201117 14:43:31.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.175" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:31.173" endtime="20201117 14:43:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.177" level="INFO">VALUE: [9.788800000000084e-05, 9.750000000000036e-05, 9.741599999999948e-05, 9.809700000000185e-05, 9.754200000000254e-05, 9.82080000000024e-05, 9.763900000000006e-05, 9.784699999999813e-05, 9.797199999999825e-05, 9.801400000000043e-05, 9.750000000000036e-05, 9.76799999999993e-05, 9.744400000000208e-05, 9.800000000000086e-05, 9.80410000000001e-05, 9.726399999999968e-05, 9.769500000000181e-05, 9.8028e-05, 9.812500000000099e-05, 9.822299999999798e-05, 9.776400000000018e-05, 9.770899999999791e-05, 9.725000000000011e-05, 9.730500000000239e-05, 9.790299999999988e-05, 9.8028e-05, 9.732000000000143e-05, 9.725000000000011e-05, 9.78470000000016e-05, 9.800000000000086e-05, 9.772299999999748e-05, 9.772300000000095e-05, 9.759699999999788e-05, 9.788900000000031e-05, 9.731899999999849e-05, 9.761100000000092e-05, 9.775000000000061e-05, 9.754200000000254e-05, 9.759700000000135e-05, 9.722200000000097e-05, 9.73609999999972e-05, 9.75279999999995e-05, 9.745900000000113e-05, 9.802700000000053e-05, 9.79860000000013e-05, 9.719400000000183e-05, 9.763900000000006e-05, 9.808300000000228e-05, 9.776400000000018e-05, 9.754199999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:43:31.176" endtime="20201117 14:43:31.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.171" endtime="20201117 14:43:31.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.180" endtime="20201117 14:43:31.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:31.184" endtime="20201117 14:43:31.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.182" endtime="20201117 14:43:31.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.178" endtime="20201117 14:43:31.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.809" endtime="20201117 14:43:31.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.412" endtime="20201117 14:43:31.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:30.411" endtime="20201117 14:43:31.205"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.207" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.215" endtime="20201117 14:43:31.235"></status>
</kw>
<msg timestamp="20201117 14:43:31.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.214" endtime="20201117 14:43:31.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.236" endtime="20201117 14:43:31.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.239" endtime="20201117 14:43:31.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.211" endtime="20201117 14:43:31.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.209" endtime="20201117 14:43:31.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.248" endtime="20201117 14:43:31.534"></status>
</kw>
<msg timestamp="20201117 14:43:31.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.246" endtime="20201117 14:43:31.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.538" endtime="20201117 14:43:31.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.546" endtime="20201117 14:43:31.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.243" endtime="20201117 14:43:31.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.242" endtime="20201117 14:43:31.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:31.553" level="INFO">${RESULT} = [{'time': 0.022085639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9028000000001e-05, 'source_diff': 9.9028000000001e-05}, {'time': 0.022187597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:43:31.550" endtime="20201117 14:43:31.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:31.567" level="INFO">${ACCURACY} = {'time': [0.022085639, 0.022187597, 0.022291625, 0.022394625, 0.022498681, 0.022601639, 0.022709653, 0.022817681, 0.022921681, 0.023028694, 0.023129708, 0.023237708, 0.023341722, 0.023446764, 0.023548...</msg>
<status status="PASS" starttime="20201117 14:43:31.554" endtime="20201117 14:43:31.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.571" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:31.570" endtime="20201117 14:43:31.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.574" level="INFO">VALUE: [9.9028000000001e-05, 9.8721999999999e-05, 9.913899999999809e-05, 9.876400000000118e-05, 9.894499999999959e-05, 9.854200000000007e-05, 9.908399999999928e-05, 9.877800000000075e-05, 9.856999999999921e-05, 9.824999999999764e-05, 9.843000000000005e-05, 9.884699999999913e-05, 9.90549999999972e-05, 9.824999999999764e-05, 9.831999999999896e-05, 9.861099999999845e-05, 9.843099999999952e-05, 9.895899999999916e-05, 9.919499999999984e-05, 9.847199999999875e-05, 9.902700000000153e-05, 9.859699999999888e-05, 9.870799999999944e-05, 9.841699999999995e-05, 9.879200000000032e-05, 9.843099999999952e-05, 9.9028000000001e-05, 9.897199999999926e-05, 9.848599999999832e-05, 9.873699999999805e-05, 9.906900000000024e-05, 9.829100000000035e-05, 9.866600000000073e-05, 9.909700000000285e-05, 9.9028000000001e-05, 9.856999999999921e-05, 9.847199999999875e-05, 9.901400000000143e-05, 9.844499999999909e-05, 9.908299999999981e-05, 9.825000000000111e-05, 9.900000000000186e-05, 9.884699999999913e-05, 9.823599999999807e-05, 9.880500000000042e-05, 9.863900000000106e-05, 9.905600000000014e-05, 9.874999999999814e-05, 9.829199999999982e-05, 9.908399999999928e-05]</msg>
<status status="PASS" starttime="20201117 14:43:31.572" endtime="20201117 14:43:31.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.568" endtime="20201117 14:43:31.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.577" endtime="20201117 14:43:31.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:31.580" endtime="20201117 14:43:31.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.579" endtime="20201117 14:43:31.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.575" endtime="20201117 14:43:31.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.208" endtime="20201117 14:43:31.601"></status>
</kw>
<msg timestamp="20201117 14:43:31.601" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.609" endtime="20201117 14:43:31.628"></status>
</kw>
<msg timestamp="20201117 14:43:31.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.608" endtime="20201117 14:43:31.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:31.630" endtime="20201117 14:43:31.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.632" endtime="20201117 14:43:31.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.605" endtime="20201117 14:43:31.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.603" endtime="20201117 14:43:31.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.642" endtime="20201117 14:43:31.928"></status>
</kw>
<msg timestamp="20201117 14:43:31.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.641" endtime="20201117 14:43:31.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:31.932" endtime="20201117 14:43:31.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.941" endtime="20201117 14:43:31.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.638" endtime="20201117 14:43:31.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.636" endtime="20201117 14:43:31.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:31.948" level="INFO">${RESULT} = [{'time': 0.019620403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.886100000000217e-05, 'source_diff': 9.886100000000217e-05}, {'time': 0.019728431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:31.945" endtime="20201117 14:43:31.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:31.961" level="INFO">${ACCURACY} = {'time': [0.019620403, 0.019728431, 0.019833417, 0.019937431, 0.020043444, 0.020147458, 0.020250472, 0.020353486, 0.0204605, 0.020563528, 0.020670514, 0.020778542, 0.020881556, 0.020983556, 0.02108558...</msg>
<status status="PASS" starttime="20201117 14:43:31.949" endtime="20201117 14:43:31.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.966" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:31.965" endtime="20201117 14:43:31.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.969" level="INFO">VALUE: [9.886100000000217e-05, 9.829199999999982e-05, 9.845899999999866e-05, 9.865299999999716e-05, 9.915200000000166e-05, 9.905500000000067e-05, 9.884699999999913e-05, 9.859699999999888e-05, 9.831899999999949e-05, 9.854200000000007e-05, 9.870799999999944e-05, 9.9028000000001e-05, 9.862499999999802e-05, 9.879200000000032e-05, 9.827700000000078e-05, 9.852700000000103e-05, 9.91800000000008e-05, 9.826400000000068e-05, 9.843000000000005e-05, 9.861099999999845e-05, 9.901400000000143e-05, 9.845899999999866e-05, 9.863900000000106e-05, 9.843099999999952e-05, 9.874999999999814e-05, 9.895799999999969e-05, 9.822200000000197e-05, 9.85280000000005e-05, 9.882000000000293e-05, 9.854200000000007e-05, 9.879200000000032e-05, 9.874999999999814e-05, 9.872200000000247e-05, 9.906999999999971e-05, 9.854200000000007e-05, 9.870799999999944e-05, 9.89860000000023e-05, 9.852700000000103e-05, 9.845799999999919e-05, 9.888900000000131e-05, 9.872300000000195e-05, 9.895799999999969e-05, 9.924999999999864e-05, 9.856999999999921e-05, 9.838900000000081e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.880500000000042e-05, 9.845800000000265e-05, 9.912499999999852e-05]</msg>
<status status="PASS" starttime="20201117 14:43:31.967" endtime="20201117 14:43:31.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.962" endtime="20201117 14:43:31.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:31.972" endtime="20201117 14:43:31.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:31.975" endtime="20201117 14:43:31.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.974" endtime="20201117 14:43:31.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.970" endtime="20201117 14:43:31.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.602" endtime="20201117 14:43:31.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.206" endtime="20201117 14:43:31.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.205" endtime="20201117 14:43:31.996"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:31.999" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.007" endtime="20201117 14:43:32.026"></status>
</kw>
<msg timestamp="20201117 14:43:32.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.006" endtime="20201117 14:43:32.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.028" endtime="20201117 14:43:32.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.030" endtime="20201117 14:43:32.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.003" endtime="20201117 14:43:32.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.001" endtime="20201117 14:43:32.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.040" endtime="20201117 14:43:32.325"></status>
</kw>
<msg timestamp="20201117 14:43:32.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.038" endtime="20201117 14:43:32.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.329" endtime="20201117 14:43:32.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.337" endtime="20201117 14:43:32.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.035" endtime="20201117 14:43:32.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.034" endtime="20201117 14:43:32.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:32.344" level="INFO">${RESULT} = [{'time': 0.023745833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98609999999997e-05, 'source_diff': 9.98609999999997e-05}, {'time': 0.023851861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:32.341" endtime="20201117 14:43:32.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:32.359" level="INFO">${ACCURACY} = {'time': [0.023745833, 0.023851861, 0.023955875, 0.024063889, 0.024165889, 0.024273889, 0.024382917, 0.024491931, 0.024593931, 0.024695944, 0.024802958, 0.024905972, 0.025011972, 0.02512, 0.025222, 0....</msg>
<status status="PASS" starttime="20201117 14:43:32.345" endtime="20201117 14:43:32.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.363" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:32.362" endtime="20201117 14:43:32.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.366" level="INFO">VALUE: [9.98609999999997e-05, 9.988899999999884e-05, 9.938900000000181e-05, 9.973600000000304e-05, 9.943100000000052e-05, 9.924999999999864e-05, 9.99999999999994e-05, 9.927800000000125e-05, 9.951399999999846e-05, 9.96800000000013e-05, 9.926400000000168e-05, 9.923599999999907e-05, 9.984700000000013e-05, 0.00010020800000000094, 9.968100000000077e-05, 9.936100000000267e-05, 9.944500000000009e-05, 9.930599999999692e-05, 9.981900000000099e-05, 9.966599999999826e-05, 0.00010002699999999906, 9.927699999999831e-05, 9.993000000000155e-05, 9.976399999999871e-05, 9.926399999999821e-05, 9.927799999999778e-05, 9.929200000000082e-05, 9.926400000000168e-05, 9.986200000000264e-05, 0.00010001400000000243, 9.977700000000228e-05, 9.930500000000092e-05, 0.00010001400000000243, 9.956900000000074e-05, 9.984800000000307e-05, 9.981900000000099e-05, 0.00010020900000000041, 9.93609999999992e-05, 9.976399999999871e-05, 9.973599999999957e-05, 9.994399999999765e-05, 9.947199999999976e-05, 9.933300000000006e-05, 9.997200000000026e-05, 9.933300000000006e-05, 9.931900000000049e-05, 9.995800000000069e-05, 9.927800000000125e-05, 0.00010016699999999823, 9.936199999999867e-05]</msg>
<status status="PASS" starttime="20201117 14:43:32.364" endtime="20201117 14:43:32.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.360" endtime="20201117 14:43:32.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.369" endtime="20201117 14:43:32.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:32.372" endtime="20201117 14:43:32.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.371" endtime="20201117 14:43:32.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.367" endtime="20201117 14:43:32.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.999" endtime="20201117 14:43:32.393"></status>
</kw>
<msg timestamp="20201117 14:43:32.393" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.402" endtime="20201117 14:43:32.422"></status>
</kw>
<msg timestamp="20201117 14:43:32.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.400" endtime="20201117 14:43:32.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.424" endtime="20201117 14:43:32.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.427" endtime="20201117 14:43:32.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.397" endtime="20201117 14:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.395" endtime="20201117 14:43:32.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.437" endtime="20201117 14:43:32.723"></status>
</kw>
<msg timestamp="20201117 14:43:32.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.435" endtime="20201117 14:43:32.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.727" endtime="20201117 14:43:32.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.735" endtime="20201117 14:43:32.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.432" endtime="20201117 14:43:32.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.431" endtime="20201117 14:43:32.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:32.742" level="INFO">${RESULT} = [{'time': 0.020475694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.940199999999844e-05, 'source_diff': 9.940199999999844e-05}, {'time': 0.020580722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:32.739" endtime="20201117 14:43:32.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:32.755" level="INFO">${ACCURACY} = {'time': [0.020475694, 0.020580722, 0.020685708, 0.020791764, 0.020897736, 0.021000764, 0.021103764, 0.021208792, 0.021314792, 0.021421806, 0.021525806, 0.021634819, 0.021737833, 0.021846889, 0.021955...</msg>
<status status="PASS" starttime="20201117 14:43:32.743" endtime="20201117 14:43:32.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.760" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:32.759" endtime="20201117 14:43:32.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.762" level="INFO">VALUE: [9.940199999999844e-05, 9.983300000000056e-05, 9.958300000000031e-05, 9.995800000000069e-05, 9.98609999999997e-05, 9.993100000000102e-05, 0.00010019500000000084, 9.991700000000145e-05, 9.98609999999997e-05, 9.927800000000125e-05, 0.00010000000000000286, 9.976299999999924e-05, 9.994400000000112e-05, 9.965300000000163e-05, 9.930500000000092e-05, 9.988899999999884e-05, 9.988900000000231e-05, 0.00010007000000000071, 0.00010023600000000008, 9.96670000000012e-05, 9.929100000000135e-05, 9.988899999999884e-05, 9.948599999999932e-05, 0.00010016699999999823, 9.997200000000026e-05, 9.993100000000102e-05, 0.00010000000000000286, 9.984700000000013e-05, 0.00010001399999999896, 9.969500000000034e-05, 0.00010008400000000028, 9.927700000000178e-05, 9.929200000000082e-05, 9.952799999999803e-05, 9.995800000000069e-05, 9.9722e-05, 9.924999999999864e-05, 0.00010023600000000008, 9.973599999999957e-05, 9.977799999999828e-05, 9.955500000000117e-05, 9.954099999999813e-05, 0.0001001939999999979, 9.937499999999877e-05, 9.934699999999963e-05, 9.970800000000044e-05, 9.961099999999945e-05, 0.00010005600000000114, 9.981899999999752e-05, 9.979199999999785e-05]</msg>
<status status="PASS" starttime="20201117 14:43:32.761" endtime="20201117 14:43:32.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.756" endtime="20201117 14:43:32.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.765" endtime="20201117 14:43:32.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:32.769" endtime="20201117 14:43:32.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.767" endtime="20201117 14:43:32.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.764" endtime="20201117 14:43:32.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.394" endtime="20201117 14:43:32.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.997" endtime="20201117 14:43:32.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:31.997" endtime="20201117 14:43:32.790"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.792" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.801" endtime="20201117 14:43:32.820"></status>
</kw>
<msg timestamp="20201117 14:43:32.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.800" endtime="20201117 14:43:32.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:32.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:32.821" endtime="20201117 14:43:32.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.824" endtime="20201117 14:43:32.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.796" endtime="20201117 14:43:32.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.794" endtime="20201117 14:43:32.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:32.833" endtime="20201117 14:43:33.118"></status>
</kw>
<msg timestamp="20201117 14:43:33.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:32.831" endtime="20201117 14:43:33.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.122" endtime="20201117 14:43:33.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.130" endtime="20201117 14:43:33.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.829" endtime="20201117 14:43:33.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.827" endtime="20201117 14:43:33.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:33.137" level="INFO">${RESULT} = [{'time': 0.022756514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010061099999999698, 'source_diff': 0.00010061099999999698}, {'time': 0.022860458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:33.134" endtime="20201117 14:43:33.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:33.150" level="INFO">${ACCURACY} = {'time': [0.022756514, 0.022860458, 0.022969458, 0.023079486, 0.0231855, 0.0232905, 0.023398514, 0.023507528, 0.023615542, 0.023719569, 0.023824569, 0.023928569, 0.024031597, 0.024136597, 0.024245653,...</msg>
<status status="PASS" starttime="20201117 14:43:33.138" endtime="20201117 14:43:33.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.155" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:33.154" endtime="20201117 14:43:33.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.157" level="INFO">VALUE: [0.00010061099999999698, 0.00010026399999999921, 0.00010031900000000149, 0.00010052799999999903, 0.00010081900000000199, 0.0001010000000000004, 0.00010044499999999762, 0.000100722000000001, 0.00010027799999999878, 0.00010116599999999976, 0.00010109700000000138, 0.00010095800000000169, 0.00010052799999999903, 0.00010101399999999996, 0.00010029199999999835, 0.00010108299999999834, 0.00010119500000000184, 0.00010098600000000083, 0.0001008060000000019, 0.00010075000000000014, 0.0001008610000000007, 0.00010088899999999984, 0.0001005549999999987, 0.00010030500000000192, 0.00010027800000000225, 0.00010108300000000181, 0.00010107000000000171, 0.00010026399999999921, 0.00010062500000000002, 0.00010027799999999878, 0.00010027700000000278, 0.0001009159999999995, 0.00010033300000000106, 0.00010031899999999802, 0.00010106900000000224, 0.0001003610000000002, 0.00010084700000000113, 0.00010076399999999971, 0.00010052799999999903, 0.0001005419999999986, 0.00010044500000000109, 0.00010084699999999766, 0.00010043000000000205, 0.00010094399999999865, 0.0001004999999999999, 0.00010061100000000045, 0.0001001809999999978, 0.0001003610000000002, 0.00010027799999999878, 0.00010047300000000023]</msg>
<status status="PASS" starttime="20201117 14:43:33.156" endtime="20201117 14:43:33.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.151" endtime="20201117 14:43:33.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.160" endtime="20201117 14:43:33.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:33.164" endtime="20201117 14:43:33.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.162" endtime="20201117 14:43:33.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.159" endtime="20201117 14:43:33.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.793" endtime="20201117 14:43:33.185"></status>
</kw>
<msg timestamp="20201117 14:43:33.185" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.193" endtime="20201117 14:43:33.213"></status>
</kw>
<msg timestamp="20201117 14:43:33.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.192" endtime="20201117 14:43:33.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.215" endtime="20201117 14:43:33.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.217" endtime="20201117 14:43:33.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.189" endtime="20201117 14:43:33.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.187" endtime="20201117 14:43:33.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.227" endtime="20201117 14:43:33.512"></status>
</kw>
<msg timestamp="20201117 14:43:33.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.225" endtime="20201117 14:43:33.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.516" endtime="20201117 14:43:33.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.524" endtime="20201117 14:43:33.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.223" endtime="20201117 14:43:33.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.221" endtime="20201117 14:43:33.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:33.530" level="INFO">${RESULT} = [{'time': 0.019986028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010034700000000063, 'source_diff': 0.00010034700000000063}, {'time': 0.020088986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:33.527" endtime="20201117 14:43:33.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:33.543" level="INFO">${ACCURACY} = {'time': [0.019986028, 0.020088986, 0.020192042, 0.020301, 0.020405014, 0.020513028, 0.020623042, 0.020731069, 0.020841097, 0.020946083, 0.021049097, 0.021156111, 0.021263111, 0.021373125, 0.021483167...</msg>
<status status="PASS" starttime="20201117 14:43:33.531" endtime="20201117 14:43:33.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.548" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:33.547" endtime="20201117 14:43:33.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.550" level="INFO">VALUE: [0.00010034700000000063, 0.00010051399999999946, 0.0001008060000000019, 0.00010048600000000033, 0.00010077799999999928, 0.0001006809999999983, 0.0001003480000000001, 0.00010051299999999999, 0.00010056899999999827, 0.00010077699999999981, 0.00010026399999999921, 0.0001011939999999989, 0.00010065300000000263, 0.0001003610000000002, 0.00010087500000000027, 0.00010063899999999959, 0.0001003480000000001, 0.0001006670000000022, 0.0001004999999999999, 0.00010076300000000024, 0.00010111100000000095, 0.00010090299999999941, 0.00010108300000000181, 0.00010056899999999827, 0.00010055600000000164, 0.00010087500000000027, 0.00010038899999999934, 0.00010076399999999971, 0.00010043099999999805, 0.00010042999999999858, 0.00010095799999999822, 0.00010054099999999913, 0.00010063899999999959, 0.00010047200000000076, 0.00010034699999999716, 0.0001003060000000014, 0.0001005419999999986, 0.00010033400000000053, 0.00010058300000000131, 0.0001002220000000005, 0.00010024999999999964, 0.00010063899999999959, 0.00010072199999999754, 0.00010084700000000113, 0.00010083400000000103, 0.00010119500000000184, 0.00010026400000000268, 0.00010055599999999817, 0.00010120900000000141, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201117 14:43:33.549" endtime="20201117 14:43:33.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.544" endtime="20201117 14:43:33.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.554" endtime="20201117 14:43:33.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:33.557" endtime="20201117 14:43:33.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.556" endtime="20201117 14:43:33.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.552" endtime="20201117 14:43:33.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.186" endtime="20201117 14:43:33.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.791" endtime="20201117 14:43:33.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:32.790" endtime="20201117 14:43:33.579"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.581" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.589" endtime="20201117 14:43:33.610"></status>
</kw>
<msg timestamp="20201117 14:43:33.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.588" endtime="20201117 14:43:33.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.612" endtime="20201117 14:43:33.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.614" endtime="20201117 14:43:33.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.585" endtime="20201117 14:43:33.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.583" endtime="20201117 14:43:33.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.623" endtime="20201117 14:43:33.910"></status>
</kw>
<msg timestamp="20201117 14:43:33.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023862611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.622" endtime="20201117 14:43:33.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023862611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:33.914" endtime="20201117 14:43:33.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.922" endtime="20201117 14:43:33.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.619" endtime="20201117 14:43:33.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.618" endtime="20201117 14:43:33.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:33.929" level="INFO">${RESULT} = [{'time': 0.023862611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010213899999999762, 'source_diff': 0.00010213899999999762}, {'time': 0.023972625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:33.926" endtime="20201117 14:43:33.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:33.944" level="INFO">${ACCURACY} = {'time': [0.023862611, 0.023972625, 0.024079653, 0.024185625, 0.024294653, 0.024400653, 0.024508681, 0.024613694, 0.024724694, 0.024830708, 0.024940736, 0.025047736, 0.025158806, 0.025263806, 0.025367...</msg>
<status status="PASS" starttime="20201117 14:43:33.930" endtime="20201117 14:43:33.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.948" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:33.947" endtime="20201117 14:43:33.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:33.950" level="INFO">VALUE: [0.00010213899999999762, 0.00010133300000000206, 0.00010165300000000016, 0.00010199999999999793, 0.00010127799999999978, 0.00010175000000000115, 0.00010122300000000098, 0.00010195799999999922, 0.00010208299999999934, 0.00010184699999999866, 0.00010134700000000163, 0.00010165300000000016, 0.000101819999999999, 0.0001013480000000011, 0.00010145900000000166, 0.00010212500000000152, 0.0001018749999999978, 0.00010211099999999848, 0.00010142999999999958, 0.00010127700000000031, 0.00010131900000000249, 0.00010219499999999937, 0.00010162500000000102, 0.00010212500000000152, 0.00010127799999999978, 0.00010138900000000034, 0.00010174999999999768, 0.00010151400000000046, 0.00010174999999999768, 0.0001017359999999981, 0.00010176400000000071, 0.00010161100000000145, 0.0001021939999999999, 0.00010201400000000097, 0.00010202800000000053, 0.00010119499999999837, 0.00010155599999999917, 0.00010188900000000084, 0.00010183299999999909, 0.0001015000000000009, 0.00010134700000000163, 0.00010162500000000102, 0.0001012220000000015, 0.00010138800000000087, 0.0001020550000000002, 0.0001015549999999997, 0.0001020000000000014, 0.00010126400000000021, 0.00010137500000000077, 0.0001015000000000009]</msg>
<status status="PASS" starttime="20201117 14:43:33.949" endtime="20201117 14:43:33.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.945" endtime="20201117 14:43:33.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.954" endtime="20201117 14:43:33.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:33.958" endtime="20201117 14:43:33.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.956" endtime="20201117 14:43:33.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.953" endtime="20201117 14:43:33.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.582" endtime="20201117 14:43:33.978"></status>
</kw>
<msg timestamp="20201117 14:43:33.979" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:33.987" endtime="20201117 14:43:34.008"></status>
</kw>
<msg timestamp="20201117 14:43:34.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:33.985" endtime="20201117 14:43:34.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.009" endtime="20201117 14:43:34.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.012" endtime="20201117 14:43:34.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.983" endtime="20201117 14:43:34.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.981" endtime="20201117 14:43:34.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.022" endtime="20201117 14:43:34.307"></status>
</kw>
<msg timestamp="20201117 14:43:34.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020398903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.020" endtime="20201117 14:43:34.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020398903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.311" endtime="20201117 14:43:34.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.319" endtime="20201117 14:43:34.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.018" endtime="20201117 14:43:34.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.016" endtime="20201117 14:43:34.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:34.326" level="INFO">${RESULT} = [{'time': 0.020500861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010195799999999922, 'source_diff': 0.00010195799999999922}, {'time': 0.020606875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:34.322" endtime="20201117 14:43:34.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:34.339" level="INFO">${ACCURACY} = {'time': [0.020500861, 0.020606875, 0.020714958, 0.020819889, 0.020929903, 0.021038917, 0.021148958, 0.021254944, 0.021361972, 0.021470972, 0.02158, 0.021691014, 0.021797, 0.021905014, 0.022013042, 0....</msg>
<status status="PASS" starttime="20201117 14:43:34.327" endtime="20201117 14:43:34.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.344" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:34.342" endtime="20201117 14:43:34.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.346" level="INFO">VALUE: [0.00010195799999999922, 0.0001020000000000014, 0.00010177699999999734, 0.0001013060000000024, 0.00010195899999999869, 0.00010166699999999973, 0.00010198599999999836, 0.00010177700000000081, 0.00010215300000000066, 0.00010126400000000021, 0.00010152800000000003, 0.00010155600000000264, 0.00010208299999999934, 0.00010209699999999891, 0.00010147300000000123, 0.00010151400000000046, 0.00010172199999999854, 0.00010138800000000087, 0.00010129099999999988, 0.00010127799999999978, 0.00010158299999999884, 0.00010125000000000065, 0.00010129199999999935, 0.00010145899999999819, 0.00010147200000000176, 0.00010155599999999917, 0.00010202699999999759, 0.00010202700000000106, 0.000101416, 0.00010191699999999998, 0.00010194399999999965, 0.00010163899999999712, 0.00010129199999999935, 0.00010188900000000084, 0.00010147199999999829, 0.0001015000000000009, 0.00010152800000000003, 0.00010181899999999952, 0.00010173600000000158, 0.00010131899999999902, 0.000101416, 0.00010148600000000133, 0.00010194399999999965, 0.00010148600000000133, 0.00010179199999999985, 0.0001018610000000017, 0.00010201400000000097, 0.0001020139999999975, 0.00010166600000000026, 0.00010161099999999798]</msg>
<status status="PASS" starttime="20201117 14:43:34.345" endtime="20201117 14:43:34.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.340" endtime="20201117 14:43:34.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.349" endtime="20201117 14:43:34.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:34.353" endtime="20201117 14:43:34.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.351" endtime="20201117 14:43:34.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.347" endtime="20201117 14:43:34.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.979" endtime="20201117 14:43:34.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.580" endtime="20201117 14:43:34.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:33.579" endtime="20201117 14:43:34.374"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.376" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.384" endtime="20201117 14:43:34.405"></status>
</kw>
<msg timestamp="20201117 14:43:34.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.383" endtime="20201117 14:43:34.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.407" endtime="20201117 14:43:34.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.409" endtime="20201117 14:43:34.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.380" endtime="20201117 14:43:34.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.378" endtime="20201117 14:43:34.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.418" endtime="20201117 14:43:34.704"></status>
</kw>
<msg timestamp="20201117 14:43:34.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.417" endtime="20201117 14:43:34.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.709" endtime="20201117 14:43:34.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.717" endtime="20201117 14:43:34.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.414" endtime="20201117 14:43:34.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.412" endtime="20201117 14:43:34.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:34.724" level="INFO">${RESULT} = [{'time': 0.023075486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010265299999999769, 'source_diff': 0.00010265299999999769}, {'time': 0.0231855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:34.720" endtime="20201117 14:43:34.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:34.737" level="INFO">${ACCURACY} = {'time': [0.023075486, 0.0231855, 0.023296528, 0.023406528, 0.023512542, 0.023622556, 0.023729569, 0.023835583, 0.023944597, 0.024051611, 0.024159625, 0.024268639, 0.024376639, 0.024482667, 0.02458869...</msg>
<status status="PASS" starttime="20201117 14:43:34.725" endtime="20201117 14:43:34.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.741" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:34.740" endtime="20201117 14:43:34.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.744" level="INFO">VALUE: [0.00010265299999999769, 0.00010226400000000122, 0.00010280600000000042, 0.00010266700000000073, 0.00010279200000000085, 0.00010297299999999926, 0.00010308300000000034, 0.00010280500000000095, 0.00010318000000000133, 0.00010270799999999997, 0.00010287500000000227, 0.00010270799999999997, 0.00010311099999999948, 0.00010279200000000085, 0.00010251300000000199, 0.00010241599999999754, 0.00010247200000000276, 0.0001030000000000024, 0.00010233299999999959, 0.0001025550000000007, 0.00010248600000000233, 0.00010294400000000065, 0.00010272199999999954, 0.00010277799999999782, 0.000102513999999998, 0.00010240300000000091, 0.00010309699999999991, 0.00010280499999999748, 0.00010231900000000002, 0.00010295800000000022, 0.00010233299999999959, 0.00010227800000000078, 0.00010261100000000245, 0.00010233399999999906, 0.00010229200000000035, 0.00010281900000000052, 0.00010254099999999766, 0.00010248599999999886, 0.00010276399999999825, 0.00010275000000000215, 0.0001026940000000004, 0.0001025420000000006, 0.0001023199999999995, 0.00010230599999999992, 0.0001030420000000011, 0.00010297299999999926, 0.00010283300000000009, 0.00010309699999999991, 0.00010317999999999786, 0.00010276400000000172]</msg>
<status status="PASS" starttime="20201117 14:43:34.743" endtime="20201117 14:43:34.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.738" endtime="20201117 14:43:34.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.747" endtime="20201117 14:43:34.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:34.751" endtime="20201117 14:43:34.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.749" endtime="20201117 14:43:34.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.745" endtime="20201117 14:43:34.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.377" endtime="20201117 14:43:34.771"></status>
</kw>
<msg timestamp="20201117 14:43:34.772" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.780" endtime="20201117 14:43:34.799"></status>
</kw>
<msg timestamp="20201117 14:43:34.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.778" endtime="20201117 14:43:34.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:34.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:34.800" endtime="20201117 14:43:34.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.803" endtime="20201117 14:43:34.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.776" endtime="20201117 14:43:34.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.774" endtime="20201117 14:43:34.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:34.813" endtime="20201117 14:43:35.101"></status>
</kw>
<msg timestamp="20201117 14:43:35.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:34.812" endtime="20201117 14:43:35.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.105" endtime="20201117 14:43:35.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.118" endtime="20201117 14:43:35.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.809" endtime="20201117 14:43:35.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.807" endtime="20201117 14:43:35.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:35.124" level="INFO">${RESULT} = [{'time': 0.019731556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010295899999999969, 'source_diff': 0.00010295899999999969}, {'time': 0.019838569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:35.121" endtime="20201117 14:43:35.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:35.137" level="INFO">${ACCURACY} = {'time': [0.019731556, 0.019838569, 0.019947583, 0.020055653, 0.020166611, 0.020278625, 0.020390639, 0.020499722, 0.020605667, 0.020711681, 0.020820722, 0.020930694, 0.021039708, 0.021145722, 0.021256...</msg>
<status status="PASS" starttime="20201117 14:43:35.125" endtime="20201117 14:43:35.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.142" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:35.141" endtime="20201117 14:43:35.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.144" level="INFO">VALUE: [0.00010295899999999969, 0.00010283300000000009, 0.00010263900000000159, 0.00010245899999999919, 0.00010223600000000208, 0.00010301400000000197, 0.00010307000000000024, 0.00010270799999999997, 0.00010273600000000258, 0.00010249999999999843, 0.00010298599999999936, 0.00010298599999999936, 0.00010311099999999948, 0.00010280499999999748, 0.00010279199999999739, 0.0001030000000000024, 0.00010244499999999962, 0.00010233400000000253, 0.00010244400000000015, 0.00010309799999999938, 0.00010279200000000085, 0.0001028879999999989, 0.0001025420000000006, 0.00010275000000000215, 0.0001025420000000006, 0.00010229200000000035, 0.00010297199999999979, 0.0001031810000000008, 0.00010312499999999905, 0.000102513999999998, 0.0001028610000000027, 0.0001029160000000015, 0.00010291700000000098, 0.00010275000000000215, 0.00010248599999999886, 0.00010311100000000295, 0.00010309699999999991, 0.0001021809999999998, 0.00010248600000000233, 0.00010229200000000035, 0.0001025550000000007, 0.00010225000000000165, 0.0001027359999999991, 0.00010263899999999812, 0.00010277800000000128, 0.00010266700000000073, 0.00010311099999999948, 0.00010279199999999739, 0.00010284699999999966, 0.0001030420000000011]</msg>
<status status="PASS" starttime="20201117 14:43:35.143" endtime="20201117 14:43:35.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.138" endtime="20201117 14:43:35.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.148" endtime="20201117 14:43:35.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:35.151" endtime="20201117 14:43:35.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.150" endtime="20201117 14:43:35.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.146" endtime="20201117 14:43:35.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.772" endtime="20201117 14:43:35.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.375" endtime="20201117 14:43:35.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:34.374" endtime="20201117 14:43:35.172"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.175" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.183" endtime="20201117 14:43:35.203"></status>
</kw>
<msg timestamp="20201117 14:43:35.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.181" endtime="20201117 14:43:35.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.205" endtime="20201117 14:43:35.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.207" endtime="20201117 14:43:35.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.179" endtime="20201117 14:43:35.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.177" endtime="20201117 14:43:35.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.217" endtime="20201117 14:43:35.501"></status>
</kw>
<msg timestamp="20201117 14:43:35.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.215" endtime="20201117 14:43:35.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.506" endtime="20201117 14:43:35.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.514" endtime="20201117 14:43:35.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.213" endtime="20201117 14:43:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.211" endtime="20201117 14:43:35.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:35.520" level="INFO">${RESULT} = [{'time': 0.023223403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033749999999993, 'source_diff': 0.0001033749999999993}, {'time': 0.023333458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:35.517" endtime="20201117 14:43:35.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:35.535" level="INFO">${ACCURACY} = {'time': [0.023223403, 0.023333458, 0.023443417, 0.023554417, 0.023666431, 0.023779444, 0.023888458, 0.023999486, 0.024108486, 0.0242205, 0.024331514, 0.024444528, 0.024552597, 0.024662556, 0.02477355...</msg>
<status status="PASS" starttime="20201117 14:43:35.521" endtime="20201117 14:43:35.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.539" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:35.538" endtime="20201117 14:43:35.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.541" level="INFO">VALUE: [0.0001033749999999993, 0.00010368000000000183, 0.0001041810000000018, 0.00010374999999999968, 0.00010345900000000019, 0.00010354099999999866, 0.00010363900000000259, 0.00010415299999999919, 0.00010358299999999737, 0.00010397199999999732, 0.00010374999999999968, 0.0001033200000000005, 0.0001040689999999983, 0.00010363899999999912, 0.00010344499999999715, 0.00010338800000000287, 0.00010334700000000016, 0.00010374999999999968, 0.00010408400000000081, 0.00010422199999999757, 0.00010401400000000297, 0.00010347299999999976, 0.00010330600000000092, 0.00010369500000000087, 0.0001036810000000013, 0.00010329100000000188, 0.0001041940000000019, 0.00010377799999999882, 0.00010408300000000134, 0.00010340299999999844, 0.00010397200000000079, 0.00010338900000000234, 0.0001041810000000018, 0.00010343099999999758, 0.00010359700000000041, 0.00010402699999999959, 0.00010351400000000247, 0.00010338900000000234, 0.0001037360000000001, 0.00010340299999999844, 0.00010361099999999998, 0.00010319500000000037, 0.00010418099999999833, 0.00010375000000000315, 0.00010404099999999916, 0.00010394399999999818, 0.00010417999999999886, 0.00010348599999999986, 0.00010375000000000315, 0.0001037360000000001]</msg>
<status status="PASS" starttime="20201117 14:43:35.540" endtime="20201117 14:43:35.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.535" endtime="20201117 14:43:35.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.545" endtime="20201117 14:43:35.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:35.548" endtime="20201117 14:43:35.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.546" endtime="20201117 14:43:35.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.543" endtime="20201117 14:43:35.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.175" endtime="20201117 14:43:35.569"></status>
</kw>
<msg timestamp="20201117 14:43:35.569" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.577" endtime="20201117 14:43:35.597"></status>
</kw>
<msg timestamp="20201117 14:43:35.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.576" endtime="20201117 14:43:35.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.599" endtime="20201117 14:43:35.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.601" endtime="20201117 14:43:35.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.573" endtime="20201117 14:43:35.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.571" endtime="20201117 14:43:35.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.612" endtime="20201117 14:43:35.897"></status>
</kw>
<msg timestamp="20201117 14:43:35.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.610" endtime="20201117 14:43:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:35.901" endtime="20201117 14:43:35.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.909" endtime="20201117 14:43:35.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.608" endtime="20201117 14:43:35.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.606" endtime="20201117 14:43:35.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:35.916" level="INFO">${RESULT} = [{'time': 0.020474444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010348599999999986, 'source_diff': 0.00010348599999999986}, {'time': 0.020582417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:35.913" endtime="20201117 14:43:35.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:35.929" level="INFO">${ACCURACY} = {'time': [0.020474444, 0.020582417, 0.020689431, 0.020800486, 0.020912458, 0.021019472, 0.021126486, 0.0212335, 0.021340514, 0.021447583, 0.021559528, 0.021671528, 0.021784556, 0.021897569, 0.02200656...</msg>
<status status="PASS" starttime="20201117 14:43:35.917" endtime="20201117 14:43:35.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.934" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:35.933" endtime="20201117 14:43:35.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.937" level="INFO">VALUE: [0.00010348599999999986, 0.00010356999999999728, 0.00010329200000000135, 0.00010419399999999843, 0.00010397199999999732, 0.00010372200000000054, 0.00010326399999999875, 0.00010390299999999894, 0.00010326400000000222, 0.0001035689999999978, 0.0001040420000000021, 0.00010327799999999832, 0.00010334799999999963, 0.00010354099999999866, 0.00010358300000000084, 0.00010330500000000145, 0.00010402799999999907, 0.00010380499999999848, 0.00010349999999999943, 0.00010343100000000105, 0.0001037360000000001, 0.00010365299999999869, 0.0001035420000000016, 0.00010359700000000041, 0.00010395800000000122, 0.00010352699999999909, 0.00010384699999999719, 0.00010398600000000036, 0.00010372199999999707, 0.000103513999999999, 0.00010383400000000056, 0.00010390300000000241, 0.00010411100000000048, 0.0001035000000000029, 0.0001032359999999996, 0.00010359700000000041, 0.00010365300000000216, 0.00010398600000000036, 0.00010391699999999851, 0.00010363899999999912, 0.00010352800000000204, 0.00010340300000000191, 0.00010330499999999798, 0.00010404099999999916, 0.00010376399999999925, 0.00010398600000000036, 0.00010361099999999998, 0.00010393000000000208, 0.00010338899999999887, 0.00010372200000000054]</msg>
<status status="PASS" starttime="20201117 14:43:35.935" endtime="20201117 14:43:35.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.930" endtime="20201117 14:43:35.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.940" endtime="20201117 14:43:35.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:35.944" endtime="20201117 14:43:35.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.942" endtime="20201117 14:43:35.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.938" endtime="20201117 14:43:35.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.570" endtime="20201117 14:43:35.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.173" endtime="20201117 14:43:35.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.173" endtime="20201117 14:43:35.965"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.968" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.976" endtime="20201117 14:43:35.995"></status>
</kw>
<msg timestamp="20201117 14:43:35.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.975" endtime="20201117 14:43:35.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:35.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:35.996" endtime="20201117 14:43:35.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:35.999" endtime="20201117 14:43:36.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.972" endtime="20201117 14:43:36.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.970" endtime="20201117 14:43:36.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.008" endtime="20201117 14:43:36.293"></status>
</kw>
<msg timestamp="20201117 14:43:36.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:36.007" endtime="20201117 14:43:36.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:36.297" endtime="20201117 14:43:36.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.305" endtime="20201117 14:43:36.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.004" endtime="20201117 14:43:36.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.002" endtime="20201117 14:43:36.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:36.312" level="INFO">${RESULT} = [{'time': 0.022659014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010426400000000322, 'source_diff': 0.00010426400000000322}, {'time': 0.022771069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:36.309" endtime="20201117 14:43:36.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:36.326" level="INFO">${ACCURACY} = {'time': [0.022659014, 0.022771069, 0.022883042, 0.022993069, 0.023101083, 0.023209125, 0.023321097, 0.023431111, 0.023543125, 0.023650181, 0.023762153, 0.023874181, 0.023987167, 0.024100236, 0.024213...</msg>
<status status="PASS" starttime="20201117 14:43:36.313" endtime="20201117 14:43:36.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.330" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:36.329" endtime="20201117 14:43:36.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.333" level="INFO">VALUE: [0.00010426400000000322, 0.00010479099999999991, 0.000104514, 0.00010443000000000258, 0.00010495800000000222, 0.00010427799999999932, 0.00010427799999999932, 0.00010513900000000062, 0.00010493100000000255, 0.00010430599999999846, 0.00010486100000000123, 0.0001051810000000028, 0.00010448600000000086, 0.0001050140000000005, 0.00010425000000000018, 0.00010506900000000277, 0.00010458299999999837, 0.00010423599999999714, 0.00010441699999999901, 0.000104514, 0.00010425000000000018, 0.00010479199999999939, 0.00010430499999999898, 0.00010468099999999883, 0.00010431900000000202, 0.00010444399999999868, 0.00010425000000000018, 0.00010430600000000192, 0.0001043750000000003, 0.00010462500000000055, 0.00010493100000000255, 0.00010518099999999933, 0.00010486100000000123, 0.00010423700000000008, 0.00010427699999999984, 0.00010480499999999948, 0.0001052360000000016, 0.00010522200000000204, 0.0001051810000000028, 0.00010456999999999828, 0.00010459699999999794, 0.0001046810000000023, 0.00010509799999999792, 0.00010440199999999997, 0.00010511099999999801, 0.00010458299999999837, 0.00010455499999999923, 0.00010490299999999994, 0.000104514, 0.000104514]</msg>
<status status="PASS" starttime="20201117 14:43:36.331" endtime="20201117 14:43:36.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.327" endtime="20201117 14:43:36.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.336" endtime="20201117 14:43:36.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:36.339" endtime="20201117 14:43:36.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.338" endtime="20201117 14:43:36.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.334" endtime="20201117 14:43:36.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.968" endtime="20201117 14:43:36.360"></status>
</kw>
<msg timestamp="20201117 14:43:36.361" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.369" endtime="20201117 14:43:36.388"></status>
</kw>
<msg timestamp="20201117 14:43:36.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.367" endtime="20201117 14:43:36.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.389" endtime="20201117 14:43:36.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.392" endtime="20201117 14:43:36.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.365" endtime="20201117 14:43:36.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.363" endtime="20201117 14:43:36.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.402" endtime="20201117 14:43:36.687"></status>
</kw>
<msg timestamp="20201117 14:43:36.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.400" endtime="20201117 14:43:36.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.691" endtime="20201117 14:43:36.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.699" endtime="20201117 14:43:36.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.398" endtime="20201117 14:43:36.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.396" endtime="20201117 14:43:36.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:36.706" level="INFO">${RESULT} = [{'time': 0.020134569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010459700000000141, 'source_diff': 0.00010459700000000141}, {'time': 0.020246542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:36.703" endtime="20201117 14:43:36.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:36.719" level="INFO">${ACCURACY} = {'time': [0.020134569, 0.020246542, 0.020354583, 0.020463569, 0.020575597, 0.020683597, 0.020794639, 0.020908625, 0.021017639, 0.021124639, 0.021235681, 0.021345694, 0.021454681, 0.021564722, 0.021673...</msg>
<status status="PASS" starttime="20201117 14:43:36.707" endtime="20201117 14:43:36.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.724" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:36.723" endtime="20201117 14:43:36.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.726" level="INFO">VALUE: [0.00010459700000000141, 0.00010450000000000043, 0.00010483299999999862, 0.00010508300000000234, 0.0001050140000000005, 0.00010454100000000313, 0.0001050559999999992, 0.00010459700000000141, 0.0001050140000000005, 0.00010475000000000068, 0.00010423700000000008, 0.00010459699999999794, 0.00010484800000000113, 0.00010508300000000234, 0.00010441699999999901, 0.00010440299999999944, 0.00010476400000000025, 0.00010476400000000025, 0.00010426399999999975, 0.00010430599999999846, 0.00010452799999999957, 0.00010480499999999948, 0.00010470899999999797, 0.00010429099999999941, 0.00010477699999999687, 0.00010429199999999889, 0.00010480499999999948, 0.00010433300000000159, 0.00010512499999999758, 0.00010511100000000148, 0.00010430599999999846, 0.00010447300000000076, 0.00010442999999999911, 0.00010517999999999986, 0.00010505499999999973, 0.00010429200000000236, 0.00010479199999999939, 0.00010513900000000062, 0.00010491699999999951, 0.0001046949999999984, 0.00010468099999999883, 0.00010483299999999862, 0.00010425000000000018, 0.00010442999999999911, 0.00010442999999999911, 0.00010444399999999868, 0.00010491699999999951, 0.00010479199999999939, 0.0001047360000000011, 0.00010426399999999975]</msg>
<status status="PASS" starttime="20201117 14:43:36.725" endtime="20201117 14:43:36.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.720" endtime="20201117 14:43:36.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.730" endtime="20201117 14:43:36.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:36.733" endtime="20201117 14:43:36.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.732" endtime="20201117 14:43:36.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.728" endtime="20201117 14:43:36.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.361" endtime="20201117 14:43:36.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.967" endtime="20201117 14:43:36.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:35.966" endtime="20201117 14:43:36.755"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.757" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.765" endtime="20201117 14:43:36.786"></status>
</kw>
<msg timestamp="20201117 14:43:36.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.764" endtime="20201117 14:43:36.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:36.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:36.787" endtime="20201117 14:43:36.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.790" endtime="20201117 14:43:36.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.761" endtime="20201117 14:43:36.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.759" endtime="20201117 14:43:36.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:36.799" endtime="20201117 14:43:37.085"></status>
</kw>
<msg timestamp="20201117 14:43:37.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:36.797" endtime="20201117 14:43:37.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.089" endtime="20201117 14:43:37.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.097" endtime="20201117 14:43:37.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.795" endtime="20201117 14:43:37.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.793" endtime="20201117 14:43:37.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:37.104" level="INFO">${RESULT} = [{'time': 0.023139694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010537499999999783, 'source_diff': 0.00010537499999999783}, {'time': 0.023252708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:37.100" endtime="20201117 14:43:37.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:37.118" level="INFO">${ACCURACY} = {'time': [0.023139694, 0.023252708, 0.023361792, 0.02347375, 0.02358375, 0.023694764, 0.023804778, 0.023912875, 0.024027806, 0.024137875, 0.024248819, 0.024357833, 0.024468847, 0.024580861, 0.02469288...</msg>
<status status="PASS" starttime="20201117 14:43:37.105" endtime="20201117 14:43:37.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.123" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:37.122" endtime="20201117 14:43:37.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.125" level="INFO">VALUE: [0.00010537499999999783, 0.00010568000000000036, 0.00010601399999999803, 0.00010563900000000112, 0.00010584699999999919, 0.00010580599999999996, 0.00010608399999999935, 0.00010552800000000057, 0.00010530599999999946, 0.00010613899999999815, 0.0001058880000000019, 0.0001052499999999977, 0.00010612499999999858, 0.0001057079999999995, 0.0001061949999999999, 0.00010516699999999976, 0.00010604200000000064, 0.00010550000000000143, 0.0001052629999999978, 0.0001057499999999982, 0.00010529100000000041, 0.00010559699999999894, 0.00010555500000000023, 0.00010601399999999803, 0.00010618100000000033, 0.00010609699999999944, 0.00010608399999999935, 0.00010602800000000107, 0.00010534799999999817, 0.00010530499999999998, 0.0001055689999999998, 0.00010584699999999919, 0.0001053750000000013, 0.00010540299999999697, 0.00010556999999999928, 0.0001061949999999999, 0.00010584699999999919, 0.00010566599999999732, 0.00010548599999999839, 0.00010576399999999778, 0.00010597199999999932, 0.00010569399999999993, 0.00010561100000000198, 0.00010597199999999932, 0.00010526400000000075, 0.00010597199999999932, 0.00010549999999999796, 0.0001056949999999994, 0.000105514000000001, 0.00010547199999999882]</msg>
<status status="PASS" starttime="20201117 14:43:37.124" endtime="20201117 14:43:37.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.119" endtime="20201117 14:43:37.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.129" endtime="20201117 14:43:37.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:37.132" endtime="20201117 14:43:37.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.131" endtime="20201117 14:43:37.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.127" endtime="20201117 14:43:37.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.758" endtime="20201117 14:43:37.153"></status>
</kw>
<msg timestamp="20201117 14:43:37.153" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.162" endtime="20201117 14:43:37.181"></status>
</kw>
<msg timestamp="20201117 14:43:37.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.160" endtime="20201117 14:43:37.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.183" endtime="20201117 14:43:37.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.185" endtime="20201117 14:43:37.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.157" endtime="20201117 14:43:37.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.155" endtime="20201117 14:43:37.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.195" endtime="20201117 14:43:37.481"></status>
</kw>
<msg timestamp="20201117 14:43:37.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.194" endtime="20201117 14:43:37.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.485" endtime="20201117 14:43:37.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.493" endtime="20201117 14:43:37.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.191" endtime="20201117 14:43:37.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.190" endtime="20201117 14:43:37.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:37.500" level="INFO">${RESULT} = [{'time': 0.020082764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010540300000000044, 'source_diff': 0.00010540300000000044}, {'time': 0.020197778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:37.497" endtime="20201117 14:43:37.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:37.513" level="INFO">${ACCURACY} = {'time': [0.020082764, 0.020197778, 0.020312792, 0.020424806, 0.020539819, 0.020652819, 0.020762833, 0.020877847, 0.020986861, 0.021095875, 0.021204889, 0.021312903, 0.021426931, 0.021535944, 0.021646...</msg>
<status status="PASS" starttime="20201117 14:43:37.501" endtime="20201117 14:43:37.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.518" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:37.517" endtime="20201117 14:43:37.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.521" level="INFO">VALUE: [0.00010540300000000044, 0.00010576400000000125, 0.00010536099999999826, 0.00010540300000000044, 0.00010608299999999987, 0.00010598599999999889, 0.00010583300000000309, 0.00010584700000000266, 0.0001052499999999977, 0.00010577800000000082, 0.00010602800000000107, 0.00010544500000000262, 0.00010525000000000118, 0.0001055689999999998, 0.00010541600000000054, 0.00010593000000000061, 0.00010561099999999851, 0.000106208, 0.00010598600000000236, 0.00010530599999999946, 0.00010612500000000205, 0.0001060279999999976, 0.0001060140000000015, 0.00010561200000000145, 0.00010559700000000241, 0.00010563900000000112, 0.00010530499999999998, 0.00010534699999999869, 0.00010552800000000057, 0.00010526400000000075, 0.00010569500000000287, 0.00010568099999999983, 0.00010576400000000125, 0.00010562499999999808, 0.0001055689999999998, 0.00010543000000000011, 0.00010568000000000036, 0.00010580499999999701, 0.00010541700000000001, 0.00010565300000000069, 0.00010576399999999778, 0.00010530499999999998, 0.00010586100000000223, 0.00010568000000000036, 0.00010552800000000057, 0.00010525000000000118, 0.00010530499999999998, 0.00010545799999999925, 0.00010552800000000057, 0.0001057079999999995]</msg>
<status status="PASS" starttime="20201117 14:43:37.519" endtime="20201117 14:43:37.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.515" endtime="20201117 14:43:37.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.524" endtime="20201117 14:43:37.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:37.527" endtime="20201117 14:43:37.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.526" endtime="20201117 14:43:37.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.522" endtime="20201117 14:43:37.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.154" endtime="20201117 14:43:37.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.756" endtime="20201117 14:43:37.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:36.755" endtime="20201117 14:43:37.548"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.551" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.559" endtime="20201117 14:43:37.579"></status>
</kw>
<msg timestamp="20201117 14:43:37.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.557" endtime="20201117 14:43:37.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.581" endtime="20201117 14:43:37.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.583" endtime="20201117 14:43:37.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.555" endtime="20201117 14:43:37.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.553" endtime="20201117 14:43:37.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.592" endtime="20201117 14:43:37.877"></status>
</kw>
<msg timestamp="20201117 14:43:37.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.591" endtime="20201117 14:43:37.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.881" endtime="20201117 14:43:37.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.889" endtime="20201117 14:43:37.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.588" endtime="20201117 14:43:37.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.587" endtime="20201117 14:43:37.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:37.896" level="INFO">${RESULT} = [{'time': 0.022824375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010681900000000105, 'source_diff': 0.00010681900000000105}, {'time': 0.022935361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:37.893" endtime="20201117 14:43:37.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:37.910" level="INFO">${ACCURACY} = {'time': [0.022824375, 0.022935361, 0.023046375, 0.023158389, 0.023270403, 0.023382417, 0.023493431, 0.023607444, 0.023720472, 0.023830472, 0.023939486, 0.0240485, 0.0241605, 0.024269514, 0.024379528,...</msg>
<status status="PASS" starttime="20201117 14:43:37.897" endtime="20201117 14:43:37.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.914" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:37.913" endtime="20201117 14:43:37.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.917" level="INFO">VALUE: [0.00010681900000000105, 0.00010708300000000087, 0.00010636099999999926, 0.00010640300000000144, 0.00010634699999999969, 0.00010680599999999749, 0.00010636199999999874, 0.00010691600000000204, 0.00010719399999999796, 0.00010704099999999869, 0.00010673599999999964, 0.00010627800000000132, 0.00010665300000000169, 0.00010662499999999908, 0.0001070140000000025, 0.00010629199999999742, 0.00010707000000000078, 0.00010627700000000184, 0.00010661099999999951, 0.0001065279999999981, 0.0001065560000000007, 0.00010644500000000015, 0.0001070279999999986, 0.00010687499999999933, 0.00010666699999999779, 0.00010644500000000015, 0.00010667999999999789, 0.00010649999999999896, 0.00010636099999999926, 0.0001067080000000005, 0.00010662499999999908, 0.0001070279999999986, 0.00010654199999999767, 0.00010698599999999989, 0.00010650000000000243, 0.00010682000000000053, 0.00010716699999999829, 0.00010648599999999939, 0.00010641600000000154, 0.00010648599999999939, 0.00010677799999999835, 0.00010723600000000014, 0.00010662499999999908, 0.0001068889999999989, 0.0001067499999999992, 0.00010626400000000175, 0.00010719400000000143, 0.00010644400000000068, 0.00010680499999999801, 0.00010680499999999801]</msg>
<status status="PASS" starttime="20201117 14:43:37.915" endtime="20201117 14:43:37.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.911" endtime="20201117 14:43:37.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.920" endtime="20201117 14:43:37.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:37.923" endtime="20201117 14:43:37.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.922" endtime="20201117 14:43:37.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.918" endtime="20201117 14:43:37.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.551" endtime="20201117 14:43:37.944"></status>
</kw>
<msg timestamp="20201117 14:43:37.944" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.953" endtime="20201117 14:43:37.973"></status>
</kw>
<msg timestamp="20201117 14:43:37.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.951" endtime="20201117 14:43:37.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:37.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:37.975" endtime="20201117 14:43:37.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.977" endtime="20201117 14:43:37.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.949" endtime="20201117 14:43:37.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.946" endtime="20201117 14:43:37.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:37.988" endtime="20201117 14:43:38.273"></status>
</kw>
<msg timestamp="20201117 14:43:38.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:37.986" endtime="20201117 14:43:38.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.277" endtime="20201117 14:43:38.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.286" endtime="20201117 14:43:38.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.984" endtime="20201117 14:43:38.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.982" endtime="20201117 14:43:38.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:38.292" level="INFO">${RESULT} = [{'time': 0.019589722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010686099999999976, 'source_diff': 0.00010686099999999976}, {'time': 0.019704694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:38.289" endtime="20201117 14:43:38.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:38.305" level="INFO">${ACCURACY} = {'time': [0.019589722, 0.019704694, 0.019813708, 0.019923722, 0.020034722, 0.020144736, 0.02025575, 0.020370764, 0.020482792, 0.020595792, 0.020708806, 0.020824833, 0.020940833, 0.021051847, 0.0211658...</msg>
<status status="PASS" starttime="20201117 14:43:38.293" endtime="20201117 14:43:38.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.310" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:38.309" endtime="20201117 14:43:38.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.312" level="INFO">VALUE: [0.00010686099999999976, 0.00010623599999999914, 0.00010626399999999828, 0.00010633300000000012, 0.00010658300000000037, 0.00010626399999999828, 0.00010659699999999994, 0.00010695800000000075, 0.00010715299999999872, 0.00010638900000000187, 0.00010622299999999904, 0.00010708300000000087, 0.00010654099999999819, 0.0001070829999999974, 0.00010668000000000136, 0.00010711100000000001, 0.00010673599999999964, 0.00010629200000000089, 0.00010701399999999903, 0.00010677699999999887, 0.00010651399999999853, 0.00010661099999999951, 0.00010652699999999862, 0.00010665299999999822, 0.00010704200000000164, 0.00010679199999999792, 0.00010690299999999847, 0.00010684799999999967, 0.00010634799999999917, 0.00010651299999999905, 0.0001065690000000008, 0.00010668000000000136, 0.00010684700000000019, 0.00010666700000000126, 0.00010695799999999728, 0.00010626400000000175, 0.00010672200000000007, 0.00010655500000000123, 0.00010644500000000015, 0.0001068340000000001, 0.00010695800000000075, 0.00010684700000000019, 0.00010712499999999958, 0.00010687499999999933, 0.00010663899999999865, 0.00010709700000000044, 0.00010680600000000096, 0.00010712499999999958, 0.00010663899999999865, 0.00010654200000000114]</msg>
<status status="PASS" starttime="20201117 14:43:38.311" endtime="20201117 14:43:38.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.306" endtime="20201117 14:43:38.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.316" endtime="20201117 14:43:38.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:38.319" endtime="20201117 14:43:38.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.317" endtime="20201117 14:43:38.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.314" endtime="20201117 14:43:38.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.945" endtime="20201117 14:43:38.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.549" endtime="20201117 14:43:38.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:37.549" endtime="20201117 14:43:38.340"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.343" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.351" endtime="20201117 14:43:38.371"></status>
</kw>
<msg timestamp="20201117 14:43:38.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.349" endtime="20201117 14:43:38.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.372" endtime="20201117 14:43:38.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.375" endtime="20201117 14:43:38.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.347" endtime="20201117 14:43:38.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.345" endtime="20201117 14:43:38.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.384" endtime="20201117 14:43:38.669"></status>
</kw>
<msg timestamp="20201117 14:43:38.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.383" endtime="20201117 14:43:38.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.673" endtime="20201117 14:43:38.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.681" endtime="20201117 14:43:38.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.380" endtime="20201117 14:43:38.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.378" endtime="20201117 14:43:38.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:38.688" level="INFO">${RESULT} = [{'time': 0.022954208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000107902, 'source_diff': 0.000107902}, {'time': 0.023071222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000107540999999...</msg>
<status status="PASS" starttime="20201117 14:43:38.685" endtime="20201117 14:43:38.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:38.702" level="INFO">${ACCURACY} = {'time': [0.022954208, 0.023071222, 0.023182222, 0.023293236, 0.02340625, 0.023521264, 0.023638292, 0.023753292, 0.023869361, 0.023983306, 0.024100319, 0.024211389, 0.024327347, 0.024438361, 0.0245503...</msg>
<status status="PASS" starttime="20201117 14:43:38.689" endtime="20201117 14:43:38.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.707" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:38.706" endtime="20201117 14:43:38.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.709" level="INFO">VALUE: [0.000107902, 0.00010754099999999919, 0.00010755499999999876, 0.00010779199999999892, 0.00010758300000000137, 0.00010768099999999836, 0.00010726400000000275, 0.00010751399999999953, 0.00010809699999999797, 0.00010793099999999861, 0.00010749999999999996, 0.00010726399999999928, 0.0001077219999999976, 0.00010755499999999876, 0.0001080829999999984, 0.0001080699999999983, 0.00010774999999999674, 0.00010729200000000189, 0.00010726399999999928, 0.0001073750000000033, 0.00010797200000000132, 0.00010811100000000101, 0.00010759699999999747, 0.00010791700000000251, 0.00010815300000000319, 0.00010811100000000101, 0.00010786100000000076, 0.0001078889999999999, 0.00010727800000000232, 0.00010729099999999894, 0.00010816599999999982, 0.0001077500000000002, 0.00010780599999999849, 0.00010736099999999679, 0.00010736100000000026, 0.00010808399999999788, 0.00010723600000000014, 0.00010784699999999772, 0.0001075279999999991, 0.00010727799999999885, 0.00010723600000000014, 0.0001077219999999976, 0.0001072499999999997, 0.00010811100000000101, 0.00010758300000000137, 0.00010745900000000072, 0.00010722300000000004, 0.00010755499999999876, 0.00010777699999999987, 0.00010806899999999883]</msg>
<status status="PASS" starttime="20201117 14:43:38.708" endtime="20201117 14:43:38.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.703" endtime="20201117 14:43:38.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.712" endtime="20201117 14:43:38.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:38.716" endtime="20201117 14:43:38.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.715" endtime="20201117 14:43:38.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.711" endtime="20201117 14:43:38.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.343" endtime="20201117 14:43:38.737"></status>
</kw>
<msg timestamp="20201117 14:43:38.737" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.745" endtime="20201117 14:43:38.764"></status>
</kw>
<msg timestamp="20201117 14:43:38.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.744" endtime="20201117 14:43:38.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:38.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:38.766" endtime="20201117 14:43:38.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.769" endtime="20201117 14:43:38.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.741" endtime="20201117 14:43:38.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.739" endtime="20201117 14:43:38.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:38.779" endtime="20201117 14:43:39.065"></status>
</kw>
<msg timestamp="20201117 14:43:39.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:38.777" endtime="20201117 14:43:39.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.069" endtime="20201117 14:43:39.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.077" endtime="20201117 14:43:39.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.775" endtime="20201117 14:43:39.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.773" endtime="20201117 14:43:39.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:39.084" level="INFO">${RESULT} = [{'time': 0.019533028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010797200000000132, 'source_diff': 0.00010797200000000132}, {'time': 0.019643042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:39.080" endtime="20201117 14:43:39.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:39.097" level="INFO">${ACCURACY} = {'time': [0.019533028, 0.019643042, 0.019756056, 0.019872056, 0.019989069, 0.020101083, 0.020216111, 0.020328111, 0.020440125, 0.020551139, 0.020667153, 0.020781167, 0.020892181, 0.021008194, 0.021120...</msg>
<status status="PASS" starttime="20201117 14:43:39.085" endtime="20201117 14:43:39.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.101" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:39.100" endtime="20201117 14:43:39.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.104" level="INFO">VALUE: [0.00010797200000000132, 0.0001075279999999991, 0.00010736199999999974, 0.0001072499999999997, 0.00010729100000000241, 0.00010759699999999747, 0.0001075279999999991, 0.00010801400000000003, 0.00010754199999999867, 0.00010748600000000039, 0.00010804199999999917, 0.00010786100000000076, 0.0001077500000000002, 0.00010804099999999969, 0.00010801400000000003, 0.00010773600000000064, 0.00010815299999999972, 0.00010729199999999842, 0.00010801400000000003, 0.00010748600000000039, 0.00010790299999999947, 0.00010754199999999867, 0.00010727799999999885, 0.00010745799999999778, 0.00010773600000000064, 0.00010784699999999772, 0.00010741700000000201, 0.00010773600000000064, 0.00010822200000000157, 0.00010797199999999785, 0.00010734800000000017, 0.00010768100000000183, 0.00010786099999999729, 0.00010811099999999754, 0.00010755500000000223, 0.00010729200000000189, 0.00010723600000000014, 0.0001075829999999979, 0.00010740299999999897, 0.00010798600000000089, 0.00010723600000000014, 0.0001074019999999995, 0.00010801300000000055, 0.00010772200000000107, 0.00010741599999999907, 0.00010730500000000198, 0.00010808300000000187, 0.00010770799999999803, 0.00010822300000000104, 0.00010804199999999917]</msg>
<status status="PASS" starttime="20201117 14:43:39.102" endtime="20201117 14:43:39.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.098" endtime="20201117 14:43:39.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.107" endtime="20201117 14:43:39.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:39.110" endtime="20201117 14:43:39.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.109" endtime="20201117 14:43:39.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.105" endtime="20201117 14:43:39.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.738" endtime="20201117 14:43:39.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.341" endtime="20201117 14:43:39.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:38.341" endtime="20201117 14:43:39.131"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.134" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.142" endtime="20201117 14:43:39.162"></status>
</kw>
<msg timestamp="20201117 14:43:39.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.141" endtime="20201117 14:43:39.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.163" endtime="20201117 14:43:39.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.166" endtime="20201117 14:43:39.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.138" endtime="20201117 14:43:39.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.136" endtime="20201117 14:43:39.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.175" endtime="20201117 14:43:39.461"></status>
</kw>
<msg timestamp="20201117 14:43:39.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.173" endtime="20201117 14:43:39.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.465" endtime="20201117 14:43:39.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.473" endtime="20201117 14:43:39.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.171" endtime="20201117 14:43:39.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.169" endtime="20201117 14:43:39.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:39.479" level="INFO">${RESULT} = [{'time': 0.022676375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010913899999999768, 'source_diff': 0.00010913899999999768}, {'time': 0.022788389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:39.476" endtime="20201117 14:43:39.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:39.492" level="INFO">${ACCURACY} = {'time': [0.022676375, 0.022788389, 0.022905472, 0.023022444, 0.023138431, 0.023255444, 0.023366444, 0.023477458, 0.023594472, 0.023705486, 0.0238225, 0.023940514, 0.024057556, 0.024170542, 0.02428755...</msg>
<status status="PASS" starttime="20201117 14:43:39.480" endtime="20201117 14:43:39.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.497" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:39.496" endtime="20201117 14:43:39.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.499" level="INFO">VALUE: [0.00010913899999999768, 0.0001087219999999986, 0.00010887500000000133, 0.00010852700000000062, 0.00010840299999999997, 0.00010897199999999885, 0.00010851300000000105, 0.00010844399999999921, 0.00010904099999999722, 0.00010875000000000121, 0.00010897199999999885, 0.00010829199999999942, 0.0001088340000000021, 0.00010854199999999967, 0.0001085699999999988, 0.00010869499999999893, 0.00010863900000000065, 0.00010898599999999842, 0.00010890300000000047, 0.00010912499999999811, 0.00010913900000000115, 0.00010912500000000158, 0.0001083890000000004, 0.00010851300000000105, 0.0001090549999999968, 0.00010838800000000093, 0.00010912500000000158, 0.0001088890000000009, 0.00010883299999999915, 0.00010897200000000232, 0.00010848600000000139, 0.00010866699999999979, 0.00010915300000000072, 0.0001085699999999988, 0.00010875000000000121, 0.0001085280000000001, 0.0001092219999999991, 0.00010823600000000114, 0.0001085690000000028, 0.00010891700000000004, 0.00010880599999999949, 0.0001090280000000006, 0.00010894499999999918, 0.0001091950000000029, 0.00010836099999999779, 0.00010831899999999908, 0.00010837499999999736, 0.00010826400000000028, 0.00010826400000000028, 0.00010854199999999967]</msg>
<status status="PASS" starttime="20201117 14:43:39.498" endtime="20201117 14:43:39.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.493" endtime="20201117 14:43:39.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.502" endtime="20201117 14:43:39.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:39.506" endtime="20201117 14:43:39.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.504" endtime="20201117 14:43:39.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.501" endtime="20201117 14:43:39.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.134" endtime="20201117 14:43:39.527"></status>
</kw>
<msg timestamp="20201117 14:43:39.527" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.536" endtime="20201117 14:43:39.555"></status>
</kw>
<msg timestamp="20201117 14:43:39.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.534" endtime="20201117 14:43:39.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.556" endtime="20201117 14:43:39.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.559" endtime="20201117 14:43:39.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.531" endtime="20201117 14:43:39.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.529" endtime="20201117 14:43:39.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.569" endtime="20201117 14:43:39.854"></status>
</kw>
<msg timestamp="20201117 14:43:39.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.567" endtime="20201117 14:43:39.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.858" endtime="20201117 14:43:39.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.866" endtime="20201117 14:43:39.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.565" endtime="20201117 14:43:39.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.563" endtime="20201117 14:43:39.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:39.872" level="INFO">${RESULT} = [{'time': 0.019987625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010868099999999936, 'source_diff': 0.00010868099999999936}, {'time': 0.020103667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:39.869" endtime="20201117 14:43:39.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:39.885" level="INFO">${ACCURACY} = {'time': [0.019987625, 0.020103667, 0.020214722, 0.020330694, 0.020442694, 0.020555708, 0.020671736, 0.020789722, 0.020905736, 0.021022764, 0.021136764, 0.021252806, 0.021369819, 0.021480806, 0.021597...</msg>
<status status="PASS" starttime="20201117 14:43:39.873" endtime="20201117 14:43:39.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.890" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:39.889" endtime="20201117 14:43:39.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.892" level="INFO">VALUE: [0.00010868099999999936, 0.00010830599999999899, 0.00010881899999999958, 0.00010894399999999971, 0.00010879100000000044, 0.00010902699999999765, 0.00010829199999999942, 0.00010861100000000151, 0.00010916700000000029, 0.00010833299999999865, 0.00010841699999999954, 0.00010901399999999756, 0.00010851300000000105, 0.00010873700000000111, 0.00010851400000000053, 0.00010851399999999706, 0.00010830499999999951, 0.00010908400000000235, 0.0001085280000000001, 0.00010845800000000225, 0.00010829200000000289, 0.00010844500000000215, 0.00010908400000000235, 0.00010837499999999736, 0.00010830499999999951, 0.00010919399999999996, 0.00010823600000000114, 0.00010904200000000017, 0.00010831899999999908, 0.00010915300000000072, 0.0001087089999999985, 0.00010818099999999886, 0.00010897300000000179, 0.00010866600000000032, 0.00010876400000000078, 0.00010886099999999829, 0.00010881899999999958, 0.00010861100000000151, 0.00010887500000000133, 0.00010865300000000022, 0.00010901400000000103, 0.00010894500000000265, 0.0001085829999999989, 0.00010898599999999842, 0.00010883299999999915, 0.00010845799999999878, 0.00010836100000000126, 0.0001090829999999994, 0.0001090699999999993, 0.00010859799999999795]</msg>
<status status="PASS" starttime="20201117 14:43:39.891" endtime="20201117 14:43:39.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.886" endtime="20201117 14:43:39.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.896" endtime="20201117 14:43:39.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:39.899" endtime="20201117 14:43:39.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.898" endtime="20201117 14:43:39.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.894" endtime="20201117 14:43:39.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.528" endtime="20201117 14:43:39.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.133" endtime="20201117 14:43:39.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.132" endtime="20201117 14:43:39.920"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.923" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.931" endtime="20201117 14:43:39.951"></status>
</kw>
<msg timestamp="20201117 14:43:39.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.930" endtime="20201117 14:43:39.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:39.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:39.953" endtime="20201117 14:43:39.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.956" endtime="20201117 14:43:39.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.927" endtime="20201117 14:43:39.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.925" endtime="20201117 14:43:39.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:39.965" endtime="20201117 14:43:40.251"></status>
</kw>
<msg timestamp="20201117 14:43:40.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:39.963" endtime="20201117 14:43:40.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.255" endtime="20201117 14:43:40.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.263" endtime="20201117 14:43:40.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.960" endtime="20201117 14:43:40.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.959" endtime="20201117 14:43:40.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:40.270" level="INFO">${RESULT} = [{'time': 0.023357375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010944400000000021, 'source_diff': 0.00010944400000000021}, {'time': 0.023476361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:40.266" endtime="20201117 14:43:40.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:40.284" level="INFO">${ACCURACY} = {'time': [0.023357375, 0.023476361, 0.023589375, 0.023705389, 0.023818403, 0.023932417, 0.024045431, 0.024163458, 0.024277458, 0.024394472, 0.024508514, 0.0246245, 0.024740569, 0.024856528, 0.02497259...</msg>
<status status="PASS" starttime="20201117 14:43:40.271" endtime="20201117 14:43:40.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.289" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:40.288" endtime="20201117 14:43:40.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.292" level="INFO">VALUE: [0.00010944400000000021, 0.00010961100000000251, 0.00010918099999999986, 0.00010937500000000183, 0.00010948599999999892, 0.00010984800000000267, 0.00010948699999999839, 0.00010976399999999831, 0.00010976399999999831, 0.00011015300000000172, 0.00010962499999999861, 0.00010990300000000147, 0.00010976299999999883, 0.00010987499999999886, 0.00010998599999999942, 0.00011009699999999997, 0.00010949999999999849, 0.00011004099999999822, 0.00010977700000000187, 0.00010994400000000071, 0.00010962500000000208, 0.00010955600000000024, 0.00011011099999999954, 0.00010982000000000006, 0.0001098479999999992, 0.00010937499999999836, 0.0001100830000000004, 0.00010995800000000028, 0.00010991700000000104, 0.00010937500000000183, 0.00010997199999999985, 0.00010959699999999947, 0.00010961099999999904, 0.00010974999999999874, 0.00010959799999999895, 0.00010984699999999972, 0.0001092769999999979, 0.00010959699999999947, 0.00010990300000000147, 0.00010968000000000089, 0.00010937500000000183, 0.00010993099999999714, 0.00010990300000000147, 0.00010984800000000267, 0.00010970800000000003, 0.00010959699999999947, 0.00011009699999999997, 0.00010956899999999686, 0.00010999999999999899, 0.00010976399999999831]</msg>
<status status="PASS" starttime="20201117 14:43:40.290" endtime="20201117 14:43:40.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.285" endtime="20201117 14:43:40.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.295" endtime="20201117 14:43:40.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:40.299" endtime="20201117 14:43:40.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.297" endtime="20201117 14:43:40.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.293" endtime="20201117 14:43:40.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.924" endtime="20201117 14:43:40.319"></status>
</kw>
<msg timestamp="20201117 14:43:40.319" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.328" endtime="20201117 14:43:40.348"></status>
</kw>
<msg timestamp="20201117 14:43:40.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.326" endtime="20201117 14:43:40.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.350" endtime="20201117 14:43:40.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.352" endtime="20201117 14:43:40.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.324" endtime="20201117 14:43:40.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.322" endtime="20201117 14:43:40.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.362" endtime="20201117 14:43:40.648"></status>
</kw>
<msg timestamp="20201117 14:43:40.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.361" endtime="20201117 14:43:40.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.652" endtime="20201117 14:43:40.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.660" endtime="20201117 14:43:40.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.358" endtime="20201117 14:43:40.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.356" endtime="20201117 14:43:40.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:40.667" level="INFO">${RESULT} = [{'time': 0.020396514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010950000000000196, 'source_diff': 0.00010950000000000196}, {'time': 0.020511528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:40.664" endtime="20201117 14:43:40.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:40.680" level="INFO">${ACCURACY} = {'time': [0.020396514, 0.020511528, 0.020629556, 0.020745556, 0.020861569, 0.020979583, 0.021094611, 0.021210611, 0.021324639, 0.021441639, 0.021555653, 0.021667667, 0.021786694, 0.021902694, 0.022016...</msg>
<status status="PASS" starttime="20201117 14:43:40.668" endtime="20201117 14:43:40.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.685" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:40.684" endtime="20201117 14:43:40.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.687" level="INFO">VALUE: [0.00010950000000000196, 0.00010934700000000269, 0.00010950000000000196, 0.00011016699999999782, 0.00010920799999999953, 0.00011020800000000053, 0.00010983300000000015, 0.00010963900000000165, 0.00010931999999999956, 0.00010973599999999917, 0.00011008399999999988, 0.00010975000000000221, 0.0001097769999999984, 0.00011018000000000139, 0.0001092769999999979, 0.00010937500000000183, 0.00010982000000000006, 0.00010986099999999929, 0.00011001399999999856, 0.00010929200000000042, 0.00010965299999999775, 0.00011001399999999856, 0.00010997299999999932, 0.00010986099999999929, 0.00010930499999999704, 0.00011011099999999954, 0.0001095829999999999, 0.00010999999999999899, 0.00010923600000000214, 0.00010955600000000024, 0.00010991699999999757, 0.00011019400000000096, 0.00011002699999999865, 0.00010999999999999899, 0.0001092219999999991, 0.00011002799999999813, 0.00010926400000000128, 0.0001098890000000019, 0.00011023699999999914, 0.00011001399999999856, 0.00010947299999999882, 0.00010983300000000015, 0.00011006900000000083, 0.00010941600000000107, 0.00010925000000000171, 0.00010926399999999781, 0.00010973599999999917, 0.00010927800000000085, 0.00010947199999999935, 0.000109902999999998]</msg>
<status status="PASS" starttime="20201117 14:43:40.686" endtime="20201117 14:43:40.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.681" endtime="20201117 14:43:40.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.690" endtime="20201117 14:43:40.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:40.694" endtime="20201117 14:43:40.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.692" endtime="20201117 14:43:40.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.689" endtime="20201117 14:43:40.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.320" endtime="20201117 14:43:40.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.922" endtime="20201117 14:43:40.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:39.921" endtime="20201117 14:43:40.715"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.718" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.726" endtime="20201117 14:43:40.746"></status>
</kw>
<msg timestamp="20201117 14:43:40.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.724" endtime="20201117 14:43:40.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:40.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:40.747" endtime="20201117 14:43:40.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.750" endtime="20201117 14:43:40.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.722" endtime="20201117 14:43:40.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.720" endtime="20201117 14:43:40.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:40.759" endtime="20201117 14:43:41.044"></status>
</kw>
<msg timestamp="20201117 14:43:41.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:40.757" endtime="20201117 14:43:41.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.048" endtime="20201117 14:43:41.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.056" endtime="20201117 14:43:41.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.755" endtime="20201117 14:43:41.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.753" endtime="20201117 14:43:41.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:41.063" level="INFO">${RESULT} = [{'time': 0.022896458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011073600000000017, 'source_diff': 0.00011073600000000017}, {'time': 0.023011472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:41.059" endtime="20201117 14:43:41.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:41.076" level="INFO">${ACCURACY} = {'time': [0.022896458, 0.023011472, 0.023128542, 0.023242486, 0.0233605, 0.023473569, 0.023589514, 0.023705528, 0.023825542, 0.023944625, 0.024058583, 0.024176583, 0.024295611, 0.024414625, 0.02453062...</msg>
<status status="PASS" starttime="20201117 14:43:41.064" endtime="20201117 14:43:41.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.081" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:41.080" endtime="20201117 14:43:41.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.083" level="INFO">VALUE: [0.00011073600000000017, 0.00011030500000000151, 0.00011029199999999795, 0.00011026399999999881, 0.00011116699999999882, 0.0001105549999999983, 0.00011081999999999759, 0.00011063899999999918, 0.00011050000000000296, 0.00011031900000000108, 0.00011095800000000128, 0.00011075000000000321, 0.00011051400000000253, 0.00011072199999999713, 0.00011081900000000158, 0.00011094499999999771, 0.00011027800000000185, 0.00011072300000000007, 0.00011086100000000029, 0.00011106899999999836, 0.00011079100000000244, 0.00011024999999999924, 0.00011048599999999992, 0.00011058299999999743, 0.00011030600000000099, 0.00011113899999999968, 0.00011068100000000136, 0.00011033400000000013, 0.00011049999999999949, 0.00011052699999999915, 0.00011113899999999968, 0.00011045800000000078, 0.00011074999999999974, 0.00011074999999999974, 0.00011073600000000017, 0.00011023599999999967, 0.00011080599999999802, 0.00011072300000000007, 0.00011095800000000128, 0.00011090199999999953, 0.00011120799999999806, 0.00011063900000000265, 0.0001107220000000006, 0.00011048599999999992, 0.00011105600000000174, 0.00011068100000000136, 0.00011083400000000063, 0.00011066600000000232, 0.0001105419999999982, 0.0001105830000000009]</msg>
<status status="PASS" starttime="20201117 14:43:41.082" endtime="20201117 14:43:41.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.077" endtime="20201117 14:43:41.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.086" endtime="20201117 14:43:41.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:41.090" endtime="20201117 14:43:41.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.088" endtime="20201117 14:43:41.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.085" endtime="20201117 14:43:41.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.718" endtime="20201117 14:43:41.110"></status>
</kw>
<msg timestamp="20201117 14:43:41.111" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.119" endtime="20201117 14:43:41.139"></status>
</kw>
<msg timestamp="20201117 14:43:41.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.117" endtime="20201117 14:43:41.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.141" endtime="20201117 14:43:41.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.143" endtime="20201117 14:43:41.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.115" endtime="20201117 14:43:41.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.113" endtime="20201117 14:43:41.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.153" endtime="20201117 14:43:41.439"></status>
</kw>
<msg timestamp="20201117 14:43:41.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.152" endtime="20201117 14:43:41.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.443" endtime="20201117 14:43:41.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.451" endtime="20201117 14:43:41.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.149" endtime="20201117 14:43:41.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.147" endtime="20201117 14:43:41.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:41.458" level="INFO">${RESULT} = [{'time': 0.020616236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011044400000000121, 'source_diff': 0.00011044400000000121}, {'time': 0.020735292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:41.455" endtime="20201117 14:43:41.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:41.471" level="INFO">${ACCURACY} = {'time': [0.020616236, 0.020735292, 0.020851264, 0.020970278, 0.021087292, 0.021201292, 0.021318319, 0.021435333, 0.021550361, 0.021667347, 0.021783347, 0.021902361, 0.022021403, 0.022138389, 0.022253...</msg>
<status status="PASS" starttime="20201117 14:43:41.459" endtime="20201117 14:43:41.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.476" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:41.475" endtime="20201117 14:43:41.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.478" level="INFO">VALUE: [0.00011044400000000121, 0.00011037499999999936, 0.00011043100000000111, 0.00011081999999999759, 0.00011041700000000154, 0.00011048599999999992, 0.00011112500000000011, 0.00011112500000000011, 0.00011102799999999913, 0.00011023599999999967, 0.00011034700000000022, 0.00011116699999999882, 0.00011119499999999796, 0.00011069500000000093, 0.00011101400000000303, 0.00011051399999999906, 0.00011080499999999854, 0.00011079099999999897, 0.00011101399999999956, 0.0001102220000000001, 0.00011030499999999804, 0.00011037499999999936, 0.00011097199999999738, 0.00011099999999999999, 0.0001110700000000013, 0.00011113899999999968, 0.00011059700000000047, 0.00011108299999999793, 0.00011023599999999967, 0.00011070800000000103, 0.00011074999999999974, 0.00011066700000000179, 0.00011059700000000047, 0.00011027799999999838, 0.00011081999999999759, 0.0001104159999999986, 0.00011111100000000054, 0.0001107220000000006, 0.00011074999999999974, 0.00011030600000000099, 0.0001102220000000001, 0.0001105419999999982, 0.00011037499999999936, 0.00011080599999999802, 0.00011065300000000222, 0.00011120800000000153, 0.00011037500000000283, 0.00011101399999999956, 0.00011024999999999924, 0.00011033300000000065]</msg>
<status status="PASS" starttime="20201117 14:43:41.477" endtime="20201117 14:43:41.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.472" endtime="20201117 14:43:41.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.481" endtime="20201117 14:43:41.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:41.485" endtime="20201117 14:43:41.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.483" endtime="20201117 14:43:41.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.480" endtime="20201117 14:43:41.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.111" endtime="20201117 14:43:41.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.716" endtime="20201117 14:43:41.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:40.716" endtime="20201117 14:43:41.506"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.508" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.516" endtime="20201117 14:43:41.537"></status>
</kw>
<msg timestamp="20201117 14:43:41.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.515" endtime="20201117 14:43:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.538" endtime="20201117 14:43:41.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.541" endtime="20201117 14:43:41.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.512" endtime="20201117 14:43:41.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.510" endtime="20201117 14:43:41.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.550" endtime="20201117 14:43:41.835"></status>
</kw>
<msg timestamp="20201117 14:43:41.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.549" endtime="20201117 14:43:41.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.839" endtime="20201117 14:43:41.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.847" endtime="20201117 14:43:41.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.546" endtime="20201117 14:43:41.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.544" endtime="20201117 14:43:41.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:41.854" level="INFO">${RESULT} = [{'time': 0.023095806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011122300000000057, 'source_diff': 0.00011122300000000057}, {'time': 0.023211819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:41.850" endtime="20201117 14:43:41.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:41.868" level="INFO">${ACCURACY} = {'time': [0.023095806, 0.023211819, 0.023329847, 0.023443847, 0.023563861, 0.023684875, 0.023802889, 0.023922903, 0.024037917, 0.024155931, 0.024273931, 0.024387944, 0.024506958, 0.024627972, 0.024747...</msg>
<status status="PASS" starttime="20201117 14:43:41.855" endtime="20201117 14:43:41.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.873" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:41.872" endtime="20201117 14:43:41.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.875" level="INFO">VALUE: [0.00011122300000000057, 0.00011183300000000215, 0.00011219399999999949, 0.00011150000000000049, 0.00011126399999999981, 0.00011184700000000172, 0.00011123600000000067, 0.00011172199999999813, 0.00011145899999999778, 0.00011187499999999739, 0.00011169499999999846, 0.00011173600000000117, 0.00011197199999999838, 0.00011201400000000056, 0.0001115549999999993, 0.00011122199999999763, 0.00011141700000000254, 0.00011150000000000049, 0.00011206999999999884, 0.00011172300000000107, 0.00011192999999999967, 0.00011172199999999813, 0.00011208299999999893, 0.00011213900000000068, 0.00011127799999999938, 0.00011144499999999821, 0.00011208299999999893, 0.0001117090000000015, 0.000111596999999998, 0.00011161099999999757, 0.00011154100000000319, 0.00011162500000000061, 0.00011208299999999893, 0.00011208299999999893, 0.0001120419999999997, 0.00011181899999999911, 0.00011127799999999938, 0.00011179099999999997, 0.00011187500000000086, 0.00011126399999999981, 0.00011199999999999752, 0.00011215300000000025, 0.00011147199999999788, 0.00011165299999999975, 0.00011143100000000211, 0.0001117770000000004, 0.00011194500000000218, 0.00011161200000000052, 0.00011219399999999949, 0.00011166599999999985]</msg>
<status status="PASS" starttime="20201117 14:43:41.874" endtime="20201117 14:43:41.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.869" endtime="20201117 14:43:41.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.878" endtime="20201117 14:43:41.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:41.882" endtime="20201117 14:43:41.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.880" endtime="20201117 14:43:41.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.877" endtime="20201117 14:43:41.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.509" endtime="20201117 14:43:41.902"></status>
</kw>
<msg timestamp="20201117 14:43:41.903" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.911" endtime="20201117 14:43:41.930"></status>
</kw>
<msg timestamp="20201117 14:43:41.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.909" endtime="20201117 14:43:41.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:41.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:41.931" endtime="20201117 14:43:41.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.934" endtime="20201117 14:43:41.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.907" endtime="20201117 14:43:41.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.905" endtime="20201117 14:43:41.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:41.944" endtime="20201117 14:43:42.230"></status>
</kw>
<msg timestamp="20201117 14:43:42.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:41.943" endtime="20201117 14:43:42.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:42.235" endtime="20201117 14:43:42.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.243" endtime="20201117 14:43:42.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.940" endtime="20201117 14:43:42.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.939" endtime="20201117 14:43:42.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:42.249" level="INFO">${RESULT} = [{'time': 0.019644917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011194500000000218, 'source_diff': 0.00011194500000000218}, {'time': 0.019763931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:42.246" endtime="20201117 14:43:42.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:42.262" level="INFO">${ACCURACY} = {'time': [0.019644917, 0.019763931, 0.019879944, 0.019995958, 0.020110958, 0.020228972, 0.020344, 0.020459, 0.020579028, 0.020694042, 0.020813042, 0.020927056, 0.021042056, 0.021158069, 0.021275083, 0...</msg>
<status status="PASS" starttime="20201117 14:43:42.250" endtime="20201117 14:43:42.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.267" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:42.266" endtime="20201117 14:43:42.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:42.269" level="INFO">VALUE: [0.00011194500000000218, 0.00011188899999999696, 0.00011137500000000036, 0.00011131900000000208, 0.00011202700000000065, 0.00011211100000000154, 0.00011181900000000258, 0.00011133300000000165, 0.00011222199999999863, 0.00011181999999999859, 0.00011150000000000049, 0.00011150000000000049, 0.00011177799999999988, 0.00011183300000000215, 0.00011140200000000003, 0.00011137500000000036, 0.00011188900000000043, 0.00011180599999999902, 0.00011129199999999895, 0.00011183400000000163, 0.00011161100000000104, 0.000112209000000002, 0.00011163800000000071, 0.00011134700000000122, 0.00011194399999999924, 0.00011130499999999904, 0.00011177799999999988, 0.00011159700000000147, 0.00011148600000000092, 0.00011143100000000211, 0.00011169499999999846, 0.00011165200000000028, 0.00011220799999999906, 0.00011173600000000117, 0.00011179199999999945, 0.00011209700000000197, 0.00011159799999999748, 0.00011212500000000111, 0.00011199999999999752, 0.00011184700000000172, 0.00011197199999999838, 0.00011150000000000049, 0.00011149999999999702, 0.00011222199999999863, 0.00011213900000000068, 0.00011208299999999893, 0.0001120419999999997, 0.00011133399999999766, 0.00011213900000000068, 0.00011163800000000071]</msg>
<status status="PASS" starttime="20201117 14:43:42.268" endtime="20201117 14:43:42.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.263" endtime="20201117 14:43:42.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:42.273" endtime="20201117 14:43:42.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:42.276" endtime="20201117 14:43:42.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.275" endtime="20201117 14:43:42.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.271" endtime="20201117 14:43:42.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.903" endtime="20201117 14:43:42.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.507" endtime="20201117 14:43:42.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:41.506" endtime="20201117 14:43:42.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.165" endtime="20201117 14:43:42.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:42.302" endtime="20201117 14:43:42.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.300" endtime="20201117 14:43:42.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:42.299" endtime="20201117 14:43:42.323"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:42:20.067" endtime="20201117 14:43:42.323" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:53.375" endtime="20201117 14:43:42.327"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:40:42.226" endtime="20201117 14:43:42.341"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_arduino-due</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
